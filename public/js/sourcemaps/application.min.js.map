{"version":3,"sources":["bundle.js","IndexController.js","scoreboard.js","application.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Object","defineProperty","value","_baseballUtilityLog","AtBat","text","this","infield","indexOf","prototype","INFIELD_HIT_INDICATOR","replace","split","RBI_INDICATOR","rbi","log","Log","beneficial","WALK","SINGLE","HOMERUN","DOUBLE","TRIPLE","SACRIFICE","REACHED_ON_ERROR","toString","constructor","identifier","baseball/Utility/Log",2,"_baseballModelPlayer","_baseballServices_services","Field","game","init","first","second","third","hasRunnersOn","Player","determineSwingContactResult","swing","x","y","splayAngle","angle","flyAngle","power","batter","skill","offense","eye","bonus","landingDistance","Distribution","Math","abs","foul","fielder","findFielder","travelDistance","splay","sacrificeAdvances","half","teams","home","positions","away","fatigue","error","fieldingEase","defense","fielding","throwingEase","throwing","fielderTravel","getPolarDistance","interceptRating","speed","caught","umpire","count","outs","sacrificeThrowInTime","Mathinator","fielderReturnDelay","getBaseRunningTime","push","bases","thrownOut","fieldingReturnDelay","fieldingDelay","outFielder","left","center","right","baseRunningTime","difficulty","fieldersChoice","swingResult","Animator","animateFieldingTrajectory","pitcher","catcher","short","b","fieldingTest","random","distance","data","fielderCandidates","fielderSelectionTest","aggregateFieldingTest","fielders","tally","distances","false","selections","returnFielder","minDistance","giraffe","Iterator","each","position","spot","thisDistance","baseball/Model/Player","baseball/Services/_services",3,"_baseballModelField","_baseballModelTeam","_baseballModelUmpire","_baseballUtility_utils","Game","m","gamesIntoSeason","humanControl","console","quickMode","debug","mode","floor","field","Team","helper","name","pickName","Umpire","humanPitching","stage","getInning","inning","toUpperCase","humanBatting","end","R","getName","note","simulateInput","callback","autoPitch","pitchTarget","autoSwing","simulatePitchAndSwing","setTimeout","TIME_FROM_SET","TIME_FROM_WINDUP","receiveInput","thePitch","theSwing","autoPitchSelect","pitchName","selectRandomPitch","pitching","hasOwnProperty","pitch","pitchInFlight","windingUp","$","addClass","windup","css","pitchLocation","animate","width","removeClass","deceptiveX","deceptiveY","convergence","convergenceSum","balls","strikes","centralizedNumber","cpuSwing","swingProbability","swingLikelihood","breakDirection","pitchDefinitions","slice","battersEye","getBattersEye","control","pitchControl","breakEffect","notePitch","setBatAngle","recalculation","getAngularOffset","precision","looking","contact","strike","max","sqrt","pow","noteSwing","makeCall","startOpponentPitching","team","origin","bats","battingAngle","debugOut","filter","PO","map","hitters","lineup","concat","atBats","LO","ab","FO","GO","SO","velocity","break","pitchSelect","scoreboard",4,5,6,7,8,9,"H","E","baseball/Model/Field","baseball/Model/Team","baseball/Model/Umpire","baseball/Utility/_utils","Manager","makeLineup","jerseyNumber","selectForSkill","bench","number","key","player","order","pool","skillset","requiredThrowingHandedness","selection","rating","index","skills","cursor","property","shift","_baseballModel_models","IP","ER","GS","W","L","randBetween","total","isNaN","pa","paRemaining","bb","so","h","doubles","triples","hr","hbp","sac","chances","stats","pitches","K","getERA","ERA","HR","BB","batting","getBA","ba","getOBP","obp","getSLG","slg","2b","3b","A","hero","averaging","randomizeSkills","surnameKey","surnames","nameKey","names","jSurname","surnamesJ","jGivenName","namesJ","nameJ","surname","surnameJ","atBatObjects","getAtBats","item","recordRBI","recordInfieldHit","randValue","isPitching","catching","slider","fork","cutter","sinker","curve","change","reduce","prev","current","getSurname","getUniformNumber","getOrder","baseball/Model/_models","_baseballModelManager","bullpen","j","manager","teamNameIndex","teamNames","teamNamesJ","nowBatting","expanded","baseball/Model/Manager","playBall","batterRunner","deck","hole","noteBatter","says","result","advanceRunners","LINEOUT","FLYOUT","newBatter","FIELDERS_CHOICE","reachBase","GROUNDOUT","hitByPitch","STRIKEOUT","changeSides","isWalk","RUN","canAdvance","pitchRecord","notePlateAppearanceResult","_baseballModelAtBat","_baseballModelGame","baseball/Model/AtBat","baseball/Model/Game","TweenMax","loadTweenMax","window","set","to","from","killAll","HOLD_UP_ALLOWANCE","pitchBreak","updateFlightPath","$scope","top","breakTop","breakLeft","$baseballs","flightSpeed","originTop","originLeft","henka","quarter","pitchTransition","transitions","lastTimeout","allowInput","$apply","holdUpTimeouts","holdUp","ball","linearApproximateDragScalar","apexHeight","airTime","scalar","memory","bounding","sin","PI","velocityVerticalComponent","RADIAN","mathinator","transitionalTrajectory","fn","baseball/services/_services",10,"chance","scale","min","target","effect","actual",11,"collection","keys","Array",12,"square","SPLAY_INDICATOR_LEFT","offset","xScalar","yScalar","originalAngle","atan","angledY","cos","angledX","radians","percent","step","givenApexHeight","givenDistance","givenSplayAngle","bottom","padding","borderWidth","radian","apexRatio","delay","ease","Power4","easeOut","Linear","easeNone","translateSwingResultToStylePosition","_top","_left","transform","intercept",13,"_baseballServicesAnimator","_baseballServicesDistribution","_baseballServicesIterator","_baseballServicesMathinator","baseball/Services/Animator","baseball/Services/Distribution","baseball/Services/Iterator","baseball/Services/Mathinator",14,"_baseballUtilityText","_note","noteJ","record","unshift","rec","shortRecord","stabilized","rec2","getBatter","longFormFielder","comma","recordJ","getPitchLocationDescription","batterIsLefty","say","noComma","noComma2","join","namePitch","stop","pop","getSwing","getPlateAppearanceResult","out","outBy","contactResult","pointer","baseball/Utility/text",15,"_baseballUtilityData","_baseballUtilityHelper","baseball/Utility/data","baseball/Utility/helper",16,17,"4-seam","2-seam",18,"phrase","override","string","empty"," 1st"," 2nd"," 3rd"," 4th"," 5th"," 6th"," 7th"," 8th"," 9th","Now batting","way outside","outside","inside","way inside","way low","low","high","way high","down the middle","first baseman","second baseman","third baseman","shortstop","left fielder","center fielder","right fielder","Strike.","Ball.","Fouled off.","In play.","Swinging strike."," struck out looking."," walked."," struck out swinging.","Previous: ","looks like: ","breaking ball","fastball","Batting, ","Catching, pitch selection","Season","Pitch","Control","Velocity","Break","At Bat :","On Deck :","Eye :","Power :","Speed :","Up to Bat","Fielding","BA","OBP","SLG","PA","H/2B/3B/HR","2B","3B","RBI","Select Language:","Run Fast Simulation","Play Ball!","Spectate the CPU","Throws/Bats","LHP","RHP","LHB","RHB","R "," L "," R ","#","breaking","fielderShortName","slash","fielderLongName","charAt","statement","plural","runner","is","base","fielderLong",19,"_baseballNamespace","Baseball","baseball/namespace",20,"model","service","util",21,"IndexController","setMode","proceedToGame","spectateCpu","s2","bindMethods","remove","auto","setInterval","clearInterval","expandScoreboard","animator","bind","bat","showBat","event","relativeOffset","pageX","pageY","hide","show","glove","showGlove","selectPitch","extend","click","indicate","$event","clearTimeout","abbreviatePosition","$watch","mousemove","unbind","ScoreboardDirective","scope","templateUrl","cacheKey","link","app","angular","directive","controller"],"mappings":"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","file":"application.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar AtBat = function AtBat(text) {\n    this.infield = text.indexOf(AtBat.prototype.INFIELD_HIT_INDICATOR) > -1 ? AtBat.prototype.INFIELD_HIT_INDICATOR : '';\n    text = text.replace(AtBat.prototype.INFIELD_HIT_INDICATOR, '');\n    this.text = text.split(AtBat.prototype.RBI_INDICATOR)[0];\n    this.rbi = text.split(this.text)[1] + '';\n\n    var log = new _baseballUtilityLog.Log();\n\n    var beneficial = [log.WALK, log.SINGLE, log.HOMERUN, log.DOUBLE, log.TRIPLE, log.SACRIFICE, log.REACHED_ON_ERROR];\n    if (beneficial.indexOf(this.text) > -1) {\n        this.beneficial = true;\n    }\n};\nAtBat.prototype.toString = function () {\n    return '' + this.infield + this.text + this.rbi;\n};\nAtBat.prototype.constructor = AtBat;\nAtBat.prototype.identifier = 'AtBat';\nAtBat.prototype.INFIELD_HIT_INDICATOR = '';\nAtBat.prototype.RBI_INDICATOR = '+';\n\nexports.AtBat = AtBat;\n\n},{\"baseball/Utility/Log\":14}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\n/**\n * The baseball field tracks the ball's movement, fielders, and what runners are on\n * @param game\n * @constructor\n */\nvar Field = function Field(game) {\n    this.init(game);\n};\n\nField.prototype = {\n    constructor: Field,\n    init: function init(game) {\n        this.game = game;\n        this.first = null;\n        this.second = null;\n        this.third = null;\n    },\n    /**\n     * @returns {boolean}\n     */\n    hasRunnersOn: function hasRunnersOn() {\n        return this.first instanceof _baseballModelPlayer.Player || this.second instanceof _baseballModelPlayer.Player || this.third instanceof _baseballModelPlayer.Player;\n    },\n    /**\n     * @param swing\n     * @returns {object}\n     */\n    determineSwingContactResult: function determineSwingContactResult(swing) {\n        var x = swing.x,\n            y = swing.y;\n        /**\n         * The initial splay angle is 90 degrees for hitting up the middle and 0\n         * for a hard foul left, 180 is a foul right. Depending on the angle of the bat,\n         * a y-axis displacement which would otherwise pop or ground the ball can instead\n         * increase the left/right effect.\n         * @type {number}\n         */\n        var splayAngle = 90 - 1.5 * x + swing.angle * y / 35;\n        var flyAngle = -3 * y - swing.angle * y / 35;\n        var power = this.game.batter.skill.offense.power + (this.game.batter.eye.bonus || 0) / 5;\n        var landingDistance = _baseballServices_services.Distribution.landingDistance(power, flyAngle);\n        if (flyAngle < 0 && landingDistance > 120) {\n            landingDistance = (landingDistance - 120) / 4 + 120;\n        }\n\n        if (Math.abs(90 - splayAngle) > 50) swing.foul = true;\n        swing.fielder = this.findFielder(splayAngle, landingDistance);\n        swing.travelDistance = landingDistance;\n        swing.flyAngle = flyAngle;\n        /**\n         * the splay for the result is adjusted to 0 being up the middle and negatives being left field\n         * @type {number}\n         */\n        swing.splay = splayAngle - 90;\n        swing.sacrificeAdvances = [];\n\n        if (swing.fielder) {\n            var fielder = this.game.half == 'top' ? this.game.teams.home.positions[swing.fielder] : this.game.teams.away.positions[swing.fielder];\n            fielder.fatigue += 4;\n            swing.error = false;\n            var fieldingEase = fielder.skill.defense.fielding / 100,\n                throwingEase = fielder.skill.defense.throwing / 100;\n            //reach the batted ball?\n            swing.fielderTravel = this.getPolarDistance(this.positions[swing.fielder], [splayAngle, landingDistance]);\n            var interceptRating = fielder.skill.defense.speed + flyAngle - swing.fielderTravel * 1.65;\n            if (interceptRating > 0 && flyAngle > 0) {\n                //caught cleanly?\n                if (_baseballServices_services.Distribution.error(fielder)) {\n                    //error\n                    fieldingEase *= 0.5;\n                    swing.error = true;\n                    swing.caught = false;\n                } else {\n                    swing.caught = true;\n                    if (this.game.umpire.count.outs < 2) {\n                        var sacrificeThrowInTime = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, 100);\n                        if (this.first && sacrificeThrowInTime > this.first.getBaseRunningTime() + 2.5) {\n                            swing.sacrificeAdvances.push('first');\n                        }\n                        if (this.second && sacrificeThrowInTime > this.second.getBaseRunningTime()) {\n                            swing.sacrificeAdvances.push('second');\n                        }\n                        if (this.third && sacrificeThrowInTime > this.third.getBaseRunningTime() - 0.5) {\n                            swing.sacrificeAdvances.push('third');\n                        }\n                    }\n                }\n            } else {\n                swing.caught = false;\n            }\n\n            if (!swing.caught) {\n                swing.bases = 0;\n                swing.thrownOut = false; // default value\n                var fieldingReturnDelay = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, interceptRating);\n                swing.fieldingDelay = fieldingReturnDelay;\n                swing.outFielder = ({ 'left': 1, 'center': 1, 'right': 1 })[swing.fielder] == 1;\n                var speed = this.game.batter.skill.offense.speed,\n                    baseRunningTime = _baseballServices_services.Mathinator.baseRunningTime(speed);\n\n                if (swing.outFielder) {\n                    //log('OF', fieldingReturnDelay.toString().slice(0,4), baseRunningTime.toString().slice(0,4));\n                    swing.bases = 1;\n                    fieldingReturnDelay -= baseRunningTime;\n                    var difficulty = 1.8;\n\n                    while (fieldingReturnDelay > baseRunningTime + difficulty && swing.bases < 3) {\n                        swing.bases++;\n                        difficulty = -1.3;\n                        fieldingReturnDelay -= baseRunningTime;\n                    }\n                } else {\n                    //log('-------- IF', fieldingReturnDelay.toString().slice(0,4), baseRunningTime.toString().slice(0,4));\n                    swing.fieldersChoice = null;\n                    swing.bases = fieldingReturnDelay >= baseRunningTime + 1 ? 1 : 0;\n                    if (this.first && fieldingReturnDelay < this.first.getBaseRunningTime()) swing.fieldersChoice = 'first';\n                    if (this.first && this.second && fieldingReturnDelay < this.second.getBaseRunningTime() + 0.6) swing.fieldersChoice = 'second';\n                    if (this.third && fieldingReturnDelay < this.third.getBaseRunningTime()) swing.fieldersChoice = 'third';\n                    if (swing.fieldersChoice) swing.bases = 1;\n                }\n                swing.thrownOut = swing.bases == 0;\n                if (swing.thrownOut) {\n                    swing.thrownOut = true;\n                    swing.error = false;\n                }\n            }\n        } else {\n            if (Math.abs(90 - splayAngle) < 45 && landingDistance > 300) {\n                swing.bases = 4;\n            } else {\n                swing.foul = true;\n                swing.caught = false;\n            }\n        }\n        this.game.swingResult = swing;\n        return _baseballServices_services.Animator.animateFieldingTrajectory(this.game);\n    },\n    //printRunnerNames : function() {\n    //    return [this.first ? this.first.getName() : '', this.second ? this.second.getName() : '', this.third ? this.third.getname() : ''];\n    //},\n    /**\n     * @param splayAngle\n     * @param landingDistance\n     * @returns {string|bool}\n     */\n    findFielder: function findFielder(splayAngle, landingDistance) {\n        if (Math.abs(90 - splayAngle) > 50) return false;\n        if (landingDistance < 10 && landingDistance > -20) {\n            return 'catcher';\n        } else if (landingDistance >= 10 && landingDistance < 66 && Math.abs(90 - splayAngle) < 5) {\n            return 'pitcher';\n        }\n        if (landingDistance > 20 && landingDistance + Math.abs(90 - splayAngle) / 90 * 37 < 155) {\n            if (splayAngle < 45 + 23) {\n                return 'third';\n            } else if (splayAngle < 45 + 23 + 23) {\n                return 'short';\n            } else if (splayAngle < 45 + 23 + 23 + 23) {\n                return 'second';\n            } else {\n                return 'first';\n            }\n        } else if (landingDistance > 90 && landingDistance < 310) {\n            if (splayAngle < 45 + 28) {\n                return 'left';\n            } else if (splayAngle < 45 + 28 + 34) {\n                return 'center';\n            } else {\n                return 'right';\n            }\n        } else {\n            return false;\n        }\n    },\n    positions: {\n        pitcher: [90, 66],\n        catcher: [0, 0],\n        first: [90 + 45 - 7, 98],\n        second: [90 + 12.5, 130],\n        short: [90 - 12.5, 130],\n        third: [90 - 45 + 7, 98],\n        left: [45 + 14, 280],\n        center: [90, 280],\n        right: [135 - 14, 280]\n    },\n    getPolarDistance: function getPolarDistance(a, b) {\n        return _baseballServices_services.Mathinator.getPolarDistance(a, b);\n    },\n    fieldingTest: function fieldingTest() {\n        var angle = Math.random() * 90 + 45;\n        var distance = Math.random() * 320;\n        var fielder = this.findFielder(angle, distance);\n        var data = {};\n        if (fielder) {\n            var fielderCandidates = this.fielderSelectionTest(angle, distance, true);\n            data.fielder = fielderCandidates[1];\n            data[fielderCandidates[0]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[0]][0], this.positions[fielderCandidates[0]][1]]);\n            data[fielderCandidates[1]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[1]][0], this.positions[fielderCandidates[1]][1]]);\n            return data;\n        }\n    },\n    aggregateFieldingTest: function aggregateFieldingTest() {\n        var fielders = {\n            pitcher: { tally: 0, distances: [] },\n            catcher: { tally: 0, distances: [] },\n            first: { tally: 0, distances: [] },\n            second: { tally: 0, distances: [] },\n            short: { tally: 0, distances: [] },\n            third: { tally: 0, distances: [] },\n            left: { tally: 0, distances: [] },\n            center: { tally: 0, distances: [] },\n            right: { tally: 0, distances: [] },\n            'false': { tally: 0, distances: [] }\n        };\n        var selections = [];\n        for (var i = 0; i < 1000; i++) {\n            var angle = Math.random() * 90 + 45;\n            var distance = Math.random() * 320;\n            var fielder = this.findFielder(angle, distance);\n            fielders[fielder].tally++;\n            if (fielder) {\n                fielders[fielder].distances.push(this.getPolarDistance([angle, distance], [this.positions[fielder][0], this.positions[fielder][1]]));\n            }\n            selections.push([angle, distance]);\n            selections.push(this.fielderSelectionTest(angle, distance, true));\n        }\n        return [fielders, selections];\n    },\n    fielderSelectionTest: function fielderSelectionTest(angle, distance, returnFielder) {\n        var distances = [];\n        var minDistance = 300;\n        var giraffe = this;\n        var fielder = false;\n        Iterator.each(this.positions, function (position, spot) {\n            var thisDistance = giraffe.getPolarDistance([angle, distance], spot);\n            distances[thisDistance] = position;\n            if (minDistance > thisDistance) {\n                minDistance = thisDistance;\n                fielder = position;\n            }\n        });\n        return returnFielder ? [fielder, this.findFielder(angle, distance)] : distances;\n    }\n};\n\nexports.Field = Field;\n\n},{\"baseball/Model/Player\":5,\"baseball/Services/_services\":13}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Game = function Game(m) {\n    this.init(m);\n};\n\nGame.prototype = {\n    constructor: Game,\n    gamesIntoSeason: 0,\n    humanControl: 'none', //home, away, both, none\n    console: false,\n    quickMode: true,\n    debug: [],\n    init: function init(m) {\n        if (m) _baseballUtility_utils.text.mode = m;\n        this.gamesIntoSeason = 1 + Math.floor(Math.random() * 142);\n        this.field = new _baseballModelField.Field(this);\n        this.teams.away = new _baseballModelTeam.Team(this);\n        this.teams.home = new _baseballModelTeam.Team(this);\n        this.log = new _baseballUtilityLog.Log();\n        this.log.game = this;\n        this.debug = [];\n        this.helper = _baseballUtility_utils.helper;\n        while (this.teams.away.name == this.teams.home.name) {\n            this.teams.away.pickName();\n        }\n        this.umpire = new _baseballModelUmpire.Umpire(this);\n        if (this.humanPitching()) {\n            this.stage = 'pitch';\n        }\n    },\n    getInning: function getInning() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.inning + (this.half == 'top' ? 'オモテ' : 'ウラ') : this.half.toUpperCase() + ' ' + this.inning;\n    },\n    humanBatting: function humanBatting() {\n        if (this.humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return this.humanControl == 'both' || this.humanControl == 'away';\n            case 'bottom':\n                return this.humanControl == 'both' || this.humanControl == 'home';\n        }\n    },\n    humanPitching: function humanPitching() {\n        if (this.humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return this.humanControl == 'both' || this.humanControl == 'home';\n            case 'bottom':\n                return this.humanControl == 'both' || this.humanControl == 'away';\n        }\n    },\n    end: function end() {\n        this.stage = 'end';\n        var e, n;\n        e = this.tally.home.R > this.tally.away.R ? 'Home team wins!' : this.tally.home.R == this.tally.away.R ? 'You tied. Yes, you can do that.' : 'Visitors win!';\n        n = this.tally.home.R > this.tally.away.R ? this.teams.home.getName() + 'の勝利' : this.tally.home.R == this.tally.away.R ? '引き分け' : this.teams.away.getName() + 'の勝利';\n        this.log.note(e, n);\n    },\n    stage: 'pitch', //pitch, swing\n    simulateInput: function simulateInput(callback) {\n        if (this.stage == 'end') {\n            return;\n        }\n        if (this.stage == 'pitch') {\n            this.autoPitch(callback);\n        } else if (this.stage == 'swing') {\n            if (typeof this.pitchTarget != 'object') {\n                this.pitchTarget = { x: 100, y: 100 };\n            }\n            this.autoSwing(this.pitchTarget.x, this.pitchTarget.y, callback);\n        }\n    },\n    simulatePitchAndSwing: function simulatePitchAndSwing(callback) {\n        if (this.stage == 'end') {\n            return;\n        }\n        this.autoPitch(callback);\n        var giraffe = this;\n        setTimeout(function () {\n            if (typeof giraffe.pitchTarget != 'object') {\n                giraffe.pitchTarget = { x: 100, y: 100 };\n            }\n            giraffe.autoSwing(giraffe.pitchTarget.x, giraffe.pitchTarget.y, function (callback) {\n                callback();\n            });\n        }, giraffe.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET + 1200 : _baseballServices_services.Animator.TIME_FROM_WINDUP + 1200);\n    },\n    /**\n     * generically receive click input and decide what to do\n     * @param x\n     * @param y\n     * @param callback\n     */\n    receiveInput: function receiveInput(x, y, callback) {\n        if (this.humanControl == 'none') {\n            return;\n        }\n        if (this.stage == 'end') {\n            return;\n        }\n        if (this.stage == 'pitch' && this.humanPitching()) {\n            this.thePitch(x, y, callback);\n        } else if (this.stage == 'swing' && this.humanBatting()) {\n            this.theSwing(x, y, callback);\n        }\n    },\n    autoPitchSelect: function autoPitchSelect() {\n        var pitchName = this.helper.selectRandomPitch();\n        while (!this.pitcher.pitching.hasOwnProperty(pitchName)) {\n            pitchName = this.helper.selectRandomPitch();\n        }\n        var pitch = this.pitcher.pitching[pitchName];\n        pitch.name = pitchName;\n        this.pitchInFlight = pitch;\n    },\n    autoPitch: function autoPitch(callback) {\n        var pitcher = this.pitcher,\n            giraffe = this;\n        if (this.stage == 'pitch') {\n            pitcher.windingUp = true;\n            if (!this.console) {\n                $('.baseball').addClass('hide');\n                var windup = $('.windup');\n                windup.css('width', '100%');\n            }\n            this.autoPitchSelect();\n            var pitch = _baseballServices_services.Distribution.pitchLocation(),\n                x = pitch.x,\n                y = pitch.y;\n            if (this.quickMode) {\n                this.thePitch(x, y, callback);\n            } else {\n                windup.animate({ width: 0 }, this.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET : _baseballServices_services.Animator.TIME_FROM_WINDUP, function () {\n                    !giraffe.console && $('.baseball.pitch').removeClass('hide');\n                    giraffe.thePitch(x, y, callback);\n                    pitcher.windingUp = false;\n                });\n            }\n        }\n    },\n    autoSwing: function autoSwing(deceptiveX, deceptiveY, callback) {\n        var giraffe = this;\n        var bonus = this.batter.eye.bonus || 0,\n            eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus,\n            convergence,\n            convergenceSum;\n\n        var x = _baseballServices_services.Distribution.centralizedNumber(),\n            y = _baseballServices_services.Distribution.centralizedNumber();\n        if (100 * Math.random() < eye) {\n            convergence = 1.35 * 5 * eye / 100;\n            convergenceSum = 1 + convergence;\n            deceptiveX = this.pitchInFlight.x;\n            deceptiveY = this.pitchInFlight.y;\n        } else {\n            convergence = 1.35 * 2 * eye / 100;\n            convergenceSum = 1 + convergence;\n        }\n        x = (deceptiveX * convergence + x) / convergenceSum;\n        y = (deceptiveY * convergence + y) / convergenceSum;\n\n        this.swingResult.x = _baseballServices_services.Distribution.cpuSwing(x, this.pitchInFlight.x, eye);\n        this.swingResult.y = _baseballServices_services.Distribution.cpuSwing(y, this.pitchInFlight.y, eye);\n\n        var swingProbability = _baseballServices_services.Distribution.swingLikelihood(eye, x, y, this.umpire);\n        if (swingProbability < 100 * Math.random()) {\n            x = -20;\n        }\n\n        callback(function () {\n            giraffe.theSwing(x, y);\n        });\n    },\n    thePitch: function thePitch(x, y, callback) {\n        if (this.stage == 'pitch') {\n            this.pitcher.fatigue++;\n            this.pitchTarget.x = x;\n            this.pitchTarget.y = y;\n\n            this.pitchInFlight.breakDirection = this.helper.pitchDefinitions[this.pitchInFlight.name].slice(0, 2);\n            this.battersEye = _baseballUtility_utils.text.getBattersEye(this);\n\n            var control = this.pitchInFlight.control;\n            this.pitchTarget.x = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.x, control);\n            this.pitchTarget.y = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.y, control);\n\n            if (this.pitcher.throws == 'right') this.pitchInFlight.breakDirection[0] *= -1;\n\n            var breakEffect = _baseballServices_services.Distribution.breakEffect(this.pitchInFlight, this.pitcher, this.pitchTarget.x, this.pitchTarget.y);\n\n            this.pitchInFlight.x = breakEffect.x;\n            this.pitchInFlight.y = breakEffect.y;\n\n            this.log.notePitch(this.pitchInFlight, this.batter);\n\n            this.stage = 'swing';\n            if (this.humanControl != 'none' && (this.humanControl == 'both' || this.humanBatting())) {\n                callback();\n            } else {\n                this.autoSwing(x, y, callback);\n            }\n        }\n    },\n    battersEye: {\n        e: '',\n        n: ''\n    },\n    theSwing: function theSwing(x, y, callback) {\n        if (this.stage == 'swing') {\n            this.swingResult = {};\n            var bonus = this.batter.eye.bonus || 0,\n                eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus;\n\n            if (x >= 0 && x <= 200) {\n                this.batter.fatigue++;\n\n                this.swingResult.x = x - this.pitchInFlight.x;\n                this.swingResult.y = y - this.pitchInFlight.y;\n                this.swingResult.angle = this.setBatAngle();\n\n                var recalculation = _baseballServices_services.Mathinator.getAngularOffset(this.swingResult, this.swingResult.angle);\n                var precision = _baseballServices_services.Distribution.swing(eye);\n\n                this.swingResult.x = Math.abs(recalculation.x) > 20 ? recalculation.x * precision : recalculation.x;\n                this.swingResult.y = -5 + (recalculation.y < 0 ? recalculation.y * precision : recalculation.y);\n\n                //log(recalculation.y, precision);\n\n                this.swingResult.looking = false;\n                if (Math.abs(this.swingResult.x) < 60 && Math.abs(this.swingResult.y) < 35) {\n                    this.swingResult.contact = true;\n                    this.swingResult = this.field.determineSwingContactResult(this.swingResult);\n                    // log(this.swingResult.flyAngle, Math.floor(this.swingResult.x), Math.floor(this.swingResult.y));\n                    this.debug.push(this.swingResult);\n                } else {\n                    this.swingResult.contact = false;\n                }\n            } else {\n                this.swingResult.strike = this.pitchInFlight.x > 50 && this.pitchInFlight.x < 150 && this.pitchInFlight.y > 35 && this.pitchInFlight.y < 165;\n                this.batter.eye.bonus = Math.max(0, eye - Math.sqrt(Math.pow(this.batter.eye.x - this.pitchInFlight.x, 2) + Math.pow(this.batter.eye.y - this.pitchInFlight.y, 2)) * 1.5);\n                this.swingResult.contact = false;\n                this.swingResult.looking = true;\n                this.batter.eye.x = this.pitchInFlight.x;\n                this.batter.eye.y = this.pitchInFlight.y;\n            }\n\n            this.log.noteSwing(this.swingResult);\n            this.stage = 'pitch';\n\n            var half = this.half;\n            this.umpire.makeCall();\n            if (half != this.half) {\n                callback = this.startOpponentPitching;\n            }\n\n            if (typeof callback == 'function') {\n                if (this.humanControl != 'none' && (this.humanControl == 'both' || this.teams[this.humanControl] == this.pitcher.team)) {\n                    callback();\n                } else {\n                    this.autoPitch(callback);\n                }\n            }\n        }\n    },\n    setBatAngle: function setBatAngle(x, y) {\n        var giraffe = this;\n        var origin = {\n            x: giraffe.batter.bats == 'right' ? -10 : 210,\n            y: 160\n        };\n        var swing = {\n            x: x ? x : giraffe.pitchInFlight.x + this.swingResult.x,\n            y: y ? y : giraffe.pitchInFlight.y + this.swingResult.y\n        };\n        return _baseballServices_services.Mathinator.battingAngle(origin, swing);\n    },\n    debugOut: function debugOut() {\n        log('slugging', this.debug.filter(function (a) {\n            return a.bases == 1;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 2;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 3;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 4;\n        }).length);\n        log('grounders', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < -5;\n        }).length);\n        log('grounders thrown out', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < -5 && a.thrownOut;\n        }).length);\n        log('weak fly hits (thrown out)', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle > 0 && a.thrownOut;\n        }).length);\n        log('good fly hits (not caught)', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle > 0 && !a.thrownOut;\n        }).length);\n\n        var PO = {};\n        this.debug.map(function (a) {\n            if (!PO[a.fielder]) {\n                PO[a.fielder] = 0;\n            }\n            if (!a.bases && a.fielder) {\n                PO[a.fielder]++;\n            }\n        });\n        log('fielding outs', PO);\n\n        var hitters = this.teams.away.lineup.concat(this.teams.home.lineup);\n        var atBats = [];\n        hitters.map(function (a) {\n            atBats = atBats.concat(a.atBats);\n        });\n\n        var LO = atBats.filter(function (ab) {\n            return ab == 'LO';\n        }).length;\n        log('line outs', LO);\n        var FO = atBats.filter(function (ab) {\n            return ab == 'FO';\n        }).length;\n        log('fly outs', FO);\n        var GO = atBats.filter(function (ab) {\n            return ab == 'GO';\n        }).length;\n        log('groundouts', GO);\n        var SO = atBats.filter(function (ab) {\n            return ab == 'SO';\n        }).length;\n        log('strikeouts', SO);\n        log('fouls', this.debug.filter(function (a) {\n            return a.foul;\n        }).length);\n    },\n    startOpponentPitching: null, // late function\n    pitchTarget: { x: 100, y: 100 },\n    pitchInFlight: {\n        x: 100,\n        y: 100,\n        breakDirection: [0, 0],\n        name: 'slider',\n        velocity: 50,\n        'break': 50,\n        control: 50\n    },\n    swingResult: {\n        x: 100, //difference to pitch location\n        y: 100, //difference to pitch location\n        strike: false,\n        foul: false,\n        caught: false,\n        contact: false,\n        looking: true,\n        bases: 0,\n        fielder: 'short',\n        outs: 0\n    },\n    pitchSelect: function pitchSelect() {},\n    field: null,\n    teams: {\n        away: null,\n        home: null\n    },\n    log: null,\n    half: 'top',\n    inning: 1,\n    scoreboard: {\n        away: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        },\n        home: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        }\n    },\n    tally: {\n        away: {\n            H: 0,\n            R: 0,\n            E: 0\n        },\n        home: {\n            H: 0,\n            R: 0,\n            E: 0\n        }\n    }\n};\n\nexports.Game = Game;\n\n},{\"baseball/Model/Field\":2,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":13,\"baseball/Utility/Log\":14,\"baseball/Utility/_utils\":15}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Manager = function Manager(team) {\n    this.init(team);\n};\n\nManager.prototype = {\n    constructor: Manager,\n    init: function init(team) {\n        this.team = team;\n    },\n    makeLineup: function makeLineup() {\n        var jerseyNumber = 1;\n        this.team.positions.pitcher = this.selectForSkill(this.team.bench, ['pitching']);\n        this.team.positions.pitcher.position = 'pitcher';\n        this.team.positions.pitcher.number = jerseyNumber++;\n        this.team.positions.catcher = this.selectForSkill(this.team.bench, ['defense', 'catching'], 'right');\n        this.team.positions.catcher.position = 'catcher';\n        this.team.positions.catcher.number = jerseyNumber++;\n        _baseballServices_services.Iterator.each(this.team.bench, function (key, player) {\n            player.number = jerseyNumber++;\n        });\n        this.team.positions.short = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.short.position = 'short';\n        this.team.positions.second = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.second.position = 'second';\n        this.team.positions.third = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.third.position = 'third';\n        this.team.positions.center = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.center.position = 'center';\n        this.team.positions.left = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.left.position = 'left';\n        this.team.positions.right = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.right.position = 'right';\n        this.team.positions.first = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'left');\n        this.team.positions.first.position = 'first';\n\n        this.team.lineup[3] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[3].order = 3;\n        this.team.lineup[2] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[2].order = 2;\n        this.team.lineup[4] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[4].order = 4;\n        this.team.lineup[0] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[0].order = 0;\n        this.team.lineup[1] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[1].order = 1;\n        this.team.lineup[5] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[5].order = 5;\n        this.team.lineup[6] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[6].order = 6;\n        this.team.lineup[7] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[7].order = 7;\n        this.team.lineup[8] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[8].order = 8;\n    },\n    selectForSkill: function selectForSkill(pool, skillset, requiredThrowingHandedness) {\n        if (this.team.bench.length || pool == this.team.positions) {\n            var selection = this.team.bench[0];\n            var rating = 0;\n            var index = 0;\n            _baseballServices_services.Iterator.each(pool, function (key, player) {\n                var skills = skillset.slice();\n                var cursor = player.skill;\n                var property = skills.shift();\n                while (property) {\n                    cursor = cursor[property];\n                    property = skills.shift();\n                }\n                if (!(player.order + 1) && cursor >= rating && (!requiredThrowingHandedness || player.throws == requiredThrowingHandedness)) {\n                    rating = cursor;\n                    selection = player;\n                    index = key;\n                }\n            });\n            if (pool == this.team.bench) {\n                delete this.team.bench[index];\n                this.team.bench = this.team.bench.filter(function (player) {\n                    return player instanceof selection.constructor;\n                });\n            }\n            return selection;\n        }\n        return 'no players available';\n    }\n};\n\nexports.Manager = Manager;\n\n},{\"baseball/Services/_services\":13}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar Player = function Player(team) {\n    this.init(team);\n    var offense = this.skill.offense;\n    var defense = this.skill.defense;\n    var randBetween = function randBetween(a, b, skill) {\n        var total = 0,\n            count = 0;\n        skill += '';\n        if (!skill) skill = '';\n        _baseballServices_services.Iterator.each(skill.split(' '), function (key, value) {\n            var skill = value;\n            if (offense[skill]) skill = offense[skill];\n            if (defense[skill]) skill = defense[skill];\n            if (isNaN(skill)) skill = 50;\n            total += skill;\n            count++;\n        });\n\n        skill = Math.sqrt(0.05 + Math.random() * 0.95) * (total / (count * 0.97));\n        return Math.floor(skill / 100 * (b - a) + a);\n    };\n    // let's just say we're about X games into the season\n    var gamesIntoSeason = this.team.game.gamesIntoSeason;\n    var IP, ER, GS, W, L;\n    if (this.skill.pitching > 65) {\n        IP = (this.skill.pitching - 65) * gamesIntoSeason / 20;\n        ER = IP / 9 * randBetween(800, 215, this.skill.pitching) / 100;\n        if (IP > gamesIntoSeason) {\n            //starter\n            GS = Math.floor(gamesIntoSeason / 5);\n            W = randBetween(GS * 0.1, GS * 0.8, this.skill.pitching / 1.20);\n            L = randBetween(GS - W, 0, this.skill.pitching / 3);\n        } else {\n            //reliever\n            GS = Math.floor(gamesIntoSeason / 40);\n            W = randBetween(0, GS * 0.6, this.skill.pitching);\n            L = randBetween(GS - W, 0, this.skill.pitching);\n        }\n    }\n    var pa = randBetween(gamesIntoSeason * 3, gamesIntoSeason * 5, 'speed eye');\n    var paRemaining = pa;\n    var bb = Math.floor(randBetween(0, 18, 'power eye') * paRemaining / 100);\n    paRemaining -= bb;\n    var ab = paRemaining;\n    var so = Math.floor(randBetween(33, 2, 'eye') * paRemaining / 100);\n    paRemaining -= so;\n    var h = Math.floor(randBetween(185, 472, 'eye power speed') * paRemaining / 1000);\n    paRemaining -= h;\n\n    var doubles = randBetween(0, h / 4, 'power speed');\n    var triples = randBetween(0, h / 12, 'speed');\n    var hr = Math.max(0, randBetween(-h / 20, h / 5, 'power eye'));\n    var r = randBetween(h / 8, (h + bb) / 3, 'speed') + hr;\n    var rbi = randBetween(h / 8, h / 2, 'power eye') + hr;\n    var hbp = randBetween(0, gamesIntoSeason / 25);\n    var sac = randBetween(0, gamesIntoSeason / 5, 'eye');\n\n    var chances = randBetween(0, gamesIntoSeason * 10, 'fielding');\n    var E = randBetween(chances / 10, 0, 'fielding');\n    var PO = chances - E;\n\n    this.stats = {\n        pitching: {\n            pitches: 0, // in game\n            GS: GS,\n            W: W,\n            L: L,\n            strikes: 0, // in game\n            K: 0, // in game\n            getERA: function getERA() {\n                return 9 * this.ER / Math.max(1 / 3, this.IP[0] + this.IP[1] / 3);\n            },\n            ERA: null,\n            ER: ER,\n            H: 0, // in game\n            HR: 0, // in game\n            BB: 0, // in game\n            IP: [IP, 0]\n        },\n        batting: {\n            getBA: function getBA() {\n                return this.h / Math.max(1, this.ab);\n            },\n            ba: null,\n            getOBP: function getOBP() {\n                return (this.h + this.bb + this.hbp) / (this.ab + this.bb + this.hbp + this.sac);\n            },\n            obp: null,\n            getSLG: function getSLG() {\n                return (this.h - this['2b'] - this['3b'] - this.hr + 2 * this['2b'] + 3 * this['3b'] + 4 * this.hr) / this.ab;\n            },\n            slg: null,\n            pa: pa,\n            ab: ab,\n            so: so,\n            bb: bb,\n            h: h,\n            '2b': doubles,\n            '3b': triples,\n            hr: hr,\n            r: r,\n            rbi: rbi,\n            hbp: hbp,\n            sac: sac\n        },\n        fielding: {\n            E: E,\n            PO: PO, // should depend on position\n            A: Math.floor(Math.random() * 5) + 1 // ehh should depend on position\n        }\n    };\n    this.stats.pitching.ERA = this.stats.pitching.getERA();\n    this.stats.batting.ba = this.stats.batting.getBA();\n};\n\nPlayer.prototype = {\n    constructor: Player,\n    init: function init(team, hero) {\n        this.throws = Math.random() > 0.86 ? 'left' : 'right';\n        this.bats = Math.random() > 0.75 ? 'left' : 'right';\n        this.team = team;\n        this.skill = {};\n        this.eye = {\n            x: 100,\n            y: 100\n        };\n        this.pitching = { averaging: [] };\n        this.number = 0;\n        this.randomizeSkills(hero || Math.random() > 0.9);\n        var surnameKey = Math.floor(Math.random() * _baseballUtility_utils.data.surnames.length),\n            nameKey = Math.floor(Math.random() * _baseballUtility_utils.data.names.length);\n\n        this.name = _baseballUtility_utils.data.surnames[surnameKey] + ' ' + _baseballUtility_utils.data.names[nameKey];\n        var jSurname = _baseballUtility_utils.data.surnamesJ[surnameKey],\n            jGivenName = _baseballUtility_utils.data.namesJ[nameKey];\n        if (jSurname.length == 1 && jGivenName.length <= 2) jSurname += '・';\n        if (jGivenName.length == 1 && jSurname.indexOf('・') < 0) jSurname += '・';\n        this.nameJ = jSurname + jGivenName;\n        this.surname = _baseballUtility_utils.data.surnames[surnameKey];\n        this.surnameJ = _baseballUtility_utils.data.surnamesJ[surnameKey];\n        this.atBats = [];\n    },\n    atBatObjects: [],\n    getAtBats: function getAtBats() {\n        if (this.atBats.length > this.atBatObjects.length) {\n            this.atBatObjects = this.atBats.map(function (item) {\n                return new _baseballModel_models.AtBat(item);\n            });\n        }\n        return this.atBatObjects;\n    },\n    recordRBI: function recordRBI() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.RBI_INDICATOR;\n    },\n    recordInfieldHit: function recordInfieldHit() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.INFIELD_HIT_INDICATOR;\n    },\n    getBaseRunningTime: function getBaseRunningTime() {\n        return _baseballServices_services.Mathinator.baseRunningTime(this.skill.offense.speed);\n    },\n    randomizeSkills: function randomizeSkills(hero) {\n        this.hero = hero;\n        var giraffe = this;\n        var randValue = function randValue(isPitching) {\n            var value = Math.floor(Math.pow(Math.random(), 0.75) * 80 + Math.random() * 20);\n            if (hero) {\n                value += Math.floor((100 - value) * Math.max(Math.random(), isPitching ? 0 : 0.65));\n            }\n            if (isPitching) giraffe.pitching.averaging.push(value);\n            return value;\n        };\n        this.skill.offense = {\n            eye: randValue(),\n            power: randValue(),\n            speed: randValue()\n        };\n        this.skill.defense = {\n            catching: randValue(),\n            fielding: randValue(),\n            speed: randValue(),\n            throwing: randValue()\n        };\n        this.pitching.averaging = [];\n        this.pitching['4-seam'] = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        this.pitching.slider = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        if (Math.random() < 0.17) {\n            // can pitch!\n            if (Math.random() > 0.6) {\n                this.pitching['2-seam'] = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.18) {\n                this.pitching.fork = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() > 0.77) {\n                this.pitching.cutter = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.21) {\n                this.pitching.sinker = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.4) {\n                this.pitching.curve = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.9) {\n                this.pitching.change = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n        }\n        this.skill.pitching = Math.floor(this.pitching.averaging.reduce(function (prev, current) {\n            return prev + current;\n        }) / this.pitching.averaging.length + this.pitching.averaging.length * 3);\n        delete this.pitching.averaging;\n    },\n    getSurname: function getSurname() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.surnameJ : this.surname;\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    getUniformNumber: function getUniformNumber() {\n        return (0, _baseballUtility_utils.text)('#') + this.number;\n    },\n    getOrder: function getOrder() {\n        return (0, _baseballUtility_utils.text)([' 1st', ' 2nd', ' 3rd', ' 4th', ' 5th', ' 6th', '7th', ' 8th', ' 9th'][this.order]);\n    },\n    eye: {},\n    fatigue: 0,\n    name: '',\n    number: 0,\n    position: '',\n    atBats: []\n};\n\nexports.Player = Player;\n\n},{\"baseball/Model/_models\":8,\"baseball/Services/_services\":13,\"baseball/Utility/_utils\":15}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar Team = function Team(game) {\n    this.init(game);\n};\n\nTeam.prototype = {\n    constructor: Team,\n    init: function init(game) {\n        this.pickName();\n        this.lineup = [];\n        this.bench = [];\n        this.bullpen = [];\n        this.positions = {\n            pitcher: null,\n            catcher: null,\n            first: null,\n            second: null,\n            short: null,\n            third: null,\n            left: null,\n            center: null,\n            right: null\n        };\n        this.game = game;\n        for (var j = 0; j < 20; j++) {\n            this.bench.push(new _baseballModelPlayer.Player(this));\n        }\n        if (this.bench.length == 20) {\n            this.manager = new _baseballModelManager.Manager(this);\n            this.manager.makeLineup();\n        }\n    },\n    pickName: function pickName() {\n        var teamNameIndex = Math.floor(Math.random() * _baseballUtility_utils.data.teamNames.length);\n        this.name = _baseballUtility_utils.data.teamNames[teamNameIndex];\n        this.nameJ = _baseballUtility_utils.data.teamNamesJ[teamNameIndex];\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    lineup: [],\n    positions: {},\n    manager: null,\n    bench: [],\n    bullpen: [],\n    nowBatting: 0,\n    expanded: 'Player&'\n};\n\nexports.Team = Team;\n\n},{\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":15}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar Umpire = function Umpire(game) {\n    this.init(game);\n};\n\nUmpire.prototype = {\n    constructor: Umpire,\n    init: function init(game) {\n        this.game = game;\n        this.playBall();\n    },\n    count: {\n        strikes: 0,\n        balls: 0,\n        outs: 0\n    },\n    playBall: function playBall() {\n        this.game.half = 'top';\n        this.game.inning = 1;\n        this.game.batter = this.game.teams.away.lineup[0];\n        this.game.batterRunner = this.game.teams.away.lineup[0];\n        this.game.deck = this.game.teams.away.lineup[1];\n        this.game.hole = this.game.teams.away.lineup[2];\n        this.game.pitcher = this.game.teams.home.positions.pitcher;\n        var n = '一回のオモテ、' + this.game.teams.away.getName() + 'の攻撃対' + this.game.teams.home.getName() + '、ピッチャーは' + this.game.teams.home.positions.pitcher.getName() + '。',\n            e = 'Top 1, ' + this.game.teams.away.name + ' offense vs. ' + this.game.teams.home.positions.pitcher.name + ' starting for ' + this.game.teams.home.name;\n        this.game.log.note(e, n);\n        this.game.log.noteBatter(this.game.batter);\n    },\n    makeCall: function makeCall() {\n        this.says = '';\n\n        var result = this.game.swingResult;\n        var pitcher = this.game.pitcher;\n        var batter = this.game.batter;\n\n        if (this.game.swingResult.fielder) {\n            var fielder = this.game.teams[this.game.half == 'top' ? 'home' : 'away'].positions[result.fielder];\n        } else {\n            fielder = null;\n        }\n\n        this.game.batterRunner = this.game.batter;\n\n        pitcher.stats.pitching.pitches++;\n        if (result.looking) {\n            if (result.strike) {\n                this.count.strikes++;\n                pitcher.stats.pitching.strikes++;\n            } else {\n                this.count.balls++;\n            }\n        } else {\n            if (result.contact) {\n                if (result.caught) {\n                    batter.stats.batting.pa++;\n                    pitcher.stats.pitching.IP[1]++;\n                    if (result.sacrificeAdvances.length && this.count.outs < 2) {\n                        batter.stats.batting.sac++;\n                        this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SACRIFICE);\n                        this.advanceRunners(false, null, result.sacrificeAdvances);\n                    } else {\n                        batter.stats.batting.ab++;\n                        if (result.flyAngle < 15) {\n                            this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.LINEOUT);\n                        } else {\n                            this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FLYOUT);\n                        }\n                    }\n                    this.count.outs++;\n                    this.newBatter();\n                } else {\n                    if (result.foul) {\n                        this.count.strikes++;\n                        pitcher.stats.pitching.strikes++;\n                        if (this.count.strikes > 2) this.count.strikes = 2;\n                    } else {\n                        batter.stats.batting.pa++;\n                        batter.stats.batting.ab++;\n                        if (result.fieldersChoice && this.count.outs < 2) {\n                            result.bases = 0;\n                            this.count.outs++;\n                            pitcher.stats.pitching.IP[1]++;\n                            this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FIELDERS_CHOICE);\n                            this.advanceRunners(false, result.fieldersChoice);\n                            this.reachBase();\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        } else if (result.fieldersChoice) {\n                            result.bases = 0;\n                            result.thrownOut = true;\n                        }\n                        if (result.thrownOut) {\n                            this.count.outs++;\n                            pitcher.stats.pitching.IP[1]++;\n                            this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                            if (this.count.outs < 3) {\n                                this.advanceRunners(false);\n                            }\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        }\n                        if (result.hitByPitch) {\n                            batter.stats.batting.ab--;\n                        }\n                        if (result.bases) {\n                            if (!result.error) {\n                                this.game.tally[this.game.half == 'top' ? 'away' : 'home'][_baseballUtility_utils.Log.prototype.SINGLE]++;\n                                pitcher.stats.pitching.H++;\n                            } else {\n                                if (result.bases > 0) {\n                                    this.game.tally[this.game.half == 'top' ? 'home' : 'away'].E++;\n                                    fielder.stats.fielding.E++;\n                                }\n                            }\n                            var bases = result.bases;\n                            switch (bases) {\n                                case 0:\n                                    this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                                    break;\n                                case 1:\n                                    if (result.error) {\n                                        this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                    } else {\n                                        this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SINGLE);\n                                        batter.stats.batting.h++;\n                                    }\n                                    break;\n                                case 2:\n                                    this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.DOUBLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['2b']++;\n                                    break;\n                                case 3:\n                                    this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.TRIPLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['3b']++;\n                                    break;\n                                case 4:\n                                    this.game.batter.atBats.push(_baseballUtility_utils.Log.prototype.HOMERUN);\n                                    pitcher.stats.pitching.HR++;\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting.hr++;\n                                    break;\n                            }\n                            if (bases > 0 && bases < 4 && !result.error) {\n                                if (['left', 'right', 'center'].indexOf(result.fielder) == -1) {\n                                    batter.recordInfieldHit();\n                                }\n                            }\n                            if (bases >= 1) {\n                                this.advanceRunners();\n                                this.reachBase();\n                                bases -= 1;\n                            }\n                            while (bases > 0) {\n                                bases -= 1;\n                                this.advanceRunners();\n                            }\n                            this.newBatter();\n                        }\n                    }\n                }\n            } else {\n                pitcher.stats.pitching.strikes++;\n                this.count.strikes++;\n            }\n        }\n\n        this.says = this.count.balls + ' and ' + this.count.strikes;\n\n        result.outs = this.count.outs;\n\n        if (this.count.strikes > 2) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.ab++;\n            batter.stats.batting.so++;\n            pitcher.stats.pitching.K++;\n            this.count.outs++;\n            pitcher.stats.pitching.IP[1]++;\n            this.count.balls = this.count.strikes = 0;\n            this.says = 'Strike three. Batter out.';\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.STRIKEOUT);\n            this.newBatter();\n        }\n        if (this.count.balls > 3) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.bb++;\n            pitcher.stats.pitching.BB++;\n            this.says = 'Ball four.';\n            this.count.balls = this.count.strikes = 0;\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.WALK);\n            this.advanceRunners(true).reachBase().newBatter();\n        }\n        if (this.count.outs > 2) {\n            this.says = 'Three outs, change.';\n            this.count.outs = this.count.balls = this.count.strikes = 0;\n            pitcher.stats.pitching.IP[0]++;\n            pitcher.stats.pitching.IP[1] = 0;\n            this.changeSides();\n        }\n    },\n    reachBase: function reachBase() {\n        this.game.field.first = this.game.batter;\n        this.game.field.first.fatigue += 2;\n        return this;\n    },\n    advanceRunners: function advanceRunners(isWalk, fieldersChoice, sacrificeAdvances) {\n        isWalk = !!isWalk;\n        var first = this.game.field.first,\n            second = this.game.field.second,\n            third = this.game.field.third,\n            game = this.game,\n            swing = this.game.swingResult;\n\n        if (isWalk) {\n            if (first) {\n                if (second) {\n                    if (third) {\n                        //bases loaded\n                        game.batter.recordRBI();\n                        game.batter.stats.batting.rbi++;\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        third.stats.batting.r++;\n                        game.pitcher.stats.pitching.ER++;\n                        game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                        game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                        game.field.third = second;\n                        game.field.second = first;\n                        first = null;\n                    } else {\n                        // 1st and second\n                        game.field.third = second;\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                } else {\n                    if (third) {\n                        // first and third\n                        game.field.second = first;\n                        game.field.first = null;\n                    } else {\n                        // first only\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                }\n            } else {\n                // no one on first\n            }\n        } else {\n                if (fieldersChoice) {\n                    game.field[fieldersChoice] = null;\n                    first = this.game.field.first;\n                    second = this.game.field.second;\n                    third = this.game.field.third;\n                }\n                var canAdvance = function canAdvance() {\n                    return true;\n                };\n                if (sacrificeAdvances) {\n                    canAdvance = function (position) {\n                        switch (position) {\n                            case 'first':\n                                return sacrificeAdvances.indexOf('first') > -1 && (canAdvance('second') || !second);\n                            case 'second':\n                                return sacrificeAdvances.indexOf('second') > -1 && (canAdvance('third') || !third);\n                            case 'third':\n                                return sacrificeAdvances.indexOf('third') > -1;\n                        }\n                    };\n                }\n                if (third instanceof _baseballModelPlayer.Player && canAdvance('third')) {\n                    // run scored\n                    game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                    game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                    if (game.batter != third) {\n                        game.batter.recordRBI();\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    }\n                    game.batter.stats.batting.rbi++;\n                    third.stats.batting.r++;\n                    game.pitcher.stats.pitching.ER++;\n                }\n                if (second && canAdvance('second')) {\n                    game.field.third = second;\n                } else {\n                    game.field.third = null;\n                }\n                if (first && canAdvance('first')) {\n                    game.field.second = first;\n                } else {\n                    game.field.second = null;\n                }\n                game.field.first = null;\n            }\n        return this;\n    },\n    newBatter: function newBatter() {\n        this.game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.count.balls = this.count.strikes = 0;\n        this.game.log.notePlateAppearanceResult(this.game);\n        var team = this.game.half == 'bottom' ? this.game.teams.home : this.game.teams.away;\n        this.game.batter = team.lineup[(team.nowBatting + 1) % 9];\n        this.game.deck = team.lineup[(team.nowBatting + 2) % 9];\n        this.game.hole = team.lineup[(team.nowBatting + 3) % 9];\n        team.nowBatting = (team.nowBatting + 1) % 9;\n        if (this.count.outs < 3) {\n            this.game.log.noteBatter(this.game.batter);\n        }\n    },\n    changeSides: function changeSides() {\n        this.game.swingResult = {};\n        this.game.swingResult.looking = true; // hide bat\n        this.game.pitchInFlight.x = null; // hide ball\n        this.game.pitchInFlight.y = null; // hide ball\n        this.game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        var offense, defense;\n        this.game.field.first = null;\n        this.game.field.second = null;\n        this.game.field.third = null;\n        if (this.game.half == 'top') {\n            if (this.game.inning == 9 && this.game.tally.home.R > this.game.tally.away.R) {\n                return this.game.end();\n            }\n            this.game.half = 'bottom';\n        } else {\n            if (this.game.inning + 1 > 9) {\n                return this.game.end();\n            }\n            this.game.inning++;\n            this.game.half = 'top';\n        }\n        offense = this.game.half == 'top' ? 'away' : 'home';\n        defense = this.game.half == 'top' ? 'home' : 'away';\n        var n = this.game.inning + '回の' + (this.game.half == 'top' ? 'オモテ' : 'ウラ') + '、' + this.game.teams[this.game.half == 'top' ? 'away' : 'home'].getName() + 'の攻撃。',\n            e = (this.game.half == 'top' ? 'Top' : 'Bottom') + ' ' + this.game.inning;\n        this.game.log.note(e, n);\n        var team = this.game.teams[offense];\n        this.game.batter = team.lineup[team.nowBatting];\n        this.game.batterRunner = this.game.batter;\n        this.game.deck = team.lineup[(team.nowBatting + 1) % 9];\n        this.game.hole = team.lineup[(team.nowBatting + 2) % 9];\n\n        this.game.pitcher = this.game.teams[defense].positions.pitcher;\n        this.game.log.noteBatter(this.game.batter);\n        this.game.autoPitchSelect();\n    },\n    says: 'Play ball!',\n    game: null\n};\n\nexports.Umpire = Umpire;\n\n},{\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":15}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nexports.AtBat = _baseballModelAtBat.AtBat;\nexports.Field = _baseballModelField.Field;\nexports.Game = _baseballModelGame.Game;\nexports.Manager = _baseballModelManager.Manager;\nexports.Player = _baseballModelPlayer.Player;\nexports.Team = _baseballModelTeam.Team;\nexports.Umpire = _baseballModelUmpire.Umpire;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/services/_services');\n\nvar Animator = function Animator() {\n    this.init();\n};\nAnimator.TweenMax = {};\nAnimator.prototype = {\n    identifier: 'Animator',\n    constructor: Animator,\n    console: false,\n    TweenMax: {},\n    init: function init() {},\n    loadTweenMax: function loadTweenMax() {\n        if (this.console || typeof window !== 'object') {\n            Animator.TweenMax = {\n                'set': function set() {},\n                'to': function to() {},\n                'from': function from() {},\n                killAll: function killAll() {}\n            };\n        } else {\n            Animator.TweenMax = window.TweenMax;\n        }\n        return Animator.TweenMax;\n    },\n    TIME_FROM_SET: 2300, //ms\n    TIME_FROM_WINDUP: 3600, //ms\n    HOLD_UP_ALLOWANCE: 0.5, // seconds\n    pitchTarget: null,\n    pitchBreak: null,\n    /**\n     * this is called from the scope context\n     * @param callback\n     */\n    updateFlightPath: function updateFlightPath(callback) {\n        if (Animator.console) return;\n        var TweenMax = Animator.loadTweenMax();\n        var $scope = this,\n            game = $scope.y,\n            top = 200 - game.pitchTarget.y,\n            left = game.pitchTarget.x,\n            breakTop = 200 - game.pitchInFlight.y,\n            breakLeft = game.pitchInFlight.x,\n            $baseballs = $('.baseball'),\n            flightSpeed = 1.3 - 0.6 * (game.pitchInFlight.velocity + 300) / 400,\n            originTop = 50,\n            originLeft = 110 + (game.pitcher.throws == 'left' ? 20 : -20);\n        var pitch = this.pitchTarget = $('.main-area .target .baseball.pitch'),\n            henka = this.pitchBreak = $('.main-area .target .baseball.break'),\n            quarter = flightSpeed / 4;\n\n        var pitchTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter);\n\n        var transitions = [pitchTransition(0, 0), pitchTransition(10, 0), pitchTransition(30, 1), pitchTransition(50, 2), pitchTransition(100, 3), pitchTransition(100, 3, breakTop, breakLeft)];\n\n        //var horizontalBreak = (60 - Math.abs(game.pitchTarget.x - game.pitchInFlight.x))/10;\n        //$('.baseball').addClass('spin');\n        //$('.baseball').css('animation', 'spin '+horizontalBreak+'s 5 0s linear');\n\n        TweenMax.set([pitch, henka], transitions[0]);\n        TweenMax.to([pitch, henka], quarter, transitions[1]);\n        TweenMax.to([pitch, henka], quarter, transitions[2]);\n        TweenMax.to([pitch, henka], quarter, transitions[3]);\n        TweenMax.to(pitch, quarter, transitions[4]);\n        TweenMax.to(henka, quarter, transitions[5]);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback == 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        if (!game.pitchInFlight.x) {\n            $baseballs.addClass('hide');\n        } else {\n            if (game.humanBatting() && Math.random() * 180 > game.batter.skill.offense.eye) {\n                $('.baseball.break').addClass('hide');\n            } else {\n                $('.baseball.break').removeClass('hide');\n            }\n            $('.baseball.pitch').removeClass('hide');\n        }\n\n        if ($scope.y.humanBatting() && !$scope.y.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    animateFieldingTrajectory: function animateFieldingTrajectory(game) {\n        this.init();\n        if (Animator.console) return game.swingResult;\n        var TweenMax = Animator.loadTweenMax();\n        var ball = $('.splay-indicator-ball');\n        TweenMax.killAll();\n        var result = game.swingResult;\n\n        var linearApproximateDragScalar = {\n            distance: 1,\n            apexHeight: 0.57,\n            airTime: 0.96\n        };\n\n        var angle = result.flyAngle,\n            distance = Math.abs(result.travelDistance),\n            scalar = result.travelDistance < 0 ? -1 : 1;\n\n        _baseballServices_services.Mathinator.memory.bounding = angle < 0;\n        angle = 1 + Math.abs(angle);\n        if (angle > 90) angle = 180 - angle;\n\n        var velocity = linearApproximateDragScalar.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * angle / 180));\n        var velocityVerticalComponent = Math.sin(_baseballServices_services.Mathinator.RADIAN * angle) * velocity;\n        var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * linearApproximateDragScalar.apexHeight;\n        var airTime = Math.sqrt(2 * apexHeight / 9.81) * linearApproximateDragScalar.airTime;\n\n        //log('angle', angle, 'vel', velocity, 'apex', apexHeight, 'air', airTime, 'dist', result.travelDistance);\n        var quarter = airTime / 4;\n        var mathinator = new _baseballServices_services.Mathinator();\n        var transitions = [mathinator.transitionalTrajectory(0, quarter, 0, apexHeight, scalar * distance, result.splay), mathinator.transitionalTrajectory(25, quarter, 0), mathinator.transitionalTrajectory(50, quarter, 1), mathinator.transitionalTrajectory(75, quarter, 2), mathinator.transitionalTrajectory(100, quarter, 3)];\n        TweenMax.set(ball, transitions[0]);\n        TweenMax.to(ball, quarter, transitions[1]);\n        TweenMax.to(ball, quarter, transitions[2]);\n        TweenMax.to(ball, quarter, transitions[3]);\n        TweenMax.to(ball, quarter, transitions[4]);\n\n        return game.swingResult;\n    }\n};\n\nfor (var fn in Animator.prototype) {\n    if (Animator.prototype.hasOwnProperty(fn)) {\n        Animator[fn] = Animator.prototype[fn];\n    }\n}\n\nexports.Animator = Animator;\n\n},{\"baseball/services/_services\":21}],10:[function(require,module,exports){\n/**\n * For Probability!\n * @constructor\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Distribution = function Distribution() {};\n\nDistribution.prototype = {\n    identifier: 'Distribution',\n    constructor: Distribution,\n    /**\n     * @param scale {number}\n     * @returns {number}\n     */\n    chance: function chance(scale) {\n        if (!scale) scale = 1;\n        return Math.random() * scale;\n    },\n    /**\n     * @param fielder {Player}\n     * @returns {boolean}\n     */\n    error: function error(fielder) {\n        return (100 - fielder.skill.defense.fielding) * 0.40 + 4 > Math.random() * 100;\n    },\n    /**\n     * @param power\n     * @param flyAngle\n     * @returns {number}\n     */\n    landingDistance: function landingDistance(power, flyAngle) {\n        return (10 + power / 2 + Math.random() * 310 + power / 100 * 30) * (1 - Math.abs(flyAngle - 30) / 60);\n    },\n    /**\n     * @returns {{x: number, y: number}}\n     */\n    pitchLocation: function pitchLocation() {\n        var x, y;\n        if (Math.random() < 0.5) {\n            x = 50 + Math.floor(Math.random() * 70) - Math.floor(Math.random() * 15);\n        } else {\n            x = 150 + Math.floor(Math.random() * 15) - Math.floor(Math.random() * 70);\n        }\n        y = 30 + (170 - Math.floor(Math.sqrt(Math.random() * 28900)));\n        return { x: x, y: y };\n    },\n    /**\n     * swing centering basis\n     * @returns {number}\n     */\n    centralizedNumber: function centralizedNumber() {\n        return 100 + Math.floor(Math.random() * 15) - Math.floor(Math.random() * 15);\n    },\n    /**\n     * @param eye {Player.skill.offense.eye}\n     * @param x\n     * @param y\n     * @param umpire {Umpire}\n     */\n    swingLikelihood: function swingLikelihood(eye, x, y, umpire) {\n        var swingLikelihood = (200 - Math.abs(100 - x) - Math.abs(100 - y)) / 2;\n        if (x < 60 || x > 140 || y < 50 || y > 150) {\n            // ball\n            swingLikelihood = Math.min(swingLikelihood, 100 - eye) - 15 * umpire.count.balls;\n        } else {\n            swingLikelihood = Math.max(45, (2 * swingLikelihood + eye) / 3);\n        }\n        return swingLikelihood - 35 + 10 * (umpire.count.balls + 2 * umpire.count.strikes);\n    },\n    /**\n     * @param target {number} 0-200\n     * @param control {number} 0-100\n     * @returns {number}\n     */\n    pitchControl: function pitchControl(target, control) {\n        return Math.min(199.9, Math.max(0.1, target + (50 - Math.random() * 100) / (1 + control / 100)));\n    },\n    /**\n     * @param pitch {Game.pitchInFlight}\n     * @param pitcher {Player}\n     * @param x {number}\n     * @param y {number}\n     * @returns {object|{x: number, y: number}}\n     */\n    breakEffect: function breakEffect(pitch, pitcher, x, y) {\n        var effect = {};\n        effect.x = Math.floor(x + pitch.breakDirection[0] * (0.8 + Math.random() * pitcher.pitching[pitch.name]['break'] / 250));\n        effect.y = Math.floor(y + pitch.breakDirection[1] * (0.8 + Math.random() * pitcher.pitching[pitch.name]['break'] / 250 / (0.5 + y / 200)));\n        return effect;\n    },\n    /**\n     * Determine the swing target along an axis\n     * @param target {number} 0-200\n     * @param actual {number} 0-200\n     * @param eye {number} 0-100\n     * @returns {number} 0-200\n     */\n    cpuSwing: function cpuSwing(target, actual, eye) {\n        eye = Math.max(eye, 100);\n        return 100 + (target - 100) * (0.5 + Math.random() * eye / 200) - actual;\n    },\n    /**\n     * Determine the swing scalar\n     * @param eye {number} 0-100\n     * @returns {number}\n     */\n    swing: function swing(eye) {\n        return 100 / (eye + 25 + Math.random() * 50);\n    }\n};\n\nfor (var fn in Distribution.prototype) {\n    if (Distribution.prototype.hasOwnProperty(fn)) {\n        Distribution[fn] = Distribution.prototype[fn];\n    }\n}\n\nexports.Distribution = Distribution;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Iterator = function Iterator() {};\n\nIterator.prototype = {\n    identifier: 'Iterator',\n    constructor: Iterator,\n    each: function each(collection, map) {\n        var keys, i;\n        if (collection instanceof Array) {\n            for (i = 0; i < collection.length; i++) {\n                map(i, collection[i]);\n            }\n        } else {\n            keys = Object.keys(collection);\n            for (i = 0; i < keys.length; i++) {\n                map(keys[i], collection[keys[i]]);\n            }\n        }\n    }\n};\n\nfor (var fn in Iterator.prototype) {\n    if (Iterator.prototype.hasOwnProperty(fn)) {\n        Iterator[fn] = Iterator.prototype[fn];\n    }\n}\n\nexports.Iterator = Iterator;\n\n},{}],12:[function(require,module,exports){\n/**\n * For Math!\n * @constructor\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Mathinator = function Mathinator() {};\n\n/**\n * @param n\n * @returns {number}\n */\nMathinator.square = function (n) {\n    return n * n;\n};\n\nMathinator.prototype = {\n    identifier: 'Mathinator',\n    constructor: Mathinator,\n    /**\n     * CONST\n     */\n    RADIAN: Math.PI / 180,\n    SPLAY_INDICATOR_LEFT: -4,\n    /**\n     * @param offset {{x: number, y: number}}\n     * @param angle {number}\n     * @returns {{x: number, y: number}}\n     */\n    getAngularOffset: function getAngularOffset(offset, angle) {\n        var xScalar = offset.x < 0 ? -1 : 1,\n            yScalar = offset.y < 0 ? -1 : 1;\n        var originalAngle = Math.atan(offset.x / offset.y) / this.RADIAN;\n        var distance = Math.sqrt(offset.x * offset.x + offset.y * offset.y),\n            angledY = yScalar * Math.cos((angle - originalAngle) * this.RADIAN) * distance,\n            angledX = xScalar * Math.sqrt(distance * distance - angledY * angledY);\n        return {\n            x: angledX,\n            y: angledY\n        };\n    },\n    /**\n     * @param a {Array<Number>}\n     * @param b {Array<Number>}\n     * @returns {number}\n     */\n    getPolarDistance: function getPolarDistance(a, b) {\n        var radians = this.RADIAN;\n        return Math.sqrt(a[1] * a[1] + b[1] * b[1] - 2 * a[1] * b[1] * Math.cos(a[0] * radians - b[0] * radians));\n    },\n    /**\n     * @param origin\n     * @param target\n     * @returns {number}\n     * 0 is flat (left-right), positive is clockwise.\n     * We use 125 instead of 180 to account for natural hand-height adjustments\n     * of various swing heights.\n     */\n    battingAngle: function battingAngle(origin, target) {\n        return Math.atan((origin.y - target.y) / (target.x - origin.x)) / Math.PI * 125;\n    },\n    memory: {},\n    /**\n     * @param percent {number} 0-100\n     * @param quarter {number} seconds\n     * @param step {number} 0 and up\n     * @param [givenApexHeight] feet\n     * @param [givenDistance] in feet\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\n     * @returns {{bottom: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\n     */\n    transitionalTrajectory: function transitionalTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle) {\n        if (givenApexHeight) Mathinator.prototype.memory.apexHeight = givenApexHeight;\n        if (givenDistance) Mathinator.prototype.memory.distance = givenDistance;\n        if (givenSplayAngle) Mathinator.prototype.memory.splay = givenSplayAngle;\n        var apexHeight = Mathinator.prototype.memory.apexHeight,\n            distance = Mathinator.prototype.memory.distance,\n            splay = Mathinator.prototype.memory.splay;\n        var bottom, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            quarter *= 4;\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        bottom = Math.cos(splay * radian) * percent / 100 * distance * 95 / 300;\n        left = Math.sin(splay * radian) * percent / 100 * distance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        var apexRatio = Math.sqrt((50 - Math.abs(percent - 50)) / 100) * (1 / 0.7071);\n        if (bounding) {\n            padding = 1;\n            borderWidth = 1;\n        } else {\n            padding = apexRatio * apexHeight / 90 * 15;\n            borderWidth = 2 + apexRatio * 2;\n        }\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n        padding = Math.max(Math.min(padding, 12), 0);\n        return {\n            bottom: bottom,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\n     * @param swingResult\n     * @returns {Game.swingResult}\n     */\n    translateSwingResultToStylePosition: function translateSwingResultToStylePosition(swingResult) {\n        // CF HR bottom: 95px, centerline: left: 190px;\n        var bottom, left;\n\n        bottom = Math.cos(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300;\n        left = Math.sin(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n\n        swingResult.bottom = bottom + 'px';\n        swingResult.left = left + 'px';\n        return swingResult;\n    },\n    /**\n     * @param left {number} 0-200\n     * @param top {number} 0-200\n     * @param originLeft {number} 0-200\n     * @param originTop {number} 0-200\n     * @param quarter {number} seconds\n     * @returns {Function}\n     */\n    pitchTransition: function pitchTransition(top, left, originTop, originLeft, quarter) {\n        /**\n         * @param percent {number} 0-100\n         * @param step {number} 0 and up\n         * @param [breakTop] {number} 0-200 override\n         * @param [breakLeft] {number} 0-200 override\n         * @returns {{top: number, left: number, padding: string, borderWidth: string, transform: string, delay: number, ease: *}}\n         */\n        return function (percent, step, breakTop, breakLeft) {\n            var _top, _left;\n            _top = breakTop || top;\n            _left = breakLeft || left;\n            _top = originTop + Mathinator.square(percent / 100) * (_top - originTop);\n            if (step == 1) {\n                _top -= 2;\n            }\n            if (step == 2) {\n                _top -= 1;\n            }\n            _left = originLeft + Mathinator.square(percent / 100) * (_left - originLeft);\n            var padding = Math.max(Mathinator.square(percent / 100) * 12, 1),\n                borderWidth = Math.max(Mathinator.square(percent / 100) * 4, 1);\n            return {\n                top: _top,\n                left: _left,\n                padding: padding + 'px',\n                borderWidth: borderWidth + 'px',\n                transform: 'translateZ(0)',\n                delay: quarter * step,\n                ease: Linear.easeNone\n            };\n        };\n    },\n    /**\n     * @param distance {number} feet\n     * @param throwing {number} 0-1\n     * @param fielding {number} 0-1\n     * @param intercept {number} approx. -140 to 140\n     * @returns {number} seconds\n     */\n    fielderReturnDelay: function fielderReturnDelay(distance, throwing, fielding, intercept) {\n        return distance / 90 // bip distance\n         + distance / 90 / (0.5 + throwing / 2) // throwing distance\n         + 1 - (0.2 + fielding * 0.8) + 9 * (distance / 310) * Math.min(intercept - 120, 0) / -240; // gather time\n    },\n    /**\n     * @param speed {number} 0-100\n     * @returns {number} seconds\n     */\n    baseRunningTime: function baseRunningTime(speed) {\n        return 6.0 - speed / 100 * 2.2;\n    }\n};\n\nfor (var fn in Mathinator.prototype) {\n    if (Mathinator.prototype.hasOwnProperty(fn)) {\n        Mathinator[fn] = Mathinator.prototype[fn];\n    }\n}\n\nexports.Mathinator = Mathinator;\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":9,\"baseball/Services/Distribution\":10,\"baseball/Services/Iterator\":11,\"baseball/Services/Mathinator\":12}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nvar Log = function Log() {\n    this.init();\n};\n\nLog.prototype = {\n    game: 'instance of Game',\n    init: function init() {\n        this.pitchRecord = {\n            e: [],\n            n: []\n        };\n    },\n    SINGLE: 'H',\n    DOUBLE: '2B',\n    TRIPLE: '3B',\n    HOMERUN: 'HR',\n    WALK: 'BB',\n    GROUNDOUT: 'GO',\n    FLYOUT: 'FO',\n    LINEOUT: 'LO',\n    RUN: 'R',\n    STRIKEOUT: 'SO',\n    SACRIFICE: 'SAC',\n    REACHED_ON_ERROR: 'ROE',\n    FIELDERS_CHOICE: 'FC',\n    note: function note(_note, noteJ) {\n        this.record.e.unshift(_note);\n        var rec = this.record.e.slice(0, 6);\n        this.shortRecord.e = rec;\n        this.stabilized.shortRecord.e = rec.concat(['', '', '', '', '', '']).slice(0, 6);\n\n        this.record.n.unshift(noteJ);\n        var rec2 = this.record.n.slice(0, 6);\n        this.shortRecord.n = rec2;\n        this.stabilized.shortRecord.n = rec2.concat(['', '', '', '', '', '']).slice(0, 6);\n    },\n    getBatter: function getBatter(batter) {\n        var order = batter.team.nowBatting;\n        order = ({\n            0: (0, _baseballUtilityText.text)(' 1st'),\n            1: (0, _baseballUtilityText.text)(' 2nd'),\n            2: (0, _baseballUtilityText.text)(' 3rd'),\n            3: (0, _baseballUtilityText.text)(' 4th'),\n            4: (0, _baseballUtilityText.text)(' 5th'),\n            5: (0, _baseballUtilityText.text)(' 6th'),\n            6: (0, _baseballUtilityText.text)(' 7th'),\n            7: (0, _baseballUtilityText.text)(' 8th'),\n            8: (0, _baseballUtilityText.text)(' 9th')\n        })[order];\n        var positions = this.longFormFielder();\n        return (0, _baseballUtilityText.text)('Now batting') + order + _baseballUtilityText.text.comma() + positions[batter.position] + _baseballUtilityText.text.comma() + batter.getUniformNumber() + _baseballUtilityText.text.comma() + batter.getName();\n    },\n    noteBatter: function noteBatter(batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getBatter(batter);\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getBatter(batter);\n        _baseballUtilityText.text.mode = m;\n        this.note(record, recordJ);\n    },\n    getPitchLocationDescription: function getPitchLocationDescription(pitchInFlight, batterIsLefty) {\n        var x = pitchInFlight.x,\n            y = pitchInFlight.y,\n            say = '';\n        var noComma = false,\n            noComma2 = false;\n        var ball = false;\n        if (!batterIsLefty) x = 200 - x;\n        if (x < 50) {\n            say += (0, _baseballUtilityText.text)('way outside');\n            ball = true;\n        } else if (x < 70) {\n            say += (0, _baseballUtilityText.text)('outside');\n        } else if (x < 100) {\n            say += '';\n            noComma = true;\n        } else if (x < 130) {\n            say += '';\n            noComma = true;\n        } else if (x < 150) {\n            say += (0, _baseballUtilityText.text)('inside');\n        } else {\n            say += (0, _baseballUtilityText.text)('way inside');\n            ball = true;\n        }\n        if (say != '') say += _baseballUtilityText.text.comma();\n        if (y < 35) {\n            say += (0, _baseballUtilityText.text)('way low');\n            ball = true;\n        } else if (y < 65) {\n            say += (0, _baseballUtilityText.text)('low');\n        } else if (y < 135) {\n            say += '';\n            noComma2 = true;\n        } else if (y < 165) {\n            say += (0, _baseballUtilityText.text)('high');\n        } else {\n            say += (0, _baseballUtilityText.text)('way high');\n            ball = true;\n        }\n        if (noComma || noComma2) {\n            say = say.split(_baseballUtilityText.text.comma()).join('');\n            if (noComma && noComma2) {\n                say = (0, _baseballUtilityText.text)('down the middle');\n            }\n        }\n        // say = (ball ? 'Ball, ' : 'Strike, ') + say;\n        say = _baseballUtilityText.text.namePitch(pitchInFlight) + _baseballUtilityText.text.comma() + say + _baseballUtilityText.text.stop();\n        return say;\n    },\n    notePitch: function notePitch(pitchInFlight, batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.pop();\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.pop();\n        _baseballUtilityText.text.mode = m;\n    },\n    getSwing: function getSwing(swingResult) {\n        var result = '';\n        if (swingResult.looking) {\n            if (swingResult.strike) {\n                result += (0, _baseballUtilityText.text)('Strike.');\n            } else {\n                result += (0, _baseballUtilityText.text)('Ball.');\n            }\n        } else {\n            if (swingResult.contact) {\n                if (swingResult.foul) {\n                    result += (0, _baseballUtilityText.text)('Fouled off.');\n                } else {\n                    if (swingResult.caught) {\n                        result += (0, _baseballUtilityText.text)('In play.');\n                    } else {\n                        if (swingResult.thrownOut) {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        } else {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        }\n                    }\n                }\n            } else {\n                result += (0, _baseballUtilityText.text)('Swinging strike.');\n            }\n        }\n        return result;\n    },\n    noteSwing: function noteSwing(swingResult) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getSwing(swingResult);\n        this.pitchRecord.e[0] += record;\n        this.stabilized.pitchRecord.e[0] += record;\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getSwing(swingResult);\n        this.pitchRecord.n[0] += recordJ;\n        this.stabilized.pitchRecord.n[0] += recordJ;\n        _baseballUtilityText.text.mode = m;\n    },\n    getPlateAppearanceResult: function getPlateAppearanceResult(game) {\n        var r = game.swingResult;\n        var record = '';\n        var batter = game.batter.getName();\n        var out = [];\n        if (r.looking) {\n            if (r.strike) {\n                record = batter + (0, _baseballUtilityText.text)(' struck out looking.');\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' walked.');\n            }\n        } else {\n            if (r.contact) {\n                var fielder = r.fielder,\n                    bases = r.bases,\n                    outBy;\n                if (r.caught) {\n                    if (r.flyAngle < 15) {\n                        outBy = 'line';\n                    } else {\n                        if (['left', 'center', 'right'].indexOf(r.fielder) < 0) {\n                            outBy = 'pop';\n                        } else {\n                            outBy = 'fly';\n                        }\n                    }\n                } else {\n                    if (r.foul) {\n                        // not possible to end PA on foul?\n                    } else {\n                            if (r.error) {\n                                bases = 1;\n                                outBy = 'error';\n                            } else {\n                                if (r.thrownOut) {\n                                    if (Math.random() < 0.5) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'thrown';\n                                    }\n                                } else {\n                                    switch (r.bases) {\n                                        case 1:\n                                        case 2:\n                                        case 3:\n                                            bases = r.bases;\n                                            break;\n                                        case 4:\n                                            bases = 4;\n                                            if (r.splay < -15) {\n                                                fielder = 'left';\n                                            } else if (r.splay < 15) {\n                                                fielder = 'center';\n                                            } else {\n                                                fielder = 'right';\n                                            }\n                                            break;\n                                    }\n                                }\n                                if (r.fieldersChoice) {\n                                    out.push(r.fieldersChoice);\n                                    if (r.outs == 3) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'fieldersChoice';\n                                    }\n                                }\n                            }\n                        }\n                }\n                record = _baseballUtilityText.text.contactResult(batter, fielder, bases, outBy, r.outs === 3 ? [] : r.sacrificeAdvances, out);\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' struck out swinging.');\n            }\n        }\n        return record;\n    },\n    notePlateAppearanceResult: function notePlateAppearanceResult(game) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getPlateAppearanceResult(game);\n        this.record.e.unshift(record);\n        this.pitchRecord.e = [(0, _baseballUtilityText.text)('Previous: ') + record];\n        this.stabilized.pitchRecord.e = [(0, _baseballUtilityText.text)('Previous: ') + record, '', '', '', '', ''];\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getPlateAppearanceResult(game);\n        this.record.n.unshift(recordJ);\n        this.pitchRecord.n = [(0, _baseballUtilityText.text)('Previous: ') + recordJ];\n        this.stabilized.pitchRecord.n = [(0, _baseballUtilityText.text)('Previous: ') + recordJ, '', '', '', '', ''];\n        _baseballUtilityText.text.mode = m;\n    },\n    pointer: 0,\n    stabilized: {\n        pitchRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        },\n        shortRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        }\n    },\n    pitchRecord: {\n        e: [],\n        n: []\n    },\n    shortRecord: {\n        e: [],\n        n: []\n    },\n    record: {\n        e: [],\n        n: []\n    },\n    longFormFielder: function longFormFielder() {\n        return {\n            first: (0, _baseballUtilityText.text)('first baseman'),\n            second: (0, _baseballUtilityText.text)('second baseman'),\n            third: (0, _baseballUtilityText.text)('third baseman'),\n            short: (0, _baseballUtilityText.text)('shortstop'),\n            pitcher: (0, _baseballUtilityText.text)('pitcher'),\n            catcher: (0, _baseballUtilityText.text)('catcher'),\n            left: (0, _baseballUtilityText.text)('left fielder'),\n            center: (0, _baseballUtilityText.text)('center fielder'),\n            right: (0, _baseballUtilityText.text)('right fielder')\n        };\n    }\n};\n\nexports.Log = Log;\n\n},{\"baseball/Utility/text\":18}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballUtilityData = require('baseball/Utility/data');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nexports.data = _baseballUtilityData.data;\nexports.helper = _baseballUtilityHelper.helper;\nexports.Log = _baseballUtilityLog.Log;\nexports.text = _baseballUtilityText.text;\n\n},{\"baseball/Utility/Log\":14,\"baseball/Utility/data\":16,\"baseball/Utility/helper\":17,\"baseball/Utility/text\":18}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar data = {\n    surnames: ['Sato', 'Suzuki', 'Takahashi', 'Tanaka', 'Watanabe', 'Ito', 'Nakamura', 'Kobayashi', 'Yamamoto', 'Kato', 'Yoshida', 'Yamada', 'Sasaki', 'Yamaguchi', 'Matsumoto', 'Inoue', 'Kimura', 'Shimizu', 'Hayashi', 'Saito', 'Saito', 'Yamazaki', 'Nakajima', 'Mori', 'Abe', 'Ikeda', 'Hashimoto', 'Ishikawa', 'Yamashita', 'Ogawa', 'Ishii', 'Hasegawa', 'Goto', 'Okada', 'Kondo', 'Maeda', 'Fujita', 'Endo', 'Aoki', 'Sakamoto', 'Murakami', 'Ota', 'Kaneko', 'Fujii', 'Fukuda', 'Nishimura', 'Miura', 'Takeuchi', 'Nakagawa', 'Okamoto', 'Matsuda', 'Harada', 'Nakano'],\n    surnamesJ: ['佐藤', '鈴木', '高橋', '田中', '渡辺', '伊藤', '中村', '小林', '山本', '加藤', '吉田', '山田', '佐々木', '山口', '松本', '井上', '木村', '清水', '林', '斉藤', '斎藤', '山崎', '中島', '森', '阿部', '池田', '橋本', '石川', '山下', '小川', '石井', '長谷川', '後藤', '岡田', '近藤', '前田', '藤田', '遠藤', '青木', '坂本', '村上', '太田', '金子', '藤井', '福田', '西村', '三浦', '竹内', '中川', '岡本', '松田', '原田', '中野'],\n\n    namesJ: ['匠', 'ヒカル', 'ゆうき', '翔太', '冬馬', '漣', '港区', 'ルイ', '樹', '賢治', '五木', '春', '光一', '宗介', 'こうすけ', '雄太', '大樹', '瑛太',\n    // newer set\n    '宏', '亨', '道夫', '聡', '昭', '茂雄', '勝', '純一', '和夫', '勲', '省三', '隆', '達夫', '正一', '輝夫', '俊夫', '史郎', '勇', '義弘', '良雄', '登', '義明', '正義', '秀夫', '肇', '月', '克己', '正男', '光男', '久', '耕三', '清', '次郎', '正博', '明子', '武', '勉', '晴夫', '裕二', '稔', '障子', '和子', '敦', '茂', '信夫', '恵一', '忠', '高尾', '薫', 'ケン', '健治', '哲夫', '啓二', '光一', '真一', '貞夫', '靖', '武', '雄', '文雄', '久雄', '一朗', '健一', '正明', '五郎', '誠', '昭夫', '誠司', '洋一', '康夫', '誠一', '正美', '則夫', '幸雄', '忠雄', '仁', 'シンジ', '豊', '邦雄', '修', '雅之', '三郎', '英治', '浩二', '栄一', '恒夫', '義郎', '進', '博之', '巌'],\n    names: ['Takumi', 'Hikaru', 'Yuuki', 'Shouta', 'Touma', 'Ren', 'Minato', 'Rui', 'Tatsuki', 'Kenji', 'Itsuki', 'Haru', 'Kouichi', 'Sousuke', 'Kousuke', 'Yuuta', 'Daiki', 'Eita',\n    // newer set\n    'Hiroshi', 'Toru', 'Michio', 'Satoshi', 'Akira', 'Shigeo', 'Masaru', 'Junichi', 'Kazuo', 'Isao', 'Shozo', 'Takashi', 'Tatsuo', 'Shoichi', 'Teruo', 'Toshio', 'Shiro', 'Isamu', 'Yoshihiro', 'Yoshio', 'Noboru', 'Yoshiaki', 'Tadayoshi', 'Hideo', 'Hajime', 'Akari', 'Katsumi', 'Masao', 'Mitsuo', 'Hisashi', 'Kozo', 'Kiyoshi', 'Jiro', 'Masahiro', 'Akiko', 'Takeshi', 'Tsutomu', 'Haruo', 'Yuji', 'Minoru', 'Shoji', 'Kazuko', 'Atsushi', 'Shigeru', 'Shinobu', 'Keiichi', 'Tadashi', 'Takao', 'Kaoru', 'Ken', 'Kenji', 'Tetsuo', 'Keiji', 'Koichi', 'Shinichi', 'Sadao', 'Yasushi', 'Takeshi', 'Yu', 'Fumio', 'Hisao', 'Ichiro', 'Kenichi', 'Masaaki', 'Goro', 'Makoto', 'Akio', 'Seiji', 'Yoichi', 'Yasuo', 'Seiichi', 'Masami', 'Norio', 'Yukio', 'Tadao', 'Hitoshi', 'Shinji', 'Yutaka', 'Kunio', 'Osamu', 'Masayuki', 'Saburo', 'Eiji', 'Koji', 'Eiichi', 'Tsuneo', 'Yoshio', 'Susumu', 'Hiroyuki', 'Iwao'],\n    teamNamesJ: ['横浜', '大阪', '名古屋', '札幌', '神戸', '京都', '福岡', '川崎', '埼玉県', '広島', '仙台', '千葉県', '新潟', '浜松', '静岡', '相模原', '岡山', '熊本', '鹿児島', '船橋', '川口', '姫路', '松山', '宇都宮', '松戸', '西宮', '倉敷', '市川', '福山', '尼崎', '金沢', '長崎', '横須賀', '富山', '高松', '町田', '岐阜', '枚方', '藤沢', '柏', '豊中', '長野県', '豊橋', '一宮', '和歌山', '岡崎', '宮崎', '奈良', '吹田', '高槻', '旭川', 'いわき', '高崎', '所沢', '川越', '秋田', '越谷', '前橋', '那覇', '四日市', '青森', '久留米', '春日井', '盛岡', '明石', '福島', '下関', '長岡', '市原', '函館', '茨城県', '福井', '加古川', '徳島', '水戸', '平塚', '佐世保', '呉', '八戸', '佐賀', '寝屋川', '富士', '春日部', '茅ヶ崎', '松本', '厚木', '大和', '上尾', '宝塚', '筑波', '沼津', '熊谷', '伊勢崎', '岸和田', '鳥取', '小田原', '鈴鹿', '松江', '日立'],\n    teamNames: ['Yokohama', 'Osaka', 'Nagoya', 'Sapporo', 'Kobe', 'Kyoto', 'Fukuoka', 'Kawasaki', 'Saitama', 'Hiroshima', 'Sendai', 'Chiba', 'Niigata', 'Hamamatsu', 'Shizuoka', 'Sagamihara', 'Okayama', 'Kumamoto', 'Kagoshima', 'Funabashi', 'Kawaguchi', 'Himeji', 'Matsuyama', 'Utsunomiya', 'Matsudo', 'Nishinomiya', 'Kurashiki', 'Ichikawa', 'Fukuyama', 'Amagasaki', 'Kanazawa', 'Nagasaki', 'Yokosuka', 'Toyama', 'Takamatsu', 'Machida', 'Gifu', 'Hirakata', 'Fujisawa', 'Kashiwa', 'Toyonaka', 'Nagano', 'Toyohashi', 'Ichinomiya', 'Wakayama', 'Okazaki', 'Miyazaki', 'Nara', 'Suita', 'Takatsuki', 'Asahikawa', 'Iwaki', 'Takasaki', 'Tokorozawa', 'Kawagoe', 'Akita', 'Koshigaya', 'Maebashi', 'Naha', 'Yokkaichi', 'Aomori', 'Kurume', 'Kasugai', 'Morioka', 'Akashi', 'Fukushima', 'Shimonoseki', 'Nagaoka', 'Ichihara', 'Hakodate', 'Ibaraki', 'Fukui', 'Kakogawa', 'Tokushima', 'Mito', 'Hiratsuka', 'Sasebo', 'Kure', 'Hachinohe', 'Saga', 'Neyagawa', 'Fuji', 'Kasukabe', 'Chigasaki', 'Matsumoto', 'Atsugi', 'Yamato', 'Ageo', 'Takarazuka', 'Tsukuba', 'Numazu', 'Kumagaya', 'Isesaki', 'Kishiwada', 'Tottori', 'Odawara', 'Suzuka', 'Matsue', 'Hitachi']\n};\n\nexports.data = data;\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar helper = {\n    pitchDefinitions: {\n        '4-seam': [0, 0, 1], //x movement, y movement, speed ratio\n        '2-seam': [20, -20, 0.90],\n        'cutter': [-25, -20, 0.95],\n        'sinker': [-15, -30, 0.95],\n\n        'slider': [-50, -35, 0.9],\n        'fork': [0, -70, 0.87],\n        'curve': [0, -90, 0.82],\n\n        'change': [0, -10, 0.88]\n    },\n    selectRandomPitch: function selectRandomPitch() {\n        return ['4-seam', '2-seam', 'cutter', 'sinker', 'slider', 'fork', 'curve', 'change'][Math.floor(Math.random() * 8)];\n    }\n};\n\nexports.helper = helper;\n\n},{}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar text = function text(phrase, override) {\n    if (!text.mode) text.mode = 'n';\n    var string = ({\n        n: {\n            empty: '-',\n            ' 1st': '1番',\n            ' 2nd': '2番',\n            ' 3rd': '3番',\n            ' 4th': '4番',\n            ' 5th': '5番',\n            ' 6th': '6番',\n            ' 7th': '7番',\n            ' 8th': '8番',\n            ' 9th': '9番',\n            'Now batting': '次のバッター、',\n            'way outside': '相当外角',\n            'outside': '外角',\n            'inside': '内角',\n            'way inside': '相当内角',\n            'way low': '相当低め',\n            'low': '低め',\n            'high': '高め',\n            'way high': '相当高め',\n            'down the middle': '真ん中',\n            'first baseman': 'ファースト',\n            'second baseman': 'セカンド',\n            'third baseman': 'サード',\n            'shortstop': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left fielder': 'レフト',\n            'center fielder': 'センター',\n            'right fielder': 'ライト',\n            'Strike.': 'ストライク。',\n            'Ball.': 'ボール。',\n            'Fouled off.': 'ファウル。',\n            'In play.': 'インプレー。',\n            'Swinging strike.': '空振り。',\n            '4-seam': 'ストレート',\n            '2-seam': 'シュート',\n            'slider': 'スライダー',\n            'fork': 'フォーク',\n            'cutter': 'カット',\n            'sinker': 'シンカー',\n            'curve': 'カーブ',\n            'change': 'チェンジ',\n            ' struck out looking.': '、見逃し三振。',\n            ' walked.': '、フォアボール。',\n            ' struck out swinging.': '、空振り三振。',\n            'Previous: ': '前：',\n            'looks like: ': '予想',\n            'breaking ball': '変化球',\n            'fastball': 'ストレート',\n            'Batting, ': '打球',\n            'Catching, pitch selection': '捕球選択',\n            'Season': '記録',\n            'Game': '今試合',\n            'Pitch': '球',\n            'Control': '制球',\n            'Velocity': '速度',\n            'Break': '変化',\n            'At Bat :': 'バッター',\n            'On Deck :': '次バッター',\n            'Eye :': '目',\n            'Power :': '力',\n            'Speed :': '速',\n            'Up to Bat': '打席',\n            'Fielding': '守備',\n            'BA': '打率',\n            'OBP': '出塁',\n            'SLG': '長打',\n            'PA': '打席',\n            'H/2B/3B/HR': '安／二／三／本',\n            'H': '安',\n            '2B': '二',\n            '3B': '三',\n            'HR': '本塁打',\n            'RBI': '打点',\n            'R': '得点',\n            'BB': '四球',\n            'SO': '三振',\n\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n\n            'Select Language:': '言語',\n            'Run Fast Simulation': 'シミュレーションを試合終了まで行う',\n            'Play Ball!': 'プレーボール',\n            'Spectate the CPU': 'CPU観戦',\n\n            'Throws/Bats': ' ',\n            'LHP': '左投',\n            'RHP': '右投',\n            'LHB': '左打',\n            'RHB': '右打',\n            'L': '左投',\n            'R ': '右投',\n            ' L ': '左打',\n            ' R ': '右打',\n            '#': '背番号'\n        },\n        e: {\n            empty: '-',\n            'Season': 'Career'\n        }\n    })[override ? override : text.mode][phrase];\n    return string ? string : phrase;\n};\n\ntext.getBattersEye = function (game) {\n    var eye = {},\n        breaking = Math.abs(game.pitchInFlight.breakDirection[0]) + Math.abs(game.pitchInFlight.breakDirection[1]) > 40;\n    eye.e = text('looks like: ', 'e') + breaking ? text('breaking ball', 'e') : text('fastball', 'e');\n    eye.n = text('looks like: ', 'n') + breaking ? text('breaking ball', 'n') : text('fastball', 'n');\n    return eye;\n};\n\ntext.fielderShortName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': '一',\n            'second': '二',\n            'third': '三',\n            'short': '遊',\n            'pitcher': '投',\n            'catcher': '捕',\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[fielder];\n    }\n    return fielder;\n};\n\ntext.slash = function () {\n    if (text.mode == 'n') {\n        return '・';\n    }\n    return '/';\n};\n\ntext.fielderLongName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'short': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left': 'レフト',\n            'center': 'センター',\n            'right': 'ライト'\n        })[fielder];\n    }\n    return ({\n        first: text('first baseman'),\n        second: text('second baseman'),\n        third: text('third baseman'),\n        short: text('shortstop'),\n        pitcher: text('pitcher'),\n        catcher: text('catcher'),\n        left: text('left fielder'),\n        center: text('center fielder'),\n        right: text('right fielder')\n    })[fielder];\n};\n\ntext.comma = function () {\n    return ({ n: '、', e: ', ' })[text.mode];\n};\ntext.stop = function () {\n    return ({ n: '。', e: '. ' })[text.mode];\n};\n\ntext.namePitch = function (pitch) {\n    if (text.mode == 'e') {\n        return pitch.name.charAt(0).toUpperCase() + pitch.name.slice(1);\n    }\n    if (text.mode == 'n') {\n        return text(pitch.name);\n    }\n};\n\ntext.contactResult = function (batter, fielder, bases, outBy, sacrificeAdvances, out) {\n    var statement = '';\n    var infield = ['left', 'center', 'right'].indexOf(fielder) < 0;\n    if (text.mode == 'e') {\n        statement += batter;\n        if (outBy) {\n            switch (outBy) {\n                case 'fieldersChoice':\n                    var plural = out.length > 1;\n                    var runner = plural ? 'Runners' : 'Runner';\n                    var is = plural ? 'are' : 'is';\n                    statement += ' reached on a fielder\\'s choice by ' + text.fielderShortName(fielder) + '. ' + runner + ' from ' + text(out.join(text.comma())) + ' ' + is + ' out';\n                    break;\n                case 'line':\n                    statement += ' lined out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'fly':\n                    statement += ' flew out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'error':\n                    statement += ' reached on error by ' + text.fielderShortName(fielder);\n                    break;\n                case 'pop':\n                    statement += ' popped out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'ground':\n                    statement += ' grounded into a force out by ' + text.fielderShortName(fielder);\n                    break;\n                case 'thrown':\n                    statement += ' was thrown out by ' + text.fielderShortName(fielder);\n                    break;\n            }\n        } else {\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += ' reached on an infield hit to ' + text.fielderShortName(fielder);\n                    } else {\n                        statement += ' reached on a single to ' + text.fielderShortName(fielder);\n                    }\n                    break;\n                case 2:\n                    statement += ' doubled past ' + text.fielderShortName(fielder);\n                    break;\n                case 3:\n                    statement += ' tripled past ' + text.fielderShortName(fielder);\n                    break;\n                case 4:\n                    statement += ' homered to ' + text.fielderShortName(fielder);\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += text.stop() + 'Runner on third scores';\n                } else {\n                    statement += text.stop() + 'Runner on ' + base + ' advances';\n                }\n            });\n        }\n        statement += text.stop();\n    }\n    if (text.mode == 'n') {\n        var stop = text.stop();\n        statement += batter + 'は';\n        if (outBy) {\n            var fielderLong = text.fielderLongName(fielder);\n            fielder = text.fielderShortName(fielder);\n            switch (outBy) {\n                case 'fieldersChoice':\n                    statement += '野選(' + fielder + ')で出塁。' + text(out.join(text.comma())) + 'ランナーはアウト';\n                    break;\n                case 'line':\n                    statement += fielder + '直';\n                    break;\n                case 'fly':\n                    statement += fielder + '飛';\n                    break;\n                case 'error':\n                    statement += 'エラー(' + fielder + ')で出塁';\n                    break;\n                case 'pop':\n                    statement += 'ポップフライで' + fielder + '飛';\n                    break;\n                case 'ground':\n                    statement += fielderLong + 'ゴロに封殺';\n                    break;\n                case 'thrown':\n                    statement += fielder + 'ゴロ';\n                    break;\n            }\n        } else {\n            fielder = text.fielderShortName(fielder);\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += '内野安打' + '(' + fielder + ')' + 'で出塁';\n                    } else {\n                        statement += '安打(' + fielder + ')' + 'で出塁';\n                    }\n                    break;\n                case 2:\n                    statement += '二塁打（' + fielder + '）で出塁';\n                    break;\n                case 3:\n                    statement += '三塁打（' + fielder + '）で出塁';\n                    break;\n                case 4:\n                    statement += '本塁打（' + fielder + '）';\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += stop + 'サードランナーホームイン';\n                } else {\n                    statement += stop + text(base) + 'ランナー進塁';\n                }\n            });\n        }\n        statement += stop;\n    }\n    return statement;\n};\n\nexports.text = text;\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballNamespace = require('baseball/namespace');\n\nif (typeof window == 'object') {\n    window.Baseball = _baseballNamespace.Baseball;\n}\n\nexports.Baseball = _baseballNamespace.Baseball;\n\n},{\"baseball/namespace\":20}],20:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Baseball = {};\n\nBaseball.model = {};\nBaseball.model.Game = Baseball.Game = _baseballModelGame.Game;\nBaseball.model.Player = Baseball.Player = _baseballModelPlayer.Player;\nBaseball.model.Team = Baseball.Team = _baseballModelTeam.Team;\n\nBaseball.service = {};\nBaseball.service.Animator = _baseballServices_services.Animator;\n\nBaseball.util = {};\nBaseball.util.text = _baseballUtility_utils.text;\n\nexports.Baseball = Baseball;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":13,\"baseball/Utility/_utils\":15}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":9,\"baseball/Services/Distribution\":10,\"baseball/Services/Iterator\":11,\"baseball/Services/Mathinator\":12}]},{},[19]);\n","IndexController = function($scope) {\n    var text = Baseball.util.text;\n    var Game = Baseball.Game;\n    var Animator = Baseball.service.Animator;\n\n    window.s = $scope;\n    $scope.t = text;\n\n    $scope.mode = function(setMode) {\n        if (setMode) {\n            text.mode = setMode;\n        }\n        return text.mode;\n    };\n\n    $scope.proceedToGame = function(quickMode, spectateCpu) {\n        Game.prototype.humanControl = spectateCpu ? 'none' : 'home';\n        Game.prototype.quickMode = !!quickMode;\n        $scope.y = new Game();\n        var game = $scope.y;\n        s2.y = game;\n        bindMethods();\n        $('.blocking').remove();\n        if (game.humanControl == 'none' && game.quickMode) {\n            var n = 0;\n            do {\n                n++;\n                game.simulateInput(function(callback) {\n                    typeof callback == 'function' && callback();\n                });\n            } while (game.stage != 'end' && n < 500);\n            log('sim ended');\n            game.debugOut();\n        } else if (game.humanControl == 'none') {\n            var scalar = game.quickMode ? 0.05 : 1;\n            var auto = setInterval(function() {\n                if (game.stage == 'end') {\n                    clearInterval(auto);\n                }\n                game.simulatePitchAndSwing(function(callback) {\n                    game.quickMode ? void 0 : $scope.$apply();\n                    $scope.updateFlightPath(callback);\n                });\n            }, scalar*(game.field.hasRunnersOn() ? Animator.TIME_FROM_SET + 2000 : Animator.TIME_FROM_WINDUP + 2000));\n        }\n        if (game.humanControl == 'away') {\n            game.simulateInput(function(callback) {\n                $scope.updateFlightPath(callback);\n            });\n        }\n        if (game.humanControl == 'home') {\n\n        }\n    };\n\n    var bindMethods = function() {\n        var game = $scope.y;\n        $scope.holdUpTimeouts = [];\n        $scope.expandScoreboard = false;\n        var animator = new Animator();\n        $scope.updateFlightPath = animator.updateFlightPath.bind($scope);\n\n        // avoid scope cycles, any other easy way?\n        var bat = $('.target .swing.stance-indicator');\n        var showBat = function(event) {\n            if (game.humanBatting()) {\n                var offset = $('.target').offset();\n                var relativeOffset = {\n                    x : event.pageX - offset.left,\n                    y : 200 - (event.pageY - offset.top)\n                };\n                var angle = game.setBatAngle(relativeOffset.x, relativeOffset.y);\n                bat.css({\n                    top: 200-relativeOffset.y + \"px\",\n                    left: relativeOffset.x + \"px\",\n                    transform: \"rotate(\" + angle + \"deg) rotateY(\"+(game.batter.bats == \"left\" ? 0 : -0)+\"deg)\"\n                });\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\n                    bat.hide();\n                } else {\n                    bat.show();\n                }\n            }\n        };\n        var glove = $('.target .glove.stance-indicator');\n        var showGlove = function(event) {\n            if (game.humanPitching()) {\n                var offset = $('.target').offset();\n                var relativeOffset = {\n                    x : event.pageX - offset.left,\n                    y : 200 - (event.pageY - offset.top)\n                };\n                glove.css({\n                    top: 200-relativeOffset.y + \"px\",\n                    left: relativeOffset.x + \"px\"\n                });\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\n                    glove.hide();\n                } else {\n                    glove.show();\n                }\n            }\n        };\n\n        $scope.selectPitch = function(pitchName) {\n            if (game.stage == 'pitch') {\n                game.pitchInFlight = $.extend({}, game.pitcher.pitching[pitchName]);\n                game.pitchInFlight.name = pitchName;\n                game.swingResult.looking = true;\n            }\n        };\n        $scope.allowInput = true;\n        $scope.holdUp = function() {\n            $('.no-swing').click();\n            $scope.$apply();\n        };\n        game.startOpponentPitching = function(callback) {\n            $scope.updateFlightPath(callback);\n        };\n        $scope.indicate = function($event) {\n            if (!$scope.allowInput) {\n                return;\n            }\n            if (game.pitcher.windingUp) {\n                return;\n            }\n            if (game.humanPitching()) $scope.allowInput = false;\n            var offset = $('.target').offset();\n            var relativeOffset = {\n                x : $event.pageX - offset.left,\n                y : 200 - ($event.pageY - offset.top)\n            };\n            clearTimeout($scope.lastTimeout);\n            while ($scope.holdUpTimeouts.length) {\n                clearTimeout($scope.holdUpTimeouts.shift());\n            }\n            game.receiveInput(relativeOffset.x, relativeOffset.y, function(callback) {\n                $scope.updateFlightPath(callback);\n            });\n        };\n        $scope.abbreviatePosition = function(position) {\n            if (text.mode == 'e') {\n                return {\n                    pitcher : 'P',\n                    catcher : 'C',\n                    first : '1B',\n                    second : '2B',\n                    short : 'SS',\n                    third : '3B',\n                    left : 'LF',\n                    center : 'CF',\n                    right : 'RF'\n                }[position];\n            }\n            return text.fielderShortName(position);\n        };\n        $scope.$watch('y.humanBatting()', function() {\n            if ($scope.y.humanBatting()) {\n                $('.target').mousemove(showBat);\n            } else {\n                $('.target').unbind('mousemove', showBat);\n                bat.hide();\n            }\n        });\n        $scope.$watch('y.humanPitching()', function() {\n            if ($scope.y.humanPitching()) {\n                $('.target').mousemove(showGlove);\n            } else {\n                $('.target').unbind('mousemove', showGlove);\n                glove.hide();\n            }\n        });\n    };\n\n\n};","ScoreboardDirective = function() {\n    return {\n        scope: {\n            game: '=',\n            text: '='\n        },\n        templateUrl: 'public/html/views/directives/scoreboard.html?cache='+cacheKey,\n        link: function(scope) {\n            window.s2 = scope;\n            scope.t = scope.text;\n            scope.y = scope.game;\n        }\n    };\n};","var app = angular.module('YakyuuAikoukai', ['directives']);\n\ncacheKey = Math.floor(Math.random()*1500);\n\nangular.module('directives', [])\n    .directive('scoreboard', ScoreboardDirective);\n\nangular.module('controllers', [])\n    .controller('IndexController', IndexController);\n\n// var socket = io('ws://' + window.location.hostname + ':3000');"],"sourceRoot":"/source/"}