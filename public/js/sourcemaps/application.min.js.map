{"version":3,"sources":["bundle.js","IndexController.js","SocketService.js","battersData.js","batteryData.js","field.js","ratingBlock.js","scoreboard.js","application.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_baseballUtilityLog","AtBat","text","this","infield","indexOf","INFIELD_HIT_INDICATOR","replace","split","RBI_INDICATOR","rbi","log","Log","beneficial","WALK","SINGLE","HOMERUN","DOUBLE","TRIPLE","SACRIFICE","REACHED_ON_ERROR","STOLEN_BASE","RUN","constructor","identifier","baseball/Utility/Log",2,"_baseballModelPlayer","_baseballServices_services","Field","game","init","first","second","third","hasRunnersOn","Player","determineSwingContactResult","swing","fatigue","x","y","eye","batter","skill","offense","angles","Mathinator","getSplayAndFlyAngle","angle","splayAngle","splay","flyAngle","fly","power","bonus","landingDistance","Distribution","Math","abs","foul","fielder","findFielder","min","max","travelDistance","sacrificeAdvances","half","teams","home","positions","away","error","fieldingEase","defense","fielding","throwingEase","throwing","fielderTravel","getPolarDistance","interceptRating","speed","caught","umpire","count","outs","sacrificeThrowInTime","fielderReturnDelay","getBaseRunningTime","push","bases","thrownOut","fieldingReturnDelay","fieldingDelay","outfielder","left","center","right","baseRunningTime","random","fieldersChoice","fielders","team","force","forcePlaySituation","additionalOuts","throwingDelay","infieldThrowDelay","catcher","doublePlay","firstOut","swingResult","Animator","console","_ball","hasIndicator","animateFieldingTrajectory","getLeadRunner","horizontalVelocity","cos","PI","fielderLateralReachDegrees","fielderArcPosition","pitcher","short","b","fieldingTest","distance","data","fielderCandidates","fielderSelectionTest","aggregateFieldingTest","tally","distances","false","selections","returnFielder","minDistance","giraffe","Iterator","each","position","spot","thisDistance","baseball/Model/Player","baseball/Services/_services",3,"_baseballModelField","_baseballModelTeam","_baseballModelUmpire","_baseballUtility_utils","Game","m","gamesIntoSeason","humanControl","quickMode","debug","reset","startTime","h","slice","timeOfDay","mode","floor","field","Team","helper","name","pickName","Umpire","humanPitching","stage","autoPitchSelect","passMinutes","minutes","parseInt","setLuminosity","getInning","inning","toUpperCase","humanBatting","end","R","getName","stats","pitching","W","L","note","simulateInput","callback","pitchTarget","autoPitch","autoSwing","simulatePitchAndSwing","setTimeout","TIME_FROM_SET","TIME_FROM_WINDUP","receiveInput","thePitch","theSwing","pitchNames","keys","pitchName","pitch","pitchInFlight","windingUp","$","addClass","windup","css","pitchLocation","loop","resetCamera","animate","width","removeClass","deceptiveX","deceptiveY","convergence","convergenceSum","balls","strikes","centralizedNumber","cpuSwing","swingProbability","swingLikelihood","opponentConnected","waitingCallback","awaitPitch","opponentService","emitSwing","awaitSwing","emitPitch","inFlight","override","breakDirection","pitchDefinitions","battersEye","getBattersEye","control","pitchControl","breakEffect","notePitch","result","setBatAngle","recalculation","getAngularOffset","precision","looking","contact","strike","sqrt","pow","stealAttempt","RUNNER_GO","RUNNERS_DISCRETION","thief","base","validToSteal","discretion","willSteal","attemptSteal","noteSwing","makeCall","emit","startOpponentPitching","origin","bats","battingAngle","debugOut","filter","PO","map","JSON","stringify","hitters","lineup","concat","atBats","getAtBats","ab","LO","FO","GO","GIDP","SO","BB","SAC","FC","CS","SB","table","scoreboard","toData","players","deck","hole","nameJ","says","player","serialize","pitchRecord","record","fromData","playerJson","index","playerData","parse","side","resetStats","stabilizeShortRecord","velocity","break","playResult","showPlayResultPanels","batterOutcomes","atBat","pop","fielderOutcomes","pitchSelect",4,5,6,7,8,9,"resetTally","H","E","baseball/Model/Field","baseball/Model/Team","baseball/Model/Umpire","baseball/Utility/_utils","Manager","makeLineup","jerseyNumber","selectForSkill","bench","number","order","pool","skillset","requiredThrowingHandedness","selection","rating","skills","cursor","property","shift","_baseballModel_models","hero","averaging","randomizeSkills","surnameKey","surnames","nameKey","names","jSurname","surnamesJ","jGivenName","namesJ","spaceName","surname","surnameJ","atBatObjects","IP","ER","GS","arguments","undefined","randBetween","total","isNaN","pa","paRemaining","bb","so","sb","cs","doubles","triples","hr","hbp","sac","chances","pitches","K","getK9","getERA","ERA","HR","WHIP","getWHIP","batting","getBA","getBABIP","ba","getOBP","obp","getSLG","slg","2b","3b","A","K9","item","recordRBI","recordInfieldHit","success","stealSuccess","stoleABase","caughtStealing","allPitches","randValue","isPitching","catching","slider","fork","cutter","sinker","curve","change","reduce","prev","current","getSurname","getUniformNumber","getOrder","baseball/Model/_models","_baseballModelManager","bullpen","manager","j","teamNameIndex","teamNames","teamNamesJ","nowBatting","expanded","baseball/Model/Manager","playBall","batterRunner","noteBatter","runScores","CAUGHT_STEALING","changeSides","advanceRunners","LINEOUT","FLYOUT","newBatter","runner","FIELDERS_CHOICE","reachBase","GROUNDOUT","hitByPitch","STRIKEOUT","isWalk","canAdvance","notePlateAppearanceResult","lastBatter","_baseballModelAtBat","_baseballModelGame","baseball/Model/AtBat","baseball/Model/Game","_meshBall","_meshMound","_meshBase","_meshField","_meshGrass","_meshHomeDirt","_meshBattersEye","_meshWall","_sceneLighting","VERTICAL_CORRECTION","INITIAL_CAMERA_DISTANCE","THREE","AHEAD","Vector3","INITIAL_POSITION","Loop","elementClass","main","window","requestAnimationFrame","bind","panToward","omt","overwatchMoveTarget","moveToward","moveTarget","z","objects","renderer","render","scene","camera","getThree","Scene","attach","lighting","addTo","PerspectiveCamera","getAspect","_target","join","Mound","HomeDirt","Grass","BattersEye","Wall","Base","pos","rate","bob","removeEventListener","onResize","addEventListener","element","document","getElementsByClassName","innerHTML","WebGLRenderer","alpha","setSize","appendChild","domElement","aspect","fov","offsetWidth","updateProjectionMatrix","HEIGHT","vector","maxIncrement","panSpeed","forAllLoops","lookAt","moveSpeed","panning","setLookTarget","setMoveTarget","moveCamera","fn","background","foreground","ball","Ball","setType","rotate","deriveTrajectory","constructors","./mesh/Ball","./mesh/Base","./mesh/BattersEye","./mesh/Field","./mesh/Grass","./mesh/HomeDirt","./mesh/Mound","./mesh/Wall","./scene/lighting",10,"_Loop","AbstractMesh","add","mesh","splice","remove","WORLD_BASE_Y","../Loop",11,"_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_get","_x","_x2","_x3","_again","object","receiver","desc","parent","getter","Function","getOwnPropertyDescriptor","get","getPrototypeOf","_AbstractMesh2","_baseballServicesMathinator","_Indicator","_baseballUtilityHelper","SCALE","INDICATOR_DEPTH","_AbstractMesh","trajectory","Array","breakingTrajectory","getMesh","bounce","baseURL","loader","TextureLoader","textureColor","load","textureBump","geometry","SphereGeometry","material","MeshPhongMaterial","bumpMap","bumpScale","Mesh","frame","spawnIndicator","detach","type","handednessScalar","rpm","rotationAngle","setRotation","rotation","meshRotation","RPM","RPS","rotationalIncrement","RP60thOfASecond","xComponent","yComponent","sin","indicator","Indicator","top","breakTop","breakLeft","flightTime","getFlightTime","scale","ARC_APPROXIMATION_Y_ADDITIVE","terminus","breakingTerminus","lastPosition","lastBreakingPosition","frames","breakingFrames","frameCount","counter","xBreak","yBreak","breakingDistance","breakingLateness","breakingLatenessMomentumExponent","progress","breakingInfluencePosition","momentumScalar","breakingScalar","scalarSum","breakingPosition","increment","breakingIncrement","pause","dragScalarApproximation","apexHeight","airTime","flightScalar","velocityVerticalComponent","RADIAN","extrema","lastHeight","percent","currentDistance","DEFAULT_RPM","./AbstractMesh","./Indicator","baseball/Services/Mathinator","baseball/Utility/helper",12,"MeshLambertMaterial","color","BoxGeometry",13,14,"PlaneGeometry",15,16,17,"CircleGeometry",18,19,"radians","hypotenuse","offset",20,"light","HemisphereLight","sun","DirectionalLight","set","level","intensity",21,"_baseballRenderLoop","TweenMax","renderingMode","beginRender","addStaticMeshes","loadTweenMax","to","from","killAll","HOLD_UP_ALLOWANCE","pitchBreak","updateFlightPath","renderFlightPath","tweenFlightPath","$scope","$baseballs","flightSpeed","originTop","originLeft","henka","quarter","pitchTransition","targetTransition","transitions","lastTimeout","allowInput","$apply","holdUpTimeouts","holdUp","derivePitchingTrajectory","tweenFieldingTrajectory","renderFieldingTrajectory","splayOnly","linearApproximateDragScalar","scalar","memory","bounding","mathinator","transitionalTrajectory","show","time","transitionalCatcherPerspectiveTrajectory","setOverwatchMoveTarget","hasOwnProperty","baseball/Render/Loop","baseball/services/_services",22,"ceil","chance","sum","effect","actual","volitional","rand","rand2","smoothedRand2","pitchBaseSpeedMultiplier","ump",23,"collection",24,"square","SPLAY_INDICATOR_LEFT","xScalar","yScalar","originalAngle","atan","angledY","angledX","step","givenApexHeight","givenDistance","givenSplayAngle","bottom","padding","borderWidth","radian","apexRatio","delay","ease","Power4","easeOut","Linear","easeNone","givenOrigin","height","projection","translateSwingResultToStylePosition","maxPadding","maxBorderWidth","_top","_left","transform","intercept","direction","velocityRating","velocityScalar",25,"_baseballServicesAnimator","_baseballServicesDistribution","_baseballServicesIterator","baseball/Services/Animator","baseball/Services/Distribution","baseball/Services/Iterator",26,"_TeamJapan","Provider","special","TeamJapan","samurai","./TeamJapan",27,"_baseballTeamsTrainer","darvish","johjima","ogasawara","nishioka","kawasaki","murata","matsui","ichiro","inaba","matsuzaka","fukudome","aoki","abe","iwamura","coach","Trainer","makePlayer","baseball/Teams/Trainer",28,"throws",29,"_baseballUtilityText","stabilized","shortRecord","GITP","rec","rec2","_note","noteJ","only","unshift","async","getBatter","longFormFielder","comma","recordJ","getPitchLocationDescription","batterIsLefty","say","noComma","noComma2","namePitch","stop","broadcastCount","justOuts","lastOuts","broadcastScore","broadcastRunners","runners","runnerCount","getSwing","steal","noteStealAttempt","space","getPlateAppearanceResult","out","outBy","contactResult","statement","prevJ","resultJ","pointer","baseball/Utility/text",30,"_baseballUtilityData","baseball/Utility/data",31,32,"4-seam","2-seam","selectRandomPitch",33,"phrase","string","empty"," 1st"," 2nd"," 3rd"," 4th"," 5th"," 6th"," 7th"," 8th"," 9th","Now batting","way outside","outside","inside","way inside","way low","low","high","way high","down the middle","first baseman","second baseman","third baseman","shortstop","left fielder","center fielder","right fielder","Strike.","Ball.","Fouled off.","In play.","Swinging strike."," outs"," out"," struck out looking."," walked."," struck out swinging.","Previous: ","looks like: ","breaking ball","fastball","Batting, ","Catching, pitch selection","Season","Pitch","Control","Velocity","Break","At Bat","On Deck","Eye :","Power :","Speed :","Up to Bat","Fielding","BA","OBP","SLG","PA","H/2B/3B/HR","2B","3B","RBI","Runner on","Runners on","Bases empty","stolen base","caught stealing","Select Language:","Run Fast Simulation","Play Ball!","Spectate the CPU","Play from the 7th","Throws/Bats","LHP","RHP","LHB","RHB","R "," L "," R ","#","Opponent connected","Click Here","Play against Team Japan","breaking","fielderShortName","slash","fielderLongName","charAt","play","plural","is","fielderLong",34,"_baseballNamespace","Baseball","baseball/namespace",35,"_baseballTeamsProvider","model","service","util","baseball/Teams/Provider",36,"IndexController","socket","setMode","teamJapan","provider","assignTeam","sim","proceedToGame","seventh","playball","spectate","spectateCpu","location","hash","io","hostname","reconnection","socketService","start","s2","bindMethods","auto","setInterval","clearInterval","showMessage","interval","expandScoreboard","bat","showBat","event","relativeOffset","pageX","pageY","hide","glove","showGlove","selectPitch","extend","click","indicate","$event","clearTimeout","abbreviatePosition","$watch","mousemove","unbind","SocketService","Service","NO_OPERATION","animator","connected","on","register","scope","$digest","off","BattersDirective","templateUrl","cacheKey","transclude","BatteryDirective","FieldDirective","RatingBlockDirective","link","ScoreboardDirective","app","angular","controller","config","$interpolateProvider","startSymbol","endSymbol","directive"],"mappings":"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","file":"application.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar AtBat = (function () {\n    function AtBat(text) {\n        _classCallCheck(this, AtBat);\n\n        this.infield = text.indexOf(AtBat.prototype.INFIELD_HIT_INDICATOR) > -1 ? AtBat.prototype.INFIELD_HIT_INDICATOR : '';\n        text = text.replace(AtBat.prototype.INFIELD_HIT_INDICATOR, '');\n        this.text = text.split(AtBat.prototype.RBI_INDICATOR)[0];\n        this.rbi = text.split(this.text)[1] + '';\n\n        var log = new _baseballUtilityLog.Log();\n\n        var beneficial = [log.WALK, log.SINGLE, log.HOMERUN, log.DOUBLE, log.TRIPLE, log.SACRIFICE, log.REACHED_ON_ERROR, log.STOLEN_BASE, log.RUN];\n        if (beneficial.indexOf(this.text) > -1) {\n            this.beneficial = true;\n        }\n    }\n\n    _createClass(AtBat, [{\n        key: 'toString',\n        value: function toString() {\n            return '' + this.infield + this.text + this.rbi;\n        }\n    }]);\n\n    return AtBat;\n})();\n\nAtBat.prototype.constructor = AtBat;\nAtBat.prototype.identifier = 'AtBat';\nAtBat.prototype.INFIELD_HIT_INDICATOR = '';\nAtBat.prototype.RBI_INDICATOR = '+';\n\nexports.AtBat = AtBat;\n\n},{\"baseball/Utility/Log\":29}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\n/**\n * The baseball field tracks the ball's movement, fielders, and what runners are on\n * @param game\n * @constructor\n */\nvar Field = function Field(game) {\n    this.init(game);\n};\n\nField.prototype = {\n    constructor: Field,\n    init: function init(game) {\n        this.game = game;\n        this.first = null;\n        this.second = null;\n        this.third = null;\n    },\n    /**\n     * @returns {boolean}\n     */\n    hasRunnersOn: function hasRunnersOn() {\n        return this.first instanceof _baseballModelPlayer.Player || this.second instanceof _baseballModelPlayer.Player || this.third instanceof _baseballModelPlayer.Player;\n    },\n    /**\n     * @param swing\n     * @returns {object}\n     */\n    determineSwingContactResult: function determineSwingContactResult(swing) {\n\n        if (this.first) this.first.fatigue += 4;\n        if (this.second) this.second.fatigue += 4;\n        if (this.third) this.third.fatigue += 4;\n\n        var x = swing.x,\n            y = swing.y;\n        var eye = this.game.batter.skill.offense.eye;\n        /**\n         * The initial splay angle is 90 degrees for hitting up the middle and 0\n         * for a hard foul left, 180 is a foul right. Depending on the angle of the bat,\n         * a y-axis displacement which would otherwise pop or ground the ball can instead\n         * increase the left/right effect.\n         */\n        var angles = _baseballServices_services.Mathinator.getSplayAndFlyAngle(x, y, swing.angle, eye);\n        var splayAngle = angles.splay;\n\n        var flyAngle = angles.fly;\n        var power = this.game.batter.skill.offense.power + (this.game.batter.eye.bonus || 0) / 5;\n        var landingDistance = _baseballServices_services.Distribution.landingDistance(power, flyAngle);\n        if (flyAngle < 0 && landingDistance > 95) {\n            landingDistance = (landingDistance - 95) / 4 + 95;\n        }\n        var game = this.game;\n\n        if (Math.abs(splayAngle) > 50) swing.foul = true;\n        swing.fielder = this.findFielder(splayAngle, landingDistance, power, flyAngle);\n        if (['first', 'second', 'short', 'third'].indexOf(swing.fielder) > -1) {\n            landingDistance = Math.min(landingDistance, 110); // stopped by infielder\n        } else {\n                landingDistance = Math.max(landingDistance, 150); // rolled past infielder\n            }\n        swing.travelDistance = landingDistance;\n        swing.flyAngle = flyAngle;\n        /**\n         * the splay for the result is adjusted to 0 being up the middle and negatives being left field\n         * @type {number}\n         */\n        swing.splay = splayAngle;\n        swing.sacrificeAdvances = [];\n\n        if (swing.fielder) {\n            var fielder = game.half == 'top' ? game.teams.home.positions[swing.fielder] : game.teams.away.positions[swing.fielder];\n            fielder.fatigue += 4;\n            swing.error = false;\n            var fieldingEase = fielder.skill.defense.fielding / 100,\n                throwingEase = fielder.skill.defense.throwing / 100;\n            //reach the batted ball?\n            swing.fielderTravel = this.getPolarDistance(this.positions[swing.fielder], [splayAngle + 90, landingDistance]);\n            var interceptRating = fielder.skill.defense.speed * 1.8 + flyAngle * 2.4 - swing.fielderTravel * 1.55 - 15;\n            if (interceptRating > 0 && flyAngle > 4) {\n                //caught cleanly?\n                if (_baseballServices_services.Distribution.error(fielder)) {\n                    //error\n                    fieldingEase *= 0.5;\n                    swing.error = true;\n                    swing.caught = false;\n                } else {\n                    swing.caught = true;\n                    if (game.umpire.count.outs < 2) {\n                        var sacrificeThrowInTime = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, 100);\n                        // todo ran into outfield assist\n                        if (this.first && sacrificeThrowInTime > this.first.getBaseRunningTime() + 4.5) {\n                            swing.sacrificeAdvances.push('first');\n                        }\n                        if (this.second && sacrificeThrowInTime > this.second.getBaseRunningTime()) {\n                            swing.sacrificeAdvances.push('second');\n                        }\n                        if (this.third && sacrificeThrowInTime > this.third.getBaseRunningTime() - 0.5) {\n                            swing.sacrificeAdvances.push('third');\n                        }\n                    }\n                }\n            } else {\n                swing.caught = false;\n            }\n\n            if (!swing.caught) {\n                swing.bases = 0;\n                swing.thrownOut = false; // default value\n                var fieldingReturnDelay = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, interceptRating);\n                swing.fieldingDelay = fieldingReturnDelay;\n                swing.outfielder = ({ 'left': 1, 'center': 1, 'right': 1 })[swing.fielder] == 1;\n                var speed = game.batter.skill.offense.speed,\n                    baseRunningTime = _baseballServices_services.Mathinator.baseRunningTime(speed);\n\n                if (swing.outfielder) {\n                    swing.bases = 1;\n                    baseRunningTime *= 1.05;\n                    fieldingReturnDelay -= baseRunningTime;\n\n                    while ((fieldingReturnDelay > baseRunningTime && Math.random() < 0.25 + speed / 200 || Math.random() < 0.04 + speed / 650) && swing.bases < 3) {\n                        baseRunningTime *= 0.95;\n                        swing.bases++;\n                        fieldingReturnDelay -= baseRunningTime;\n                    }\n                } else {\n                    var first = this.first,\n                        second = this.second,\n                        third = this.third;\n                    swing.fieldersChoice = null;\n                    swing.bases = fieldingReturnDelay >= baseRunningTime + 1 ? 1 : 0;\n                    if (first && fieldingReturnDelay < first.getBaseRunningTime()) swing.fieldersChoice = 'first';\n                    if (first && second && fieldingReturnDelay < second.getBaseRunningTime() + 0.6) swing.fieldersChoice = 'second';\n                    if (third && fieldingReturnDelay < third.getBaseRunningTime()) swing.fieldersChoice = 'third';\n                    // double play\n                    var outs = game.umpire.count.outs;\n                    if (swing.fieldersChoice) {\n                        outs++;\n                        swing.bases = 1;\n                        var fielders = fielder.team.positions;\n                        var force = this.forcePlaySituation();\n                        if (force) {\n                            var additionalOuts = [];\n                            var throwingDelay = fieldingReturnDelay;\n                            if (third && force === 'third' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher) + throwingDelay < second.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher);\n                                fielders.catcher.fatigue += 4;\n                                additionalOuts.push('second');\n                                outs++;\n                                force = 'second';\n                            }\n                            if (second && force === 'second' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third) + throwingDelay < first.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third);\n                                fielders.third.fatigue += 4;\n                                additionalOuts.push('first');\n                                outs++;\n                                force = 'first';\n                            }\n                            if (first && force === 'first' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second) + throwingDelay < game.batter.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second);\n                                fielders.second.fatigue += 4;\n                                additionalOuts.push('batter');\n                                swing.bases = 0;\n                                // todo (or shortstop)\n                                outs++;\n                            }\n                            if (outs - game.umpire.count.outs === 2) {\n                                swing.doublePlay = true;\n                            }\n                            if (additionalOuts.length) {\n                                swing.additionalOuts = additionalOuts;\n                                swing.firstOut = swing.fieldersChoice;\n                                if (additionalOuts.indexOf('batter') > -1) {\n                                    delete swing.fieldersChoice;\n                                }\n                            }\n                        }\n                        //console.log('DP?', !!this.forcePlaySituation(), 'throwingDelay', throwingDelay,\n                        //    'fielding delay', fieldingReturnDelay, 'runner', game.batter.getBaseRunningTime());\n                        //if (typeof additionalOuts !== 'undefined' && additionalOuts.length) {\n                        //    console.log('omg dp', additionalOuts);\n                        //}\n                    } else {\n                            delete swing.additionalOuts;\n                            delete swing.firstOut;\n                            delete swing.doublePlay;\n                            delete swing.fieldersChoice;\n                        }\n                }\n                swing.thrownOut = swing.bases == 0;\n                if (swing.thrownOut) {\n                    swing.thrownOut = true;\n                    swing.error = false;\n                }\n            }\n        } else {\n            if (Math.abs(splayAngle) < 45 && landingDistance > 300) {\n                swing.bases = 4;\n            } else {\n                swing.foul = true;\n                swing.caught = false;\n            }\n        }\n        this.game.swingResult = swing;\n        if (!_baseballServices_services.Animator.console) {\n            _baseballServices_services.Animator._ball.hasIndicator = true;\n            _baseballServices_services.Animator.animateFieldingTrajectory(this.game);\n        }\n    },\n    forcePlaySituation: function forcePlaySituation() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        return first && second && third && 'third' || first && second && 'second' || first && 'first';\n    },\n    /**\n     * @returns {Player}\n     * the best steal candidate.\n     */\n    getLeadRunner: function getLeadRunner() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        if (third && first && !second) return first;\n        return third || second || first;\n    },\n    //printRunnerNames : function() {\n    //    return [this.first ? this.first.getName() : '', this.second ? this.second.getName() : '', this.third ? this.third.getname() : ''];\n    //},\n    /**\n     * @param splayAngle {Number} 0 to 180, apparently\n     * @param landingDistance {Number} in feet, up to 310 or so\n     * @param power {Number} 0-100\n     * @param flyAngle {Number} roughly -15 to 90\n     * @returns {string|boolean}\n     */\n    findFielder: function findFielder(splayAngle, landingDistance, power, flyAngle) {\n        var angle = splayAngle; // 0 is up the middle, clockwise increasing\n\n        var fielder;\n\n        if (Math.abs(angle) > 50) return false; // foul\n        if (landingDistance < 10 && landingDistance > -20) {\n            return 'catcher';\n        } else if (landingDistance >= 10 && landingDistance < 45 && Math.abs(angle) < 5) {\n            return 'pitcher';\n        }\n\n        var infield = landingDistance < 145 - Math.abs(angle) / 90 * 50;\n        if (flyAngle < 7) {\n            // 7 degrees straight would fly over the infielder, but add some for arc\n            var horizontalVelocity = Math.cos(flyAngle / 180 * Math.PI) * (85 + power / 100 * 10); // mph toward infielder\n            if (flyAngle < 0) horizontalVelocity *= 0.5; // velocity loss on bounce\n            var fielderLateralReachDegrees = 1 + 22.5 * (100 - horizontalVelocity) / 100; // up to 90/4 = 22.5\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n            var fielderArcPosition = this.positions[fielder][0] - 90;\n            // a good infielder can field a hard hit grounder even with a high terminal distance\n            infield = Math.abs(angle - fielderArcPosition) < fielderLateralReachDegrees;\n        }\n\n        // ball in the air to infielder\n        if (infield && landingDistance > 15) {\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n        } else if (landingDistance < 310) {\n            // past the infield or fly ball to outfielder\n            if (angle < -15) {\n                fielder = 'left';\n            } else if (angle < 16) {\n                fielder = 'center';\n            } else {\n                fielder = 'right';\n            }\n        } else {\n            fielder = false;\n        }\n        return fielder;\n    },\n    positions: {\n        pitcher: [90, 66],\n        catcher: [0, 0],\n        first: [90 + 45 - 7, 98],\n        second: [90 + 12.5, 130],\n        short: [90 - 12.5, 130],\n        third: [90 - 45 + 7, 98],\n        left: [45 + 14, 280],\n        center: [90, 280],\n        right: [135 - 14, 280]\n    },\n    getPolarDistance: function getPolarDistance(a, b) {\n        return _baseballServices_services.Mathinator.getPolarDistance(a, b);\n    },\n    fieldingTest: function fieldingTest() {\n        var angle = Math.random() * 90 + 45;\n        var distance = Math.random() * 320;\n        var fielder = this.findFielder(angle, distance);\n        var data = {};\n        if (fielder) {\n            var fielderCandidates = this.fielderSelectionTest(angle, distance, true);\n            data.fielder = fielderCandidates[1];\n            data[fielderCandidates[0]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[0]][0], this.positions[fielderCandidates[0]][1]]);\n            data[fielderCandidates[1]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[1]][0], this.positions[fielderCandidates[1]][1]]);\n            return data;\n        }\n    },\n    aggregateFieldingTest: function aggregateFieldingTest() {\n        var fielders = {\n            pitcher: { tally: 0, distances: [] },\n            catcher: { tally: 0, distances: [] },\n            first: { tally: 0, distances: [] },\n            second: { tally: 0, distances: [] },\n            short: { tally: 0, distances: [] },\n            third: { tally: 0, distances: [] },\n            left: { tally: 0, distances: [] },\n            center: { tally: 0, distances: [] },\n            right: { tally: 0, distances: [] },\n            'false': { tally: 0, distances: [] }\n        };\n        var selections = [];\n        for (var i = 0; i < 1000; i++) {\n            var angle = Math.random() * 90 + 45;\n            var distance = Math.random() * 320;\n            var fielder = this.findFielder(angle, distance);\n            fielders[fielder].tally++;\n            if (fielder) {\n                fielders[fielder].distances.push(this.getPolarDistance([angle, distance], [this.positions[fielder][0], this.positions[fielder][1]]));\n            }\n            selections.push([angle, distance]);\n            selections.push(this.fielderSelectionTest(angle, distance, true));\n        }\n        return [fielders, selections];\n    },\n    fielderSelectionTest: function fielderSelectionTest(angle, distance, returnFielder) {\n        var distances = [];\n        var minDistance = 300;\n        var giraffe = this;\n        var fielder = false;\n        Iterator.each(this.positions, function (position, spot) {\n            var thisDistance = giraffe.getPolarDistance([angle, distance], spot);\n            distances[thisDistance] = position;\n            if (minDistance > thisDistance) {\n                minDistance = thisDistance;\n                fielder = position;\n            }\n        });\n        return returnFielder ? [fielder, this.findFielder(angle, distance)] : distances;\n    }\n};\n\nexports.Field = Field;\n\n},{\"baseball/Model/Player\":5,\"baseball/Services/_services\":25}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Game = function Game(m) {\n    this.init(m);\n};\n\nGame.prototype = {\n    constructor: Game,\n    gamesIntoSeason: 0,\n    humanControl: 'home', //home, away, both, none\n    console: false,\n    quickMode: true,\n    debug: [],\n    pitcher: {}, // Player&\n    batter: {}, // Player&\n    init: function init(m) {\n        this.reset();\n        this.startTime = {\n            h: ('00' + (Math.random() * 8 + 10 | 0)).slice(-2),\n            m: ('00' + (Math.random() * 60 | 0)).slice(-2)\n        };\n        this.timeOfDay = {\n            h: this.startTime.h,\n            m: this.startTime.m\n        };\n        if (m) _baseballUtility_utils.text.mode = m;\n        this.gamesIntoSeason = 5 + Math.floor(Math.random() * 133);\n        this.field = new _baseballModelField.Field(this);\n        this.teams.away = new _baseballModelTeam.Team(this);\n        this.teams.home = new _baseballModelTeam.Team(this);\n        this.log = new _baseballUtilityLog.Log();\n        this.log.game = this;\n        this.debug = [];\n        this.helper = _baseballUtility_utils.helper;\n        while (this.teams.away.name == this.teams.home.name) {\n            this.teams.away.pickName();\n        }\n        this.umpire = new _baseballModelUmpire.Umpire(this);\n        if (this.humanPitching()) {\n            this.stage = 'pitch';\n        }\n        this.autoPitchSelect();\n        _baseballServices_services.Animator.init();\n    },\n    passMinutes: function passMinutes(minutes) {\n        this.timeOfDay.m = ('00' + (parseInt(this.timeOfDay.m) + parseInt(minutes))).slice(-2);\n        if (parseInt(this.timeOfDay.m) >= 60) {\n            this.timeOfDay.m = ('00' + parseInt(this.timeOfDay.m) % 60).slice(-2);\n            this.timeOfDay.h = ('00' + (parseInt(this.timeOfDay.h) + 1) % 24).slice(-2);\n        }\n        _baseballServices_services.Animator.setLuminosity(1 - Math.abs(12 - this.timeOfDay.h) / 12);\n    },\n    getInning: function getInning() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.inning + (this.half == 'top' ? 'オモテ' : 'ウラ') : this.half.toUpperCase() + ' ' + this.inning;\n    },\n    humanBatting: function humanBatting() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'away';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'home';\n        }\n    },\n    humanPitching: function humanPitching() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'home';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'away';\n        }\n    },\n    end: function end() {\n        this.stage = 'end';\n        var e, n;\n        e = this.tally.home.R > this.tally.away.R ? 'Home team wins!' : this.tally.home.R == this.tally.away.R ? 'You tied. Yes, you can do that.' : 'Visitors win!';\n        n = this.tally.home.R > this.tally.away.R ? this.teams.home.getName() + 'の勝利' : this.tally.home.R == this.tally.away.R ? '引き分け' : this.teams.away.getName() + 'の勝利';\n        if (this.tally.home.R > this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.W++;\n            this.teams.away.positions.pitcher.stats.pitching.L++;\n        } else if (this.tally.home.R < this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.L++;\n            this.teams.away.positions.pitcher.stats.pitching.W++;\n        }\n        this.log.note(e, n);\n        this.log.note('Reload to play again', 'リロるは次の試合へ');\n    },\n    stage: 'pitch', //pitch, swing\n    simulateInput: function simulateInput(callback) {\n        var stage = this.stage,\n            pitchTarget = this.pitchTarget;\n        if (stage == 'end') {\n            return;\n        }\n        if (stage == 'pitch') {\n            this.autoPitch(callback);\n        } else if (stage == 'swing') {\n            if (typeof pitchTarget != 'object') {\n                this.pitchTarget = { x: 100, y: 100 };\n            }\n            this.autoSwing(this.pitchTarget.x, this.pitchTarget.y, callback);\n        }\n    },\n    simulatePitchAndSwing: function simulatePitchAndSwing(callback) {\n        if (this.stage == 'end') {\n            return;\n        }\n        this.autoPitch(callback);\n        var giraffe = this;\n        setTimeout(function () {\n            if (typeof giraffe.pitchTarget != 'object') {\n                giraffe.pitchTarget = { x: 100, y: 100 };\n            }\n            giraffe.autoSwing(giraffe.pitchTarget.x, giraffe.pitchTarget.y, function (callback) {\n                callback();\n            });\n        }, giraffe.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET + 2500 : _baseballServices_services.Animator.TIME_FROM_WINDUP + 2500);\n    },\n    /**\n     * generically receive click input and decide what to do\n     * @param x\n     * @param y\n     * @param callback\n     */\n    receiveInput: function receiveInput(x, y, callback) {\n        if (this.humanControl == 'none') {\n            return;\n        }\n        if (this.stage == 'end') {\n            return;\n        }\n        if (this.stage == 'pitch' && this.humanPitching()) {\n            this.thePitch(x, y, callback);\n        } else if (this.stage == 'swing' && this.humanBatting()) {\n            this.theSwing(x, y, callback);\n        }\n    },\n    autoPitchSelect: function autoPitchSelect() {\n        var pitchNames = Object.keys(this.pitcher.pitching);\n        var pitchName = pitchNames[Math.random() * pitchNames.length | 0];\n        var pitch = this.pitcher.pitching[pitchName];\n        pitch.name = pitchName;\n        this.pitchInFlight = pitch;\n    },\n    autoPitch: function autoPitch(callback) {\n        var pitcher = this.pitcher,\n            giraffe = this;\n        if (this.stage == 'pitch') {\n            this.autoPitchSelect();\n            pitcher.windingUp = true;\n            if (!this.console) {\n                $('.baseball').addClass('hide');\n                var windup = $('.windup');\n                windup.css('width', '100%');\n            }\n            var count = this.umpire.count;\n            var pitch = _baseballServices_services.Distribution.pitchLocation(count),\n                x = pitch.x,\n                y = pitch.y;\n            if (this.quickMode) {\n                this.thePitch(x, y, callback);\n            } else {\n                if (!_baseballServices_services.Animator.console) {\n                    _baseballServices_services.Animator.loop.resetCamera();\n                }\n                windup.animate({ width: 0 }, this.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET : _baseballServices_services.Animator.TIME_FROM_WINDUP, function () {\n                    !giraffe.console && $('.baseball.pitch').removeClass('hide');\n                    giraffe.thePitch(x, y, callback);\n                    pitcher.windingUp = false;\n                });\n            }\n        }\n    },\n    autoSwing: function autoSwing(deceptiveX, deceptiveY, callback) {\n        var giraffe = this;\n        var bonus = this.batter.eye.bonus || 0,\n            eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus,\n            convergence,\n            convergenceSum;\n\n        var x = _baseballServices_services.Distribution.centralizedNumber(),\n            y = _baseballServices_services.Distribution.centralizedNumber();\n\n        if (100 * Math.random() < eye) {\n            // identified the break\n            deceptiveX = this.pitchInFlight.x;\n            deceptiveY = this.pitchInFlight.y;\n        }\n\n        if (100 * Math.random() < eye) {\n            // identified the location\n            convergence = eye / 25;\n            convergenceSum = 1 + convergence;\n        } else {\n            convergence = eye / 100;\n            convergenceSum = 1 + convergence;\n        }\n\n        x = (deceptiveX * convergence + x) / convergenceSum;\n        y = (deceptiveY * convergence + y) / convergenceSum;\n\n        this.swingResult.x = _baseballServices_services.Distribution.cpuSwing(x, this.pitchInFlight.x, eye);\n        this.swingResult.y = _baseballServices_services.Distribution.cpuSwing(y, this.pitchInFlight.y, eye * 0.75);\n\n        var swingProbability = _baseballServices_services.Distribution.swingLikelihood(eye, x, y, this.umpire);\n        if (swingProbability < 100 * Math.random()) {\n            x = -20;\n        }\n\n        callback(function () {\n            giraffe.theSwing(x, y);\n        });\n    },\n    opponentConnected: false,\n    waitingCallback: function waitingCallback() {},\n    awaitPitch: function awaitPitch(callback, swingResult) {\n        var giraffe = this;\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitSwing(swingResult);\n        } else {\n            setTimeout(function () {\n                giraffe.autoPitch(callback);\n            }, 5200);\n        }\n    },\n    awaitSwing: function awaitSwing(x, y, callback, pitchInFlight, pitchTarget) {\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitPitch({\n                inFlight: pitchInFlight,\n                target: pitchTarget\n            });\n        } else {\n            this.autoSwing(x, y, callback);\n        }\n    },\n    thePitch: function thePitch(x, y, callback, override) {\n        var pitch = this.pitchInFlight;\n        if (this.stage == 'pitch') {\n            if (override) {\n                this.pitchInFlight = override.inFlight;\n                this.pitchTarget = override.target;\n                callback = this.waitingCallback;\n            } else {\n                this.pitcher.fatigue++;\n                this.pitchTarget.x = x;\n                this.pitchTarget.y = y;\n\n                pitch.breakDirection = this.helper.pitchDefinitions[pitch.name].slice(0, 2);\n                this.battersEye = _baseballUtility_utils.text.getBattersEye(this);\n\n                var control = Math.floor(pitch.control - this.pitcher.fatigue / 2);\n                this.pitchTarget.x = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.x, control);\n                this.pitchTarget.y = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.y, control);\n\n                if (this.pitcher.throws == 'right') pitch.breakDirection[0] *= -1;\n\n                var breakEffect = _baseballServices_services.Distribution.breakEffect(pitch, this.pitcher, this.pitchTarget.x, this.pitchTarget.y);\n\n                pitch.x = breakEffect.x;\n                pitch.y = breakEffect.y;\n            }\n\n            this.log.notePitch(pitch, this.batter);\n\n            this.stage = 'swing';\n            if (this.humanControl != 'none' && (this.humanControl == 'both' || this.humanBatting())) {\n                callback();\n            } else {\n                this.awaitSwing(x, y, callback, pitch, this.pitchTarget);\n            }\n        }\n    },\n    battersEye: {\n        e: '',\n        n: ''\n    },\n    theSwing: function theSwing(x, y, callback, override) {\n        var pitch = this.pitchInFlight;\n        if (this.stage == 'swing') {\n            if (override) {\n                var result = this.swingResult = override;\n                callback = this.waitingCallback;\n            } else {\n                this.swingResult = result = {};\n                var bonus = this.batter.eye.bonus || 0,\n                    eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus;\n\n                if (x >= 0 && x <= 200) {\n                    this.batter.fatigue++;\n\n                    result.x = x - pitch.x;\n                    result.y = y - pitch.y;\n                    result.angle = this.setBatAngle();\n\n                    var recalculation = _baseballServices_services.Mathinator.getAngularOffset(result, result.angle);\n                    var precision = _baseballServices_services.Distribution.swing(eye);\n\n                    result.x = recalculation.x * precision;\n                    result.y = -5 + recalculation.y * precision;\n\n                    //log(recalculation.y, precision);\n\n                    result.looking = false;\n                    if (Math.abs(result.x) < 60 && Math.abs(result.y) < 35) {\n                        result.contact = true;\n                        this.field.determineSwingContactResult(result);\n                        // log(result.flyAngle, Math.floor(result.x), Math.floor(result.y));\n                        this.debug.push(result);\n                    } else {\n                        result.contact = false;\n                    }\n                } else {\n                    result.strike = pitch.x > 50 && pitch.x < 150 && pitch.y > 35 && pitch.y < 165;\n                    this.batter.eye.bonus = Math.max(0, eye - Math.sqrt(Math.pow(this.batter.eye.x - pitch.x, 2) + Math.pow(this.batter.eye.y - pitch.y, 2)) * 1.5);\n                    result.contact = false;\n                    result.looking = true;\n                    this.batter.eye.x = pitch.x;\n                    this.batter.eye.y = pitch.y;\n                }\n            }\n\n            // stealing bases\n            var field = this.field;\n            var team = this.batter.team;\n            if (team.stealAttempt === _baseballModelTeam.Team.RUNNER_GO || team.stealAttempt === _baseballModelTeam.Team.RUNNERS_DISCRETION) {\n                var thief = field.getLeadRunner();\n                if (thief instanceof _baseballModelPlayer.Player) {\n                    switch (thief) {\n                        case field.first:\n                            var base = 2;\n                            break;\n                        case field.second:\n                            base = 3;\n                            break;\n                        case field.third:\n                            base = 4;\n                    }\n                    var validToSteal = true;\n                    if (result.looking) {\n                        var count = this.umpire.count;\n                        if (count.strikes >= 2 && result.strike && count.outs >= 2) validToSteal = false;\n                        if (count.balls >= 3 && !result.strike && field.first) validToSteal = false;\n                    }\n                    if (result.foul || result.caught) {\n                        validToSteal = false;\n                    }\n                    var discretion = team.stealAttempt === 'go' || _baseballServices_services.Distribution.willSteal(pitch, this.pitcher.team.positions.catcher, thief, base);\n                    if (discretion && validToSteal) {\n                        thief.attemptSteal(this, base);\n                    }\n                    team.stealAttempt = _baseballModelTeam.Team.RUNNERS_DISCRETION;\n                }\n            }\n\n            this.log.noteSwing(result);\n            this.stage = 'pitch';\n\n            var half = this.half;\n            this.umpire.makeCall();\n            emit = false;\n            if (half != this.half) {\n                callback = this.startOpponentPitching;\n                var emit = !override;\n            }\n\n            if (typeof callback == 'function') {\n                if (this.humanControl != 'none' && (this.humanControl == 'both' || this.teams[this.humanControl] == this.pitcher.team)) {\n                    callback();\n                    if (emit) {\n                        if (this.opponentService && this.opponentConnected) {\n                            this.opponentService.emitSwing(result);\n                        }\n                    }\n                } else {\n                    this.awaitPitch(callback, result);\n                }\n            }\n        }\n    },\n    setBatAngle: function setBatAngle(x, y) {\n        var giraffe = this,\n            pitchInFlight = this.pitchInFlight,\n            swingResult = this.swingResult;\n        var origin = {\n            x: giraffe.batter.bats == 'right' ? -10 : 210,\n            y: 199\n        };\n        var swing = {\n            x: x ? x : pitchInFlight.x + swingResult.x,\n            y: y ? y : pitchInFlight.y + swingResult.y\n        };\n        return _baseballServices_services.Mathinator.battingAngle(origin, swing);\n    },\n    debugOut: function debugOut() {\n        log('slugging', this.debug.filter(function (a) {\n            return a.bases == 1;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 2;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 3;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 4;\n        }).length);\n        log('grounders', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < 0;\n        }).length, 'thrown out', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < 0 && a.thrownOut;\n        }).length);\n        log('flies/liners', this.debug.filter(function (a) {\n            return !a.foul && a.flyAngle > 0;\n        }).length, 'caught', this.debug.filter(function (a) {\n            return a.caught && a.flyAngle > 0;\n        }).length);\n\n        var PO = {};\n        this.debug.map(function (a) {\n            if (!a.fielder) return;\n            if (!PO[a.fielder]) {\n                PO[a.fielder] = 0;\n            }\n            if (!a.bases && a.fielder) {\n                PO[a.fielder]++;\n            }\n        });\n        log('fielding outs', JSON.stringify(PO));\n\n        var hitters = this.teams.away.lineup.concat(this.teams.home.lineup);\n        var atBats = [];\n        hitters.map(function (a) {\n            atBats = atBats.concat(a.getAtBats().map(function (ab) {\n                return ab.text;\n            }));\n        });\n\n        var LO = atBats.filter(function (ab) {\n            return ab == 'LO';\n        }).length;\n        var FO = atBats.filter(function (ab) {\n            return ab == 'FO';\n        }).length;\n        var GO = atBats.filter(function (ab) {\n            return ab == 'GO';\n        }).length;\n        var GIDP = atBats.filter(function (ab) {\n            return ab == '(IDP)';\n        }).length;\n        var SO = atBats.filter(function (ab) {\n            return ab == 'SO';\n        }).length;\n        var BB = atBats.filter(function (ab) {\n            return ab == 'BB';\n        }).length;\n        var SAC = atBats.filter(function (ab) {\n            return ab == 'SAC';\n        }).length;\n        var FC = atBats.filter(function (ab) {\n            return ab == 'FC';\n        }).length;\n        var CS = atBats.filter(function (ab) {\n            return ab == 'CS';\n        }).length;\n        var SB = atBats.filter(function (ab) {\n            return ab == 'SB';\n        }).length;\n\n        log('line outs', LO, 'fly outs', FO, 'groundouts', GO, 'strikeouts', SO, 'sacrifices', SAC, 'FC', FC, 'gidp', GIDP, 'CS', CS, 'total', LO + FO + GO + SO + SAC + FC + GIDP + CS);\n\n        log('BB', BB, 'SB', SB);\n        log('fouls', this.debug.filter(function (a) {\n            return a.foul;\n        }).length);\n        log('fatigue, home vs away');\n        var teams = this.teams;\n        var fatigue = { home: {}, away: {} };\n        _baseballServices_services.Iterator.each(this.teams.home.positions, function (key) {\n            var position = key;\n            fatigue.home[position] = teams.home.positions[position].fatigue;\n            fatigue.away[position] = teams.away.positions[position].fatigue;\n        });\n        console.table(fatigue);\n        console.table(this.scoreboard);\n        console.table(this.tally);\n    },\n    toData: function toData() {\n        var data = {};\n        data.half = this.half;\n        data.inning = this.inning;\n        data.tally = this.tally;\n        var giraffe = this;\n        var players = this.teams.away.lineup.concat(this.teams.home.lineup);\n        // note: bench not included\n        data.field = {\n            first: players.indexOf(this.field.first),\n            second: players.indexOf(this.field.second),\n            third: players.indexOf(this.field.third)\n        };\n        data.batter = players.indexOf(this.batter);\n        data.deck = players.indexOf(this.deck);\n        data.hole = players.indexOf(this.hole);\n        data.teams = {\n            home: {\n                name: giraffe.teams.home.name,\n                nameJ: giraffe.teams.home.nameJ\n            },\n            away: {\n                name: giraffe.teams.away.name,\n                nameJ: giraffe.teams.away.nameJ\n            }\n        };\n        data.umpire = {\n            says: giraffe.umpire.says,\n            count: {\n                strikes: giraffe.umpire.count.strikes,\n                balls: giraffe.umpire.count.balls,\n                outs: giraffe.umpire.count.outs\n            }\n        };\n        data.players = players.map(function (player) {\n            return player.serialize();\n        });\n        data.log = {\n            pitchRecord: giraffe.log.pitchRecord,\n            record: giraffe.log.record\n        };\n        data.gamesIntoSeason = this.gamesIntoSeason;\n        return data;\n    },\n    fromData: function fromData(data) {\n        this.half = data.half;\n        this.inning = data.inning;\n        this.tally = data.tally;\n        var giraffe = this;\n        var players = data.players.map(function (playerJson, index) {\n            var playerData = JSON.parse(playerJson);\n            if (index > 8) {\n                var side = 'home';\n                index = index - 9;\n            } else {\n                side = 'away';\n            }\n            var player = giraffe.teams[side].positions[playerData.position];\n            player.fromData(playerData);\n            giraffe.teams[side].lineup[index] = player;\n            player.resetStats(data.gamesIntoSeason);\n            return player;\n        });\n        this.field.first = players[data.field.first];\n        this.field.second = players[data.field.second];\n        this.field.third = players[data.field.third];\n        this.batter = players[data.batter];\n        this.deck = players[data.deck];\n        this.hole = players[data.hole];\n        this.umpire.says = data.umpire.says;\n        this.umpire.count = data.umpire.count;\n        this.teams.away.name = data.teams.away.name;\n        this.teams.away.nameJ = data.teams.away.nameJ;\n        this.teams.home.name = data.teams.home.name;\n        this.teams.home.nameJ = data.teams.home.nameJ;\n        this.log.pitchRecord = data.log.pitchRecord;\n        this.log.record = data.log.record;\n        this.log.stabilizeShortRecord();\n        this.gamesIntoSeason = data.gamesIntoSeason;\n        return this;\n    },\n    startOpponentPitching: null, // late function\n    pitchTarget: { x: 100, y: 100 },\n    pitchInFlight: {\n        x: 100,\n        y: 100,\n        breakDirection: [0, 0],\n        name: 'slider',\n        velocity: 50,\n        'break': 50,\n        control: 50\n    },\n    swingResult: {\n        x: 100, //difference to pitch location\n        y: 100, //difference to pitch location\n        strike: false,\n        foul: false,\n        caught: false,\n        contact: false,\n        looking: true,\n        bases: 0,\n        fielder: 'short',\n        outs: 0\n    },\n    playResult: {\n        batter: '',\n        fielder: ''\n    },\n    showPlayResultPanels: function showPlayResultPanels(batter) {\n        var batterOutcomes = {};\n        var atBat = batter.atBats.slice(0).pop();\n        var fielderOutcomes = {};\n        var n = function n() {\n            var n = Math.floor(Math.random() * 3);\n            return n ? n : '';\n        };\n        this.playResult = {\n            batter: 'B_placeholder' + n() || batterOutcomes[atBat] || 'batter/' + atBat,\n            fielder: 'F_placeholder' + n() || fielderOutcomes[atBat] || 'fielder/' + atBat\n        };\n    },\n    pitchSelect: function pitchSelect() {},\n    field: null,\n    teams: {\n        away: null,\n        home: null\n    },\n    log: null,\n    half: 'top',\n    inning: 1,\n    scoreboard: {\n        away: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        },\n        home: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        }\n    },\n    reset: function reset() {\n        this.scoreboard = {\n            away: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0,\n                5: 0,\n                6: 0,\n                7: 0,\n                8: 0,\n                9: 0\n            },\n            home: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0,\n                5: 0,\n                6: 0,\n                7: 0,\n                8: 0,\n                9: 0\n            }\n        };\n        this.resetTally();\n    },\n    resetTally: function resetTally() {\n        this.tally = {\n            away: {\n                H: 0,\n                R: 0,\n                E: 0\n            },\n            home: {\n                H: 0,\n                R: 0,\n                E: 0\n            }\n        };\n    },\n    tally: {\n        away: {\n            H: 0,\n            R: 0,\n            E: 0\n        },\n        home: {\n            H: 0,\n            R: 0,\n            E: 0\n        }\n    }\n};\n\nexports.Game = Game;\n\n},{\"baseball/Model/Field\":2,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":25,\"baseball/Utility/Log\":29,\"baseball/Utility/_utils\":30}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Manager = function Manager(team) {\n    this.init(team);\n};\n\nManager.prototype = {\n    constructor: Manager,\n    init: function init(team) {\n        this.team = team;\n    },\n    makeLineup: function makeLineup() {\n        var jerseyNumber = 1;\n        this.team.positions.pitcher = this.selectForSkill(this.team.bench, ['pitching']);\n        this.team.positions.pitcher.position = 'pitcher';\n        if (!this.team.positions.pitcher.number) {\n            this.team.positions.pitcher.number = jerseyNumber++;\n        }\n        this.team.positions.catcher = this.selectForSkill(this.team.bench, ['defense', 'catching'], 'right');\n        this.team.positions.catcher.position = 'catcher';\n        if (!this.team.positions.catcher.number) {\n            this.team.positions.catcher.number = jerseyNumber++;\n        }\n        _baseballServices_services.Iterator.each(this.team.bench, function (key, player) {\n            if (!player.number) {\n                player.number = jerseyNumber++;\n            }\n        });\n        this.team.positions.short = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.short.position = 'short';\n        this.team.positions.second = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.second.position = 'second';\n        this.team.positions.third = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.third.position = 'third';\n        this.team.positions.center = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.center.position = 'center';\n        this.team.positions.left = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.left.position = 'left';\n        this.team.positions.right = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.right.position = 'right';\n        this.team.positions.first = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'left');\n        this.team.positions.first.position = 'first';\n\n        this.team.lineup[3] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[3].order = 3;\n        this.team.lineup[2] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[2].order = 2;\n        this.team.lineup[4] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[4].order = 4;\n        this.team.lineup[0] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[0].order = 0;\n        this.team.lineup[1] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[1].order = 1;\n        this.team.lineup[5] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[5].order = 5;\n        this.team.lineup[6] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[6].order = 6;\n        this.team.lineup[7] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[7].order = 7;\n        this.team.lineup[8] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[8].order = 8;\n    },\n    selectForSkill: function selectForSkill(pool, skillset, requiredThrowingHandedness) {\n        if (this.team.bench.length || pool == this.team.positions) {\n            var selection = this.team.bench[0];\n            var rating = 0;\n            var index = 0;\n            _baseballServices_services.Iterator.each(pool, function (key, player) {\n                var skills = skillset.slice();\n                var cursor = player.skill;\n                var property = skills.shift();\n                while (property) {\n                    cursor = cursor[property];\n                    property = skills.shift();\n                }\n                if (!(player.order + 1) && cursor >= rating && (!requiredThrowingHandedness || player.throws == requiredThrowingHandedness)) {\n                    rating = cursor;\n                    selection = player;\n                    index = key;\n                }\n            });\n            if (pool == this.team.bench) {\n                delete this.team.bench[index];\n                this.team.bench = this.team.bench.filter(function (player) {\n                    return player instanceof selection.constructor;\n                });\n            }\n            return selection;\n        }\n        return 'no players available';\n    }\n};\n\nexports.Manager = Manager;\n\n},{\"baseball/Services/_services\":25}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar Player = function Player(team) {\n    this.init(team);\n    this.resetStats(this.team.game && this.team.game.gamesIntoSeason || 0);\n};\n\nPlayer.prototype = {\n    constructor: Player,\n    init: function init(team, hero) {\n        this.throws = Math.random() > 0.86 ? 'left' : 'right';\n        this.bats = Math.random() > 0.75 ? 'left' : 'right';\n        this.team = team;\n        this.skill = {};\n        this.eye = {\n            x: 100,\n            y: 100\n        };\n        this.pitching = { averaging: [] };\n        this.number = 0;\n        this.randomizeSkills(hero || Math.random() > 0.9);\n        var surnameKey = Math.floor(Math.random() * _baseballUtility_utils.data.surnames.length),\n            nameKey = Math.floor(Math.random() * _baseballUtility_utils.data.names.length);\n\n        this.name = _baseballUtility_utils.data.surnames[surnameKey] + ' ' + _baseballUtility_utils.data.names[nameKey];\n        var jSurname = _baseballUtility_utils.data.surnamesJ[surnameKey],\n            jGivenName = _baseballUtility_utils.data.namesJ[nameKey];\n        this.spaceName(jSurname, jGivenName);\n        this.surname = _baseballUtility_utils.data.surnames[surnameKey];\n        this.surnameJ = _baseballUtility_utils.data.surnamesJ[surnameKey];\n        this.atBats = [];\n    },\n    spaceName: function spaceName(jSurname, jGivenName) {\n        if (jSurname.length == 1 && jGivenName.length <= 2) jSurname += '・';\n        if (jGivenName.length == 1 && jSurname.indexOf('・') < 0 && jSurname.length <= 2) jSurname += '・';\n        this.nameJ = jSurname + jGivenName;\n        this.surnameJ = jSurname;\n    },\n    serialize: function serialize() {\n        var team = this.team;\n        delete this.team;\n        var data = JSON.stringify(this);\n        this.team = team;\n        return data;\n    },\n    fromData: function fromData(data) {\n        var giraffe = this;\n        _baseballServices_services.Iterator.each(data, function (key, value) {\n            giraffe[key] = value;\n        });\n        delete this.atBatObjects;\n        this.getAtBats();\n    },\n    resetStats: function resetStats() {\n        var gamesIntoSeason = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n        var offense = this.skill.offense;\n        var defense = this.skill.defense;\n        var randBetween = function randBetween(a, b, skill) {\n            var total = 0,\n                count = 0;\n            skill += '';\n            if (!skill) skill = '';\n            _baseballServices_services.Iterator.each(skill.split(' '), function (key, value) {\n                var skill = value;\n                if (offense[skill]) skill = offense[skill];\n                if (defense[skill]) skill = defense[skill];\n                if (isNaN(skill)) skill = 50;\n                total += skill;\n                count++;\n            });\n\n            skill = Math.sqrt(0.05 + Math.random() * 0.95) * (total / (count * 0.97));\n            return Math.floor(skill / 100 * (b - a) + a);\n        };\n        var IP, ER, GS, W, L;\n        if (this.skill.pitching > 65) {\n            IP = (this.skill.pitching - 65) * gamesIntoSeason / 20;\n            ER = IP / 9 * randBetween(800, 215, this.skill.pitching) / 100;\n            if (IP > gamesIntoSeason) {\n                //starter\n                GS = Math.floor(gamesIntoSeason / 5);\n                W = randBetween(GS * 0.1, GS * 0.8, this.skill.pitching / 1.20);\n                L = randBetween(GS - W, 0, this.skill.pitching / 3);\n            } else {\n                //reliever\n                GS = Math.floor(gamesIntoSeason / 40);\n                W = randBetween(0, GS * 0.6, this.skill.pitching);\n                L = randBetween(GS - W, 0, this.skill.pitching);\n            }\n        }\n        var pa = randBetween(gamesIntoSeason * 3, gamesIntoSeason * 5, 'speed eye');\n        var paRemaining = pa;\n        var bb = Math.floor(randBetween(0, 18, 'power eye') * paRemaining / 100);\n        paRemaining -= bb;\n        var ab = paRemaining;\n        var so = Math.floor(randBetween(25, 2, 'eye') * paRemaining / 100);\n        paRemaining -= so;\n        var h = Math.floor(randBetween(185, 372, 'eye power speed') * paRemaining / 1000);\n        paRemaining -= h;\n        var sb = randBetween(0, (h + bb) / 6, 'speed') | 0;\n        var cs = randBetween(sb, 0, 'speed eye') | 0;\n\n        var doubles = randBetween(0, h / 4, 'power speed');\n        var triples = randBetween(0, h / 12, 'speed');\n        var hr = Math.max(0, randBetween(-h / 20, h / 5, 'power eye'));\n        var r = randBetween(h / 8, (h + bb) / 3, 'speed') + hr;\n        var rbi = randBetween(h / 8, h / 2, 'power eye') + hr;\n        var hbp = randBetween(0, gamesIntoSeason / 25);\n        var sac = randBetween(0, gamesIntoSeason / 5, 'eye');\n\n        var chances = randBetween(0, gamesIntoSeason * 10, 'fielding');\n        var E = randBetween(chances / 10, 0, 'fielding');\n        var PO = chances - E;\n\n        this.stats = {\n            pitching: {\n                pitches: 0, // in game\n                GS: GS,\n                W: W,\n                L: L,\n                strikes: 0, // in game\n                K: 0, // in game\n                getK9: function getK9() {\n                    return this.K / (this.IP[0] / 9);\n                },\n                getERA: function getERA() {\n                    return 9 * this.ER / Math.max(1 / 3, this.IP[0] + this.IP[1] / 3);\n                },\n                ERA: null,\n                ER: ER,\n                H: 0, // in game\n                HR: 0, // in game\n                BB: 0, // in game\n                IP: [IP, 0],\n                WHIP: 0,\n                getWHIP: function getWHIP() {\n                    return (this.H + this.BB) / (this.IP[0] ? this.IP[0] : 1);\n                }\n            },\n            batting: {\n                getBA: function getBA() {\n                    return this.h / Math.max(1, this.ab);\n                },\n                getBABIP: function getBABIP() {\n                    return (this.h - this.hr) / (this.ab - this.so - this.hr + this.sac);\n                },\n                ba: null,\n                getOBP: function getOBP() {\n                    return (this.h + this.bb + this.hbp) / (this.ab + this.bb + this.hbp + this.sac);\n                },\n                obp: null,\n                getSLG: function getSLG() {\n                    return (this.h - this['2b'] - this['3b'] - this.hr + 2 * this['2b'] + 3 * this['3b'] + 4 * this.hr) / this.ab;\n                },\n                slg: null,\n                pa: pa,\n                ab: ab,\n                so: so,\n                bb: bb,\n                h: h,\n                '2b': doubles,\n                '3b': triples,\n                hr: hr,\n                r: r,\n                rbi: rbi,\n                hbp: hbp,\n                sac: sac,\n                sb: sb,\n                cs: cs\n            },\n            fielding: {\n                E: E,\n                PO: PO, // should depend on position\n                A: Math.floor(Math.random() * 5) + 1 // ehh should depend on position\n            }\n        };\n        this.stats.pitching.ERA = this.stats.pitching.getERA();\n        this.stats.pitching.K9 = this.stats.pitching.getK9();\n        this.stats.pitching.WHIP = this.stats.pitching.getWHIP();\n        this.stats.batting.ba = this.stats.batting.getBA();\n    },\n    atBatObjects: [],\n    getAtBats: function getAtBats() {\n        if (this.atBats.length > this.atBatObjects.length) {\n            this.atBatObjects = this.atBats.map(function (item) {\n                return new _baseballModel_models.AtBat(item);\n            });\n        }\n        return this.atBatObjects;\n    },\n    recordRBI: function recordRBI() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.RBI_INDICATOR;\n    },\n    recordInfieldHit: function recordInfieldHit() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.INFIELD_HIT_INDICATOR;\n    },\n    getBaseRunningTime: function getBaseRunningTime() {\n        return _baseballServices_services.Mathinator.baseRunningTime(this.skill.offense.speed);\n    },\n    attemptSteal: function attemptSteal(game, base) {\n        var pitch = game.pitchInFlight;\n        var success = _baseballServices_services.Distribution.stealSuccess(pitch, game.pitcher.team.positions.catcher, this, base, this.team.stealAttempt === _baseballModel_models.Team.RUNNERS_DISCRETION);\n        if (success) {\n            game.swingResult.stoleABase = this;\n            game.swingResult.caughtStealing = null;\n        } else {\n            game.swingResult.stoleABase = null;\n            game.swingResult.caughtStealing = this;\n        }\n        return this;\n    },\n    randomizeSkills: function randomizeSkills(hero, allPitches) {\n        this.hero = hero;\n        var giraffe = this;\n        var randValue = function randValue(isPitching) {\n            var value = Math.floor(Math.pow(Math.random(), 0.75) * 80 + Math.random() * 20);\n            if (hero) {\n                value += Math.floor((100 - value) * Math.max(Math.random(), isPitching ? 0 : 0.65));\n            }\n            if (isPitching) giraffe.pitching.averaging.push(value);\n            return value;\n        };\n        this.skill.offense = {\n            eye: randValue(),\n            power: randValue(),\n            speed: randValue()\n        };\n        this.skill.defense = {\n            catching: randValue(),\n            fielding: randValue(),\n            speed: randValue(),\n            throwing: randValue()\n        };\n        this.pitching.averaging = [];\n        this.pitching['4-seam'] = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        this.pitching.slider = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        if (Math.random() < 0.17 || allPitches) {\n            // can pitch!\n            if (Math.random() > 0.6 || allPitches) {\n                this.pitching['2-seam'] = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.18 || allPitches) {\n                this.pitching.fork = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() > 0.77 || allPitches) {\n                this.pitching.cutter = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.21 || allPitches) {\n                this.pitching.sinker = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.4 || allPitches) {\n                this.pitching.curve = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.9 || allPitches) {\n                this.pitching.change = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n        }\n        this.skill.pitching = Math.floor(this.pitching.averaging.reduce(function (prev, current) {\n            return prev + current;\n        }) / this.pitching.averaging.length + this.pitching.averaging.length * 3);\n        delete this.pitching.averaging;\n    },\n    getSurname: function getSurname() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.surnameJ : this.surname;\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    getUniformNumber: function getUniformNumber() {\n        return (0, _baseballUtility_utils.text)('#') + this.number;\n    },\n    getOrder: function getOrder() {\n        return (0, _baseballUtility_utils.text)([' 1st', ' 2nd', ' 3rd', ' 4th', ' 5th', ' 6th', '7th', ' 8th', ' 9th'][this.order]);\n    },\n    eye: {},\n    fatigue: 0,\n    name: '',\n    number: 0,\n    position: '',\n    atBats: []\n};\n\nexports.Player = Player;\n\n},{\"baseball/Model/_models\":8,\"baseball/Services/_services\":25,\"baseball/Utility/_utils\":30}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar Team = function Team(game) {\n    this.init(game);\n};\n\nTeam.RUNNERS_DISCRETION = 'runnersDiscretion';\nTeam.RUNNER_GO = 'go';\n\nTeam.prototype = {\n    constructor: Team,\n    init: function init(game) {\n        this.pickName();\n        this.lineup = [];\n        this.bench = [];\n        this.bullpen = [];\n        this.positions = {\n            pitcher: null,\n            catcher: null,\n            first: null,\n            second: null,\n            short: null,\n            third: null,\n            left: null,\n            center: null,\n            right: null\n        };\n        this.manager = new _baseballModelManager.Manager(this);\n        if (game !== 'no init') {\n            this.game = game;\n            for (var j = 0; j < 20; j++) {\n                this.bench.push(new _baseballModelPlayer.Player(this));\n            }\n            if (this.bench.length == 20) {\n                this.manager.makeLineup();\n            }\n        }\n    },\n    pickName: function pickName() {\n        var teamNameIndex = Math.floor(Math.random() * _baseballUtility_utils.data.teamNames.length);\n        this.name = _baseballUtility_utils.data.teamNames[teamNameIndex];\n        this.nameJ = _baseballUtility_utils.data.teamNamesJ[teamNameIndex];\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    stealAttempt: Team.RUNNERS_DISCRETION,\n    lineup: [],\n    positions: {},\n    manager: null,\n    bench: [],\n    bullpen: [],\n    nowBatting: 0,\n    expanded: 'Player&'\n};\n\nexports.Team = Team;\n\n},{\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":30}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar Umpire = function Umpire(game) {\n    this.init(game);\n};\n\nUmpire.prototype = {\n    constructor: Umpire,\n    init: function init(game) {\n        this.game = game;\n        this.playBall();\n    },\n    count: {\n        strikes: 0,\n        balls: 0,\n        outs: 0\n    },\n    playBall: function playBall() {\n        var game = this.game;\n        game.half = 'top';\n        game.inning = 1;\n        game.batter = game.teams.away.lineup[0];\n        game.batterRunner = game.teams.away.lineup[0];\n        game.deck = game.teams.away.lineup[1];\n        game.hole = game.teams.away.lineup[2];\n        game.pitcher = game.teams.home.positions.pitcher;\n        var n = '一回のオモテ、' + game.teams.away.getName() + 'の攻撃対' + game.teams.home.getName() + '、ピッチャーは' + game.teams.home.positions.pitcher.getName() + '。',\n            e = 'Top 1, ' + game.teams.away.name + ' offense vs. ' + game.teams.home.positions.pitcher.name + ' starting for ' + game.teams.home.name;\n        game.log.note(e, n);\n        game.log.noteBatter(game.batter);\n    },\n    makeCall: function makeCall() {\n        this.says = '';\n        var game = this.game;\n        var result = game.swingResult;\n        var pitcher = game.pitcher;\n        var batter = game.batter;\n        var field = game.field;\n\n        if (game.swingResult.fielder) {\n            var fielder = game.teams[game.half == 'top' ? 'home' : 'away'].positions[result.fielder];\n        } else {\n            fielder = null;\n        }\n\n        game.batterRunner = game.batter;\n\n        if (result.stoleABase) {\n            var thief = result.stoleABase;\n            thief.atBats.push(_baseballUtility_utils.Log.prototype.STOLEN_BASE);\n            switch (thief) {\n                case field.first:\n                    field.second = thief;\n                    field.first = null;\n                    break;\n                case field.second:\n                    field.third = thief;\n                    field.second = null;\n                    break;\n                case field.third:\n                    field.third = null;\n                    thief.stats.batting.r++;\n                    thief.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    this.runScores();\n            }\n            thief.stats.batting.sb++;\n        }\n        if (result.caughtStealing) {\n            game.teams[game.half == 'top' ? 'home' : 'away'].positions['catcher'].stats.fielding.PO++;\n            this.count.outs++;\n            thief = result.caughtStealing;\n            thief.stats.batting.cs++;\n            thief.atBats.push(_baseballUtility_utils.Log.prototype.CAUGHT_STEALING);\n            switch (thief) {\n                case field.first:\n                    field.first = null;\n                    break;\n                case field.second:\n                    field.second = null;\n                    break;\n                case field.third:\n                    field.third = null;\n            }\n            if (this.count.outs >= 3) {\n                this.says = 'Three outs, change.';\n                this.count.outs = this.count.balls = this.count.strikes = 0;\n                pitcher.stats.pitching.IP[0]++;\n                pitcher.stats.pitching.IP[1] = 0;\n                return this.changeSides();\n            }\n        }\n\n        pitcher.stats.pitching.pitches++;\n        if (result.looking) {\n            if (result.strike) {\n                this.count.strikes++;\n                pitcher.stats.pitching.strikes++;\n            } else {\n                this.count.balls++;\n            }\n        } else {\n            pitcher.stats.pitching.strikes++;\n            if (result.contact) {\n                game.passMinutes(1);\n                if (result.caught) {\n                    batter.stats.batting.pa++;\n                    pitcher.stats.pitching.IP[1]++;\n                    if (result.sacrificeAdvances.length && this.count.outs < 2) {\n                        batter.stats.batting.sac++;\n                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SACRIFICE);\n                        this.advanceRunners(false, null, result.sacrificeAdvances);\n                    } else {\n                        batter.stats.batting.ab++;\n                        if (result.flyAngle < 15) {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.LINEOUT);\n                        } else {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FLYOUT);\n                        }\n                    }\n                    this.count.outs++;\n                    fielder.stats.fielding.PO++;\n                    this.newBatter();\n                } else {\n                    if (result.foul) {\n                        this.count.strikes++;\n                        if (this.count.strikes > 2) this.count.strikes = 2;\n                    } else {\n                        batter.stats.batting.pa++;\n                        batter.stats.batting.ab++;\n                        if (result.firstOut) {\n                            game.field[result.firstOut] = null;\n                            result.additionalOuts.map(function (runner) {\n                                if (runner !== 'batter') {\n                                    game.field[runner] = null;\n                                }\n                            });\n                            this.count.outs += result.additionalOuts.length;\n                        }\n                        if (result.fieldersChoice && this.count.outs < 2) {\n                            result.bases = 0;\n                            this.count.outs++;\n                            fielder.stats.fielding.PO++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FIELDERS_CHOICE);\n                            this.advanceRunners(false, result.fieldersChoice);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            this.reachBase();\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        } else if (result.fieldersChoice) {\n                            result.bases = 0;\n                            result.thrownOut = true;\n                        }\n                        if (result.thrownOut) {\n                            this.count.outs++;\n                            fielder.stats.fielding.PO++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            if (this.count.outs < 3) {\n                                this.advanceRunners(false);\n                            }\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        }\n                        if (result.hitByPitch) {\n                            batter.stats.batting.ab--;\n                        }\n                        if (result.bases) {\n                            if (!result.error) {\n                                game.tally[game.half == 'top' ? 'away' : 'home'][_baseballUtility_utils.Log.prototype.SINGLE]++;\n                                pitcher.stats.pitching.H++;\n                            } else {\n                                if (result.bases > 0) {\n                                    game.tally[game.half == 'top' ? 'home' : 'away'].E++;\n                                    fielder.stats.fielding.E++;\n                                }\n                            }\n                            var bases = result.bases;\n                            switch (bases) {\n                                case 0:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                                    break;\n                                case 1:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                    } else {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SINGLE);\n                                        batter.stats.batting.h++;\n                                    }\n                                    break;\n                                case 2:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.DOUBLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['2b']++;\n                                    break;\n                                case 3:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.TRIPLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['3b']++;\n                                    break;\n                                case 4:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.HOMERUN);\n                                    pitcher.stats.pitching.HR++;\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting.hr++;\n                                    break;\n                            }\n                            if (bases > 0 && bases < 4 && !result.error) {\n                                if (['left', 'right', 'center'].indexOf(result.fielder) == -1) {\n                                    batter.recordInfieldHit();\n                                }\n                            }\n                            if (bases >= 1) {\n                                this.advanceRunners();\n                                this.reachBase();\n                                bases -= 1;\n                            }\n                            while (bases > 0) {\n                                bases -= 1;\n                                this.advanceRunners();\n                            }\n                            this.newBatter();\n                        }\n                    }\n                }\n            } else {\n                this.count.strikes++;\n            }\n        }\n\n        this.says = this.count.balls + ' and ' + this.count.strikes;\n\n        result.outs = this.count.outs;\n\n        if (this.count.strikes > 2) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.ab++;\n            batter.stats.batting.so++;\n            pitcher.stats.pitching.K++;\n            this.count.outs++;\n            pitcher.stats.pitching.IP[1]++;\n            this.count.balls = this.count.strikes = 0;\n            this.says = 'Strike three. Batter out.';\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.STRIKEOUT);\n            this.newBatter();\n        }\n        if (this.count.balls > 3) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.bb++;\n            pitcher.stats.pitching.BB++;\n            this.says = 'Ball four.';\n            this.count.balls = this.count.strikes = 0;\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.WALK);\n            this.advanceRunners(true).reachBase().newBatter();\n        }\n        if (this.count.outs > 2) {\n            this.says = 'Three outs, change.';\n            this.count.outs = this.count.balls = this.count.strikes = 0;\n            pitcher.stats.pitching.IP[0]++;\n            pitcher.stats.pitching.IP[1] = 0;\n            this.changeSides();\n        }\n    },\n    reachBase: function reachBase() {\n        var game = this.game;\n        game.field.first = game.batter;\n        game.field.first.fatigue += 2;\n        return this;\n    },\n    advanceRunners: function advanceRunners(isWalk, fieldersChoice, sacrificeAdvances) {\n        isWalk = !!isWalk;\n        var game = this.game;\n        var first = game.field.first,\n            second = game.field.second,\n            third = game.field.third,\n            swing = game.swingResult;\n\n        if (isWalk) {\n            if (first) {\n                if (second) {\n                    if (third) {\n                        //bases loaded\n                        game.batter.recordRBI();\n                        game.batter.stats.batting.rbi++;\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        third.stats.batting.r++;\n                        game.pitcher.stats.pitching.ER++;\n                        game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                        game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                        game.field.third = second;\n                        game.field.second = first;\n                        first = null;\n                    } else {\n                        // 1st and second\n                        game.field.third = second;\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                } else {\n                    if (third) {\n                        // first and third\n                        game.field.second = first;\n                        game.field.first = null;\n                    } else {\n                        // first only\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                }\n            } else {\n                // no one on first\n            }\n        } else {\n                if (fieldersChoice) {\n                    game.field[fieldersChoice] = null;\n                    first = game.field.first;\n                    second = game.field.second;\n                    third = game.field.third;\n                }\n                var canAdvance = function canAdvance() {\n                    return true;\n                };\n                if (sacrificeAdvances) {\n                    canAdvance = function (position) {\n                        switch (position) {\n                            case 'first':\n                                return sacrificeAdvances.indexOf('first') > -1 && !game.field.second;\n                            case 'second':\n                                return sacrificeAdvances.indexOf('second') > -1 && !game.field.third;\n                            case 'third':\n                                return sacrificeAdvances.indexOf('third') > -1;\n                        }\n                    };\n                }\n                if (third && canAdvance('third')) {\n                    // run scored\n                    game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                    this.runScores();\n                    if (game.batter != third) {\n                        game.batter.recordRBI();\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    }\n                    game.batter.stats.batting.rbi++;\n                    third.stats.batting.r++;\n                    game.pitcher.stats.pitching.ER++;\n                    game.field.third = null;\n                }\n                if (second && canAdvance('second')) {\n                    game.field.third = second;\n                    game.field.second = null;\n                    if (second != game.batter && !sacrificeAdvances && Math.random() * (second.skill.offense.speed + 120) > 90) {\n                        this.runScores();\n                        if (game.batter != second) {\n                            game.batter.recordRBI();\n                            second.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        }\n                        game.field.third = null;\n                    }\n                }\n                if (first && canAdvance('first')) {\n                    game.field.second = first;\n                    game.field.first = null;\n                    if (first != game.batter && !game.field.third && !sacrificeAdvances && Math.random() * (first.skill.offense.speed + 120) > 95) {\n                        game.field.third = first;\n                        game.field.second = null;\n                    }\n                }\n            }\n        return this;\n    },\n    runScores: function runScores() {\n        var game = this.game;\n        game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n    },\n    newBatter: function newBatter() {\n        var game = this.game;\n        game.passMinutes(2);\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.count.balls = this.count.strikes = 0;\n        game.log.notePlateAppearanceResult(game);\n        var team = game.half == 'bottom' ? game.teams.home : game.teams.away;\n        game.lastBatter = game.batter;\n        game.batter = team.lineup[(team.nowBatting + 1) % 9];\n        game.deck = team.lineup[(team.nowBatting + 2) % 9];\n        game.hole = team.lineup[(team.nowBatting + 3) % 9];\n        team.nowBatting = (team.nowBatting + 1) % 9;\n        if (this.count.outs < 3) {\n            game.log.noteBatter(game.batter);\n        }\n        game.showPlayResultPanels(game.lastBatter);\n    },\n    changeSides: function changeSides() {\n        var game = this.game;\n        game.passMinutes(5);\n        game.swingResult = {};\n        game.swingResult.looking = true; // hide bat\n        game.pitchInFlight.x = null; // hide ball\n        game.pitchInFlight.y = null; // hide ball\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        var offense, defense;\n        game.field.first = null;\n        game.field.second = null;\n        game.field.third = null;\n        if (game.half == 'top') {\n            if (game.inning == 9 && game.tally.home.R > game.tally.away.R) {\n                return game.end();\n            }\n            game.half = 'bottom';\n        } else {\n            if (game.inning + 1 > 9) {\n                return game.end();\n            }\n            game.inning++;\n            game.half = 'top';\n        }\n        offense = game.half == 'top' ? 'away' : 'home';\n        defense = game.half == 'top' ? 'home' : 'away';\n        var n = game.inning + '回の' + (game.half == 'top' ? 'オモテ' : 'ウラ') + '、' + game.teams[game.half == 'top' ? 'away' : 'home'].getName() + 'の攻撃。',\n            e = (game.half == 'top' ? 'Top' : 'Bottom') + ' ' + game.inning;\n        game.log.note(e, n);\n        var team = game.teams[offense];\n        game.batter = team.lineup[team.nowBatting];\n        game.batterRunner = game.batter;\n        game.deck = team.lineup[(team.nowBatting + 1) % 9];\n        game.hole = team.lineup[(team.nowBatting + 2) % 9];\n\n        game.pitcher = game.teams[defense].positions.pitcher;\n        game.log.noteBatter(game.batter);\n        game.autoPitchSelect();\n    },\n    says: 'Play ball!',\n    game: null\n};\n\nexports.Umpire = Umpire;\n\n},{\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":30}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nexports.AtBat = _baseballModelAtBat.AtBat;\nexports.Field = _baseballModelField.Field;\nexports.Game = _baseballModelGame.Game;\nexports.Manager = _baseballModelManager.Manager;\nexports.Player = _baseballModelPlayer.Player;\nexports.Team = _baseballModelTeam.Team;\nexports.Umpire = _baseballModelUmpire.Umpire;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _meshBall = require('./mesh/Ball');\n\nvar _meshMound = require('./mesh/Mound');\n\nvar _meshBase = require('./mesh/Base');\n\nvar _meshField = require('./mesh/Field');\n\nvar _meshGrass = require('./mesh/Grass');\n\nvar _meshHomeDirt = require('./mesh/HomeDirt');\n\nvar _meshBattersEye = require('./mesh/BattersEye');\n\nvar _meshWall = require('./mesh/Wall');\n\nvar _sceneLighting = require('./scene/lighting');\n\n/**\n * the constants should be tuned so that the camera coincides with the DOM's strike zone overlay\n * @type {number}\n */\nvar VERTICAL_CORRECTION = -0.2;\nvar INITIAL_CAMERA_DISTANCE = 8;\n\nif (typeof THREE !== 'undefined') {\n    var AHEAD = new THREE.Vector3(0, VERTICAL_CORRECTION, -60.5);\n    var INITIAL_POSITION = new THREE.Vector3(0, VERTICAL_CORRECTION, INITIAL_CAMERA_DISTANCE);\n}\n\n/**\n * manager for the rendering loop\n */\n\nvar Loop = (function () {\n    function Loop(elementClass) {\n        _classCallCheck(this, Loop);\n\n        this.elementClass = elementClass;\n        this.main();\n        window.loop = this;\n    }\n\n    /**\n     * individual objects<AbstractMesh> can attach and detach to the manager to be rendered\n     */\n\n    _createClass(Loop, [{\n        key: 'loop',\n        value: function loop() {\n            requestAnimationFrame(this.loop.bind(this));\n            this.panToward(this.target);\n            var omt = this.overwatchMoveTarget;\n            this.moveToward(this.moveTarget || {\n                x: omt.x,\n                y: omt.y + 12,\n                z: omt.z\n            });\n            this.objects.map(function (i) {\n                return i.animate();\n            });\n            //this.breathe();\n            this.renderer.render(this.scene, this.camera);\n        }\n\n        /**\n         * initialize lights, camera, action\n         */\n    }, {\n        key: 'main',\n        value: function main() {\n            this.objects = [];\n            if (this.getThree()) {\n\n                var THREE = this.THREE;\n\n                var scene = this.scene = new THREE.Scene();\n                this.attach();\n                this.lighting = _sceneLighting.lighting;\n                _sceneLighting.lighting.addTo(scene);\n                var camera = this.camera = new THREE.PerspectiveCamera(60, this.getAspect(), 0.1, 500);\n\n                this.target = new THREE.Vector3(0, 0, -60.5);\n                this._target = new THREE.Vector3(0, 0, -60.5);\n                this.moveTarget = camera.position;\n\n                this.resetCamera();\n                this.loop();\n            }\n        }\n\n        /**\n         * used by the background layer\n         */\n    }, {\n        key: 'addStaticMeshes',\n        value: function addStaticMeshes() {\n            new _meshField.Field().join(this);\n            new _meshMound.Mound().join(this);\n            new _meshHomeDirt.HomeDirt().join(this);\n            new _meshGrass.Grass().join(this);\n            new _meshGrass.Grass(this, true);\n            new _meshBattersEye.BattersEye().join(this);\n\n            new _meshWall.Wall(this, -30);\n            new _meshWall.Wall(this, -15);\n            new _meshWall.Wall(this, 15);\n            new _meshWall.Wall(this, 30);\n\n            new _meshBase.Base(this, 'first');\n            new _meshBase.Base(this, 'second');\n            new _meshBase.Base(this, 'third');\n            new _meshBase.Base(this, 'home');\n        }\n\n        /**\n         * experimental camera bobbing\n         */\n    }, {\n        key: 'breathe',\n        value: function breathe() {\n            var pos = this.camera.position;\n            var x = pos.x,\n                y = pos.y,\n                z = pos.z;\n            var rate = 0.0005 * this.bob || 1;\n            if (y > 0.6) {\n                this.bob = -1;\n            } else if (y < -0.6) {\n                this.bob = 1;\n            }\n            //pos.x += rate;\n            pos.y += rate;\n            pos.z += rate;\n        }\n    }, {\n        key: 'getThree',\n        value: function getThree() {\n            if (this.THREE === Loop.prototype.THREE && typeof window === 'object' && window.THREE) {\n                return this.THREE = window.THREE;\n            }\n            return false;\n        }\n\n        /**\n         * attach to the DOM\n         * @returns {THREE.WebGLRenderer}\n         */\n    }, {\n        key: 'attach',\n        value: function attach() {\n            window.removeEventListener('resize', this.onResize.bind(this), false);\n            window.addEventListener('resize', this.onResize.bind(this), false);\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            element.innerHTML = '';\n            var THREE = this.THREE;\n            var renderer = new THREE.WebGLRenderer({ alpha: true });\n            this.setSize(renderer);\n            //renderer.setClearColor(0xffffff, 0);\n\n            element.appendChild(renderer.domElement);\n\n            this.renderer = renderer;\n            return renderer;\n        }\n\n        /**\n         * higher FOV on lower view widths\n         */\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            this.camera.aspect = this.getAspect();\n            this.camera.fov = 90 - 30 * (element.offsetWidth / 1000);\n            this.camera.updateProjectionMatrix();\n            this.setSize(this.renderer);\n        }\n    }, {\n        key: 'setSize',\n        value: function setSize(renderer) {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            var width = element.offsetWidth;\n            renderer.setSize(width, HEIGHT);\n        }\n    }, {\n        key: 'getAspect',\n        value: function getAspect() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            return element.offsetWidth / HEIGHT;\n        }\n\n        /**\n         * incrementally pan toward the vector given\n         * @param vector\n         */\n    }, {\n        key: 'panToward',\n        value: function panToward(vector) {\n            var maxIncrement = this.panSpeed;\n            this.forAllLoops(function (loop) {\n                var target = loop._target;\n                target.x = target.x + Math.max(Math.min((vector.x - target.x) / 100, maxIncrement), -maxIncrement);\n                target.y = target.y + Math.max(Math.min((vector.y - target.y) / 100, maxIncrement), -maxIncrement);\n                target.z = target.z + Math.max(Math.min((vector.z - target.z) / 100, maxIncrement), -maxIncrement);\n                loop.camera.lookAt(target);\n            });\n        }\n\n        /**\n         * incrementally move the camera to the vector\n         * @param vector\n         */\n    }, {\n        key: 'moveToward',\n        value: function moveToward(vector) {\n            var maxIncrement = this.moveSpeed;\n            this.forAllLoops(function (loop) {\n                var position = loop.camera.position;\n                position.x += Math.max(Math.min(vector.x - position.x, maxIncrement), -maxIncrement);\n                position.y += Math.max(Math.min(vector.y - position.y, maxIncrement), -maxIncrement);\n                position.z += Math.max(Math.min(vector.z - position.z, maxIncrement), -maxIncrement);\n            });\n        }\n\n        /**\n         * setting a target will cause the camera to pan toward it using the pan method above\n         * @param vector\n         * @param panSpeed\n         */\n    }, {\n        key: 'setLookTarget',\n        value: function setLookTarget(vector, panSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.panSpeed = panSpeed || 0.9;\n                loop.panning = vector !== AHEAD;\n                loop.target = vector;\n            });\n        }\n\n        /**\n         * setting a target will cause the camera to move toward it using the incremental method above\n         * @param vector\n         * @param moveSpeed\n         */\n    }, {\n        key: 'setMoveTarget',\n        value: function setMoveTarget(vector, moveSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.moveSpeed = moveSpeed || 0.7;\n                loop.moveTarget = vector;\n                loop.overwatchMoveTarget = null;\n            });\n        }\n    }, {\n        key: 'setOverwatchMoveTarget',\n        value: function setOverwatchMoveTarget(vector, moveSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.moveSpeed = moveSpeed || 0.7;\n                loop.overwatchMoveTarget = vector;\n                loop.moveTarget = null;\n            });\n        }\n    }, {\n        key: 'resetCamera',\n        value: function resetCamera() {\n            var moveSpeed = 0.5;\n            if (this.camera.position.z !== INITIAL_POSITION.z) {\n                moveSpeed = 2.5;\n            }\n            this.setLookTarget(AHEAD, moveSpeed);\n            this.setMoveTarget(INITIAL_POSITION, moveSpeed / 10);\n        }\n    }, {\n        key: 'moveCamera',\n        value: function moveCamera(x, y, z) {\n            if (typeof x === 'object') {\n                return this.moveCamera(x.x, x.y, x.z);\n            }\n            this.forAllLoops(function (loop) {\n                loop.camera.position.x = x;\n                loop.camera.position.y = y;\n                loop.camera.position.z = z;\n            });\n        }\n\n        /**\n         * execute the function on all loops\n         * @param fn {Function}\n         */\n    }, {\n        key: 'forAllLoops',\n        value: function forAllLoops(fn) {\n            if (this.background) {\n                fn(this.background);\n            }\n            if (this.foreground) {\n                fn(this.foreground);\n            }\n            fn(this);\n        }\n    }, {\n        key: 'test',\n        value: function test() {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.setType('4-seam');\n            //with (ball.mesh.rotation) {x=0,y=0,z=0}; ball.rotation = {x:0.00, y:0.00};\n            ball.animate = function () {\n                ball.rotate();\n            };\n            ball.join(this);\n            // Baseball.service.Animator.loop.test();\n        }\n    }, {\n        key: 'testTrajectory',\n        value: function testTrajectory(data) {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.deriveTrajectory(data || {\n                splay: -35,\n                travelDistance: 135,\n                flyAngle: -15,\n                x: 100,\n                y: 100\n            }, {\n                x: 0, y: 0\n            });\n            ball.join(this);\n        }\n    }]);\n\n    return Loop;\n})();\n\nvar HEIGHT = 700;\nLoop.VERTICAL_CORRECTION = VERTICAL_CORRECTION;\nLoop.INITIAL_CAMERA_DISTANCE = INITIAL_CAMERA_DISTANCE;\nLoop.prototype.THREE = {};\nLoop.prototype.constructors = {\n    Ball: _meshBall.Ball,\n    Mound: _meshMound.Mound,\n    Field: _meshField.Field\n};\n\nexports.Loop = Loop;\n\n},{\"./mesh/Ball\":11,\"./mesh/Base\":12,\"./mesh/BattersEye\":13,\"./mesh/Field\":14,\"./mesh/Grass\":15,\"./mesh/HomeDirt\":16,\"./mesh/Mound\":18,\"./mesh/Wall\":19,\"./scene/lighting\":20}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _Loop = require('../Loop');\n\n/**\n * Each class should adhere to this pattern.\n * When a scene object has been positioned correctly and its trajectory set,\n * it should use ::join to attach itself to the scene.\n *\n * While attached, the animate method will be called on each frame.\n * Typically the animate method can run through the trajectory queue and then\n * detach itself. @see Ball\n *\n * For static meshes the animate method will do nothing, leaving the mesh permanently attached.\n */\n\nvar AbstractMesh = (function () {\n    function AbstractMesh() {\n        _classCallCheck(this, AbstractMesh);\n    }\n\n    /**\n     * since we are using (0, 0, 0) vector for the center of the strike zone, the actual ground level will be offset\n     * downward\n     * @type {number}\n     */\n\n    _createClass(AbstractMesh, [{\n        key: 'attach',\n\n        /**\n         * attach and detach should be used to maintain the correct object list\n         * todo use the built in object list of the scene object\n         */\n        value: function attach() {\n            var objects = this.loop.objects;\n            if (objects.indexOf(this) === -1) {\n                objects.push(this);\n            }\n            this.loop.scene.add(this.mesh);\n        }\n    }, {\n        key: 'detach',\n        value: function detach() {\n            var objects = this.loop.objects;\n            var index = objects.indexOf(this);\n            if (index !== -1) {\n                this.loop.objects.splice(index, 1);\n            }\n            this.loop.scene.remove(this.mesh);\n        }\n    }, {\n        key: 'join',\n        value: function join(loop) {\n            this.loop = loop || this.loop;\n            if (this.loop instanceof _Loop.Loop) {\n                this.attach();\n            }\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return AbstractMesh;\n})();\n\nAbstractMesh.WORLD_BASE_Y = -4;\n\nexports.AbstractMesh = AbstractMesh;\n\n},{\"../Loop\":9}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nvar _Indicator = require('./Indicator');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\n/**\n * on the DOM the pitch zone is 200x200 pixels\n * here we scale the strike zone to 4.2 units (feet)\n * for display purposes. It is only approximately related to actual pitch zone dimensions.\n * @type {number}\n */\nvar SCALE = 2.1 / 100;\n\nvar INDICATOR_DEPTH = -5;\n\nvar Ball = (function (_AbstractMesh) {\n    _inherits(Ball, _AbstractMesh);\n\n    /**\n     *\n     * @param loop\n     * @param trajectory {Array<Vector3>} incremental vectors applied each frame\n     * e.g. for 1 second of flight time there should be 60 incremental vectors\n     */\n\n    function Ball(loop, trajectory) {\n        _classCallCheck(this, Ball);\n\n        _get(Object.getPrototypeOf(Ball.prototype), 'constructor', this).call(this);\n        if (!(loop instanceof _Loop.Loop) && loop instanceof Array) {\n            trajectory = loop;\n        }\n        this.hasIndicator = false;\n        this.trajectory = trajectory ? trajectory : [];\n        this.breakingTrajectory = [];\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n        this.setType('4-seam', 1);\n        this.bounce = 1;\n    }\n\n    _createClass(Ball, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            /** @see threex.sportballs */\n            var baseURL = 'public/';\n            var THREE = window.THREE;\n            var loader = new THREE.TextureLoader();\n            var textureColor = loader.load(baseURL + 'images/BaseballColor.jpg');\n            var textureBump = loader.load(baseURL + 'images/BaseballBump.jpg');\n            var geometry = new THREE.SphereGeometry(0.36, 32, 16); // real scale is 0.12\n            var material = new THREE.MeshPhongMaterial({\n                map: textureColor,\n                bumpMap: textureBump,\n                bumpScale: 0.01\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n\n        /**\n         * Leave an indicator when crossing the home plate front plane,\n         * and rotate while moving (default 1000 RPM)\n         */\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var frame = this.trajectory.shift(),\n                pos = this.mesh.position;\n\n            if (frame) {\n                pos.x += frame.x;\n                pos.y += frame.y * this.bounce;\n                pos.z += frame.z;\n                if (pos.y < _AbstractMesh2.AbstractMesh.WORLD_BASE_Y) {\n                    this.bounce *= -1;\n                }\n                if (frame.x + frame.y + frame.z !== 0) {\n                    this.rotate();\n                }\n            }\n            if (pos.z > INDICATOR_DEPTH && !this.hasIndicator) {\n                this.spawnIndicator();\n            }\n            if (!frame) {\n                this.detach();\n                this.loop.resetCamera();\n            }\n        }\n    }, {\n        key: 'setType',\n        value: function setType(type, handednessScalar) {\n            var rpm = _baseballUtilityHelper.helper.pitchDefinitions[type][4];\n            var rotationAngle = _baseballUtilityHelper.helper.pitchDefinitions[type][3];\n            this.setRotation(rpm, rotationAngle * (handednessScalar || 1));\n        }\n    }, {\n        key: 'rotate',\n        value: function rotate() {\n            var rotation = this.rotation;\n            var meshRotation = this.mesh.rotation;\n            meshRotation.x += rotation.x;\n            meshRotation.y += rotation.y;\n        }\n    }, {\n        key: 'setRotation',\n        value: function setRotation(rpm, rotationAngle) {\n            this.RPM = rpm;\n            this.RPS = this.RPM / 60;\n            var rotationalIncrement = this.RP60thOfASecond = this.RPS / 60;\n\n            // calculate rotational components\n            // +x is CCW along x axis increasing\n            // +y is CW along y axis increasing\n            // +z (unused) is CW along z axis increasing\n\n            // 0   --> x:1 y:0\n            // 45  --> x:+ y:+\n            // 90  --> x:0 y:1\n            // 180 --> x:-1 y:0\n\n            var xComponent = rotationalIncrement * Math.cos(rotationAngle / 180 * Math.PI);\n            var yComponent = rotationalIncrement * Math.sin(rotationAngle / 180 * Math.PI);\n\n            this.rotation = {\n                x: xComponent * 360 * Math.PI / 180,\n                y: yComponent * 360 * Math.PI / 180\n            };\n        }\n    }, {\n        key: 'exportPositionTo',\n        value: function exportPositionTo(mesh) {\n            mesh.position.x = this.mesh.position.x;\n            mesh.position.y = this.mesh.position.y;\n            mesh.position.z = this.mesh.position.z;\n        }\n    }, {\n        key: 'spawnIndicator',\n        value: function spawnIndicator() {\n            if (this.hasIndicator) {\n                return;\n            }\n            this.hasIndicator = true;\n            var indicator = new _Indicator.Indicator();\n            indicator.mesh.position.x = this.mesh.position.x;\n            indicator.mesh.position.y = this.mesh.position.y;\n            indicator.mesh.position.z = this.mesh.position.z;\n            indicator.join(this.loop.background);\n        }\n    }, {\n        key: 'derivePitchingTrajectory',\n        value: function derivePitchingTrajectory(game) {\n            this.setType(game.pitchInFlight.name, game.pitcher.throws === 'right' ? 1 : -1);\n            var top = 200 - game.pitchTarget.y,\n                left = game.pitchTarget.x,\n                breakTop = 200 - game.pitchInFlight.y,\n                breakLeft = game.pitchInFlight.x,\n                flightTime = _baseballServicesMathinator.Mathinator.getFlightTime(game.pitchInFlight.velocity, _baseballUtilityHelper.helper.pitchDefinitions[game.pitchInFlight.name][2]);\n\n            var scale = SCALE;\n            var origin = {\n                x: game.pitcher.throws == 'left' ? 1.5 : -1.5,\n                y: _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 6,\n                z: -60.5 // mound distance\n            };\n            this.mesh.position.x = origin.x;\n            this.mesh.position.y = origin.y;\n            this.mesh.position.z = origin.z;\n\n            var ARC_APPROXIMATION_Y_ADDITIVE = 38; // made up number\n            var terminus = {\n                x: (left - 100) * scale,\n                y: (100 - top + 2 * ARC_APPROXIMATION_Y_ADDITIVE) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: INDICATOR_DEPTH\n            };\n            var breakingTerminus = {\n                x: (breakLeft - 100) * scale,\n                y: (100 - breakTop) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: INDICATOR_DEPTH\n            };\n\n            var lastPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            },\n                lastBreakingPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            };\n\n            var frames = [],\n                breakingFrames = [],\n                frameCount = flightTime * 60 | 0,\n                counter = frameCount * 1.08 | 0,\n                frame = 0;\n\n            var xBreak = breakingTerminus.x - terminus.x,\n                yBreak = breakingTerminus.y - terminus.y;\n            var breakingDistance = Math.sqrt(Math.pow(xBreak, 2) + Math.pow(yBreak, 2));\n            /**\n             * @type {number} 1.0+, an expression of how late the pitch breaks\n             */\n            var breakingLateness = breakingDistance / (2 * ARC_APPROXIMATION_Y_ADDITIVE) / scale,\n                breakingLatenessMomentumExponent = 0.2 + Math.pow(0.45, breakingLateness);\n\n            while (counter--) {\n                var progress = ++frame / frameCount;\n\n                // linear position\n                var position = {\n                    x: origin.x + (terminus.x - origin.x) * progress,\n                    y: origin.y + (terminus.y - origin.y) * progress,\n                    z: origin.z + (terminus.z - origin.z) * progress\n                };\n                // linear breaking position\n                var breakingInfluencePosition = {\n                    x: origin.x + (breakingTerminus.x - origin.x) * progress,\n                    y: origin.y + (breakingTerminus.y - origin.y) * progress,\n                    z: origin.z + (breakingTerminus.z - origin.z) * progress\n                };\n                if (progress > 1) {\n                    momentumScalar = 1 - Math.pow(progress, breakingLateness);\n                } else {\n                    var momentumScalar = Math.pow(1 - progress, breakingLatenessMomentumExponent);\n                }\n                var breakingScalar = 1 - momentumScalar,\n                    scalarSum = momentumScalar + breakingScalar;\n                // adjustment toward breaking ball position\n                var breakingPosition = {\n                    x: (position.x * momentumScalar + breakingInfluencePosition.x * breakingScalar) / scalarSum,\n                    y: (position.y * momentumScalar + breakingInfluencePosition.y * breakingScalar) / scalarSum,\n                    z: (position.z * momentumScalar + breakingInfluencePosition.z * breakingScalar) / scalarSum\n                };\n                var increment = {\n                    x: position.x - lastPosition.x,\n                    y: position.y - lastPosition.y,\n                    z: position.z - lastPosition.z\n                };\n                var breakingIncrement = {\n                    x: breakingPosition.x - lastBreakingPosition.x,\n                    y: breakingPosition.y - lastBreakingPosition.y,\n                    z: breakingPosition.z - lastBreakingPosition.z\n                };\n\n                lastPosition = position;\n                lastBreakingPosition = breakingPosition;\n\n                breakingFrames.push(breakingIncrement);\n                frames.push(increment);\n            }\n\n            var pause = 60;\n            while (pause--) {\n                breakingFrames.push({ x: 0, y: 0, z: 0 });\n                frames.push({ x: 0, y: 0, z: 0 });\n            }\n\n            this.breakingTrajectory = breakingFrames;\n            this.trajectory = frames;\n            return frames;\n        }\n    }, {\n        key: 'deriveTrajectory',\n        value: function deriveTrajectory(result, pitch) {\n            var dragScalarApproximation = {\n                distance: 1,\n                apexHeight: 0.57,\n                airTime: 0.96\n            };\n\n            var flyAngle = result.flyAngle,\n                distance = Math.abs(result.travelDistance),\n                scalar = result.travelDistance < 0 ? -1 : 1,\n                flightScalar = flyAngle < 7 ? -1 : 1,\n                splay = result.splay; // 0 is up the middle\n\n            if (flightScalar < 0 && result.travelDistance > 0) {\n                distance = Math.max(90, distance);\n            }\n\n            flyAngle = 1 + Math.abs(flyAngle); // todo why plus 1?\n            if (flyAngle > 90) flyAngle = 180 - flyAngle;\n\n            // velocity in m/s, I think\n            var velocity = dragScalarApproximation.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * flyAngle / 180));\n            var velocityVerticalComponent = Math.sin(_baseballServicesMathinator.Mathinator.RADIAN * flyAngle) * velocity;\n            // in feet\n            var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * dragScalarApproximation.apexHeight;\n            // in seconds\n            var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * dragScalarApproximation.airTime; // 2x freefall equation\n\n            this.airTime = airTime;\n\n            var scale = SCALE;\n\n            var origin = {\n                x: pitch.x + result.x - 100,\n                y: pitch.y + result.y - 100,\n                z: 0\n            };\n\n            this.mesh.position.x = origin.x * scale;\n            this.mesh.position.y = origin.y * scale;\n            this.mesh.position.z = origin.z;\n\n            var extrema = {\n                x: Math.sin(splay / 180 * Math.PI) * distance,\n                y: apexHeight,\n                z: -Math.cos(splay / 180 * Math.PI) * distance\n            };\n\n            var frames = [],\n                frameCount = airTime * 60 | 0,\n                counter = frameCount,\n                frame = 0;\n\n            var lastHeight = 0;\n\n            while (counter--) {\n                var progress = ++frame / frameCount,\n                    percent = progress * 100;\n\n                // this equation is approximate\n                if (flightScalar < 0) {\n                    var currentDistance = progress * distance;\n                    y = (origin.y * scale + apexHeight * Math.abs(Math.sin(3 * Math.pow(currentDistance, 1.1) / distance * Math.PI / 2))) * ((100 - percent) / 100) + _AbstractMesh2.AbstractMesh.WORLD_BASE_Y * progress;\n                } else {\n                    var y = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 2) * apexHeight;\n                }\n\n                frames.push({\n                    x: extrema.x / frameCount,\n                    y: y - lastHeight,\n                    z: extrema.z / frameCount\n                });\n\n                lastHeight = y;\n            }\n            this.trajectory = frames;\n            return frames;\n        }\n    }]);\n\n    return Ball;\n})(_AbstractMesh2.AbstractMesh);\n\nBall.prototype.DEFAULT_RPM = 1000;\nBall.prototype.RPM = 1000;\nBall.prototype.RPS = 1000 / 60;\nBall.prototype.RP60thOfASecond = 1000 / 60 / 60;\nBall.prototype.rotation = {\n    x: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180, // in radians per 60th of a second\n    y: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180\n};\n\nexports.Ball = Ball;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10,\"./Indicator\":17,\"baseball/Services/Mathinator\":24,\"baseball/Utility/helper\":32}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Base = (function (_AbstractMesh) {\n    _inherits(Base, _AbstractMesh);\n\n    function Base(loop, base) {\n        _classCallCheck(this, Base);\n\n        _get(Object.getPrototypeOf(Base.prototype), 'constructor', this).call(this);\n        this.base = base;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Base, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xFFFFFF\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(3, 0.3, 3, 8, 8, 8), material);\n\n            mesh.rotation.x = -0 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 0 / 180 * Math.PI;\n\n            switch (this.base) {\n                case 'first':\n                    mesh.position.x = 64;\n                    mesh.position.z = -64;\n                    break;\n                case 'second':\n                    mesh.position.x = 0;\n                    mesh.position.z = -121;\n                    break;\n                case 'third':\n                    mesh.position.x = -64;\n                    mesh.position.z = -64;\n                    break;\n                case 'home':\n                    mesh.position.x = 0;\n                    mesh.position.z = 0;\n\n                    mesh.rotation.z = 0;\n            }\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.5;\n            mesh.position.z -= 0;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Base;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Base = Base;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar BattersEye = (function (_AbstractMesh) {\n    _inherits(BattersEye, _AbstractMesh);\n\n    function BattersEye(loop) {\n        _classCallCheck(this, BattersEye);\n\n        _get(Object.getPrototypeOf(BattersEye.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(BattersEye, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(200, 45, 4, 16, 16, 16), material);\n\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= 310;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return BattersEye;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.BattersEye = BattersEye;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Field = (function (_AbstractMesh) {\n    _inherits(Field, _AbstractMesh);\n\n    function Field(loop) {\n        _classCallCheck(this, Field);\n\n        _get(Object.getPrototypeOf(Field.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Field, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(155, 155, 32, 32), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = -102;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Field;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Field = Field;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Grass = (function (_AbstractMesh) {\n    _inherits(Grass, _AbstractMesh);\n\n    function Grass(loop, infield) {\n        _classCallCheck(this, Grass);\n\n        _get(Object.getPrototypeOf(Grass.prototype), 'constructor', this).call(this);\n        this.infield = infield;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Grass, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: this.infield ? 0x70934A : 0x476532\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(this.infield ? 80 : 8000, this.infield ? 80 : 8000, 16, 16), material);\n\n            if (this.infield) {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.2;\n                mesh.position.z = -62;\n            } else {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y - 0.2;\n                mesh.position.z = -570;\n            }\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Grass;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Grass = Grass;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar HomeDirt = (function (_AbstractMesh) {\n    _inherits(HomeDirt, _AbstractMesh);\n\n    function HomeDirt(loop) {\n        _classCallCheck(this, HomeDirt);\n\n        _get(Object.getPrototypeOf(HomeDirt.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(HomeDirt, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(8, 8, 16, 16), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = 0;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return HomeDirt;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.HomeDirt = HomeDirt;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Indicator = (function (_AbstractMesh) {\n    _inherits(Indicator, _AbstractMesh);\n\n    function Indicator(loop) {\n        _classCallCheck(this, Indicator);\n\n        _get(Object.getPrototypeOf(Indicator.prototype), 'constructor', this).call(this);\n        var n = 60;\n        this.trajectory = [];\n        while (n--) {\n            this.trajectory.push(1);\n        }\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Indicator, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var THREE = window.THREE;\n            var geometry = new THREE.CircleGeometry(0.30, 32);\n            var material = new THREE.MeshPhongMaterial({\n                color: 0xFFFFFF\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            this.trajectory.shift();\n\n            if (!this.trajectory.length) {\n                this.detach();\n            }\n        }\n    }]);\n\n    return Indicator;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Indicator = Indicator;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Mound = (function (_AbstractMesh) {\n    _inherits(Mound, _AbstractMesh);\n\n    function Mound(loop) {\n        _classCallCheck(this, Mound);\n\n        _get(Object.getPrototypeOf(Mound.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Mound, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.CircleGeometry(9), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.9;\n            mesh.position.z = -60.5;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Mound;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Mound = Mound;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Wall = (function (_AbstractMesh) {\n    _inherits(Wall, _AbstractMesh);\n\n    function Wall(loop, angle) {\n        _classCallCheck(this, Wall);\n\n        _get(Object.getPrototypeOf(Wall.prototype), 'constructor', this).call(this);\n        this.angle = angle;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Wall, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(120, 15 | 0, 4, 16, 16, 16), material);\n\n            var radians = this.angle / 180 * Math.PI;\n            mesh.rotation.y = -radians;\n\n            var hypotenuse = 320;\n            var distance = Math.cos(radians) * hypotenuse;\n            var offset = Math.sin(radians) * hypotenuse;\n\n            mesh.position.x += offset;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= distance;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Wall;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Wall = Wall;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],20:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar lighting = {\n    addTo: function addTo(scene) {\n        var light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1.0);\n        scene.add(light);\n        var sun = new THREE.DirectionalLight(0xffffbb, 0.45);\n        light.position.set(-1, 1, 1);\n        this.light = light;\n        this.sun = sun;\n        scene.add(sun);\n    },\n    setLuminosity: function setLuminosity(level) {\n        this.light.intensity = level;\n        this.sun.intensity = level / 2;\n    }\n};\n\nexports.lighting = lighting;\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/services/_services');\n\nvar _baseballRenderLoop = require('baseball/Render/Loop');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar Animator = function Animator() {\n    this.init();\n    throw new Error('No need to instantiate Animator');\n};\nAnimator.TweenMax = {};\nAnimator.prototype = {\n    identifier: 'Animator',\n    constructor: Animator,\n    /**\n     * console mode disables most animator functions\n     */\n    console: false,\n    TweenMax: {},\n    THREE: {},\n    /**\n     * anything other than webgl will use TweenMax for JS animations\n     */\n    renderingMode: 'webgl',\n    init: function init() {\n        if (Animator.console) return;\n        if (!this.loop && this.renderingMode === 'webgl') {\n            this.beginRender();\n        }\n    },\n    /**\n     * @returns {Loop}\n     */\n    beginRender: function beginRender() {\n        this.loop = new _baseballRenderLoop.Loop('webgl-container');\n        this.background = new _baseballRenderLoop.Loop('webgl-bg-container');\n        this.background.addStaticMeshes();\n\n        this.loop.background = this.background;\n        this.background.foreground = this.loop;\n\n        return this.loop;\n    },\n    /**\n     * @param level {Number} 0 to 1\n     */\n    setLuminosity: function setLuminosity(level) {\n        if (this.console) return;\n        this.loop.lighting.setLuminosity(level);\n        this.background.lighting.setLuminosity(level);\n    },\n    loadTweenMax: function loadTweenMax() {\n        if (this.console || typeof window !== 'object') {\n            Animator.TweenMax = {\n                'set': function set() {},\n                'to': function to() {},\n                'from': function from() {},\n                killAll: function killAll() {}\n            };\n        } else {\n            Animator.TweenMax = window.TweenMax;\n        }\n        return Animator.TweenMax;\n    },\n    TIME_FROM_SET: 2300, //ms\n    TIME_FROM_WINDUP: 3600, //ms\n    HOLD_UP_ALLOWANCE: 0.75, // seconds\n    pitchTarget: null,\n    pitchBreak: null,\n    /**\n     * this is called with $scope context binding\n     * @param callback\n     */\n    updateFlightPath: function updateFlightPath(callback) {\n        if (Animator.console) return;\n\n        if (Animator.renderingMode === 'webgl') {\n            return Animator.renderFlightPath(callback, this);\n        }\n        return Animator.tweenFlightPath(callback, this);\n    },\n    /**\n     * @param callback\n     * @param $scope\n     * animates the pitch's flight path\n     */\n    tweenFlightPath: function tweenFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            top = 200 - game.pitchTarget.y,\n            left = game.pitchTarget.x,\n            breakTop = 200 - game.pitchInFlight.y,\n            breakLeft = game.pitchInFlight.x,\n            $baseballs = $('.baseball'),\n            flightSpeed = 1.3 - 0.6 * (game.pitchInFlight.velocity + 300) / 400,\n            originTop = 50,\n            originLeft = 110 + (game.pitcher.throws == 'left' ? 20 : -20);\n        var pitch = this.pitchTarget = $('.main-area .target .baseball.pitch'),\n            henka = this.pitchBreak = $('.main-area .target .baseball.break'),\n            quarter = flightSpeed / 4;\n\n        var pitchTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 12, 4),\n            targetTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 10, 3);\n\n        var transitions = [pitchTransition(0, 0), pitchTransition(10, 0), pitchTransition(30, 1), pitchTransition(50, 2), targetTransition(100, 3), pitchTransition(100, 3, breakTop, breakLeft)];\n\n        TweenMax.set([pitch, henka], transitions[0]);\n        TweenMax.to([pitch, henka], quarter, transitions[1]);\n        TweenMax.to([pitch, henka], quarter, transitions[2]);\n        TweenMax.to([pitch, henka], quarter, transitions[3]);\n        TweenMax.to(pitch, quarter, transitions[4]);\n        TweenMax.to(henka, quarter, transitions[5]);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback == 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        if (!game.pitchInFlight.x) {\n            $baseballs.addClass('hide');\n        } else {\n            if (game.humanBatting() && Math.random() * 180 > game.batter.skill.offense.eye) {\n                $('.baseball.break').addClass('hide');\n            } else {\n                $('.baseball.break').removeClass('hide');\n            }\n            $('.baseball.pitch').removeClass('hide');\n        }\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\n     * @param callback\n     * @param $scope Angular scope\n     * webgl version of tweenFlightPath\n     */\n    renderFlightPath: function renderFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            flightSpeed = _baseballServices_services.Mathinator.getFlightTime(game.pitchInFlight.velocity, _baseballUtilityHelper.helper.pitchDefinitions[game.pitchInFlight.name][2]);\n\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var ball = new this.loop.constructors.Ball();\n        Animator._ball = ball;\n        ball.derivePitchingTrajectory(game);\n        ball.trajectory = ball.breakingTrajectory;\n        ball.join(this.loop);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback === 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        var $baseballs = $('.baseball');\n        $baseballs.addClass('hide');\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\n     * @param game\n     * @returns {*}\n     * This only animates the flight arc of the ball in play.\n     */\n    animateFieldingTrajectory: function animateFieldingTrajectory(game) {\n        if (Animator.console) return game.swingResult;\n\n        if (this.renderingMode === 'webgl') {\n            Animator.tweenFieldingTrajectory(game, true);\n            return Animator.renderFieldingTrajectory(game);\n        }\n        return Animator.tweenFieldingTrajectory(game);\n    },\n    /**\n     * @param game\n     * @param splayOnly\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\n     * JS/CSS animation\n     */\n    tweenFieldingTrajectory: function tweenFieldingTrajectory(game, splayOnly) {\n        var TweenMax = Animator.loadTweenMax();\n        var ball = $('.splay-indicator-ball');\n        TweenMax.killAll();\n        var result = game.swingResult;\n\n        var linearApproximateDragScalar = {\n            distance: 1,\n            apexHeight: 0.57,\n            airTime: 0.96\n        };\n\n        var angle = result.flyAngle,\n            distance = Math.abs(result.travelDistance),\n            scalar = result.travelDistance < 0 ? -1 : 1;\n\n        _baseballServices_services.Mathinator.memory.bounding = angle < 0;\n        angle = 1 + Math.abs(angle);\n        if (angle > 90) angle = 180 - angle;\n\n        var velocity = linearApproximateDragScalar.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * angle / 180));\n        var velocityVerticalComponent = Math.sin(_baseballServices_services.Mathinator.RADIAN * angle) * velocity;\n        var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * linearApproximateDragScalar.apexHeight;\n        var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * linearApproximateDragScalar.airTime; // 2x freefall equation\n\n        //log('angle', angle, 'vel', velocity, 'apex', apexHeight, 'air', airTime, 'dist', result.travelDistance);\n        var quarter = airTime / 4;\n        var mathinator = new _baseballServices_services.Mathinator();\n        var transitions = [mathinator.transitionalTrajectory(0, quarter, 0, apexHeight, scalar * distance, result.splay), mathinator.transitionalTrajectory(25, quarter, 0), mathinator.transitionalTrajectory(50, quarter, 1), mathinator.transitionalTrajectory(75, quarter, 2), mathinator.transitionalTrajectory(100, quarter, 3)];\n        TweenMax.set(ball, transitions[0]);\n        TweenMax.to(ball, quarter, transitions[1]);\n        TweenMax.to(ball, quarter, transitions[2]);\n        TweenMax.to(ball, quarter, transitions[3]);\n        TweenMax.to(ball, quarter, transitions[4]);\n\n        if (!splayOnly) {\n            ball = $('.indicator.baseball.break').removeClass('hide').show();\n            var time = quarter / 2;\n            transitions = [mathinator.transitionalCatcherPerspectiveTrajectory(0, time, 0, apexHeight, scalar * distance, result.splay, game.pitchInFlight), mathinator.transitionalCatcherPerspectiveTrajectory(12.5, time * 0.75, 0), mathinator.transitionalCatcherPerspectiveTrajectory(25, time * 0.80, 1), mathinator.transitionalCatcherPerspectiveTrajectory(37.5, time * 0.85, 2), mathinator.transitionalCatcherPerspectiveTrajectory(50, time * 0.90, 3), mathinator.transitionalCatcherPerspectiveTrajectory(62.5, time * 0.95, 4), mathinator.transitionalCatcherPerspectiveTrajectory(75, time, 5), mathinator.transitionalCatcherPerspectiveTrajectory(87.5, time, 6), mathinator.transitionalCatcherPerspectiveTrajectory(100, time, 7)];\n            TweenMax.set(ball, transitions[0]);\n            TweenMax.to(ball, time, transitions[1]);\n            TweenMax.to(ball, time, transitions[2]);\n            TweenMax.to(ball, time, transitions[3]);\n            TweenMax.to(ball, time, transitions[4]);\n            TweenMax.to(ball, time, transitions[5]);\n            TweenMax.to(ball, time, transitions[6]);\n            TweenMax.to(ball, time, transitions[7]);\n            TweenMax.to(ball, time, transitions[8]);\n\n            setTimeout(function () {\n                // hack\n                $('.indicator.baseball.break').removeClass('hide').show();\n            }, 50);\n        }\n\n        return game.swingResult;\n    },\n    /**\n     * @param game\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\n     * WebGL version of tweenFieldingTrajectory\n     */\n    renderFieldingTrajectory: function renderFieldingTrajectory(game) {\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var result = game.swingResult;\n\n        var ball = Animator._ball || new this.loop.constructors.Ball();\n        ball.deriveTrajectory(result, game.pitchInFlight);\n        ball.join(this.loop);\n\n        if (result.thrownOut || result.caught || result.bases) {\n            if (Math.random() < 0.15 && ball.airTime > 1.5 || Math.random() < 0.50 && ball.airTime > 2.5) {\n                //var scale = 1;\n                //if (result.splay > 0) {\n                //    scale = -1;\n                //}\n                this.loop.setLookTarget(ball.mesh.position, 0.3);\n                this.loop.setOverwatchMoveTarget(ball.mesh.position, 0.16);\n            } else {\n                this.loop.setLookTarget(ball.mesh.position, 0.5);\n                this.loop.setMoveTarget({ x: 0, y: 6, z: _baseballRenderLoop.Loop.INITIAL_CAMERA_DISTANCE }, 0.05);\n            }\n        } else if (Math.abs(result.splay) < 60) {\n            this.loop.setLookTarget(ball.mesh.position, 0.5);\n            this.loop.setMoveTarget({ x: 0, y: 6, z: _baseballRenderLoop.Loop.INITIAL_CAMERA_DISTANCE }, 0.05);\n        }\n\n        return game.swingResult;\n    }\n};\n\nfor (var fn in Animator.prototype) {\n    if (Animator.prototype.hasOwnProperty(fn)) {\n        Animator[fn] = Animator.prototype[fn];\n    }\n}\n\nexports.Animator = Animator;\n\n},{\"baseball/Render/Loop\":9,\"baseball/Utility/helper\":32,\"baseball/services/_services\":36}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar pitchDefinitions = _baseballUtilityHelper.helper.pitchDefinitions;\n\n/**\n * For Probability!\n * @constructor\n */\nvar Distribution = function Distribution() {};\n\nvar random = Math.random,\n    min = Math.min,\n    max = Math.max,\n    floor = Math.floor,\n    ceil = Math.ceil,\n    abs = Math.abs,\n    sqrt = Math.sqrt;\n\nDistribution.prototype = {\n    identifier: 'Distribution',\n    constructor: Distribution,\n    /**\n     * @param scale {number}\n     * @returns {number}\n     */\n    chance: function chance(scale) {\n        if (!scale) scale = 1;\n        return random() * scale;\n    },\n    /**\n     * @param fielder {Player}\n     * @returns {boolean}\n     */\n    error: function error(fielder) {\n        return (100 - fielder.skill.defense.fielding) * 0.40 + 4 > random() * 100;\n    },\n    /**\n     * @param power\n     * @param flyAngle\n     * @returns {number}\n     */\n    landingDistance: function landingDistance(power, flyAngle) {\n        return (10 + random() * 320 + power / 300 + random() * power / 75 * 150) * (1 - abs(flyAngle - 30) / 60);\n    },\n    /**\n     * @param count {{strikes: number, balls: number}}\n     * @returns {{x: number, y: number}}\n     */\n    pitchLocation: function pitchLocation(count) {\n        var x, y;\n        if (random() < 0.5) {\n            x = 50 + floor(random() * 70) - floor(random() * 15);\n        } else {\n            x = 150 + floor(random() * 15) - floor(random() * 70);\n        }\n        y = 30 + (170 - floor(sqrt(random() * 28900)));\n\n        var sum = count.strikes + count.balls + 1;\n\n        x = ((1 + count.strikes) * x + count.balls * 100) / sum;\n        y = ((1 + count.strikes) * y + count.balls * 100) / sum;\n\n        return { x: x, y: y };\n    },\n    /**\n     * swing centering basis\n     * @returns {number}\n     */\n    centralizedNumber: function centralizedNumber() {\n        return 100 + floor(random() * 15) - floor(random() * 15);\n    },\n    /**\n     * @param eye {Player.skill.offense.eye}\n     * @param x\n     * @param y\n     * @param umpire {Umpire}\n     */\n    swingLikelihood: function swingLikelihood(eye, x, y, umpire) {\n        var swingLikelihood = (200 - abs(100 - x) - abs(100 - y)) / 2;\n        if (x < 60 || x > 140 || y < 50 || y > 150) {\n            // ball\n            /** 138 based on avg O-Swing of 30% + 8% for fun, decreased by better eye */\n            swingLikelihood = (swingLikelihood + 138 - eye) / 2 - 15 * umpire.count.balls;\n        } else {\n            /** avg Swing rate of 65% - 8% for laughs, increased by better eye */\n            swingLikelihood = (57 + (2 * swingLikelihood + eye) / 3) / 2;\n        }\n        // higher late in the count\n        return swingLikelihood - 35 + 2 * (umpire.count.balls + 8 * umpire.count.strikes);\n    },\n    /**\n     * @param target {number} 0-200\n     * @param control {number} 0-100\n     * @returns {number}\n     */\n    pitchControl: function pitchControl(target, control) {\n        var effect = (50 - random() * 100) / (1 + control / 100);\n        return min(199.9, max(0.1, target + effect));\n    },\n    /**\n     * @param pitch {Game.pitchInFlight}\n     * @param pitcher {Player}\n     * @param x {number}\n     * @param y {number}\n     * @returns {object|{x: number, y: number}}\n     * 0.5 to 1.5 of the pitch's nominal breaking effect X\n     * 0.5 to 1.5 of the pitch's nominal breaking effect Y, magnified for lower Y\n     */\n    breakEffect: function breakEffect(pitch, pitcher, x, y) {\n        var effect = {};\n        effect.x = floor(x + pitch.breakDirection[0] * (0.50 + 0.5 * random() + pitcher.pitching[pitch.name]['break'] / 200));\n        effect.y = floor(y + pitch.breakDirection[1] * ((0.50 + 0.5 * random() + pitcher.pitching[pitch.name]['break'] / 200) / (0.5 + y / 200)));\n        return effect;\n    },\n    /**\n     * Determine the swing target along an axis\n     * @param target {number} 0-200\n     * @param actual {number} 0-200\n     * @param eye {number} 0-100\n     * @returns {number} 0-200\n     */\n    cpuSwing: function cpuSwing(target, actual, eye) {\n        eye = min(eye, 100); // higher eye would overcompensate here\n        return 100 + (target - 100) * (0.5 + random() * eye / 200) - actual;\n    },\n    /**\n     * Determine the swing scalar\n     * @param eye {number} 0-100\n     * @returns {number}\n     */\n    swing: function swing(eye) {\n        return 100 / (eye + 25 + random() * 50);\n    },\n    /**\n     * @param pitch {Object} game.pitchInFlight\n     * @param catcher {Player}\n     * @param thief {Player}\n     * @param base {Number} 1,2,3,4\n     * @param volitional {boolean} whether the runner decided to steal\n     * @returns {boolean}\n     */\n    stealSuccess: function stealSuccess(pitch, catcher, thief, base, volitional) {\n        var rand = random(),\n            rand2 = random();\n\n        var smoothedRand2 = (1 + rand2) / 2;\n\n        var pitchBaseSpeedMultiplier = (pitchDefinitions[pitch.name] || ['', '', 0.6])[2];\n\n        return ((volitional | 0) * 35 + thief.skill.offense.eye + (base * -25 + 45)) * rand + 10 + thief.skill.offense.speed * 2 - thief.fatigue > pitchBaseSpeedMultiplier * pitch.velocity * smoothedRand2 + (catcher.skill.defense.catching + catcher.skill.defense.throwing) * rand2;\n    },\n    /**\n     * @param pitch {Object} game.pitchInFlight\n     * @param catcher {Player}\n     * @param thief {Player}\n     * @param base {Number} 1,2,3,4\n     * @returns {boolean}\n     */\n    willSteal: function willSteal(pitch, catcher, thief, base) {\n        return random() < 0.15 && this.stealSuccess(pitch, catcher, thief, base, false) && random() < 0.5;\n    }\n};\n\nfor (var fn in Distribution.prototype) {\n    if (Distribution.prototype.hasOwnProperty(fn)) {\n        Distribution[fn] = Distribution.prototype[fn];\n    }\n}\n\nDistribution.main = function () {\n    var ump = {\n        count: {\n            balls: 0,\n            strikes: 0\n        }\n    };\n    while (ump.count.balls < 4) {\n        while (ump.count.strikes < 3) {\n            console.log('S', ump.count.strikes, 'B', ump.count.balls);\n            console.log('middle', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 100, 100, ump) | 0;\n            }));\n            console.log('corner', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 50, 50, ump) | 0;\n            }));\n            console.log('ball', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 15, 15, ump) | 0;\n            }));\n            ump.count.strikes++;\n        }\n        ump.count.balls++;\n        ump.count.strikes = 0;\n    }\n};\n\nexports.Distribution = Distribution;\n\n},{\"baseball/Utility/helper\":32}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Iterator = function Iterator() {};\n\nIterator.prototype = {\n    identifier: 'Iterator',\n    constructor: Iterator,\n    each: function each(collection, map) {\n        var keys, i;\n        if (collection instanceof Array) {\n            for (i = 0; i < collection.length; i++) {\n                map(i, collection[i]);\n            }\n        } else {\n            keys = Object.keys(collection);\n            for (i = 0; i < keys.length; i++) {\n                map(keys[i], collection[keys[i]]);\n            }\n        }\n    }\n};\n\nfor (var fn in Iterator.prototype) {\n    if (Iterator.prototype.hasOwnProperty(fn)) {\n        Iterator[fn] = Iterator.prototype[fn];\n    }\n}\n\nexports.Iterator = Iterator;\n\n},{}],24:[function(require,module,exports){\n/**\n * For Math!\n * @constructor\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Mathinator = function Mathinator() {};\n\n/**\n * @param n\n * @returns {number}\n */\nMathinator.square = function (n) {\n    return n * n;\n};\n\nMathinator.prototype = {\n    identifier: 'Mathinator',\n    constructor: Mathinator,\n    /**\n     * CONST\n     */\n    RADIAN: Math.PI / 180,\n    SPLAY_INDICATOR_LEFT: -4,\n    /**\n     * @param offset {{x: number, y: number}}\n     * @param angle {number}\n     * @returns {{x: number, y: number}}\n     */\n    getAngularOffset: function getAngularOffset(offset, angle) {\n        var xScalar = offset.x < 0 ? -1 : 1,\n            yScalar = offset.y < 0 ? -1 : 1;\n        var originalAngle = Math.atan(offset.x / offset.y) / this.RADIAN;\n        var distance = Math.sqrt(offset.x * offset.x + offset.y * offset.y),\n            angledY = yScalar * Math.cos((angle - originalAngle) * this.RADIAN) * distance,\n            angledX = xScalar * Math.sqrt(distance * distance - angledY * angledY);\n        return {\n            x: angledX,\n            y: angledY\n        };\n    },\n    /**\n     * @param a {Array<Number>}\n     * @param b {Array<Number>}\n     * @returns {number}\n     */\n    getPolarDistance: function getPolarDistance(a, b) {\n        var radians = this.RADIAN;\n        return Math.sqrt(a[1] * a[1] + b[1] * b[1] - 2 * a[1] * b[1] * Math.cos(a[0] * radians - b[0] * radians));\n    },\n    /**\n     * @param origin\n     * @param target\n     * @returns {number}\n     * 0 is flat (left-right), positive is clockwise.\n     * We use 125 instead of 180 to account for natural hand-height adjustments\n     * of various swing heights.\n     */\n    battingAngle: function battingAngle(origin, target) {\n        return Math.atan((origin.y - target.y) / (target.x - origin.x)) / Math.PI * 125;\n    },\n    memory: {},\n    /**\n     * @param percent {number} 0-100\n     * @param quarter {number} seconds\n     * @param step {number} 0 and up\n     * @param [givenApexHeight] feet\n     * @param [givenDistance] in feet\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\n     * @returns {{bottom: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\n     */\n    transitionalTrajectory: function transitionalTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle) {\n        if (givenApexHeight) Mathinator.prototype.memory.apexHeight = givenApexHeight;\n        if (givenDistance) Mathinator.prototype.memory.distance = givenDistance;\n        if (givenSplayAngle) Mathinator.prototype.memory.splay = givenSplayAngle;\n        var apexHeight = Mathinator.prototype.memory.apexHeight,\n            distance = Mathinator.prototype.memory.distance,\n            splay = Mathinator.prototype.memory.splay;\n        var bottom, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            quarter *= 4;\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        bottom = Math.cos(splay * radian) * percent / 100 * distance * 95 / 300;\n        left = Math.sin(splay * radian) * percent / 100 * distance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        var apexRatio = Math.sqrt((50 - Math.abs(percent - 50)) / 100) * (1 / 0.7071);\n        if (bounding) {\n            padding = 1;\n            borderWidth = 1;\n        } else {\n            padding = apexRatio * apexHeight / 90 * 15;\n            borderWidth = 2 + apexRatio * 2;\n        }\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n        padding = Math.max(Math.min(padding, 12), 0);\n        return {\n            bottom: bottom,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\n     * @param percent {number} 0-100\n     * @param quarter {number} seconds\n     * @param step {number} 0 and up\n     * @param [givenApexHeight] feet\n     * @param [givenDistance] in feet\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\n     * @param [givenOrigin] Object with x, y -- pitchInFlight\n     * @returns {{top: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\n     */\n    transitionalCatcherPerspectiveTrajectory: function transitionalCatcherPerspectiveTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle, givenOrigin) {\n        var memory = Mathinator.prototype.memory;\n        if (givenApexHeight) memory.apexHeight = givenApexHeight;\n        if (givenDistance) memory.distance = givenDistance;\n        if (givenSplayAngle) memory.splay = givenSplayAngle;\n        if (givenOrigin) memory.origin = givenOrigin;\n        var apexHeight = memory.apexHeight,\n            distance = memory.distance,\n            splay = memory.splay,\n            origin = memory.origin;\n        var top, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        var height = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 1.2) * apexHeight,\n            currentDistance = distance * percent / 100;\n\n        var projection = Math.pow((500 - currentDistance) / 500, 2); // reduction of dimensions due to distance\n\n        top = 200 - origin.y - height * 20 * projection + percent / 100 * (origin.y - 85) * projection;\n        left = origin.x + Math.sin(splay * radian) * (currentDistance * 8) * projection;\n        padding = 12 * projection * projection;\n        borderWidth = Math.max(Math.min(padding / 3, 4), 0);\n\n        top = Math.max(Math.min(top, 500), -10000);\n        left = Math.max(Math.min(left, 10000), -10000);\n        padding = Math.max(Math.min(padding, 24), 1);\n\n        //console.log('height', height|0, apexHeight|0, projection, 'left/pad/border', left|0, padding|0, borderWidth|0, 'top', top);\n\n        return {\n            top: top,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\n     * @param swingResult\n     * @returns {Game.swingResult}\n     */\n    translateSwingResultToStylePosition: function translateSwingResultToStylePosition(swingResult) {\n        // CF HR bottom: 95px, centerline: left: 190px;\n        var bottom, left;\n\n        bottom = Math.cos(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300;\n        left = Math.sin(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n\n        swingResult.bottom = bottom + 'px';\n        swingResult.left = left + 'px';\n        return swingResult;\n    },\n    /**\n     * @param left {number} 0-200\n     * @param top {number} 0-200\n     * @param originLeft {number} 0-200\n     * @param originTop {number} 0-200\n     * @param quarter {number} seconds\n     * @param maxPadding {number} px padding at full size\n     * @param maxBorderWidth {number} px border width at full size\n     * @returns {Function}\n     */\n    pitchTransition: function pitchTransition(top, left, originTop, originLeft, quarter, maxPadding, maxBorderWidth) {\n        /**\n         * @param percent {number} 0-100\n         * @param step {number} 0 and up\n         * @param [breakTop] {number} 0-200 override\n         * @param [breakLeft] {number} 0-200 override\n         * @returns {{top: number, left: number, padding: string, borderWidth: string, transform: string, delay: number, ease: *}}\n         */\n        return function (percent, step, breakTop, breakLeft) {\n            var _top, _left;\n            _top = breakTop || top;\n            _left = breakLeft || left;\n            _top = originTop + Mathinator.square(percent / 100) * (_top - originTop);\n            if (step == 1) {\n                _top -= 2;\n            }\n            if (step == 2) {\n                _top -= 1;\n            }\n            _left = originLeft + Mathinator.square(percent / 100) * (_left - originLeft);\n            var padding = Math.max(Mathinator.square(percent / 100) * maxPadding, 1),\n                borderWidth = Math.max(Mathinator.square(percent / 100) * maxBorderWidth, 1);\n            return {\n                top: _top,\n                left: _left,\n                padding: padding + 'px',\n                borderWidth: borderWidth + 'px',\n                transform: 'translateZ(0)',\n                delay: quarter * step,\n                ease: Linear.easeNone\n            };\n        };\n    },\n    /**\n     * @param distance {number} feet\n     * @param throwing {number} 0-1\n     * @param fielding {number} 0-1\n     * @param intercept {number} approx. -140 to 140\n     * @returns {number} seconds\n     */\n    fielderReturnDelay: function fielderReturnDelay(distance, throwing, fielding, intercept) {\n        return distance / 90 // bip distance (up to 3s+)\n         + 5 * (distance / 310) // worst case time to reach the ball,\n         * Math.min(intercept - 120, 0) / -240 // a good intercept rating will cut the base down to 0\n         + 1 - (0.2 + fielding * 0.8) // gather time (up to 0.8s)\n         + distance / 90 / (0.5 + throwing / 2); // throwing distance (up to 2s)\n    },\n    /**\n     * @param player {Player}\n     * @returns {number} ~2.0\n     */\n    infieldThrowDelay: function infieldThrowDelay(player) {\n        var fielding = player.skill.defense.fielding,\n            throwing = player.skill.defense.throwing;\n        return 3.5 - (fielding + throwing) / 200;\n    },\n    /**\n     * @param speed {number} 0-100\n     * @returns {number} seconds\n     */\n    baseRunningTime: function baseRunningTime(speed) {\n        return 7.0 - speed / 100 * 4.1;\n    },\n    /**\n     * @param x {Number} bat offset\n     * @param y {Number} bat offset\n     * @param angle {Number} batting angle where 0 is horizontal, RHB clockwise increasing\n     * {\n     *   splay: -90 to 90 where 0 is up the middle,\n     *   fly: 0, flat, to 90, vertical pop up\n     * }\n     * @param eye {Number} 0 - 100 skill rating\n     * @returns {{splay: number, fly: number}}\n     */\n    getSplayAndFlyAngle: function getSplayAndFlyAngle(x, y, angle, eye) {\n\n        var splay = -1.5 * x - y * angle / 20;\n        var direction = splay > 0 ? 1 : -1;\n        // additional random splay\n        // todo make it pull only\n        splay += direction * Math.random() * 40 * (100 / (50 + eye));\n\n        return {\n            splay: splay,\n            fly: -3 * y / ((Math.abs(angle) + 25) / 35) // more difficult to hit a pop fly on a angled bat\n        };\n    },\n    /**\n     * @param velocityRating {Number} 0-100\n     * @param velocityScalar {Number} approx 1\n     * @returns {number}\n     */\n    getFlightTime: function getFlightTime(velocityRating, velocityScalar) {\n        return (1.3 - 0.6 * (velocityRating + 300) / 400) / velocityScalar;\n    }\n};\n\nfor (var fn in Mathinator.prototype) {\n    if (Mathinator.prototype.hasOwnProperty(fn)) {\n        Mathinator[fn] = Mathinator.prototype[fn];\n    }\n}\n\nexports.Mathinator = Mathinator;\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":21,\"baseball/Services/Distribution\":22,\"baseball/Services/Iterator\":23,\"baseball/Services/Mathinator\":24}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _TeamJapan = require('./TeamJapan');\n\nvar Provider = (function () {\n    function Provider() {\n        _classCallCheck(this, Provider);\n    }\n\n    _createClass(Provider, [{\n        key: 'assignTeam',\n        value: function assignTeam(game, team, side) {\n            var special = this.teams[team];\n            special.game = game;\n            game.teams[side] = special;\n        }\n    }]);\n\n    return Provider;\n})();\n\nProvider.prototype.teams = {\n    TeamJapan: _TeamJapan.samurai\n};\n\nexports.Provider = Provider;\n\n},{\"./TeamJapan\":27}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballTeamsTrainer = require('baseball/Teams/Trainer');\n\nvar samurai = new _baseballModel_models.Team('no init');\nsamurai.name = 'Japan';\nsamurai.nameJ = '日本';\n\nvar darvish = new _baseballModelPlayer.Player(samurai),\n    johjima = new _baseballModelPlayer.Player(samurai),\n    ogasawara = new _baseballModelPlayer.Player(samurai),\n    nishioka = new _baseballModelPlayer.Player(samurai),\n    kawasaki = new _baseballModelPlayer.Player(samurai),\n    murata = new _baseballModelPlayer.Player(samurai),\n    matsui = new _baseballModelPlayer.Player(samurai),\n    ichiro = new _baseballModelPlayer.Player(samurai),\n    inaba = new _baseballModelPlayer.Player(samurai);\n\nvar matsuzaka = new _baseballModelPlayer.Player(samurai),\n    fukudome = new _baseballModelPlayer.Player(samurai),\n    aoki = new _baseballModelPlayer.Player(samurai),\n    abe = new _baseballModelPlayer.Player(samurai),\n    iwamura = new _baseballModelPlayer.Player(samurai);\n\nvar coach = new _baseballTeamsTrainer.Trainer();\n\ncoach.makePlayer(darvish, 'Yu', 'Darvish', 'ダルビッシュ', '有', 150, { eye: 80, power: 80, speed: 80 }, { catching: 50, fielding: 70, throwing: 100, speed: 80 }, 'right', 'right', 11);\n\ncoach.makePlayer(johjima, 'Kenji', 'Johjima', '城島', '健司', 60, { eye: 90, power: 88, speed: 70 }, { catching: 140, fielding: 95, throwing: 88, speed: 94 }, 'right', 'right', 2);\n\ncoach.makePlayer(ogasawara, 'Michihiro', 'Ogasawara', '小笠原', '道大', 80, { eye: 96, power: 115, speed: 90 }, { catching: 50, fielding: 96, throwing: 85, speed: 70 }, 'left', 'right', 36);\n\ncoach.makePlayer(nishioka, 'Tsuyoshi', 'Nishioka', '西岡', '剛', 80, { eye: 88, power: 75, speed: 92 }, { catching: 90, fielding: 88, throwing: 88, speed: 90 }, 'right', 'right', 7);\n\ncoach.makePlayer(kawasaki, 'Munenori', 'Kawasaki', '川崎', '宗則', 80, { eye: 95, power: 75, speed: 92 }, { catching: 90, fielding: 98, throwing: 90, speed: 110 }, 'left', 'right', 52);\n\ncoach.makePlayer(murata, 'Shuichi', 'Murata', '村田', '修一', 80, { eye: 82, power: 110, speed: 60 }, { catching: 80, fielding: 80, throwing: 90, speed: 90 }, 'right', 'right', 25);\n\ncoach.makePlayer(matsui, 'Hideki', 'Matsui', '秀樹', '松井', 75, { eye: 104, power: 130, speed: 68 }, { catching: 40, fielding: 85, throwing: 70, speed: 60 }, 'left', 'right', 55);\n\ncoach.makePlayer(ichiro, 'Ichiro', 'Suzuki', 'イチロー', '', 115, { eye: 115, power: 48, speed: 99 }, { catching: 80, fielding: 110, throwing: 135, speed: 120 }, 'left', 'right', 51);\n\ncoach.makePlayer(inaba, 'Atsunori', 'Inaba', '稲葉', '篤紀', 80, { eye: 92, power: 95, speed: 75 }, { catching: 50, fielding: 95, throwing: 95, speed: 90 }, 'right', 'right', 41);\n\nsamurai.bench = [darvish, johjima, ogasawara, nishioka, kawasaki, murata, matsui, ichiro, inaba, matsuzaka, fukudome, aoki, abe, iwamura];\nsamurai.manager.makeLineup();\nsamurai.positions = {\n    pitcher: darvish,\n    catcher: johjima,\n\n    first: ogasawara,\n    second: nishioka,\n    short: kawasaki,\n    third: murata,\n\n    left: matsui,\n    center: ichiro,\n    right: inaba\n};\n\nfor (var position in samurai.positions) {\n    if (samurai.positions.hasOwnProperty(position)) {\n        samurai.positions[position].position = position;\n    }\n}\n\nsamurai.lineup = [ichiro, kawasaki, inaba, matsui, ogasawara, johjima, murata, nishioka, darvish];\n\nsamurai.lineup.map(function (player, order) {\n    player.order = order;\n});\n\nexports.samurai = samurai;\n\n},{\"baseball/Model/Player\":5,\"baseball/Model/_models\":8,\"baseball/Teams/Trainer\":28}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar Trainer = (function () {\n    function Trainer() {\n        _classCallCheck(this, Trainer);\n    }\n\n    _createClass(Trainer, [{\n        key: 'makePlayer',\n        value: function makePlayer(player, name, surname, surnameJ, nameJ, pitching, offense, defense, bats, throws, number) {\n            player.hero = true;\n\n            if ('rights' && 0) {\n                surnameJ = '代表';\n                nameJ = '選手';\n                name = 'TEAM';\n                surname = 'JPN';\n            }\n\n            player.name = name + ' ' + surname;\n            player.nameJ = surnameJ + nameJ;\n            player.surname = surname;\n            player.surnameJ = surnameJ;\n\n            player.spaceName(surnameJ, nameJ);\n            player.randomizeSkills(true, true);\n            player.skill.offense = offense;\n            player.skill.defense = defense;\n            player.skill.pitching = pitching;\n            player.bats = bats;\n            player.throws = throws;\n            player.number = number;\n            _baseballServicesIterator.Iterator.each(player.pitching, function (key, value) {\n                player.pitching[key].velocity += pitching / 5 | 0;\n                player.pitching[key]['break'] += pitching / 5 | 0;\n                player.pitching[key].control += pitching / 5 | 0;\n            });\n            player.resetStats(0);\n        }\n    }]);\n\n    return Trainer;\n})();\n\nexports.Trainer = Trainer;\n\n},{\"baseball/Services/Iterator\":23}],29:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nvar Log = function Log() {\n    this.init();\n};\n\nLog.prototype = {\n    game: 'instance of Game',\n    init: function init() {\n        this.stabilized = {\n            pitchRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            },\n            shortRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            }\n        };\n        this.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.shortRecord = {\n            e: [],\n            n: []\n        };\n        this.record = {\n            e: [],\n            n: []\n        };\n    },\n    SINGLE: 'H',\n    DOUBLE: '2B',\n    TRIPLE: '3B',\n    HOMERUN: 'HR',\n    WALK: 'BB',\n    GROUNDOUT: 'GO',\n    FLYOUT: 'FO',\n    LINEOUT: 'LO',\n    RUN: 'R',\n    STRIKEOUT: 'SO',\n    SACRIFICE: 'SAC',\n    REACHED_ON_ERROR: 'ROE',\n    FIELDERS_CHOICE: 'FC',\n    GIDP: '(IDP)',\n    GITP: '(ITP)',\n    STOLEN_BASE: 'SB',\n    CAUGHT_STEALING: 'CS',\n    stabilizeShortRecord: function stabilizeShortRecord() {\n        var rec = this.record.e.slice(0, 6);\n        this.shortRecord.e = rec;\n        this.stabilized.shortRecord.e = rec.concat(['', '', '', '', '', '']).slice(0, 6);\n\n        var rec2 = this.record.n.slice(0, 6);\n        this.shortRecord.n = rec2;\n        this.stabilized.shortRecord.n = rec2.concat(['', '', '', '', '', '']).slice(0, 6);\n    },\n    note: function note(_note, noteJ, only) {\n        //todo fix don't double language when specifying param [only]\n        if (only === 'e') {\n            this.record.e.unshift(_note);\n            this.async(function () {\n                console.log(_note);\n            });\n        } else if (only === 'n') {\n            this.record.n.unshift(noteJ);\n            this.async(function () {\n                console.log(noteJ);\n            });\n        } else {\n            this.record.e.unshift(_note);\n            this.record.n.unshift(noteJ);\n            this.async(function () {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(noteJ);\n                } else {\n                    console.log(_note);\n                }\n            });\n        }\n        this.stabilizeShortRecord();\n    },\n    getBatter: function getBatter(batter) {\n        var order = batter.team.nowBatting;\n        order = ({\n            0: (0, _baseballUtilityText.text)(' 1st'),\n            1: (0, _baseballUtilityText.text)(' 2nd'),\n            2: (0, _baseballUtilityText.text)(' 3rd'),\n            3: (0, _baseballUtilityText.text)(' 4th'),\n            4: (0, _baseballUtilityText.text)(' 5th'),\n            5: (0, _baseballUtilityText.text)(' 6th'),\n            6: (0, _baseballUtilityText.text)(' 7th'),\n            7: (0, _baseballUtilityText.text)(' 8th'),\n            8: (0, _baseballUtilityText.text)(' 9th')\n        })[order];\n        var positions = this.longFormFielder();\n        return (0, _baseballUtilityText.text)('Now batting') + order + _baseballUtilityText.text.comma() + positions[batter.position] + _baseballUtilityText.text.comma() + batter.getUniformNumber() + _baseballUtilityText.text.comma() + batter.getName();\n    },\n    noteBatter: function noteBatter(batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getBatter(batter);\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getBatter(batter);\n        _baseballUtilityText.text.mode = m;\n        this.note(record, recordJ);\n    },\n    getPitchLocationDescription: function getPitchLocationDescription(pitchInFlight, batterIsLefty) {\n        var x = pitchInFlight.x,\n            y = pitchInFlight.y,\n            say = '';\n        var noComma = false,\n            noComma2 = false;\n        var ball = false;\n        if (!batterIsLefty) x = 200 - x;\n        if (x < 50) {\n            say += (0, _baseballUtilityText.text)('way outside');\n            ball = true;\n        } else if (x < 70) {\n            say += (0, _baseballUtilityText.text)('outside');\n        } else if (x < 100) {\n            say += '';\n            noComma = true;\n        } else if (x < 130) {\n            say += '';\n            noComma = true;\n        } else if (x < 150) {\n            say += (0, _baseballUtilityText.text)('inside');\n        } else {\n            say += (0, _baseballUtilityText.text)('way inside');\n            ball = true;\n        }\n        if (say != '') say += _baseballUtilityText.text.comma();\n        if (y < 35) {\n            say += (0, _baseballUtilityText.text)('way low');\n            ball = true;\n        } else if (y < 65) {\n            say += (0, _baseballUtilityText.text)('low');\n        } else if (y < 135) {\n            say += '';\n            noComma2 = true;\n        } else if (y < 165) {\n            say += (0, _baseballUtilityText.text)('high');\n        } else {\n            say += (0, _baseballUtilityText.text)('way high');\n            ball = true;\n        }\n        if (noComma || noComma2) {\n            say = say.split(_baseballUtilityText.text.comma()).join('');\n            if (noComma && noComma2) {\n                say = (0, _baseballUtilityText.text)('down the middle');\n            }\n        }\n        // say = (ball ? 'Ball, ' : 'Strike, ') + say;\n        say = _baseballUtilityText.text.namePitch(pitchInFlight) + _baseballUtilityText.text.comma() + say + _baseballUtilityText.text.stop();\n        return say;\n    },\n    notePitch: function notePitch(pitchInFlight, batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.pop();\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.pop();\n        _baseballUtilityText.text.mode = m;\n    },\n    broadcastCount: function broadcastCount(justOuts) {\n        if (!this.game.umpire) return '';\n        var count = this.game.umpire.count;\n        if (this.lastOuts == 2 && count.outs == 0) {\n            outs = 3 + (0, _baseballUtilityText.text)(' outs');\n        } else {\n            var outs = count.outs + (count.outs == 1 ? (0, _baseballUtilityText.text)(' out') : (0, _baseballUtilityText.text)(' outs'));\n        }\n        this.lastOuts = count.outs;\n        if (justOuts) {\n            return outs + _baseballUtilityText.text.stop();\n        }\n        return count.strikes + '-' + count.balls + ', ' + outs + _baseballUtilityText.text.stop();\n    },\n    broadcastScore: function broadcastScore() {\n        return this.game.teams.away.getName() + ' ' + this.game.tally.away.R + ', ' + this.game.teams.home.getName() + ' ' + this.game.tally.home.R + _baseballUtilityText.text.stop();\n    },\n    broadcastRunners: function broadcastRunners() {\n        var field = this.game.field;\n        var runners = [field.first && (0, _baseballUtilityText.text)('first') || '', field.second && (0, _baseballUtilityText.text)('second') || '', field.third && (0, _baseballUtilityText.text)('third') || ''].filter(function (x) {\n            return x;\n        });\n\n        var runnerCount = 0;\n        runners.map(function (runner) {\n            if (runner) {\n                runnerCount++;\n            }\n        });\n\n        switch (runnerCount) {\n            case 0:\n                return (0, _baseballUtilityText.text)('Bases empty') + _baseballUtilityText.text.stop();\n            case 1:\n                return (0, _baseballUtilityText.text)('Runner on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n            default:\n                return (0, _baseballUtilityText.text)('Runners on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n        }\n    },\n    getSwing: function getSwing(swingResult) {\n        var result = '';\n        if (swingResult.looking) {\n            if (swingResult.strike) {\n                result += (0, _baseballUtilityText.text)('Strike.');\n            } else {\n                result += (0, _baseballUtilityText.text)('Ball.');\n            }\n        } else {\n            if (swingResult.contact) {\n                if (swingResult.foul) {\n                    result += (0, _baseballUtilityText.text)('Fouled off.');\n                } else {\n                    if (swingResult.caught) {\n                        result += (0, _baseballUtilityText.text)('In play.');\n                    } else {\n                        if (swingResult.thrownOut) {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        } else {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        }\n                    }\n                }\n            } else {\n                result += (0, _baseballUtilityText.text)('Swinging strike.');\n            }\n        }\n        var steal = '';\n        if (swingResult.stoleABase) {\n            steal = this.noteStealAttempt(swingResult.stoleABase, true);\n        }\n        if (swingResult.caughtStealing) {\n            steal = this.noteStealAttempt(swingResult.caughtStealing, false);\n        }\n        if (steal) {\n            this.note(steal, steal, _baseballUtilityText.text.mode);\n        }\n        return result + steal;\n    },\n    noteSwing: function noteSwing(swingResult) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getSwing(swingResult);\n        pitchRecord.e[0] += record;\n        stabilized.e[0] += record;\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getSwing(swingResult);\n        pitchRecord.n[0] += recordJ;\n        stabilized.n[0] += recordJ;\n        _baseballUtilityText.text.mode = m;\n        recordJ = stabilized.n[0];\n        record = stabilized.e[0];\n        var giraffe = this;\n        record.indexOf('Previous') !== 0 && this.async(function () {\n            if (record.indexOf('In play') > -1 && record.indexOf('struck out') > -1) {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(recordJ);\n                } else {\n                    console.log(record);\n                }\n            } else {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(giraffe.broadcastCount(), recordJ);\n                } else {\n                    console.log(giraffe.broadcastCount(), record);\n                }\n            }\n        });\n    },\n    async: function async(fn) {\n        if (!this.game.console && !this.game.quickMode) {\n            setTimeout(fn, 100);\n        }\n    },\n    noteStealAttempt: function noteStealAttempt(thief, success) {\n        // todo mention which base\n        return _baseballUtilityText.text.space() + thief.getName() + _baseballUtilityText.text.comma() + (success ? (0, _baseballUtilityText.text)('stolen base') : (0, _baseballUtilityText.text)('caught stealing')) + _baseballUtilityText.text.stop();\n    },\n    getPlateAppearanceResult: function getPlateAppearanceResult(game) {\n        var r = game.swingResult;\n        var record = '';\n        var batter = game.batter.getName();\n        var out = [];\n        if (r.looking) {\n            if (r.strike) {\n                record = batter + (0, _baseballUtilityText.text)(' struck out looking.');\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' walked.');\n            }\n            var steal = '';\n            if (r.stoleABase) {\n                steal = this.noteStealAttempt(r.stoleABase, true);\n            }\n            if (r.caughtStealing) {\n                steal = this.noteStealAttempt(r.caughtStealing, false);\n            }\n            record += steal;\n        } else {\n            if (r.contact) {\n                var fielder = r.fielder,\n                    bases = r.bases,\n                    outBy;\n                if (r.caught) {\n                    if (r.flyAngle < 15) {\n                        outBy = 'line';\n                    } else {\n                        if (['left', 'center', 'right'].indexOf(r.fielder) < 0) {\n                            outBy = 'pop';\n                        } else {\n                            outBy = 'fly';\n                        }\n                    }\n                } else {\n                    if (r.foul) {\n                        // not possible to end PA on foul?\n                    } else {\n                            if (r.error) {\n                                bases = 1;\n                                outBy = 'error';\n                            } else {\n                                if (r.thrownOut) {\n                                    if (Math.random() < 0.5) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'thrown';\n                                    }\n                                } else {\n                                    switch (r.bases) {\n                                        case 1:\n                                        case 2:\n                                        case 3:\n                                            bases = r.bases;\n                                            break;\n                                        case 4:\n                                            bases = 4;\n                                            if (r.splay < -15) {\n                                                fielder = 'left';\n                                            } else if (r.splay < 15) {\n                                                fielder = 'center';\n                                            } else {\n                                                fielder = 'right';\n                                            }\n                                            break;\n                                    }\n                                }\n                                if (r.firstOut) {\n                                    out = out.concat(r.additionalOuts.filter(function (runner) {\n                                        return runner !== 'batter';\n                                    }));\n                                    out.doublePlay = r.doublePlay;\n                                }\n                                if (r.fieldersChoice) {\n                                    out.push(r.fieldersChoice);\n                                    if (r.outs == 3) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'fieldersChoice';\n                                    }\n                                }\n                            }\n                        }\n                }\n                record = _baseballUtilityText.text.contactResult(batter, fielder, bases, outBy, r.outs === 3 ? [] : r.sacrificeAdvances, out);\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' struck out swinging.');\n            }\n        }\n        return record;\n    },\n    notePlateAppearanceResult: function notePlateAppearanceResult(game) {\n        var m = _baseballUtilityText.text.mode,\n            prevJ = (0, _baseballUtilityText.text)('Previous: ', 'n'),\n            prev = (0, _baseballUtilityText.text)('Previous: ', 'e');\n\n        var statement,\n            record = this.record,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n\n        _baseballUtilityText.text.mode = 'e';\n        var result = this.getPlateAppearanceResult(game);\n        record.e.unshift(result);\n        statement = prev + result;\n        pitchRecord.e = [statement];\n        stabilized.e = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = 'n';\n        var resultJ = this.getPlateAppearanceResult(game);\n        record.n.unshift(resultJ);\n        statement = prevJ + resultJ;\n        pitchRecord.n = [statement];\n        stabilized.n = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = m;\n        var giraffe = this;\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(['%c' + resultJ, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            } else {\n                console.log(['%c' + result, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            }\n        });\n    },\n    pointer: 0,\n    stabilized: {\n        pitchRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        },\n        shortRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        }\n    },\n    pitchRecord: {\n        e: [],\n        n: []\n    },\n    shortRecord: {\n        e: [],\n        n: []\n    },\n    record: {\n        e: [],\n        n: []\n    },\n    longFormFielder: function longFormFielder() {\n        return {\n            first: (0, _baseballUtilityText.text)('first baseman'),\n            second: (0, _baseballUtilityText.text)('second baseman'),\n            third: (0, _baseballUtilityText.text)('third baseman'),\n            short: (0, _baseballUtilityText.text)('shortstop'),\n            pitcher: (0, _baseballUtilityText.text)('pitcher'),\n            catcher: (0, _baseballUtilityText.text)('catcher'),\n            left: (0, _baseballUtilityText.text)('left fielder'),\n            center: (0, _baseballUtilityText.text)('center fielder'),\n            right: (0, _baseballUtilityText.text)('right fielder')\n        };\n    }\n};\n\nexports.Log = Log;\n\n},{\"baseball/Utility/text\":33}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballUtilityData = require('baseball/Utility/data');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nexports.data = _baseballUtilityData.data;\nexports.helper = _baseballUtilityHelper.helper;\nexports.Log = _baseballUtilityLog.Log;\nexports.text = _baseballUtilityText.text;\n\n},{\"baseball/Utility/Log\":29,\"baseball/Utility/data\":31,\"baseball/Utility/helper\":32,\"baseball/Utility/text\":33}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar data = {\n    surnames: ['Sato', 'Suzuki', 'Takahashi', 'Tanaka', 'Watanabe', 'Ito', 'Nakamura', 'Kobayashi', 'Yamamoto', 'Kato', 'Yoshida', 'Yamada', 'Sasaki', 'Yamaguchi', 'Matsumoto', 'Inoue', 'Kimura', 'Shimizu', 'Hayashi', 'Saito', 'Saito', 'Yamazaki', 'Nakajima', 'Mori', 'Abe', 'Ikeda', 'Hashimoto', 'Ishikawa', 'Yamashita', 'Ogawa', 'Ishii', 'Hasegawa', 'Goto', 'Okada', 'Kondo', 'Maeda', 'Fujita', 'Endo', 'Aoki', 'Sakamoto', 'Murakami', 'Ota', 'Kaneko', 'Fujii', 'Fukuda', 'Nishimura', 'Miura', 'Takeuchi', 'Nakagawa', 'Okamoto', 'Matsuda', 'Harada', 'Nakano'],\n    surnamesJ: ['佐藤', '鈴木', '高橋', '田中', '渡辺', '伊藤', '中村', '小林', '山本', '加藤', '吉田', '山田', '佐々木', '山口', '松本', '井上', '木村', '清水', '林', '斉藤', '斎藤', '山崎', '中島', '森', '阿部', '池田', '橋本', '石川', '山下', '小川', '石井', '長谷川', '後藤', '岡田', '近藤', '前田', '藤田', '遠藤', '青木', '坂本', '村上', '太田', '金子', '藤井', '福田', '西村', '三浦', '竹内', '中川', '岡本', '松田', '原田', '中野'],\n\n    namesJ: ['匠', 'ヒカル', 'ゆうき', '翔太', '冬馬', '漣', '港区', 'ルイ', '樹', '賢治', '五木', '春', '光一', '宗介', 'こうすけ', '雄太', '大樹', '瑛太',\n    // newer set\n    '宏', '亨', '道夫', '聡', '昭', '茂雄', '勝', '純一', '和夫', '勲', '省三', '隆', '達夫', '正一', '輝夫', '俊夫', '史郎', '勇', '義弘', '良雄', '登', '義明', '正義', '秀夫', '肇', '月', '克己', '正男', '光男', '久', '耕三', '清', '次郎', '正博', '明子', '武', '勉', '晴夫', '裕二', '稔', '障子', '和子', '敦', '茂', '信夫', '恵一', '忠', '高尾', '薫', 'ケン', '健治', '哲夫', '啓二', '光一', '真一', '貞夫', '靖', '武', '雄', '文雄', '久雄', '一朗', '健一', '正明', '五郎', '誠', '昭夫', '誠司', '洋一', '康夫', '誠一', '正美', '則夫', '幸雄', '忠雄', '仁', 'シンジ', '豊', '邦雄', '修', '雅之', '三郎', '英治', '浩二', '栄一', '恒夫', '義郎', '進', '博之', '巌'],\n    names: ['Takumi', 'Hikaru', 'Yuuki', 'Shouta', 'Touma', 'Ren', 'Minato', 'Rui', 'Tatsuki', 'Kenji', 'Itsuki', 'Haru', 'Kouichi', 'Sousuke', 'Kousuke', 'Yuuta', 'Daiki', 'Eita',\n    // newer set\n    'Hiroshi', 'Toru', 'Michio', 'Satoshi', 'Akira', 'Shigeo', 'Masaru', 'Junichi', 'Kazuo', 'Isao', 'Shozo', 'Takashi', 'Tatsuo', 'Shoichi', 'Teruo', 'Toshio', 'Shiro', 'Isamu', 'Yoshihiro', 'Yoshio', 'Noboru', 'Yoshiaki', 'Tadayoshi', 'Hideo', 'Hajime', 'Akari', 'Katsumi', 'Masao', 'Mitsuo', 'Hisashi', 'Kozo', 'Kiyoshi', 'Jiro', 'Masahiro', 'Akiko', 'Takeshi', 'Tsutomu', 'Haruo', 'Yuji', 'Minoru', 'Shoji', 'Kazuko', 'Atsushi', 'Shigeru', 'Shinobu', 'Keiichi', 'Tadashi', 'Takao', 'Kaoru', 'Ken', 'Kenji', 'Tetsuo', 'Keiji', 'Koichi', 'Shinichi', 'Sadao', 'Yasushi', 'Takeshi', 'Yu', 'Fumio', 'Hisao', 'Ichiro', 'Kenichi', 'Masaaki', 'Goro', 'Makoto', 'Akio', 'Seiji', 'Yoichi', 'Yasuo', 'Seiichi', 'Masami', 'Norio', 'Yukio', 'Tadao', 'Hitoshi', 'Shinji', 'Yutaka', 'Kunio', 'Osamu', 'Masayuki', 'Saburo', 'Eiji', 'Koji', 'Eiichi', 'Tsuneo', 'Yoshio', 'Susumu', 'Hiroyuki', 'Iwao'],\n    teamNamesJ: ['横浜', '大阪', '名古屋', '札幌', '神戸', '京都', '福岡', '川崎', '埼玉県', '広島', '仙台', '千葉県', '新潟', '浜松', '静岡', '相模原', '岡山', '熊本', '鹿児島', '船橋', '川口', '姫路', '松山', '宇都宮', '松戸', '西宮', '倉敷', '市川', '福山', '尼崎', '金沢', '長崎', '横須賀', '富山', '高松', '町田', '岐阜', '枚方', '藤沢', '柏', '豊中', '長野県', '豊橋', '一宮', '和歌山', '岡崎', '宮崎', '奈良', '吹田', '高槻', '旭川', 'いわき', '高崎', '所沢', '川越', '秋田', '越谷', '前橋', '那覇', '四日市', '青森', '久留米', '春日井', '盛岡', '明石', '福島', '下関', '長岡', '市原', '函館', '茨城県', '福井', '加古川', '徳島', '水戸', '平塚', '佐世保', '呉', '八戸', '佐賀', '寝屋川', '富士', '春日部', '茅ヶ崎', '松本', '厚木', '大和', '上尾', '宝塚', '筑波', '沼津', '熊谷', '伊勢崎', '岸和田', '鳥取', '小田原', '鈴鹿', '松江', '日立'],\n    teamNames: ['Yokohama', 'Osaka', 'Nagoya', 'Sapporo', 'Kobe', 'Kyoto', 'Fukuoka', 'Kawasaki', 'Saitama', 'Hiroshima', 'Sendai', 'Chiba', 'Niigata', 'Hamamatsu', 'Shizuoka', 'Sagamihara', 'Okayama', 'Kumamoto', 'Kagoshima', 'Funabashi', 'Kawaguchi', 'Himeji', 'Matsuyama', 'Utsunomiya', 'Matsudo', 'Nishinomiya', 'Kurashiki', 'Ichikawa', 'Fukuyama', 'Amagasaki', 'Kanazawa', 'Nagasaki', 'Yokosuka', 'Toyama', 'Takamatsu', 'Machida', 'Gifu', 'Hirakata', 'Fujisawa', 'Kashiwa', 'Toyonaka', 'Nagano', 'Toyohashi', 'Ichinomiya', 'Wakayama', 'Okazaki', 'Miyazaki', 'Nara', 'Suita', 'Takatsuki', 'Asahikawa', 'Iwaki', 'Takasaki', 'Tokorozawa', 'Kawagoe', 'Akita', 'Koshigaya', 'Maebashi', 'Naha', 'Yokkaichi', 'Aomori', 'Kurume', 'Kasugai', 'Morioka', 'Akashi', 'Fukushima', 'Shimonoseki', 'Nagaoka', 'Ichihara', 'Hakodate', 'Ibaraki', 'Fukui', 'Kakogawa', 'Tokushima', 'Mito', 'Hiratsuka', 'Sasebo', 'Kure', 'Hachinohe', 'Saga', 'Neyagawa', 'Fuji', 'Kasukabe', 'Chigasaki', 'Matsumoto', 'Atsugi', 'Yamato', 'Ageo', 'Takarazuka', 'Tsukuba', 'Numazu', 'Kumagaya', 'Isesaki', 'Kishiwada', 'Tottori', 'Odawara', 'Suzuka', 'Matsue', 'Hitachi']\n};\n\nexports.data = data;\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar helper = {\n    /**\n     * rotation angle from 0 to 360 where 180 is a fastball's backspin and 90 is a slider's, 0 for curveball\n     * in the direction (CW for righty), CCW for lefty.\n     *\n     * x movement, y movement, speed ratio, rotation angle, RPM from RHP perspective where left is smaller X\n     */\n    pitchDefinitions: {\n        // fastball, kinda\n        '4-seam': [0, 0, 1, 180, 1000],\n        '2-seam': [20, -20, 0.90, -45, 1200],\n        'cutter': [-25, -20, 0.95, 75, 1200],\n        'sinker': [15, -30, 0.95, -45, 1500],\n\n        // breaking ball\n        'slider': [-50, -35, 0.88, 80, 2000],\n        'fork': [0, -70, 0.87, 20, 500],\n        'curve': [0, -110, 0.82, 10, 2500],\n\n        // change-up\n        'change': [0, -10, 0.86, -15, 1000]\n    },\n    selectRandomPitch: function selectRandomPitch() {\n        return ['4-seam', '2-seam', 'cutter', 'sinker', 'slider', 'fork', 'curve', 'change'][Math.floor(Math.random() * 8)];\n    }\n};\n\nexports.helper = helper;\n\n},{}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar text = function text(phrase, override) {\n    if (!text.mode) text.mode = 'n';\n    var string = ({\n        n: {\n            empty: '-',\n            ' 1st': '1番',\n            ' 2nd': '2番',\n            ' 3rd': '3番',\n            ' 4th': '4番',\n            ' 5th': '5番',\n            ' 6th': '6番',\n            ' 7th': '7番',\n            ' 8th': '8番',\n            ' 9th': '9番',\n            'Now batting': '次のバッター',\n            'way outside': '相当外角',\n            'outside': '外角',\n            'inside': '内角',\n            'way inside': '相当内角',\n            'way low': '相当低め',\n            'low': '低め',\n            'high': '高め',\n            'way high': '相当高め',\n            'down the middle': '真ん中',\n            'first baseman': 'ファースト',\n            'second baseman': 'セカンド',\n            'third baseman': 'サード',\n            'shortstop': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left fielder': 'レフト',\n            'center fielder': 'センター',\n            'right fielder': 'ライト',\n            'Strike.': 'ストライク。',\n            'Ball.': 'ボール。',\n            'Fouled off.': 'ファウル。',\n            'In play.': 'インプレー。',\n            'Swinging strike.': '空振り。',\n            ' outs': 'アウト',\n            ' out': 'アウト',\n            '4-seam': 'ストレート',\n            '2-seam': 'シュート',\n            'slider': 'スライダー',\n            'fork': 'フォーク',\n            'cutter': 'カット',\n            'sinker': 'シンカー',\n            'curve': 'カーブ',\n            'change': 'チェンジ',\n            ' struck out looking.': '、見逃し三振。',\n            ' walked.': '、フォアボール。',\n            ' struck out swinging.': '、空振り三振。',\n            'Previous: ': '前：',\n            'looks like: ': '予想',\n            'breaking ball': '変化球',\n            'fastball': 'ストレート',\n            'Batting, ': '打球',\n            'Catching, pitch selection': '捕球選択',\n            'Season': '記録',\n            'Game': '今試合',\n            'Pitch': '球',\n            'Control': '制球',\n            'Velocity': '速度',\n            'Break': '変化',\n            'At Bat': 'バッター',\n            'On Deck': '次バッター',\n            'Eye :': '目',\n            'Power :': '力',\n            'Speed :': '速',\n            'Up to Bat': '打席',\n            'Fielding': '守備',\n            'BA': '打率',\n            'OBP': '出塁',\n            'SLG': '長打',\n            'PA': '打席',\n            'H/2B/3B/HR': '安／二／三／本',\n            'H': '安',\n            '2B': '二',\n            '3B': '三',\n            'HR': '本塁打',\n            'RBI': '打点',\n            'R': '得点',\n            'BB': '四球',\n            'SO': '三振',\n\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'Runner on': 'ランナー',\n            'Runners on': 'ランナー',\n            'Bases empty': 'ランナーなし',\n            'base': '塁',\n\n            'stolen base': '盗塁成功',\n            'caught stealing': '盗塁失敗',\n\n            'Select Language:': '言語',\n            'Run Fast Simulation': 'シミュレーションを試合終了まで行う',\n            'Play Ball!': 'プレーボール',\n            'Spectate the CPU': 'CPU観戦',\n            'Play from the 7th': '７回からプレーする',\n\n            'Throws/Bats': ' ',\n            'LHP': '左投',\n            'RHP': '右投',\n            'LHB': '左打',\n            'RHB': '右打',\n            'L': '左投',\n            'R ': '右投',\n            ' L ': '左打',\n            ' R ': '右打',\n            '#': '背番号',\n\n            'Opponent connected': '相手選手見参',\n            'Click Here': 'ここにクリック',\n            'Play against Team Japan': '日本代表挑戦'\n        },\n        e: {\n            empty: '-',\n            'Season': 'Season'\n        }\n    })[override ? override : text.mode][phrase];\n    return string ? string : phrase;\n};\n\ntext.getBattersEye = function (game) {\n    var eye = {},\n        breaking = Math.abs(game.pitchInFlight.breakDirection[0]) + Math.abs(game.pitchInFlight.breakDirection[1]) > 40;\n    eye.e = text('looks like: ', 'e') + breaking ? text('breaking ball', 'e') : text('fastball', 'e');\n    eye.n = text('looks like: ', 'n') + breaking ? text('breaking ball', 'n') : text('fastball', 'n');\n    return eye;\n};\n\ntext.fielderShortName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': '一',\n            'second': '二',\n            'third': '三',\n            'short': '遊',\n            'pitcher': '投',\n            'catcher': '捕',\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[fielder];\n    }\n    return fielder;\n};\n\ntext.slash = function () {\n    if (text.mode == 'n') {\n        return '・';\n    }\n    return '/';\n};\n\ntext.fielderLongName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'short': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left': 'レフト',\n            'center': 'センター',\n            'right': 'ライト'\n        })[fielder];\n    }\n    return ({\n        first: text('first baseman'),\n        second: text('second baseman'),\n        third: text('third baseman'),\n        short: text('shortstop'),\n        pitcher: text('pitcher'),\n        catcher: text('catcher'),\n        left: text('left fielder'),\n        center: text('center fielder'),\n        right: text('right fielder')\n    })[fielder];\n};\n\ntext.comma = function () {\n    return ({ n: '、', e: ', ' })[text.mode];\n};\ntext.space = function () {\n    return ({ n: '', e: ' ' })[text.mode];\n};\ntext.stop = function () {\n    return ({ n: '。', e: '. ' })[text.mode];\n};\n\ntext.namePitch = function (pitch) {\n    if (text.mode == 'e') {\n        return pitch.name.charAt(0).toUpperCase() + pitch.name.slice(1);\n    }\n    if (text.mode == 'n') {\n        return text(pitch.name);\n    }\n};\n\ntext.contactResult = function (batter, fielder, bases, outBy, sacrificeAdvances, out) {\n    var statement = '';\n    var infield = ['left', 'center', 'right'].indexOf(fielder) < 0;\n    var doublePlay = out.doublePlay;\n    if (text.mode == 'e') {\n        statement += batter;\n        if (outBy) {\n            switch (outBy) {\n                case 'fieldersChoice':\n                    play = out.length === 2 ? 'double play ' : '';\n                    statement += ' reached on a fielder\\'s choice ' + play + 'by ' + text.fielderShortName(fielder);\n                    break;\n                case 'line':\n                    statement += ' lined out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'fly':\n                    statement += ' flew out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'error':\n                    statement += ' reached on error by ' + text.fielderShortName(fielder);\n                    break;\n                case 'pop':\n                    statement += ' popped out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'ground':\n                    var play = doublePlay ? 'into a double play by' : 'out to';\n                    statement += ' grounded ' + play + ' ' + text.fielderShortName(fielder);\n                    break;\n                case 'thrown':\n                    play = doublePlay ? ' on a double play' : '';\n                    statement += ' was thrown out by ' + text.fielderShortName(fielder) + play;\n                    break;\n            }\n            if (out.length) {\n                var plural = out.length > 1;\n                var runner = plural ? 'Runners' : 'Runner';\n                var is = plural ? 'are' : 'is';\n                statement += '. ' + runner + ' from ' + text(out.join(text.comma())) + ' ' + is + ' out';\n            }\n        } else {\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += ' reached on an infield hit to ' + text.fielderShortName(fielder);\n                    } else {\n                        statement += ' reached on a single to ' + text.fielderShortName(fielder);\n                    }\n                    break;\n                case 2:\n                    statement += ' doubled past ' + text.fielderShortName(fielder);\n                    break;\n                case 3:\n                    statement += ' tripled past ' + text.fielderShortName(fielder);\n                    break;\n                case 4:\n                    statement += ' homered to ' + text.fielderShortName(fielder);\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += text.stop() + 'Runner on third scores';\n                } else {\n                    statement += text.stop() + 'Runner on ' + base + ' advances';\n                }\n            });\n        }\n        statement += text.stop();\n    }\n    if (text.mode == 'n') {\n        var stop = text.stop();\n        statement += batter + 'は';\n        if (outBy) {\n            var fielderLong = text.fielderLongName(fielder);\n            fielder = text.fielderShortName(fielder);\n            switch (outBy) {\n                case 'fieldersChoice':\n                    statement += '野選(' + fielder + ')で出塁';\n                    break;\n                case 'line':\n                    statement += fielder + '直';\n                    break;\n                case 'fly':\n                    statement += fielder + '飛';\n                    break;\n                case 'error':\n                    statement += 'エラー(' + fielder + ')で出塁';\n                    break;\n                case 'pop':\n                    statement += 'ポップフライで' + fielder + '飛';\n                    break;\n                case 'ground':\n                    statement += fielderLong + 'ゴロに封殺';\n                    break;\n                case 'thrown':\n                    statement += fielder + 'ゴロ';\n                    break;\n            }\n            if (out.length) {\n                statement += '。' + out.map(function (runner) {\n                    return text(runner);\n                }).join(text.comma()) + 'ランナーはアウト';\n            }\n            if (doublePlay) {\n                statement += '。ゲッツー';\n            }\n        } else {\n            fielder = text.fielderShortName(fielder);\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += '内野安打' + '(' + fielder + ')' + 'で出塁';\n                    } else {\n                        statement += '安打(' + fielder + ')' + 'で出塁';\n                    }\n                    break;\n                case 2:\n                    statement += '二塁打（' + fielder + '）で出塁';\n                    break;\n                case 3:\n                    statement += '三塁打（' + fielder + '）で出塁';\n                    break;\n                case 4:\n                    statement += '本塁打（' + fielder + '）';\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += stop + 'サードランナーホームイン';\n                } else {\n                    statement += stop + text(base) + 'ランナー進塁';\n                }\n            });\n        }\n        statement += stop;\n    }\n    return statement;\n};\n\nexports.text = text;\n\n},{}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballNamespace = require('baseball/namespace');\n\nif (typeof window == 'object') {\n    window.Baseball = _baseballNamespace.Baseball;\n}\n\nexports.Baseball = _baseballNamespace.Baseball;\n\n},{\"baseball/namespace\":35}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballTeamsProvider = require('baseball/Teams/Provider');\n\nvar Baseball = {};\n\nBaseball.model = {};\nBaseball.model.Game = Baseball.Game = _baseballModelGame.Game;\nBaseball.model.Player = Baseball.Player = _baseballModelPlayer.Player;\nBaseball.model.Team = Baseball.Team = _baseballModelTeam.Team;\n\nBaseball.service = {};\nBaseball.service.Animator = _baseballServices_services.Animator;\nBaseball.service.Distribution = _baseballServices_services.Distribution;\nBaseball.service.Iterator = _baseballServices_services.Iterator;\nBaseball.service.Mathinator = _baseballServices_services.Mathinator;\n\nBaseball.util = {};\nBaseball.util.text = _baseballUtility_utils.text;\nBaseball.util.Log = _baseballUtility_utils.Log;\n\nBaseball.teams = {};\nBaseball.teams.Provider = _baseballTeamsProvider.Provider;\n\nexports.Baseball = Baseball;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":25,\"baseball/Teams/Provider\":26,\"baseball/Utility/_utils\":30}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":21,\"baseball/Services/Distribution\":22,\"baseball/Services/Iterator\":23,\"baseball/Services/Mathinator\":24}]},{},[34]);\n","IndexController = function($scope, socket) {\n    var text = Baseball.util.text;\n    var Game = Baseball.Game;\n    var Animator = Baseball.service.Animator;\n\n    window.s = $scope;\n    $scope.t = text;\n\n    $scope.mode = function(setMode) {\n        if (setMode) {\n            text.mode = setMode;\n        }\n        return text.mode;\n    };\n\n    $scope.teamJapan = function() {\n        var provider = new Baseball.teams.Provider;\n        provider.assignTeam($scope.y, 'TeamJapan', 'away');\n        var game = $scope.y;\n        if (game.half === 'top') {\n            game.batter = game.teams.away.lineup[game.batter.order];\n            game.deck = game.teams.away.lineup[(game.batter.order + 1) % 9];\n            game.hole = game.teams.away.lineup[(game.batter.order + 2) % 9];\n        } else {\n            game.pitcher = game.teams.away.positions.pitcher;\n        }\n    };\n\n    $scope.sim = function() {$scope.proceedToGame(1, 1);};\n    $scope.seventh = function() {$scope.proceedToGame(7);};\n    $scope.playball = function() {$scope.proceedToGame();};\n    $scope.spectate = function() {$scope.proceedToGame(0,1);};\n\n    $scope.proceedToGame = function(quickMode, spectateCpu) {\n        $scope.y = new Game();\n        var game = $scope.y;\n        game.humanControl = spectateCpu ? 'none' : 'home';\n        game.quickMode = !!quickMode && quickMode !== 7;\n        var field = window.location.hash ? window.location.hash.slice(1) : game.teams.home.name + Math.ceil(Math.random()*47);\n        if (typeof io !== 'undefined') {\n            socket.game = game;\n            $scope.socket = io(window.location.hostname + ':64321', {\n                reconnection: false\n            });\n            $scope.socketService = socket;\n            socket.socket = $scope.socket;\n            socket.start(field);\n        }\n        window.location.hash = '#' + field;\n        s2.y = game;\n        bindMethods();\n        $('.blocking').remove();\n        if (game.humanControl == 'none' && game.quickMode) {\n            var n = 0;\n            Animator.console = true;\n            game.console = true;\n            do {\n                n++;\n                game.simulateInput(function(callback) {\n                    typeof callback == 'function' && callback();\n                });\n            } while (game.stage != 'end' && n < 500);\n            Animator.console = game.console = false;\n            log('sim ended');\n            game.debugOut();\n        } else if (game.humanControl == 'none') {\n            var scalar = game.quickMode ? 0.05 : 1;\n            var auto = setInterval(function() {\n                if (game.stage == 'end') {\n                    clearInterval(auto);\n                }\n                game.simulatePitchAndSwing(function(callback) {\n                    game.quickMode ? void 0 : $scope.$apply();\n                    $scope.updateFlightPath(callback);\n                });\n            }, scalar*(game.field.hasRunnersOn() ? Animator.TIME_FROM_SET + 2000 : Animator.TIME_FROM_WINDUP + 2000));\n        } else if (quickMode === 7 && spectateCpu === undefined) {\n            Animator.console = game.quickMode = game.console = true;\n            do {\n                game.simulateInput(function(callback) {\n                    typeof callback == 'function' && callback();\n                });\n            } while (game.inning < 7);\n            log('sim halted in 7th');\n            // todo debug 7th inning excess callbacks\n            game.debugOut();\n            Animator.console = game.quickMode = game.console = false;\n            game.stage = 'pitch';\n            game.half = 'top';\n            game.humanControl = 'home';\n        }\n        if (game.humanControl == 'away') {\n            game.simulateInput(function(callback) {\n                $scope.updateFlightPath(callback);\n            });\n        }\n        if (game.humanControl == 'home') {\n            $scope.showMessage = true;\n        }\n        if (!quickMode || quickMode === 7) {\n            game.timeOfDay.h = '00';\n            var delay = 100,\n                interval = 150;\n            while (delay < (game.startTime.h - game.timeOfDay.h) * interval) {\n                setTimeout(function() {\n                    game.passMinutes(60);\n                    $scope.$apply();\n                }, delay);\n                delay += interval;\n            }\n        }\n    };\n\n    var bindMethods = function() {\n        var game = $scope.y;\n        $scope.holdUpTimeouts = [];\n        $scope.expandScoreboard = false;\n        $scope.updateFlightPath = Animator.updateFlightPath.bind($scope);\n\n        // avoid scope cycles, any other easy way?\n        var bat = $('.target .swing.stance-indicator');\n        var showBat = function(event) {\n            if (game.humanBatting()) {\n                var offset = $('.target').offset();\n                var relativeOffset = {\n                    x : event.pageX - offset.left,\n                    y : 200 - (event.pageY - offset.top)\n                };\n                var angle = game.setBatAngle(relativeOffset.x, relativeOffset.y);\n                bat.css({\n                    top: 200-relativeOffset.y + \"px\",\n                    left: relativeOffset.x + \"px\",\n                    transform: \"rotate(\" + angle + \"deg) rotateY(\"+(game.batter.bats == \"left\" ? 0 : -0)+\"deg)\"\n                });\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\n                    bat.hide();\n                } else {\n                    bat.show();\n                }\n            }\n        };\n        var glove = $('.target .glove.stance-indicator');\n        var showGlove = function(event) {\n            if (game.humanPitching()) {\n                var offset = $('.target').offset();\n                var relativeOffset = {\n                    x : event.pageX - offset.left,\n                    y : 200 - (event.pageY - offset.top)\n                };\n                glove.css({\n                    top: 200-relativeOffset.y + \"px\",\n                    left: relativeOffset.x + \"px\"\n                });\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\n                    glove.hide();\n                } else {\n                    glove.show();\n                }\n            }\n        };\n\n        $scope.selectPitch = function(pitchName) {\n            if (game.stage == 'pitch') {\n                game.pitchInFlight = $.extend({}, game.pitcher.pitching[pitchName]);\n                game.pitchInFlight.name = pitchName;\n                game.swingResult.looking = true;\n            }\n        };\n        $scope.allowInput = true;\n        $scope.holdUp = function() {\n            $('.input-area').click();\n            $scope.$apply();\n        };\n        game.startOpponentPitching = function(callback) {\n            $scope.updateFlightPath(callback);\n        };\n        $scope.indicate = function($event) {\n            if (!$scope.allowInput) {\n                return;\n            }\n            if (game.pitcher.windingUp) {\n                return;\n            }\n            if (game.humanPitching()) $scope.allowInput = false;\n            var offset = $('.target').offset();\n            var relativeOffset = {\n                x : $event.pageX - offset.left,\n                y : 200 - ($event.pageY - offset.top)\n            };\n            clearTimeout($scope.lastTimeout);\n            while ($scope.holdUpTimeouts.length) {\n                clearTimeout($scope.holdUpTimeouts.shift());\n            }\n            $scope.showMessage = false;\n            game.receiveInput(relativeOffset.x, relativeOffset.y, function(callback) {\n                $scope.updateFlightPath(callback);\n            });\n        };\n        $scope.abbreviatePosition = function(position) {\n            if (text.mode == 'e') {\n                return {\n                    pitcher : 'P',\n                    catcher : 'C',\n                    first : '1B',\n                    second : '2B',\n                    short : 'SS',\n                    third : '3B',\n                    left : 'LF',\n                    center : 'CF',\n                    right : 'RF'\n                }[position];\n            }\n            return text.fielderShortName(position);\n        };\n        $scope.$watch('y.humanBatting()', function() {\n            if ($scope.y.humanBatting()) {\n                $('.input-area').mousemove(showBat);\n            } else {\n                $('.input-area').unbind('mousemove', showBat);\n                bat.hide();\n            }\n        });\n        $scope.$watch('y.humanPitching()', function() {\n            if ($scope.y.humanPitching()) {\n                $('.input-area').mousemove(showGlove);\n            } else {\n                $('.input-area').unbind('mousemove', showGlove);\n                glove.hide();\n            }\n        });\n        var aside = {\n            left: $('aside.image-panel.left'),\n            right: $('aside.image-panel.right')\n        };\n        //$scope.$watch('y.playResult', function() {\n        //    aside.left.hide();\n        //    aside.right.hide();\n        //    aside.left.fadeIn(1000, function() {\n        //        aside.left.fadeOut(1000);\n        //        aside.right.fadeIn(1000, function() {\n        //            aside.right.fadeOut(1000);\n        //        })\n        //    });\n        //    $scope.imagePanel = {\n        //        left: 'url(./public/images/' + $scope.y.playResult.batter + '.png)',\n        //        right: 'url(./public/images/' + $scope.y.playResult.fielder + '.png)'\n        //    };\n        //});\n    };\n\n\n};","var SocketService = function() {\n    var Service = function() {};\n    var game, socket, NO_OPERATION = function() {},\n        animator = Baseball.service.Animator;\n    Service.prototype = {\n        socket : {},\n        game : {},\n        connected : false,\n        start : function(key) {\n            game = this.game;\n            socket = this.socket;\n            game.opponentService = this;\n            this.connected = socket.connected;\n            this.on();\n            socket.emit('register', key);\n            socket.on('connect_failed reconnect_failed', function() {\n                console.log('connection unavailable');\n            });\n        },\n        on : function() {\n            var giraffe = this;\n            socket.on('register', this.register);\n            socket.on('connect reconnect', function() {\n                giraffe.connected = true;\n            });\n            socket.on('disconnect', function() {\n                giraffe.connected = false;\n            });\n            socket.on('pitch', function(pitch) {\n                //console.log('receive', 'pitch', pitch);\n                game.thePitch(0, 0, NO_OPERATION, pitch);\n                var scope = window.s;\n                animator.updateFlightPath.bind(scope)();\n            });\n            socket.on('swing', function(swing) {\n                //console.log('receive', 'swing', swing);\n                game.theSwing(0, 0, NO_OPERATION, swing);\n                var scope = window.s;\n                animator.updateFlightPath.bind(scope)(function() {\n                    if (swing.contact) {\n                        animator.animateFieldingTrajectory(game);\n                    }\n                });\n            });\n            socket.on('partner_disconnect', function() {\n                console.log('The opponent has disconnected');\n                game.opponentConnected = false;\n                var scope = window.s;\n                scope.$digest();\n            });\n            socket.on('partner_connect', function() {\n                game.opponentConnected = true;\n                var scope = window.s;\n                scope.$digest();\n            });\n            socket.on('opponent_taking_field', function() {\n                console.log('A challenger has appeared! Sending game data.');\n                socket.emit('game_data', game.toData());\n            });\n            socket.on('game_data', function(data) {\n                game.fromData(data);\n                var scope = window.s;\n                scope.$apply();\n            });\n            socket.on('field_in_use', function() {\n                game.opponentConnected = false;\n            });\n        },\n        off : function() {\n            socket.on('register', NO_OPERATION);\n        },\n        register: function(data) {\n            console.log(data);\n            if (data === 'away') {\n                game.humanControl = 'away';\n            }\n            socket.on('register', NO_OPERATION);\n        },\n        emitPitch : function(pitch) {\n            //console.log('emit', 'pitch', pitch);\n            socket.emit('pitch', pitch);\n        },\n        emitSwing : function(swing) {\n            //console.log('emit', 'swing', swing);\n            socket.emit('swing', swing);\n        },\n        swing : function() {\n\n        },\n        pitch : function() {\n\n        }\n    };\n    return new Service;\n};","BattersDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/batters.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","BatteryDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/battery.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","FieldDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/field.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","RatingBlockDirective = function() {\n    return {\n        scope: {\n            rating: '='\n        },\n        transclude: true,\n        templateUrl: 'public/html/views/directives/ratingBlock.html?cache='+cacheKey,\n        link: function(scope) {\n        }\n    };\n};","ScoreboardDirective = function() {\n    return {\n        scope: {\n            game: '=',\n            text: '='\n        },\n        templateUrl: 'public/html/views/directives/scoreboard.html?cache='+cacheKey,\n        link: function(scope) {\n            window.s2 = scope;\n            scope.t = scope.text;\n            scope.y = scope.game;\n        }\n    };\n};","var app = angular.module('YakyuuAikoukai', ['directives'])\n    .service('socket', SocketService)\n    .controller('IndexController', ['$scope', 'socket', IndexController]);\n\napp.config(function($interpolateProvider) {\n    $interpolateProvider.startSymbol('{{');\n    $interpolateProvider.endSymbol('}}');\n});\n\ncacheKey = Math.floor(Math.random()*1500);\n\nangular.module('directives', [])\n    .directive('scoreboard', ScoreboardDirective)\n    .directive('batters', BattersDirective)\n    .directive('battery', BatteryDirective)\n    .directive('field', FieldDirective)\n    .directive('ratingBlock', RatingBlockDirective);"],"sourceRoot":"/source/"}