{"version":3,"sources":["bundle.js","IndexController.js","SocketService.js","battersData.js","batteryData.js","field.js","ratingBlock.js","scoreboard.js","application.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_baseballUtilityLog","AtBat","text","this","infield","indexOf","INFIELD_HIT_INDICATOR","replace","split","RBI_INDICATOR","rbi","log","Log","beneficial","WALK","SINGLE","HOMERUN","DOUBLE","TRIPLE","SACRIFICE","REACHED_ON_ERROR","constructor","identifier","baseball/Utility/Log",2,"_baseballModelPlayer","_baseballServices_services","Field","game","init","first","second","third","hasRunnersOn","Player","determineSwingContactResult","swing","x","y","eye","batter","skill","offense","angles","Mathinator","getSplayAndFlyAngle","angle","splayAngle","splay","flyAngle","fly","power","bonus","landingDistance","Distribution","Math","abs","foul","fielder","findFielder","min","max","travelDistance","sacrificeAdvances","half","teams","home","positions","away","fatigue","error","fieldingEase","defense","fielding","throwingEase","throwing","fielderTravel","getPolarDistance","interceptRating","speed","caught","umpire","count","outs","sacrificeThrowInTime","fielderReturnDelay","getBaseRunningTime","push","bases","thrownOut","fieldingReturnDelay","fieldingDelay","outfielder","left","center","right","baseRunningTime","random","fieldersChoice","fielders","team","force","forcePlaySituation","additionalOuts","throwingDelay","infieldThrowDelay","catcher","doublePlay","firstOut","swingResult","Animator","console","_ball","hasIndicator","animateFieldingTrajectory","horizontalVelocity","cos","PI","fielderLateralReachDegrees","fielderArcPosition","pitcher","short","b","fieldingTest","distance","data","fielderCandidates","fielderSelectionTest","aggregateFieldingTest","tally","distances","false","selections","returnFielder","minDistance","giraffe","Iterator","each","position","spot","thisDistance","baseball/Model/Player","baseball/Services/_services",3,"_baseballModelField","_baseballModelTeam","_baseballModelUmpire","_baseballUtility_utils","Game","m","gamesIntoSeason","humanControl","quickMode","debug","startTime","h","slice","timeOfDay","mode","floor","field","Team","helper","name","pickName","Umpire","humanPitching","stage","autoPitchSelect","passMinutes","minutes","parseInt","setLuminosity","getInning","inning","toUpperCase","humanBatting","end","R","getName","stats","pitching","W","L","note","simulateInput","callback","pitchTarget","autoPitch","autoSwing","simulatePitchAndSwing","setTimeout","TIME_FROM_SET","TIME_FROM_WINDUP","receiveInput","thePitch","theSwing","pitchNames","keys","pitchName","pitch","pitchInFlight","windingUp","$","addClass","windup","css","pitchLocation","loop","resetCamera","animate","width","removeClass","deceptiveX","deceptiveY","convergence","convergenceSum","balls","strikes","centralizedNumber","cpuSwing","swingProbability","swingLikelihood","opponentConnected","waitingCallback","awaitPitch","opponentService","emitSwing","awaitSwing","emitPitch","inFlight","override","breakDirection","pitchDefinitions","battersEye","getBattersEye","control","pitchControl","breakEffect","notePitch","setBatAngle","recalculation","getAngularOffset","precision","looking","contact","strike","sqrt","pow","noteSwing","result","makeCall","emit","startOpponentPitching","origin","bats","battingAngle","debugOut","filter","PO","map","hitters","lineup","concat","atBats","getAtBats","ab","LO","FO","GO","GIDP","SO","BB","SAC","FC","table","scoreboard","toData","players","deck","hole","nameJ","says","player","serialize","pitchRecord","record","fromData","playerJson","index","playerData","JSON","parse","side","resetStats","stabilizeShortRecord","velocity","break","playResult","showPlayResultPanels","batterOutcomes","atBat","pop","fielderOutcomes","pitchSelect",4,5,6,7,8,9,"resetTally","H","E","baseball/Model/Field","baseball/Model/Team","baseball/Model/Umpire","baseball/Utility/_utils","Manager","makeLineup","jerseyNumber","selectForSkill","bench","number","order","pool","skillset","requiredThrowingHandedness","selection","rating","skills","cursor","property","shift","_baseballModel_models","hero","averaging","randomizeSkills","surnameKey","surnames","nameKey","names","jSurname","surnamesJ","jGivenName","namesJ","spaceName","surname","surnameJ","stringify","atBatObjects","IP","ER","GS","arguments","undefined","randBetween","total","isNaN","pa","paRemaining","bb","so","doubles","triples","hr","hbp","sac","chances","pitches","K","getK9","getERA","ERA","HR","WHIP","getWHIP","batting","getBA","getBABIP","ba","getOBP","obp","getSLG","slg","2b","3b","A","K9","item","recordRBI","recordInfieldHit","allPitches","randValue","isPitching","catching","slider","fork","cutter","sinker","curve","change","reduce","prev","current","getSurname","getUniformNumber","getOrder","baseball/Model/_models","_baseballModelManager","bullpen","manager","j","teamNameIndex","teamNames","teamNamesJ","nowBatting","expanded","baseball/Model/Manager","playBall","batterRunner","noteBatter","advanceRunners","LINEOUT","FLYOUT","newBatter","runner","FIELDERS_CHOICE","reachBase","GROUNDOUT","hitByPitch","STRIKEOUT","changeSides","isWalk","RUN","canAdvance","notePlateAppearanceResult","lastBatter","_baseballModelAtBat","_baseballModelGame","baseball/Model/AtBat","baseball/Model/Game","_meshBall","_meshMound","_meshBase","_meshField","_meshGrass","_meshHomeDirt","_meshBattersEye","_meshWall","_sceneLighting","VERTICAL_CORRECTION","INITIAL_CAMERA_DISTANCE","THREE","AHEAD","Vector3","INITIAL_POSITION","Loop","elementClass","main","window","requestAnimationFrame","bind","panToward","moveToward","moveTarget","objects","renderer","render","scene","camera","getThree","Scene","attach","lighting","addTo","PerspectiveCamera","getAspect","_target","join","Mound","HomeDirt","Grass","BattersEye","Wall","Base","pos","rate","z","bob","removeEventListener","onResize","addEventListener","element","document","getElementsByClassName","innerHTML","WebGLRenderer","alpha","setSize","appendChild","domElement","aspect","fov","offsetWidth","updateProjectionMatrix","HEIGHT","vector","maxIncrement","panSpeed","forAllLoops","lookAt","moveSpeed","panning","setLookTarget","setMoveTarget","moveCamera","fn","background","foreground","ball","Ball","setType","rotate","deriveTrajectory","constructors","./mesh/Ball","./mesh/Base","./mesh/BattersEye","./mesh/Field","./mesh/Grass","./mesh/HomeDirt","./mesh/Mound","./mesh/Wall","./scene/lighting",10,"_Loop","AbstractMesh","add","mesh","splice","remove","WORLD_BASE_Y","../Loop",11,"_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_get","_x","_x2","_x3","_again","object","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_AbstractMesh2","_baseballServicesMathinator","_Indicator","_baseballUtilityHelper","SCALE","INDICATOR_DEPTH","_AbstractMesh","trajectory","Array","breakingTrajectory","getMesh","bounce","baseURL","loader","TextureLoader","textureColor","load","textureBump","geometry","SphereGeometry","material","MeshPhongMaterial","bumpMap","bumpScale","Mesh","frame","spawnIndicator","detach","type","handednessScalar","rpm","rotationAngle","setRotation","rotation","meshRotation","RPM","RPS","rotationalIncrement","RP60thOfASecond","xComponent","yComponent","sin","indicator","Indicator","top","breakTop","breakLeft","flightTime","getFlightTime","scale","ARC_APPROXIMATION_Y_ADDITIVE","terminus","breakingTerminus","lastPosition","lastBreakingPosition","frames","breakingFrames","frameCount","counter","xBreak","yBreak","breakingDistance","breakingLateness","breakingLatenessMomentumExponent","progress","breakingInfluencePosition","momentumScalar","breakingScalar","scalarSum","breakingPosition","increment","breakingIncrement","pause","dragScalarApproximation","apexHeight","airTime","flightScalar","velocityVerticalComponent","RADIAN","extrema","lastHeight","percent","currentDistance","DEFAULT_RPM","./AbstractMesh","./Indicator","baseball/Services/Mathinator","baseball/Utility/helper",12,"base","MeshLambertMaterial","color","BoxGeometry",13,14,"PlaneGeometry",15,16,17,"CircleGeometry",18,19,"radians","hypotenuse","offset",20,"light","HemisphereLight","sun","DirectionalLight","set","level","intensity",21,"_baseballRenderLoop","TweenMax","renderingMode","beginRender","addStaticMeshes","loadTweenMax","to","from","killAll","HOLD_UP_ALLOWANCE","pitchBreak","updateFlightPath","renderFlightPath","tweenFlightPath","$scope","$baseballs","flightSpeed","originTop","originLeft","henka","quarter","pitchTransition","targetTransition","transitions","lastTimeout","allowInput","$apply","holdUpTimeouts","holdUp","derivePitchingTrajectory","tweenFieldingTrajectory","renderFieldingTrajectory","splayOnly","linearApproximateDragScalar","scalar","memory","bounding","mathinator","transitionalTrajectory","show","time","transitionalCatcherPerspectiveTrajectory","hasOwnProperty","baseball/Render/Loop","baseball/services/_services",22,"chance","effect","actual","ump",23,"collection",24,"square","SPLAY_INDICATOR_LEFT","xScalar","yScalar","originalAngle","atan","angledY","angledX","step","givenApexHeight","givenDistance","givenSplayAngle","bottom","padding","borderWidth","radian","apexRatio","delay","ease","Power4","easeOut","Linear","easeNone","givenOrigin","height","projection","translateSwingResultToStylePosition","maxPadding","maxBorderWidth","_top","_left","transform","intercept","direction","velocityRating","velocityScalar",25,"_baseballServicesAnimator","_baseballServicesDistribution","_baseballServicesIterator","baseball/Services/Animator","baseball/Services/Distribution","baseball/Services/Iterator",26,"_TeamJapan","Provider","special","TeamJapan","samurai","./TeamJapan",27,"_baseballTeamsTrainer","darvish","johjima","ogasawara","nishioka","kawasaki","murata","matsui","ichiro","inaba","matsuzaka","fukudome","aoki","abe","iwamura","coach","Trainer","makePlayer","baseball/Teams/Trainer",28,"throws",29,"_baseballUtilityText","stabilized","shortRecord","GITP","rec","rec2","_note","noteJ","unshift","async","getBatter",0,"longFormFielder","comma","recordJ","getPitchLocationDescription","batterIsLefty","say","noComma","noComma2","namePitch","stop","broadcastCount","justOuts","lastOuts","broadcastScore","broadcastRunners","runners","runnerCount","getSwing","getPlateAppearanceResult","out","outBy","contactResult","statement","prevJ","resultJ","pointer","baseball/Utility/text",30,"_baseballUtilityData","baseball/Utility/data",31,32,"4-seam","2-seam","selectRandomPitch",33,"phrase","string","empty"," 1st"," 2nd"," 3rd"," 4th"," 5th"," 6th"," 7th"," 8th"," 9th","Now batting","way outside","outside","inside","way inside","way low","low","high","way high","down the middle","first baseman","second baseman","third baseman","shortstop","left fielder","center fielder","right fielder","Strike.","Ball.","Fouled off.","In play.","Swinging strike."," outs"," out"," struck out looking."," walked."," struck out swinging.","Previous: ","looks like: ","breaking ball","fastball","Batting, ","Catching, pitch selection","Season","Pitch","Control","Velocity","Break","At Bat","On Deck","Eye :","Power :","Speed :","Up to Bat","Fielding","BA","OBP","SLG","PA","H/2B/3B/HR","2B","3B","RBI","Runner on","Runners on","Bases empty","Select Language:","Run Fast Simulation","Play Ball!","Spectate the CPU","Play from the 7th","Throws/Bats","LHP","RHP","LHB","RHB","R "," L "," R ","#","Opponent connected","Click Here","Play against Team Japan","breaking","fielderShortName","slash","fielderLongName","charAt","play","plural","is","fielderLong",34,"_baseballNamespace","Baseball","baseball/namespace",35,"_baseballTeamsProvider","model","service","util","baseball/Teams/Provider",36,"IndexController","socket","setMode","teamJapan","provider","assignTeam","proceedToGame","spectateCpu","location","hash","ceil","io","hostname","reconnection","socketService","start","s2","bindMethods","auto","setInterval","clearInterval","showMessage","interval","expandScoreboard","bat","showBat","event","relativeOffset","pageX","pageY","hide","glove","showGlove","selectPitch","extend","click","indicate","$event","clearTimeout","abbreviatePosition","$watch","mousemove","unbind","SocketService","Service","NO_OPERATION","animator","connected","on","register","scope","$digest","off","BattersDirective","templateUrl","cacheKey","transclude","BatteryDirective","FieldDirective","RatingBlockDirective","link","ScoreboardDirective","app","angular","controller","config","$interpolateProvider","startSymbol","endSymbol","directive"],"mappings":"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","file":"application.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar AtBat = (function () {\n    function AtBat(text) {\n        _classCallCheck(this, AtBat);\n\n        this.infield = text.indexOf(AtBat.prototype.INFIELD_HIT_INDICATOR) > -1 ? AtBat.prototype.INFIELD_HIT_INDICATOR : '';\n        text = text.replace(AtBat.prototype.INFIELD_HIT_INDICATOR, '');\n        this.text = text.split(AtBat.prototype.RBI_INDICATOR)[0];\n        this.rbi = text.split(this.text)[1] + '';\n\n        var log = new _baseballUtilityLog.Log();\n\n        var beneficial = [log.WALK, log.SINGLE, log.HOMERUN, log.DOUBLE, log.TRIPLE, log.SACRIFICE, log.REACHED_ON_ERROR];\n        if (beneficial.indexOf(this.text) > -1) {\n            this.beneficial = true;\n        }\n    }\n\n    _createClass(AtBat, [{\n        key: 'toString',\n        value: function toString() {\n            return '' + this.infield + this.text + this.rbi;\n        }\n    }]);\n\n    return AtBat;\n})();\n\nAtBat.prototype.constructor = AtBat;\nAtBat.prototype.identifier = 'AtBat';\nAtBat.prototype.INFIELD_HIT_INDICATOR = '';\nAtBat.prototype.RBI_INDICATOR = '+';\n\nexports.AtBat = AtBat;\n\n},{\"baseball/Utility/Log\":29}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\n/**\r\n * The baseball field tracks the ball's movement, fielders, and what runners are on\r\n * @param game\r\n * @constructor\r\n */\nvar Field = function Field(game) {\n    this.init(game);\n};\n\nField.prototype = {\n    constructor: Field,\n    init: function init(game) {\n        this.game = game;\n        this.first = null;\n        this.second = null;\n        this.third = null;\n    },\n    /**\r\n     * @returns {boolean}\r\n     */\n    hasRunnersOn: function hasRunnersOn() {\n        return this.first instanceof _baseballModelPlayer.Player || this.second instanceof _baseballModelPlayer.Player || this.third instanceof _baseballModelPlayer.Player;\n    },\n    /**\r\n     * @param swing\r\n     * @returns {object}\r\n     */\n    determineSwingContactResult: function determineSwingContactResult(swing) {\n        var x = swing.x,\n            y = swing.y;\n        var eye = this.game.batter.skill.offense.eye;\n        /**\r\n         * The initial splay angle is 90 degrees for hitting up the middle and 0\r\n         * for a hard foul left, 180 is a foul right. Depending on the angle of the bat,\r\n         * a y-axis displacement which would otherwise pop or ground the ball can instead\r\n         * increase the left/right effect.\r\n         */\n        var angles = _baseballServices_services.Mathinator.getSplayAndFlyAngle(x, y, swing.angle, eye);\n        var splayAngle = angles.splay;\n\n        var flyAngle = angles.fly;\n        var power = this.game.batter.skill.offense.power + (this.game.batter.eye.bonus || 0) / 5;\n        var landingDistance = _baseballServices_services.Distribution.landingDistance(power, flyAngle);\n        if (flyAngle < 0 && landingDistance > 95) {\n            landingDistance = (landingDistance - 95) / 4 + 95;\n        }\n        var game = this.game;\n\n        if (Math.abs(splayAngle) > 50) swing.foul = true;\n        swing.fielder = this.findFielder(splayAngle, landingDistance, power, flyAngle);\n        if (['first', 'second', 'short', 'third'].indexOf(swing.fielder) > -1) {\n            landingDistance = Math.min(landingDistance, 110); // stopped by infielder\n        } else {\n                landingDistance = Math.max(landingDistance, 150); // rolled past infielder\n            }\n        swing.travelDistance = landingDistance;\n        swing.flyAngle = flyAngle;\n        /**\r\n         * the splay for the result is adjusted to 0 being up the middle and negatives being left field\r\n         * @type {number}\r\n         */\n        swing.splay = splayAngle;\n        swing.sacrificeAdvances = [];\n\n        if (swing.fielder) {\n            var fielder = game.half == 'top' ? game.teams.home.positions[swing.fielder] : game.teams.away.positions[swing.fielder];\n            fielder.fatigue += 4;\n            swing.error = false;\n            var fieldingEase = fielder.skill.defense.fielding / 100,\n                throwingEase = fielder.skill.defense.throwing / 100;\n            //reach the batted ball?\n            swing.fielderTravel = this.getPolarDistance(this.positions[swing.fielder], [splayAngle + 90, landingDistance]);\n            var interceptRating = fielder.skill.defense.speed * 1.8 + flyAngle * 2.4 - swing.fielderTravel * 1.55 - 15;\n            if (interceptRating > 0 && flyAngle > 4) {\n                //caught cleanly?\n                if (_baseballServices_services.Distribution.error(fielder)) {\n                    //error\n                    fieldingEase *= 0.5;\n                    swing.error = true;\n                    swing.caught = false;\n                } else {\n                    swing.caught = true;\n                    if (game.umpire.count.outs < 2) {\n                        var sacrificeThrowInTime = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, 100);\n                        // todo ran into outfield assist\n                        if (this.first && sacrificeThrowInTime > this.first.getBaseRunningTime() + 4.5) {\n                            swing.sacrificeAdvances.push('first');\n                        }\n                        if (this.second && sacrificeThrowInTime > this.second.getBaseRunningTime()) {\n                            swing.sacrificeAdvances.push('second');\n                        }\n                        if (this.third && sacrificeThrowInTime > this.third.getBaseRunningTime() - 0.5) {\n                            swing.sacrificeAdvances.push('third');\n                        }\n                    }\n                }\n            } else {\n                swing.caught = false;\n            }\n\n            if (!swing.caught) {\n                swing.bases = 0;\n                swing.thrownOut = false; // default value\n                var fieldingReturnDelay = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, interceptRating);\n                swing.fieldingDelay = fieldingReturnDelay;\n                swing.outfielder = ({ 'left': 1, 'center': 1, 'right': 1 })[swing.fielder] == 1;\n                var speed = game.batter.skill.offense.speed,\n                    baseRunningTime = _baseballServices_services.Mathinator.baseRunningTime(speed);\n\n                if (swing.outfielder) {\n                    swing.bases = 1;\n                    baseRunningTime *= 0.95;\n                    fieldingReturnDelay -= baseRunningTime;\n                    eye = game.batter.skill.offense.eye / 400;\n\n                    while (fieldingReturnDelay > baseRunningTime && swing.bases < 3 && Math.random() < 0.25 + eye) {\n                        baseRunningTime *= 0.95;\n                        swing.bases++;\n                        fieldingReturnDelay -= baseRunningTime;\n                    }\n                } else {\n                    var first = this.first,\n                        second = this.second,\n                        third = this.third;\n                    swing.fieldersChoice = null;\n                    swing.bases = fieldingReturnDelay >= baseRunningTime + 1 ? 1 : 0;\n                    if (first && fieldingReturnDelay < first.getBaseRunningTime()) swing.fieldersChoice = 'first';\n                    if (first && second && fieldingReturnDelay < second.getBaseRunningTime() + 0.6) swing.fieldersChoice = 'second';\n                    if (third && fieldingReturnDelay < third.getBaseRunningTime()) swing.fieldersChoice = 'third';\n                    // double play\n                    var outs = game.umpire.count.outs;\n                    if (swing.fieldersChoice) {\n                        outs++;\n                        swing.bases = 1;\n                        var fielders = fielder.team.positions;\n                        var force = this.forcePlaySituation();\n                        if (force) {\n                            var additionalOuts = [];\n                            var throwingDelay = fieldingReturnDelay;\n                            if (third && force === 'third' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher) + throwingDelay < second.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher);\n                                fielders.catcher.fatigue += 4;\n                                additionalOuts.push('second');\n                                outs++;\n                                force = 'second';\n                            }\n                            if (second && force === 'second' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third) + throwingDelay < first.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third);\n                                fielders.third.fatigue += 4;\n                                additionalOuts.push('first');\n                                outs++;\n                                force = 'first';\n                            }\n                            if (first && force === 'first' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second) + throwingDelay < game.batter.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second);\n                                fielders.second.fatigue += 4;\n                                additionalOuts.push('batter');\n                                swing.bases = 0;\n                                // todo (or shortstop)\n                                outs++;\n                            }\n                            if (outs - game.umpire.count.outs === 2) {\n                                swing.doublePlay = true;\n                            }\n                            if (additionalOuts.length) {\n                                swing.additionalOuts = additionalOuts;\n                                swing.firstOut = swing.fieldersChoice;\n                                if (additionalOuts.indexOf('batter') > -1) {\n                                    delete swing.fieldersChoice;\n                                }\n                            }\n                        }\n                        //console.log('DP?', !!this.forcePlaySituation(), 'throwingDelay', throwingDelay,\n                        //    'fielding delay', fieldingReturnDelay, 'runner', game.batter.getBaseRunningTime());\n                        //if (typeof additionalOuts !== 'undefined' && additionalOuts.length) {\n                        //    console.log('omg dp', additionalOuts);\n                        //}\n                    } else {\n                            delete swing.additionalOuts;\n                            delete swing.firstOut;\n                            delete swing.doublePlay;\n                            delete swing.fieldersChoice;\n                        }\n                }\n                swing.thrownOut = swing.bases == 0;\n                if (swing.thrownOut) {\n                    swing.thrownOut = true;\n                    swing.error = false;\n                }\n            }\n        } else {\n            if (Math.abs(splayAngle) < 45 && landingDistance > 300) {\n                swing.bases = 4;\n            } else {\n                swing.foul = true;\n                swing.caught = false;\n            }\n        }\n        this.game.swingResult = swing;\n        if (!_baseballServices_services.Animator.console) {\n            _baseballServices_services.Animator._ball.hasIndicator = true;\n            _baseballServices_services.Animator.animateFieldingTrajectory(this.game);\n        }\n    },\n    forcePlaySituation: function forcePlaySituation() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        return first && second && third && 'third' || first && second && 'second' || first && 'first';\n    },\n    //printRunnerNames : function() {\n    //    return [this.first ? this.first.getName() : '', this.second ? this.second.getName() : '', this.third ? this.third.getname() : ''];\n    //},\n    /**\r\n     * @param splayAngle {Number} 0 to 180, apparently\r\n     * @param landingDistance {Number} in feet, up to 310 or so\r\n     * @param power {Number} 0-100\r\n     * @param flyAngle {Number} roughly -15 to 90\r\n     * @returns {string|boolean}\r\n     */\n    findFielder: function findFielder(splayAngle, landingDistance, power, flyAngle) {\n        var angle = splayAngle; // 0 is up the middle, clockwise increasing\n\n        var fielder;\n\n        if (Math.abs(angle) > 50) return false; // foul\n        if (landingDistance < 10 && landingDistance > -20) {\n            return 'catcher';\n        } else if (landingDistance >= 10 && landingDistance < 45 && Math.abs(angle) < 5) {\n            return 'pitcher';\n        }\n\n        var infield = landingDistance < 145 - Math.abs(angle) / 90 * 50;\n        if (flyAngle < 7) {\n            // 7 degrees straight would fly over the infielder, but add some for arc\n            var horizontalVelocity = Math.cos(flyAngle / 180 * Math.PI) * (85 + power / 100 * 10); // mph toward infielder\n            if (flyAngle < 0) horizontalVelocity *= 0.5; // velocity loss on bounce\n            var fielderLateralReachDegrees = 1 + 22.5 * (100 - horizontalVelocity) / 100; // up to 90/4 = 22.5\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n            var fielderArcPosition = this.positions[fielder][0] - 90;\n            // a good infielder can field a hard hit grounder even with a high terminal distance\n            infield = Math.abs(angle - fielderArcPosition) < fielderLateralReachDegrees;\n        }\n\n        // ball in the air to infielder\n        if (infield && landingDistance > 15) {\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n        } else if (landingDistance < 310) {\n            // past the infield or fly ball to outfielder\n            if (angle < -15) {\n                fielder = 'left';\n            } else if (angle < 16) {\n                fielder = 'center';\n            } else {\n                fielder = 'right';\n            }\n        } else {\n            fielder = false;\n        }\n        return fielder;\n    },\n    positions: {\n        pitcher: [90, 66],\n        catcher: [0, 0],\n        first: [90 + 45 - 7, 98],\n        second: [90 + 12.5, 130],\n        short: [90 - 12.5, 130],\n        third: [90 - 45 + 7, 98],\n        left: [45 + 14, 280],\n        center: [90, 280],\n        right: [135 - 14, 280]\n    },\n    getPolarDistance: function getPolarDistance(a, b) {\n        return _baseballServices_services.Mathinator.getPolarDistance(a, b);\n    },\n    fieldingTest: function fieldingTest() {\n        var angle = Math.random() * 90 + 45;\n        var distance = Math.random() * 320;\n        var fielder = this.findFielder(angle, distance);\n        var data = {};\n        if (fielder) {\n            var fielderCandidates = this.fielderSelectionTest(angle, distance, true);\n            data.fielder = fielderCandidates[1];\n            data[fielderCandidates[0]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[0]][0], this.positions[fielderCandidates[0]][1]]);\n            data[fielderCandidates[1]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[1]][0], this.positions[fielderCandidates[1]][1]]);\n            return data;\n        }\n    },\n    aggregateFieldingTest: function aggregateFieldingTest() {\n        var fielders = {\n            pitcher: { tally: 0, distances: [] },\n            catcher: { tally: 0, distances: [] },\n            first: { tally: 0, distances: [] },\n            second: { tally: 0, distances: [] },\n            short: { tally: 0, distances: [] },\n            third: { tally: 0, distances: [] },\n            left: { tally: 0, distances: [] },\n            center: { tally: 0, distances: [] },\n            right: { tally: 0, distances: [] },\n            'false': { tally: 0, distances: [] }\n        };\n        var selections = [];\n        for (var i = 0; i < 1000; i++) {\n            var angle = Math.random() * 90 + 45;\n            var distance = Math.random() * 320;\n            var fielder = this.findFielder(angle, distance);\n            fielders[fielder].tally++;\n            if (fielder) {\n                fielders[fielder].distances.push(this.getPolarDistance([angle, distance], [this.positions[fielder][0], this.positions[fielder][1]]));\n            }\n            selections.push([angle, distance]);\n            selections.push(this.fielderSelectionTest(angle, distance, true));\n        }\n        return [fielders, selections];\n    },\n    fielderSelectionTest: function fielderSelectionTest(angle, distance, returnFielder) {\n        var distances = [];\n        var minDistance = 300;\n        var giraffe = this;\n        var fielder = false;\n        Iterator.each(this.positions, function (position, spot) {\n            var thisDistance = giraffe.getPolarDistance([angle, distance], spot);\n            distances[thisDistance] = position;\n            if (minDistance > thisDistance) {\n                minDistance = thisDistance;\n                fielder = position;\n            }\n        });\n        return returnFielder ? [fielder, this.findFielder(angle, distance)] : distances;\n    }\n};\n\nexports.Field = Field;\n\n},{\"baseball/Model/Player\":5,\"baseball/Services/_services\":25}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Game = function Game(m) {\n    this.init(m);\n};\n\nGame.prototype = {\n    constructor: Game,\n    gamesIntoSeason: 0,\n    humanControl: 'home', //home, away, both, none\n    console: false,\n    quickMode: true,\n    debug: [],\n    pitcher: {}, // Player&\n    batter: {}, // Player&\n    init: function init(m) {\n        this.startTime = {\n            h: ('00' + (Math.random() * 8 + 10 | 0)).slice(-2),\n            m: ('00' + (Math.random() * 60 | 0)).slice(-2)\n        };\n        this.timeOfDay = {\n            h: this.startTime.h,\n            m: this.startTime.m\n        };\n        if (m) _baseballUtility_utils.text.mode = m;\n        this.gamesIntoSeason = 1 + Math.floor(Math.random() * 142);\n        this.field = new _baseballModelField.Field(this);\n        this.teams.away = new _baseballModelTeam.Team(this);\n        this.teams.home = new _baseballModelTeam.Team(this);\n        this.log = new _baseballUtilityLog.Log();\n        this.log.game = this;\n        this.debug = [];\n        this.helper = _baseballUtility_utils.helper;\n        while (this.teams.away.name == this.teams.home.name) {\n            this.teams.away.pickName();\n        }\n        this.umpire = new _baseballModelUmpire.Umpire(this);\n        if (this.humanPitching()) {\n            this.stage = 'pitch';\n        }\n        this.autoPitchSelect();\n        _baseballServices_services.Animator.init();\n    },\n    passMinutes: function passMinutes(minutes) {\n        this.timeOfDay.m = ('00' + (parseInt(this.timeOfDay.m) + parseInt(minutes))).slice(-2);\n        if (parseInt(this.timeOfDay.m) >= 60) {\n            this.timeOfDay.m = ('00' + parseInt(this.timeOfDay.m) % 60).slice(-2);\n            this.timeOfDay.h = ('00' + (parseInt(this.timeOfDay.h) + 1) % 24).slice(-2);\n        }\n        _baseballServices_services.Animator.setLuminosity(1 - Math.abs(12 - this.timeOfDay.h) / 12);\n    },\n    getInning: function getInning() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.inning + (this.half == 'top' ? 'オモテ' : 'ウラ') : this.half.toUpperCase() + ' ' + this.inning;\n    },\n    humanBatting: function humanBatting() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'away';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'home';\n        }\n    },\n    humanPitching: function humanPitching() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'home';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'away';\n        }\n    },\n    end: function end() {\n        this.stage = 'end';\n        var e, n;\n        e = this.tally.home.R > this.tally.away.R ? 'Home team wins!' : this.tally.home.R == this.tally.away.R ? 'You tied. Yes, you can do that.' : 'Visitors win!';\n        n = this.tally.home.R > this.tally.away.R ? this.teams.home.getName() + 'の勝利' : this.tally.home.R == this.tally.away.R ? '引き分け' : this.teams.away.getName() + 'の勝利';\n        if (this.tally.home.R > this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.W++;\n            this.teams.away.positions.pitcher.stats.pitching.L++;\n        } else if (this.tally.home.R < this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.L++;\n            this.teams.away.positions.pitcher.stats.pitching.W++;\n        }\n        this.log.note(e, n);\n        this.log.note('Reload to play again', 'リロるは次の試合へ');\n    },\n    stage: 'pitch', //pitch, swing\n    simulateInput: function simulateInput(callback) {\n        var stage = this.stage,\n            pitchTarget = this.pitchTarget;\n        if (stage == 'end') {\n            return;\n        }\n        if (stage == 'pitch') {\n            this.autoPitch(callback);\n        } else if (stage == 'swing') {\n            if (typeof pitchTarget != 'object') {\n                this.pitchTarget = { x: 100, y: 100 };\n            }\n            this.autoSwing(this.pitchTarget.x, this.pitchTarget.y, callback);\n        }\n    },\n    simulatePitchAndSwing: function simulatePitchAndSwing(callback) {\n        if (this.stage == 'end') {\n            return;\n        }\n        this.autoPitch(callback);\n        var giraffe = this;\n        setTimeout(function () {\n            if (typeof giraffe.pitchTarget != 'object') {\n                giraffe.pitchTarget = { x: 100, y: 100 };\n            }\n            giraffe.autoSwing(giraffe.pitchTarget.x, giraffe.pitchTarget.y, function (callback) {\n                callback();\n            });\n        }, giraffe.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET + 2500 : _baseballServices_services.Animator.TIME_FROM_WINDUP + 2500);\n    },\n    /**\r\n     * generically receive click input and decide what to do\r\n     * @param x\r\n     * @param y\r\n     * @param callback\r\n     */\n    receiveInput: function receiveInput(x, y, callback) {\n        if (this.humanControl == 'none') {\n            return;\n        }\n        if (this.stage == 'end') {\n            return;\n        }\n        if (this.stage == 'pitch' && this.humanPitching()) {\n            this.thePitch(x, y, callback);\n        } else if (this.stage == 'swing' && this.humanBatting()) {\n            this.theSwing(x, y, callback);\n        }\n    },\n    autoPitchSelect: function autoPitchSelect() {\n        var pitchNames = Object.keys(this.pitcher.pitching);\n        var pitchName = pitchNames[Math.random() * pitchNames.length | 0];\n        var pitch = this.pitcher.pitching[pitchName];\n        pitch.name = pitchName;\n        this.pitchInFlight = pitch;\n    },\n    autoPitch: function autoPitch(callback) {\n        var pitcher = this.pitcher,\n            giraffe = this;\n        if (this.stage == 'pitch') {\n            this.autoPitchSelect();\n            pitcher.windingUp = true;\n            if (!this.console) {\n                $('.baseball').addClass('hide');\n                var windup = $('.windup');\n                windup.css('width', '100%');\n            }\n            var pitch = _baseballServices_services.Distribution.pitchLocation(),\n                x = pitch.x,\n                y = pitch.y;\n            if (this.quickMode) {\n                this.thePitch(x, y, callback);\n            } else {\n                if (!_baseballServices_services.Animator.console) {\n                    _baseballServices_services.Animator.loop.resetCamera();\n                }\n                windup.animate({ width: 0 }, this.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET : _baseballServices_services.Animator.TIME_FROM_WINDUP, function () {\n                    !giraffe.console && $('.baseball.pitch').removeClass('hide');\n                    giraffe.thePitch(x, y, callback);\n                    pitcher.windingUp = false;\n                });\n            }\n        }\n    },\n    autoSwing: function autoSwing(deceptiveX, deceptiveY, callback) {\n        var giraffe = this;\n        var bonus = this.batter.eye.bonus || 0,\n            eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus,\n            convergence,\n            convergenceSum;\n\n        var x = _baseballServices_services.Distribution.centralizedNumber(),\n            y = _baseballServices_services.Distribution.centralizedNumber();\n\n        if (100 * Math.random() < eye) {\n            // identified the break\n            deceptiveX = this.pitchInFlight.x;\n            deceptiveY = this.pitchInFlight.y;\n        }\n\n        if (100 * Math.random() < eye) {\n            // identified the location\n            convergence = eye / 25;\n            convergenceSum = 1 + convergence;\n        } else {\n            convergence = eye / 100;\n            convergenceSum = 1 + convergence;\n        }\n\n        x = (deceptiveX * convergence + x) / convergenceSum;\n        y = (deceptiveY * convergence + y) / convergenceSum;\n\n        this.swingResult.x = _baseballServices_services.Distribution.cpuSwing(x, this.pitchInFlight.x, eye);\n        this.swingResult.y = _baseballServices_services.Distribution.cpuSwing(y, this.pitchInFlight.y, eye * 0.75);\n\n        var swingProbability = _baseballServices_services.Distribution.swingLikelihood(eye, x, y, this.umpire);\n        if (swingProbability < 100 * Math.random()) {\n            x = -20;\n        }\n\n        callback(function () {\n            giraffe.theSwing(x, y);\n        });\n    },\n    opponentConnected: false,\n    waitingCallback: function waitingCallback() {},\n    awaitPitch: function awaitPitch(callback, swingResult) {\n        var giraffe = this;\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitSwing(swingResult);\n        } else {\n            setTimeout(function () {\n                giraffe.autoPitch(callback);\n            }, 5200);\n        }\n    },\n    awaitSwing: function awaitSwing(x, y, callback, pitchInFlight, pitchTarget) {\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitPitch({\n                inFlight: pitchInFlight,\n                target: pitchTarget\n            });\n        } else {\n            this.autoSwing(x, y, callback);\n        }\n    },\n    thePitch: function thePitch(x, y, callback, override) {\n        if (this.stage == 'pitch') {\n            if (override) {\n                this.pitchInFlight = override.inFlight;\n                this.pitchTarget = override.target;\n                callback = this.waitingCallback;\n            } else {\n                this.pitcher.fatigue++;\n                this.pitchTarget.x = x;\n                this.pitchTarget.y = y;\n\n                this.pitchInFlight.breakDirection = this.helper.pitchDefinitions[this.pitchInFlight.name].slice(0, 2);\n                this.battersEye = _baseballUtility_utils.text.getBattersEye(this);\n\n                var control = Math.floor(this.pitchInFlight.control - this.pitcher.fatigue / 2);\n                this.pitchTarget.x = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.x, control);\n                this.pitchTarget.y = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.y, control);\n\n                if (this.pitcher.throws == 'right') this.pitchInFlight.breakDirection[0] *= -1;\n\n                var breakEffect = _baseballServices_services.Distribution.breakEffect(this.pitchInFlight, this.pitcher, this.pitchTarget.x, this.pitchTarget.y);\n\n                this.pitchInFlight.x = breakEffect.x;\n                this.pitchInFlight.y = breakEffect.y;\n            }\n            this.log.notePitch(this.pitchInFlight, this.batter);\n\n            this.stage = 'swing';\n            if (this.humanControl != 'none' && (this.humanControl == 'both' || this.humanBatting())) {\n                callback();\n            } else {\n                this.awaitSwing(x, y, callback, this.pitchInFlight, this.pitchTarget);\n            }\n        }\n    },\n    battersEye: {\n        e: '',\n        n: ''\n    },\n    theSwing: function theSwing(x, y, callback, override) {\n        if (this.stage == 'swing') {\n            if (override) {\n                this.swingResult = override;\n                callback = this.waitingCallback;\n            } else {\n                this.swingResult = {};\n                var bonus = this.batter.eye.bonus || 0,\n                    eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus;\n\n                if (x >= 0 && x <= 200) {\n                    this.batter.fatigue++;\n\n                    this.swingResult.x = x - this.pitchInFlight.x;\n                    this.swingResult.y = y - this.pitchInFlight.y;\n                    this.swingResult.angle = this.setBatAngle();\n\n                    var recalculation = _baseballServices_services.Mathinator.getAngularOffset(this.swingResult, this.swingResult.angle);\n                    var precision = _baseballServices_services.Distribution.swing(eye);\n\n                    this.swingResult.x = recalculation.x * precision;\n                    this.swingResult.y = -5 + recalculation.y * precision;\n\n                    //log(recalculation.y, precision);\n\n                    this.swingResult.looking = false;\n                    if (Math.abs(this.swingResult.x) < 60 && Math.abs(this.swingResult.y) < 35) {\n                        this.swingResult.contact = true;\n                        this.field.determineSwingContactResult(this.swingResult);\n                        // log(this.swingResult.flyAngle, Math.floor(this.swingResult.x), Math.floor(this.swingResult.y));\n                        this.debug.push(this.swingResult);\n                    } else {\n                        this.swingResult.contact = false;\n                    }\n                } else {\n                    this.swingResult.strike = this.pitchInFlight.x > 50 && this.pitchInFlight.x < 150 && this.pitchInFlight.y > 35 && this.pitchInFlight.y < 165;\n                    this.batter.eye.bonus = Math.max(0, eye - Math.sqrt(Math.pow(this.batter.eye.x - this.pitchInFlight.x, 2) + Math.pow(this.batter.eye.y - this.pitchInFlight.y, 2)) * 1.5);\n                    this.swingResult.contact = false;\n                    this.swingResult.looking = true;\n                    this.batter.eye.x = this.pitchInFlight.x;\n                    this.batter.eye.y = this.pitchInFlight.y;\n                }\n            }\n            this.log.noteSwing(this.swingResult);\n            this.stage = 'pitch';\n\n            var half = this.half;\n            var result = this.swingResult;\n            this.umpire.makeCall();\n            emit = false;\n            if (half != this.half) {\n                callback = this.startOpponentPitching;\n                var emit = !override;\n            }\n\n            if (typeof callback == 'function') {\n                if (this.humanControl != 'none' && (this.humanControl == 'both' || this.teams[this.humanControl] == this.pitcher.team)) {\n                    callback();\n                    if (emit) {\n                        if (this.opponentService && this.opponentConnected) {\n                            this.opponentService.emitSwing(result);\n                        }\n                    }\n                } else {\n                    this.awaitPitch(callback, result);\n                }\n            }\n        }\n    },\n    setBatAngle: function setBatAngle(x, y) {\n        var giraffe = this,\n            pitchInFlight = this.pitchInFlight,\n            swingResult = this.swingResult;\n        var origin = {\n            x: giraffe.batter.bats == 'right' ? -10 : 210,\n            y: 199\n        };\n        var swing = {\n            x: x ? x : pitchInFlight.x + swingResult.x,\n            y: y ? y : pitchInFlight.y + swingResult.y\n        };\n        return _baseballServices_services.Mathinator.battingAngle(origin, swing);\n    },\n    debugOut: function debugOut() {\n        log('slugging', this.debug.filter(function (a) {\n            return a.bases == 1;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 2;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 3;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 4;\n        }).length);\n        log('grounders', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < -5;\n        }).length);\n        log('grounders thrown out', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < -5 && a.thrownOut;\n        }).length);\n        log('weak air hits (thrown out)', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle > 0 && a.thrownOut;\n        }).length);\n        log('good air hits (not caught)', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle > 0 && !a.thrownOut;\n        }).length);\n\n        var PO = {};\n        this.debug.map(function (a) {\n            if (!a.fielder) return;\n            if (!PO[a.fielder]) {\n                PO[a.fielder] = 0;\n            }\n            if (!a.bases && a.fielder) {\n                PO[a.fielder]++;\n            }\n        });\n        log('fielding outs', PO);\n\n        var hitters = this.teams.away.lineup.concat(this.teams.home.lineup);\n        var atBats = [];\n        hitters.map(function (a) {\n            atBats = atBats.concat(a.getAtBats().map(function (ab) {\n                return ab.text;\n            }));\n        });\n\n        var LO = atBats.filter(function (ab) {\n            return ab == 'LO';\n        }).length;\n        var FO = atBats.filter(function (ab) {\n            return ab == 'FO';\n        }).length;\n        var GO = atBats.filter(function (ab) {\n            return ab == 'GO';\n        }).length;\n        var GIDP = atBats.filter(function (ab) {\n            return ab == '(IDP)';\n        }).length;\n        var SO = atBats.filter(function (ab) {\n            return ab == 'SO';\n        }).length;\n        var BB = atBats.filter(function (ab) {\n            return ab == 'BB';\n        }).length;\n        var SAC = atBats.filter(function (ab) {\n            return ab == 'SAC';\n        }).length;\n        var FC = atBats.filter(function (ab) {\n            return ab == 'FC';\n        }).length;\n        log('line outs', LO, 'fly outs', FO, 'groundouts', GO, 'strikeouts', SO, 'sacrifices', SAC, 'FC', FC, 'gidp', GIDP);\n        log('BB', BB);\n        log('fouls', this.debug.filter(function (a) {\n            return a.foul;\n        }).length);\n        log('fatigue, home vs away');\n        var teams = this.teams;\n        var fatigue = { home: {}, away: {} };\n        _baseballServices_services.Iterator.each(this.teams.home.positions, function (key) {\n            var position = key;\n            fatigue.home[position] = teams.home.positions[position].fatigue;\n            fatigue.away[position] = teams.away.positions[position].fatigue;\n        });\n        console.table(fatigue);\n        console.table(this.scoreboard);\n        console.table(this.tally);\n    },\n    toData: function toData() {\n        var data = {};\n        data.half = this.half;\n        data.inning = this.inning;\n        data.tally = this.tally;\n        var giraffe = this;\n        var players = this.teams.away.lineup.concat(this.teams.home.lineup);\n        // note: bench not included\n        data.field = {\n            first: players.indexOf(this.field.first),\n            second: players.indexOf(this.field.second),\n            third: players.indexOf(this.field.third)\n        };\n        data.batter = players.indexOf(this.batter);\n        data.deck = players.indexOf(this.deck);\n        data.hole = players.indexOf(this.hole);\n        data.teams = {\n            home: {\n                name: giraffe.teams.home.name,\n                nameJ: giraffe.teams.home.nameJ\n            },\n            away: {\n                name: giraffe.teams.away.name,\n                nameJ: giraffe.teams.away.nameJ\n            }\n        };\n        data.umpire = {\n            says: giraffe.umpire.says,\n            count: {\n                strikes: giraffe.umpire.count.strikes,\n                balls: giraffe.umpire.count.balls,\n                outs: giraffe.umpire.count.outs\n            }\n        };\n        data.players = players.map(function (player) {\n            return player.serialize();\n        });\n        data.log = {\n            pitchRecord: giraffe.log.pitchRecord,\n            record: giraffe.log.record\n        };\n        data.gamesIntoSeason = this.gamesIntoSeason;\n        return data;\n    },\n    fromData: function fromData(data) {\n        this.half = data.half;\n        this.inning = data.inning;\n        this.tally = data.tally;\n        var giraffe = this;\n        var players = data.players.map(function (playerJson, index) {\n            var playerData = JSON.parse(playerJson);\n            if (index > 8) {\n                var side = 'home';\n                index = index - 9;\n            } else {\n                side = 'away';\n            }\n            var player = giraffe.teams[side].positions[playerData.position];\n            player.fromData(playerData);\n            giraffe.teams[side].lineup[index] = player;\n            player.resetStats(data.gamesIntoSeason);\n            return player;\n        });\n        this.field.first = players[data.field.first];\n        this.field.second = players[data.field.second];\n        this.field.third = players[data.field.third];\n        this.batter = players[data.batter];\n        this.deck = players[data.deck];\n        this.hole = players[data.hole];\n        this.umpire.says = data.umpire.says;\n        this.umpire.count = data.umpire.count;\n        this.teams.away.name = data.teams.away.name;\n        this.teams.away.nameJ = data.teams.away.nameJ;\n        this.teams.home.name = data.teams.home.name;\n        this.teams.home.nameJ = data.teams.home.nameJ;\n        this.log.pitchRecord = data.log.pitchRecord;\n        this.log.record = data.log.record;\n        this.log.stabilizeShortRecord();\n        this.gamesIntoSeason = data.gamesIntoSeason;\n        return this;\n    },\n    startOpponentPitching: null, // late function\n    pitchTarget: { x: 100, y: 100 },\n    pitchInFlight: {\n        x: 100,\n        y: 100,\n        breakDirection: [0, 0],\n        name: 'slider',\n        velocity: 50,\n        'break': 50,\n        control: 50\n    },\n    swingResult: {\n        x: 100, //difference to pitch location\n        y: 100, //difference to pitch location\n        strike: false,\n        foul: false,\n        caught: false,\n        contact: false,\n        looking: true,\n        bases: 0,\n        fielder: 'short',\n        outs: 0\n    },\n    playResult: {\n        batter: '',\n        fielder: ''\n    },\n    showPlayResultPanels: function showPlayResultPanels(batter) {\n        var batterOutcomes = {};\n        var atBat = batter.atBats.slice(0).pop();\n        var fielderOutcomes = {};\n        var n = function n() {\n            var n = Math.floor(Math.random() * 3);\n            return n ? n : '';\n        };\n        this.playResult = {\n            batter: 'B_placeholder' + n() || batterOutcomes[atBat] || 'batter/' + atBat,\n            fielder: 'F_placeholder' + n() || fielderOutcomes[atBat] || 'fielder/' + atBat\n        };\n    },\n    pitchSelect: function pitchSelect() {},\n    field: null,\n    teams: {\n        away: null,\n        home: null\n    },\n    log: null,\n    half: 'top',\n    inning: 1,\n    scoreboard: {\n        away: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        },\n        home: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        }\n    },\n    resetTally: function resetTally() {\n        this.tally = {\n            away: {\n                H: 0,\n                R: 0,\n                E: 0\n            },\n            home: {\n                H: 0,\n                R: 0,\n                E: 0\n            }\n        };\n    },\n    tally: {\n        away: {\n            H: 0,\n            R: 0,\n            E: 0\n        },\n        home: {\n            H: 0,\n            R: 0,\n            E: 0\n        }\n    }\n};\n\nexports.Game = Game;\n\n},{\"baseball/Model/Field\":2,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":25,\"baseball/Utility/Log\":29,\"baseball/Utility/_utils\":30}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Manager = function Manager(team) {\n    this.init(team);\n};\n\nManager.prototype = {\n    constructor: Manager,\n    init: function init(team) {\n        this.team = team;\n    },\n    makeLineup: function makeLineup() {\n        var jerseyNumber = 1;\n        this.team.positions.pitcher = this.selectForSkill(this.team.bench, ['pitching']);\n        this.team.positions.pitcher.position = 'pitcher';\n        if (!this.team.positions.pitcher.number) {\n            this.team.positions.pitcher.number = jerseyNumber++;\n        }\n        this.team.positions.catcher = this.selectForSkill(this.team.bench, ['defense', 'catching'], 'right');\n        this.team.positions.catcher.position = 'catcher';\n        if (!this.team.positions.catcher.number) {\n            this.team.positions.catcher.number = jerseyNumber++;\n        }\n        _baseballServices_services.Iterator.each(this.team.bench, function (key, player) {\n            if (!player.number) {\n                player.number = jerseyNumber++;\n            }\n        });\n        this.team.positions.short = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.short.position = 'short';\n        this.team.positions.second = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.second.position = 'second';\n        this.team.positions.third = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.third.position = 'third';\n        this.team.positions.center = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.center.position = 'center';\n        this.team.positions.left = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.left.position = 'left';\n        this.team.positions.right = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.right.position = 'right';\n        this.team.positions.first = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'left');\n        this.team.positions.first.position = 'first';\n\n        this.team.lineup[3] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[3].order = 3;\n        this.team.lineup[2] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[2].order = 2;\n        this.team.lineup[4] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[4].order = 4;\n        this.team.lineup[0] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[0].order = 0;\n        this.team.lineup[1] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[1].order = 1;\n        this.team.lineup[5] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[5].order = 5;\n        this.team.lineup[6] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[6].order = 6;\n        this.team.lineup[7] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[7].order = 7;\n        this.team.lineup[8] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[8].order = 8;\n    },\n    selectForSkill: function selectForSkill(pool, skillset, requiredThrowingHandedness) {\n        if (this.team.bench.length || pool == this.team.positions) {\n            var selection = this.team.bench[0];\n            var rating = 0;\n            var index = 0;\n            _baseballServices_services.Iterator.each(pool, function (key, player) {\n                var skills = skillset.slice();\n                var cursor = player.skill;\n                var property = skills.shift();\n                while (property) {\n                    cursor = cursor[property];\n                    property = skills.shift();\n                }\n                if (!(player.order + 1) && cursor >= rating && (!requiredThrowingHandedness || player.throws == requiredThrowingHandedness)) {\n                    rating = cursor;\n                    selection = player;\n                    index = key;\n                }\n            });\n            if (pool == this.team.bench) {\n                delete this.team.bench[index];\n                this.team.bench = this.team.bench.filter(function (player) {\n                    return player instanceof selection.constructor;\n                });\n            }\n            return selection;\n        }\n        return 'no players available';\n    }\n};\n\nexports.Manager = Manager;\n\n},{\"baseball/Services/_services\":25}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar Player = function Player(team) {\n    this.init(team);\n    this.resetStats(this.team.game && this.team.game.gamesIntoSeason || 0);\n};\n\nPlayer.prototype = {\n    constructor: Player,\n    init: function init(team, hero) {\n        this.throws = Math.random() > 0.86 ? 'left' : 'right';\n        this.bats = Math.random() > 0.75 ? 'left' : 'right';\n        this.team = team;\n        this.skill = {};\n        this.eye = {\n            x: 100,\n            y: 100\n        };\n        this.pitching = { averaging: [] };\n        this.number = 0;\n        this.randomizeSkills(hero || Math.random() > 0.9);\n        var surnameKey = Math.floor(Math.random() * _baseballUtility_utils.data.surnames.length),\n            nameKey = Math.floor(Math.random() * _baseballUtility_utils.data.names.length);\n\n        this.name = _baseballUtility_utils.data.surnames[surnameKey] + ' ' + _baseballUtility_utils.data.names[nameKey];\n        var jSurname = _baseballUtility_utils.data.surnamesJ[surnameKey],\n            jGivenName = _baseballUtility_utils.data.namesJ[nameKey];\n        this.spaceName(jSurname, jGivenName);\n        this.surname = _baseballUtility_utils.data.surnames[surnameKey];\n        this.surnameJ = _baseballUtility_utils.data.surnamesJ[surnameKey];\n        this.atBats = [];\n    },\n    spaceName: function spaceName(jSurname, jGivenName) {\n        if (jSurname.length == 1 && jGivenName.length <= 2) jSurname += '・';\n        if (jGivenName.length == 1 && jSurname.indexOf('・') < 0 && jSurname.length <= 2) jSurname += '・';\n        this.nameJ = jSurname + jGivenName;\n        this.surnameJ = jSurname;\n    },\n    serialize: function serialize() {\n        var team = this.team;\n        delete this.team;\n        var data = JSON.stringify(this);\n        this.team = team;\n        return data;\n    },\n    fromData: function fromData(data) {\n        var giraffe = this;\n        _baseballServices_services.Iterator.each(data, function (key, value) {\n            giraffe[key] = value;\n        });\n        delete this.atBatObjects;\n        this.getAtBats();\n    },\n    resetStats: function resetStats() {\n        var gamesIntoSeason = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n        var offense = this.skill.offense;\n        var defense = this.skill.defense;\n        var randBetween = function randBetween(a, b, skill) {\n            var total = 0,\n                count = 0;\n            skill += '';\n            if (!skill) skill = '';\n            _baseballServices_services.Iterator.each(skill.split(' '), function (key, value) {\n                var skill = value;\n                if (offense[skill]) skill = offense[skill];\n                if (defense[skill]) skill = defense[skill];\n                if (isNaN(skill)) skill = 50;\n                total += skill;\n                count++;\n            });\n\n            skill = Math.sqrt(0.05 + Math.random() * 0.95) * (total / (count * 0.97));\n            return Math.floor(skill / 100 * (b - a) + a);\n        };\n        var IP, ER, GS, W, L;\n        if (this.skill.pitching > 65) {\n            IP = (this.skill.pitching - 65) * gamesIntoSeason / 20;\n            ER = IP / 9 * randBetween(800, 215, this.skill.pitching) / 100;\n            if (IP > gamesIntoSeason) {\n                //starter\n                GS = Math.floor(gamesIntoSeason / 5);\n                W = randBetween(GS * 0.1, GS * 0.8, this.skill.pitching / 1.20);\n                L = randBetween(GS - W, 0, this.skill.pitching / 3);\n            } else {\n                //reliever\n                GS = Math.floor(gamesIntoSeason / 40);\n                W = randBetween(0, GS * 0.6, this.skill.pitching);\n                L = randBetween(GS - W, 0, this.skill.pitching);\n            }\n        }\n        var pa = randBetween(gamesIntoSeason * 3, gamesIntoSeason * 5, 'speed eye');\n        var paRemaining = pa;\n        var bb = Math.floor(randBetween(0, 18, 'power eye') * paRemaining / 100);\n        paRemaining -= bb;\n        var ab = paRemaining;\n        var so = Math.floor(randBetween(25, 2, 'eye') * paRemaining / 100);\n        paRemaining -= so;\n        var h = Math.floor(randBetween(185, 372, 'eye power speed') * paRemaining / 1000);\n        paRemaining -= h;\n\n        var doubles = randBetween(0, h / 4, 'power speed');\n        var triples = randBetween(0, h / 12, 'speed');\n        var hr = Math.max(0, randBetween(-h / 20, h / 5, 'power eye'));\n        var r = randBetween(h / 8, (h + bb) / 3, 'speed') + hr;\n        var rbi = randBetween(h / 8, h / 2, 'power eye') + hr;\n        var hbp = randBetween(0, gamesIntoSeason / 25);\n        var sac = randBetween(0, gamesIntoSeason / 5, 'eye');\n\n        var chances = randBetween(0, gamesIntoSeason * 10, 'fielding');\n        var E = randBetween(chances / 10, 0, 'fielding');\n        var PO = chances - E;\n\n        this.stats = {\n            pitching: {\n                pitches: 0, // in game\n                GS: GS,\n                W: W,\n                L: L,\n                strikes: 0, // in game\n                K: 0, // in game\n                getK9: function getK9() {\n                    return this.K / (this.IP[0] / 9);\n                },\n                getERA: function getERA() {\n                    return 9 * this.ER / Math.max(1 / 3, this.IP[0] + this.IP[1] / 3);\n                },\n                ERA: null,\n                ER: ER,\n                H: 0, // in game\n                HR: 0, // in game\n                BB: 0, // in game\n                IP: [IP, 0],\n                WHIP: 0,\n                getWHIP: function getWHIP() {\n                    return (this.H + this.BB) / (this.IP[0] ? this.IP[0] : 1);\n                }\n            },\n            batting: {\n                getBA: function getBA() {\n                    return this.h / Math.max(1, this.ab);\n                },\n                getBABIP: function getBABIP() {\n                    return (this.h - this.hr) / (this.ab - this.so - this.hr + this.sac);\n                },\n                ba: null,\n                getOBP: function getOBP() {\n                    return (this.h + this.bb + this.hbp) / (this.ab + this.bb + this.hbp + this.sac);\n                },\n                obp: null,\n                getSLG: function getSLG() {\n                    return (this.h - this['2b'] - this['3b'] - this.hr + 2 * this['2b'] + 3 * this['3b'] + 4 * this.hr) / this.ab;\n                },\n                slg: null,\n                pa: pa,\n                ab: ab,\n                so: so,\n                bb: bb,\n                h: h,\n                '2b': doubles,\n                '3b': triples,\n                hr: hr,\n                r: r,\n                rbi: rbi,\n                hbp: hbp,\n                sac: sac\n            },\n            fielding: {\n                E: E,\n                PO: PO, // should depend on position\n                A: Math.floor(Math.random() * 5) + 1 // ehh should depend on position\n            }\n        };\n        this.stats.pitching.ERA = this.stats.pitching.getERA();\n        this.stats.pitching.K9 = this.stats.pitching.getK9();\n        this.stats.pitching.WHIP = this.stats.pitching.getWHIP();\n        this.stats.batting.ba = this.stats.batting.getBA();\n    },\n    atBatObjects: [],\n    getAtBats: function getAtBats() {\n        if (this.atBats.length > this.atBatObjects.length) {\n            this.atBatObjects = this.atBats.map(function (item) {\n                return new _baseballModel_models.AtBat(item);\n            });\n        }\n        return this.atBatObjects;\n    },\n    recordRBI: function recordRBI() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.RBI_INDICATOR;\n    },\n    recordInfieldHit: function recordInfieldHit() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.INFIELD_HIT_INDICATOR;\n    },\n    getBaseRunningTime: function getBaseRunningTime() {\n        return _baseballServices_services.Mathinator.baseRunningTime(this.skill.offense.speed);\n    },\n    randomizeSkills: function randomizeSkills(hero, allPitches) {\n        this.hero = hero;\n        var giraffe = this;\n        var randValue = function randValue(isPitching) {\n            var value = Math.floor(Math.pow(Math.random(), 0.75) * 80 + Math.random() * 20);\n            if (hero) {\n                value += Math.floor((100 - value) * Math.max(Math.random(), isPitching ? 0 : 0.65));\n            }\n            if (isPitching) giraffe.pitching.averaging.push(value);\n            return value;\n        };\n        this.skill.offense = {\n            eye: randValue(),\n            power: randValue(),\n            speed: randValue()\n        };\n        this.skill.defense = {\n            catching: randValue(),\n            fielding: randValue(),\n            speed: randValue(),\n            throwing: randValue()\n        };\n        this.pitching.averaging = [];\n        this.pitching['4-seam'] = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        this.pitching.slider = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        if (Math.random() < 0.17 || allPitches) {\n            // can pitch!\n            if (Math.random() > 0.6 || allPitches) {\n                this.pitching['2-seam'] = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.18 || allPitches) {\n                this.pitching.fork = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() > 0.77 || allPitches) {\n                this.pitching.cutter = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.21 || allPitches) {\n                this.pitching.sinker = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.4 || allPitches) {\n                this.pitching.curve = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.9 || allPitches) {\n                this.pitching.change = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n        }\n        this.skill.pitching = Math.floor(this.pitching.averaging.reduce(function (prev, current) {\n            return prev + current;\n        }) / this.pitching.averaging.length + this.pitching.averaging.length * 3);\n        delete this.pitching.averaging;\n    },\n    getSurname: function getSurname() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.surnameJ : this.surname;\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    getUniformNumber: function getUniformNumber() {\n        return (0, _baseballUtility_utils.text)('#') + this.number;\n    },\n    getOrder: function getOrder() {\n        return (0, _baseballUtility_utils.text)([' 1st', ' 2nd', ' 3rd', ' 4th', ' 5th', ' 6th', '7th', ' 8th', ' 9th'][this.order]);\n    },\n    eye: {},\n    fatigue: 0,\n    name: '',\n    number: 0,\n    position: '',\n    atBats: []\n};\n\nexports.Player = Player;\n\n},{\"baseball/Model/_models\":8,\"baseball/Services/_services\":25,\"baseball/Utility/_utils\":30}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar Team = function Team(game) {\n    this.init(game);\n};\n\nTeam.prototype = {\n    constructor: Team,\n    init: function init(game) {\n        this.pickName();\n        this.lineup = [];\n        this.bench = [];\n        this.bullpen = [];\n        this.positions = {\n            pitcher: null,\n            catcher: null,\n            first: null,\n            second: null,\n            short: null,\n            third: null,\n            left: null,\n            center: null,\n            right: null\n        };\n        this.manager = new _baseballModelManager.Manager(this);\n        if (game !== 'no init') {\n            this.game = game;\n            for (var j = 0; j < 20; j++) {\n                this.bench.push(new _baseballModelPlayer.Player(this));\n            }\n            if (this.bench.length == 20) {\n                this.manager.makeLineup();\n            }\n        }\n    },\n    pickName: function pickName() {\n        var teamNameIndex = Math.floor(Math.random() * _baseballUtility_utils.data.teamNames.length);\n        this.name = _baseballUtility_utils.data.teamNames[teamNameIndex];\n        this.nameJ = _baseballUtility_utils.data.teamNamesJ[teamNameIndex];\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    lineup: [],\n    positions: {},\n    manager: null,\n    bench: [],\n    bullpen: [],\n    nowBatting: 0,\n    expanded: 'Player&'\n};\n\nexports.Team = Team;\n\n},{\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":30}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar Umpire = function Umpire(game) {\n    this.init(game);\n};\n\nUmpire.prototype = {\n    constructor: Umpire,\n    init: function init(game) {\n        this.game = game;\n        this.playBall();\n    },\n    count: {\n        strikes: 0,\n        balls: 0,\n        outs: 0\n    },\n    playBall: function playBall() {\n        var game = this.game;\n        game.half = 'top';\n        game.inning = 1;\n        game.batter = game.teams.away.lineup[0];\n        game.batterRunner = game.teams.away.lineup[0];\n        game.deck = game.teams.away.lineup[1];\n        game.hole = game.teams.away.lineup[2];\n        game.pitcher = game.teams.home.positions.pitcher;\n        var n = '一回のオモテ、' + game.teams.away.getName() + 'の攻撃対' + game.teams.home.getName() + '、ピッチャーは' + game.teams.home.positions.pitcher.getName() + '。',\n            e = 'Top 1, ' + game.teams.away.name + ' offense vs. ' + game.teams.home.positions.pitcher.name + ' starting for ' + game.teams.home.name;\n        game.log.note(e, n);\n        game.log.noteBatter(game.batter);\n    },\n    makeCall: function makeCall() {\n        this.says = '';\n        var game = this.game;\n        var result = game.swingResult;\n        var pitcher = game.pitcher;\n        var batter = game.batter;\n\n        if (game.swingResult.fielder) {\n            var fielder = game.teams[game.half == 'top' ? 'home' : 'away'].positions[result.fielder];\n        } else {\n            fielder = null;\n        }\n\n        game.batterRunner = game.batter;\n\n        pitcher.stats.pitching.pitches++;\n        if (result.looking) {\n            if (result.strike) {\n                this.count.strikes++;\n                pitcher.stats.pitching.strikes++;\n            } else {\n                this.count.balls++;\n            }\n        } else {\n            pitcher.stats.pitching.strikes++;\n            if (result.contact) {\n                game.passMinutes(1);\n                if (result.caught) {\n                    batter.stats.batting.pa++;\n                    pitcher.stats.pitching.IP[1]++;\n                    if (result.sacrificeAdvances.length && this.count.outs < 2) {\n                        batter.stats.batting.sac++;\n                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SACRIFICE);\n                        this.advanceRunners(false, null, result.sacrificeAdvances);\n                    } else {\n                        batter.stats.batting.ab++;\n                        if (result.flyAngle < 15) {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.LINEOUT);\n                        } else {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FLYOUT);\n                        }\n                    }\n                    this.count.outs++;\n                    this.newBatter();\n                } else {\n                    if (result.foul) {\n                        this.count.strikes++;\n                        if (this.count.strikes > 2) this.count.strikes = 2;\n                    } else {\n                        batter.stats.batting.pa++;\n                        batter.stats.batting.ab++;\n                        if (result.firstOut) {\n                            game.field[result.firstOut] = null;\n                            result.additionalOuts.map(function (runner) {\n                                if (runner !== 'batter') {\n                                    game.field[runner] = null;\n                                }\n                            });\n                            this.count.outs += result.additionalOuts.length;\n                        }\n                        if (result.fieldersChoice && this.count.outs < 2) {\n                            result.bases = 0;\n                            this.count.outs++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FIELDERS_CHOICE);\n                            this.advanceRunners(false, result.fieldersChoice);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            this.reachBase();\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        } else if (result.fieldersChoice) {\n                            result.bases = 0;\n                            result.thrownOut = true;\n                        }\n                        if (result.thrownOut) {\n                            this.count.outs++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            if (this.count.outs < 3) {\n                                this.advanceRunners(false);\n                            }\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        }\n                        if (result.hitByPitch) {\n                            batter.stats.batting.ab--;\n                        }\n                        if (result.bases) {\n                            if (!result.error) {\n                                game.tally[game.half == 'top' ? 'away' : 'home'][_baseballUtility_utils.Log.prototype.SINGLE]++;\n                                pitcher.stats.pitching.H++;\n                            } else {\n                                if (result.bases > 0) {\n                                    game.tally[game.half == 'top' ? 'home' : 'away'].E++;\n                                    fielder.stats.fielding.E++;\n                                }\n                            }\n                            var bases = result.bases;\n                            switch (bases) {\n                                case 0:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                                    break;\n                                case 1:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                    } else {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SINGLE);\n                                        batter.stats.batting.h++;\n                                    }\n                                    break;\n                                case 2:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.DOUBLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['2b']++;\n                                    break;\n                                case 3:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.TRIPLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['3b']++;\n                                    break;\n                                case 4:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.HOMERUN);\n                                    pitcher.stats.pitching.HR++;\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting.hr++;\n                                    break;\n                            }\n                            if (bases > 0 && bases < 4 && !result.error) {\n                                if (['left', 'right', 'center'].indexOf(result.fielder) == -1) {\n                                    batter.recordInfieldHit();\n                                }\n                            }\n                            if (bases >= 1) {\n                                this.advanceRunners();\n                                this.reachBase();\n                                bases -= 1;\n                            }\n                            while (bases > 0) {\n                                bases -= 1;\n                                this.advanceRunners();\n                            }\n                            this.newBatter();\n                        }\n                    }\n                }\n            } else {\n                this.count.strikes++;\n            }\n        }\n\n        this.says = this.count.balls + ' and ' + this.count.strikes;\n\n        result.outs = this.count.outs;\n\n        if (this.count.strikes > 2) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.ab++;\n            batter.stats.batting.so++;\n            pitcher.stats.pitching.K++;\n            this.count.outs++;\n            pitcher.stats.pitching.IP[1]++;\n            this.count.balls = this.count.strikes = 0;\n            this.says = 'Strike three. Batter out.';\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.STRIKEOUT);\n            this.newBatter();\n        }\n        if (this.count.balls > 3) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.bb++;\n            pitcher.stats.pitching.BB++;\n            this.says = 'Ball four.';\n            this.count.balls = this.count.strikes = 0;\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.WALK);\n            this.advanceRunners(true).reachBase().newBatter();\n        }\n        if (this.count.outs > 2) {\n            this.says = 'Three outs, change.';\n            this.count.outs = this.count.balls = this.count.strikes = 0;\n            pitcher.stats.pitching.IP[0]++;\n            pitcher.stats.pitching.IP[1] = 0;\n            this.changeSides();\n        }\n    },\n    reachBase: function reachBase() {\n        var game = this.game;\n        game.field.first = game.batter;\n        game.field.first.fatigue += 2;\n        return this;\n    },\n    advanceRunners: function advanceRunners(isWalk, fieldersChoice, sacrificeAdvances) {\n        isWalk = !!isWalk;\n        var game = this.game;\n        var first = game.field.first,\n            second = game.field.second,\n            third = game.field.third,\n            swing = game.swingResult;\n\n        if (isWalk) {\n            if (first) {\n                if (second) {\n                    if (third) {\n                        //bases loaded\n                        game.batter.recordRBI();\n                        game.batter.stats.batting.rbi++;\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        third.stats.batting.r++;\n                        game.pitcher.stats.pitching.ER++;\n                        game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                        game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                        game.field.third = second;\n                        game.field.second = first;\n                        first = null;\n                    } else {\n                        // 1st and second\n                        game.field.third = second;\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                } else {\n                    if (third) {\n                        // first and third\n                        game.field.second = first;\n                        game.field.first = null;\n                    } else {\n                        // first only\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                }\n            } else {\n                // no one on first\n            }\n        } else {\n                if (fieldersChoice) {\n                    game.field[fieldersChoice] = null;\n                    first = game.field.first;\n                    second = game.field.second;\n                    third = game.field.third;\n                }\n                var canAdvance = function canAdvance() {\n                    return true;\n                };\n                if (sacrificeAdvances) {\n                    canAdvance = function (position) {\n                        switch (position) {\n                            case 'first':\n                                return sacrificeAdvances.indexOf('first') > -1 && !game.field.second;\n                            case 'second':\n                                return sacrificeAdvances.indexOf('second') > -1 && !game.field.third;\n                            case 'third':\n                                return sacrificeAdvances.indexOf('third') > -1;\n                        }\n                    };\n                }\n                if (third && canAdvance('third')) {\n                    // run scored\n                    game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                    game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                    if (game.batter != third) {\n                        game.batter.recordRBI();\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    }\n                    game.batter.stats.batting.rbi++;\n                    third.stats.batting.r++;\n                    game.pitcher.stats.pitching.ER++;\n                    game.field.third = null;\n                }\n                if (second && canAdvance('second')) {\n                    game.field.third = second;\n                    game.field.second = null;\n                }\n                if (first && canAdvance('first')) {\n                    game.field.second = first;\n                    game.field.first = null;\n                }\n            }\n        return this;\n    },\n    newBatter: function newBatter() {\n        var game = this.game;\n        game.passMinutes(2);\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.count.balls = this.count.strikes = 0;\n        game.log.notePlateAppearanceResult(game);\n        var team = game.half == 'bottom' ? game.teams.home : game.teams.away;\n        game.lastBatter = game.batter;\n        game.batter = team.lineup[(team.nowBatting + 1) % 9];\n        game.deck = team.lineup[(team.nowBatting + 2) % 9];\n        game.hole = team.lineup[(team.nowBatting + 3) % 9];\n        team.nowBatting = (team.nowBatting + 1) % 9;\n        if (this.count.outs < 3) {\n            game.log.noteBatter(game.batter);\n        }\n        game.showPlayResultPanels(game.lastBatter);\n    },\n    changeSides: function changeSides() {\n        var game = this.game;\n        game.passMinutes(5);\n        game.swingResult = {};\n        game.swingResult.looking = true; // hide bat\n        game.pitchInFlight.x = null; // hide ball\n        game.pitchInFlight.y = null; // hide ball\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        var offense, defense;\n        game.field.first = null;\n        game.field.second = null;\n        game.field.third = null;\n        if (game.half == 'top') {\n            if (game.inning == 9 && game.tally.home.R > game.tally.away.R) {\n                return game.end();\n            }\n            game.half = 'bottom';\n        } else {\n            if (game.inning + 1 > 9) {\n                return game.end();\n            }\n            game.inning++;\n            game.half = 'top';\n        }\n        offense = game.half == 'top' ? 'away' : 'home';\n        defense = game.half == 'top' ? 'home' : 'away';\n        var n = game.inning + '回の' + (game.half == 'top' ? 'オモテ' : 'ウラ') + '、' + game.teams[game.half == 'top' ? 'away' : 'home'].getName() + 'の攻撃。',\n            e = (game.half == 'top' ? 'Top' : 'Bottom') + ' ' + game.inning;\n        game.log.note(e, n);\n        var team = game.teams[offense];\n        game.batter = team.lineup[team.nowBatting];\n        game.batterRunner = game.batter;\n        game.deck = team.lineup[(team.nowBatting + 1) % 9];\n        game.hole = team.lineup[(team.nowBatting + 2) % 9];\n\n        game.pitcher = game.teams[defense].positions.pitcher;\n        game.log.noteBatter(game.batter);\n        game.autoPitchSelect();\n    },\n    says: 'Play ball!',\n    game: null\n};\n\nexports.Umpire = Umpire;\n\n},{\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":30}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nexports.AtBat = _baseballModelAtBat.AtBat;\nexports.Field = _baseballModelField.Field;\nexports.Game = _baseballModelGame.Game;\nexports.Manager = _baseballModelManager.Manager;\nexports.Player = _baseballModelPlayer.Player;\nexports.Team = _baseballModelTeam.Team;\nexports.Umpire = _baseballModelUmpire.Umpire;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _meshBall = require('./mesh/Ball');\n\nvar _meshMound = require('./mesh/Mound');\n\nvar _meshBase = require('./mesh/Base');\n\nvar _meshField = require('./mesh/Field');\n\nvar _meshGrass = require('./mesh/Grass');\n\nvar _meshHomeDirt = require('./mesh/HomeDirt');\n\nvar _meshBattersEye = require('./mesh/BattersEye');\n\nvar _meshWall = require('./mesh/Wall');\n\nvar _sceneLighting = require('./scene/lighting');\n\n/**\r\n * the constants should be tuned so that the camera coincides with the DOM's strike zone overlay\r\n * @type {number}\r\n */\nvar VERTICAL_CORRECTION = -0.2;\nvar INITIAL_CAMERA_DISTANCE = 8;\n\nif (typeof THREE !== 'undefined') {\n    var AHEAD = new THREE.Vector3(0, VERTICAL_CORRECTION, -60.5);\n    var INITIAL_POSITION = new THREE.Vector3(0, VERTICAL_CORRECTION, INITIAL_CAMERA_DISTANCE);\n}\n\n/**\r\n * manager for the rendering loop\r\n */\n\nvar Loop = (function () {\n    function Loop(elementClass) {\n        _classCallCheck(this, Loop);\n\n        this.elementClass = elementClass;\n        this.main();\n        window.loop = this;\n    }\n\n    /**\r\n     * individual objects<AbstractMesh> can attach and detach to the manager to be rendered\r\n     */\n\n    _createClass(Loop, [{\n        key: 'loop',\n        value: function loop() {\n            requestAnimationFrame(this.loop.bind(this));\n            this.panToward(this.target);\n            this.moveToward(this.moveTarget);\n            this.objects.map(function (i) {\n                return i.animate();\n            });\n            //this.breathe();\n            this.renderer.render(this.scene, this.camera);\n        }\n\n        /**\r\n         * initialize lights, camera, action\r\n         */\n    }, {\n        key: 'main',\n        value: function main() {\n            this.objects = [];\n            if (this.getThree()) {\n\n                var THREE = this.THREE;\n\n                var scene = this.scene = new THREE.Scene();\n                this.attach();\n                this.lighting = _sceneLighting.lighting;\n                _sceneLighting.lighting.addTo(scene);\n                var camera = this.camera = new THREE.PerspectiveCamera(60, this.getAspect(), 0.1, 500);\n\n                this.target = new THREE.Vector3(0, 0, -60.5);\n                this._target = new THREE.Vector3(0, 0, -60.5);\n                this.moveTarget = camera.position;\n\n                this.resetCamera();\n                this.loop();\n            }\n        }\n\n        /**\r\n         * used by the background layer\r\n         */\n    }, {\n        key: 'addStaticMeshes',\n        value: function addStaticMeshes() {\n            new _meshField.Field().join(this);\n            new _meshMound.Mound().join(this);\n            new _meshHomeDirt.HomeDirt().join(this);\n            new _meshGrass.Grass().join(this);\n            new _meshGrass.Grass(this, true);\n            new _meshBattersEye.BattersEye().join(this);\n\n            new _meshWall.Wall(this, -30);\n            new _meshWall.Wall(this, -15);\n            new _meshWall.Wall(this, 15);\n            new _meshWall.Wall(this, 30);\n\n            new _meshBase.Base(this, 'first');\n            new _meshBase.Base(this, 'second');\n            new _meshBase.Base(this, 'third');\n            new _meshBase.Base(this, 'home');\n        }\n\n        /**\r\n         * experimental camera bobbing\r\n         */\n    }, {\n        key: 'breathe',\n        value: function breathe() {\n            var pos = this.camera.position;\n            var x = pos.x,\n                y = pos.y,\n                z = pos.z;\n            var rate = 0.0005 * this.bob || 1;\n            if (y > 0.6) {\n                this.bob = -1;\n            } else if (y < -0.6) {\n                this.bob = 1;\n            }\n            //pos.x += rate;\n            pos.y += rate;\n            pos.z += rate;\n        }\n    }, {\n        key: 'getThree',\n        value: function getThree() {\n            if (this.THREE === Loop.prototype.THREE && typeof window === 'object' && window.THREE) {\n                return this.THREE = window.THREE;\n            }\n            return false;\n        }\n\n        /**\r\n         * attach to the DOM\r\n         * @returns {THREE.WebGLRenderer}\r\n         */\n    }, {\n        key: 'attach',\n        value: function attach() {\n            window.removeEventListener('resize', this.onResize.bind(this), false);\n            window.addEventListener('resize', this.onResize.bind(this), false);\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            element.innerHTML = '';\n            var THREE = this.THREE;\n            var renderer = new THREE.WebGLRenderer({ alpha: true });\n            this.setSize(renderer);\n            //renderer.setClearColor(0xffffff, 0);\n\n            element.appendChild(renderer.domElement);\n\n            this.renderer = renderer;\n            return renderer;\n        }\n\n        /**\r\n         * higher FOV on lower view widths\r\n         */\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            this.camera.aspect = this.getAspect();\n            this.camera.fov = 90 - 30 * (element.offsetWidth / 1000);\n            this.camera.updateProjectionMatrix();\n            this.setSize(this.renderer);\n        }\n    }, {\n        key: 'setSize',\n        value: function setSize(renderer) {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            var width = element.offsetWidth;\n            renderer.setSize(width, HEIGHT);\n        }\n    }, {\n        key: 'getAspect',\n        value: function getAspect() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            return element.offsetWidth / HEIGHT;\n        }\n\n        /**\r\n         * incrementally pan toward the vector given\r\n         * @param vector\r\n         */\n    }, {\n        key: 'panToward',\n        value: function panToward(vector) {\n            var maxIncrement = this.panSpeed;\n            this.forAllLoops(function (loop) {\n                var target = loop._target;\n                target.x = target.x + Math.max(Math.min((vector.x - target.x) / 100, maxIncrement), -maxIncrement);\n                target.y = target.y + Math.max(Math.min((vector.y - target.y) / 100, maxIncrement), -maxIncrement);\n                target.z = target.z + Math.max(Math.min((vector.z - target.z) / 100, maxIncrement), -maxIncrement);\n                loop.camera.lookAt(target);\n            });\n        }\n\n        /**\r\n         * incrementally move the camera to the vector\r\n         * @param vector\r\n         */\n    }, {\n        key: 'moveToward',\n        value: function moveToward(vector) {\n            var maxIncrement = this.moveSpeed;\n            this.forAllLoops(function (loop) {\n                var position = loop.camera.position;\n                position.x += Math.max(Math.min(vector.x - position.x, maxIncrement), -maxIncrement);\n                position.y += Math.max(Math.min(vector.y - position.y, maxIncrement), -maxIncrement);\n                position.z += Math.max(Math.min(vector.z - position.z, maxIncrement), -maxIncrement);\n            });\n        }\n\n        /**\r\n         * setting a target will cause the camera to pan toward it using the pan method above\r\n         * @param vector\r\n         * @param panSpeed\r\n         */\n    }, {\n        key: 'setLookTarget',\n        value: function setLookTarget(vector, panSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.panSpeed = panSpeed || 0.9;\n                loop.panning = vector !== AHEAD;\n                loop.target = vector;\n            });\n        }\n\n        /**\r\n         * setting a target will cause the camera to move toward it using the incremental method above\r\n         * @param vector\r\n         * @param moveSpeed\r\n         */\n    }, {\n        key: 'setMoveTarget',\n        value: function setMoveTarget(vector, moveSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.moveSpeed = moveSpeed || 0.7;\n                loop.moveTarget = vector;\n            });\n        }\n    }, {\n        key: 'resetCamera',\n        value: function resetCamera() {\n            this.setLookTarget(AHEAD, 1.5);\n            this.setMoveTarget(INITIAL_POSITION, 0.35);\n        }\n    }, {\n        key: 'moveCamera',\n        value: function moveCamera(x, y, z) {\n            if (typeof x === 'object') {\n                return this.moveCamera(x.x, x.y, x.z);\n            }\n            this.forAllLoops(function (loop) {\n                loop.camera.position.x = x;\n                loop.camera.position.y = y;\n                loop.camera.position.z = z;\n            });\n        }\n\n        /**\r\n         * execute the function on all loops\r\n         * @param fn {Function}\r\n         */\n    }, {\n        key: 'forAllLoops',\n        value: function forAllLoops(fn) {\n            if (this.background) {\n                fn(this.background);\n            }\n            if (this.foreground) {\n                fn(this.foreground);\n            }\n            fn(this);\n        }\n    }, {\n        key: 'test',\n        value: function test() {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.setType('4-seam');\n            //with (ball.mesh.rotation) {x=0,y=0,z=0}; ball.rotation = {x:0.00, y:0.00};\n            ball.animate = function () {\n                ball.rotate();\n            };\n            ball.join(this);\n            // Baseball.service.Animator.loop.test();\n        }\n    }, {\n        key: 'testTrajectory',\n        value: function testTrajectory(data) {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.deriveTrajectory(data || {\n                splay: -35,\n                travelDistance: 135,\n                flyAngle: -15,\n                x: 100,\n                y: 100\n            }, {\n                x: 0, y: 0\n            });\n            ball.join(this);\n        }\n    }]);\n\n    return Loop;\n})();\n\nvar HEIGHT = 700;\nLoop.VERTICAL_CORRECTION = VERTICAL_CORRECTION;\nLoop.prototype.THREE = {};\nLoop.prototype.constructors = {\n    Ball: _meshBall.Ball,\n    Mound: _meshMound.Mound,\n    Field: _meshField.Field\n};\n\nexports.Loop = Loop;\n\n},{\"./mesh/Ball\":11,\"./mesh/Base\":12,\"./mesh/BattersEye\":13,\"./mesh/Field\":14,\"./mesh/Grass\":15,\"./mesh/HomeDirt\":16,\"./mesh/Mound\":18,\"./mesh/Wall\":19,\"./scene/lighting\":20}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _Loop = require('../Loop');\n\n/**\r\n * Each class should adhere to this pattern.\r\n * When a scene object has been positioned correctly and its trajectory set,\r\n * it should use ::join to attach itself to the scene.\r\n *\r\n * While attached, the animate method will be called on each frame.\r\n * Typically the animate method can run through the trajectory queue and then\r\n * detach itself. @see Ball\r\n *\r\n * For static meshes the animate method will do nothing, leaving the mesh permanently attached.\r\n */\n\nvar AbstractMesh = (function () {\n    function AbstractMesh() {\n        _classCallCheck(this, AbstractMesh);\n    }\n\n    /**\r\n     * since we are using (0, 0, 0) vector for the center of the strike zone, the actual ground level will be offset\r\n     * downward\r\n     * @type {number}\r\n     */\n\n    _createClass(AbstractMesh, [{\n        key: 'attach',\n\n        /**\r\n         * attach and detach should be used to maintain the correct object list\r\n         * todo use the built in object list of the scene object\r\n         */\n        value: function attach() {\n            var objects = this.loop.objects;\n            if (objects.indexOf(this) === -1) {\n                objects.push(this);\n            }\n            this.loop.scene.add(this.mesh);\n        }\n    }, {\n        key: 'detach',\n        value: function detach() {\n            var objects = this.loop.objects;\n            var index = objects.indexOf(this);\n            if (index !== -1) {\n                this.loop.objects.splice(index, 1);\n            }\n            this.loop.scene.remove(this.mesh);\n        }\n    }, {\n        key: 'join',\n        value: function join(loop) {\n            this.loop = loop || this.loop;\n            if (this.loop instanceof _Loop.Loop) {\n                this.attach();\n            }\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return AbstractMesh;\n})();\n\nAbstractMesh.WORLD_BASE_Y = -7;\n\nexports.AbstractMesh = AbstractMesh;\n\n},{\"../Loop\":9}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nvar _Indicator = require('./Indicator');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\n/**\r\n * on the DOM the pitch zone is 200x200 pixels\r\n * here we scale the strike zone to 4.2 units (feet)\r\n * for display purposes. It is only approximately related to actual pitch zone dimensions.\r\n * @type {number}\r\n */\nvar SCALE = 2.1 / 100;\n\nvar INDICATOR_DEPTH = -5;\n\nvar Ball = (function (_AbstractMesh) {\n    _inherits(Ball, _AbstractMesh);\n\n    /**\r\n     *\r\n     * @param loop\r\n     * @param trajectory {Array<Vector3>} incremental vectors applied each frame\r\n     * e.g. for 1 second of flight time there should be 60 incremental vectors\r\n     */\n\n    function Ball(loop, trajectory) {\n        _classCallCheck(this, Ball);\n\n        _get(Object.getPrototypeOf(Ball.prototype), 'constructor', this).call(this);\n        if (!(loop instanceof _Loop.Loop) && loop instanceof Array) {\n            trajectory = loop;\n        }\n        this.hasIndicator = false;\n        this.trajectory = trajectory ? trajectory : [];\n        this.breakingTrajectory = [];\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n        this.setType('4-seam', 1);\n        this.bounce = 1;\n    }\n\n    _createClass(Ball, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            /** @see threex.sportballs */\n            var baseURL = 'public/';\n            var THREE = window.THREE;\n            var loader = new THREE.TextureLoader();\n            var textureColor = loader.load(baseURL + 'images/BaseballColor.jpg');\n            var textureBump = loader.load(baseURL + 'images/BaseballBump.jpg');\n            var geometry = new THREE.SphereGeometry(0.36, 32, 16); // real scale is 0.12\n            var material = new THREE.MeshPhongMaterial({\n                map: textureColor,\n                bumpMap: textureBump,\n                bumpScale: 0.01\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n\n        /**\r\n         * Leave an indicator when crossing the home plate front plane,\r\n         * and rotate while moving (default 1000 RPM)\r\n         */\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var frame = this.trajectory.shift(),\n                pos = this.mesh.position;\n\n            if (frame) {\n                pos.x += frame.x;\n                pos.y += frame.y * this.bounce;\n                pos.z += frame.z;\n                if (pos.y < _AbstractMesh2.AbstractMesh.WORLD_BASE_Y) {\n                    this.bounce *= -1;\n                }\n                if (frame.x + frame.y + frame.z !== 0) {\n                    this.rotate();\n                }\n            }\n            if (pos.z > INDICATOR_DEPTH && !this.hasIndicator) {\n                this.spawnIndicator();\n            }\n            if (!frame) {\n                this.detach();\n                this.loop.resetCamera();\n            }\n        }\n    }, {\n        key: 'setType',\n        value: function setType(type, handednessScalar) {\n            var rpm = _baseballUtilityHelper.helper.pitchDefinitions[type][4];\n            var rotationAngle = _baseballUtilityHelper.helper.pitchDefinitions[type][3];\n            this.setRotation(rpm, rotationAngle * (handednessScalar || 1));\n        }\n    }, {\n        key: 'rotate',\n        value: function rotate() {\n            var rotation = this.rotation;\n            var meshRotation = this.mesh.rotation;\n            meshRotation.x += rotation.x;\n            meshRotation.y += rotation.y;\n        }\n    }, {\n        key: 'setRotation',\n        value: function setRotation(rpm, rotationAngle) {\n            this.RPM = rpm;\n            this.RPS = this.RPM / 60;\n            var rotationalIncrement = this.RP60thOfASecond = this.RPS / 60;\n\n            // calculate rotational components\n            // +x is CCW along x axis increasing\n            // +y is CW along y axis increasing\n            // +z (unused) is CW along z axis increasing\n\n            // 0   --> x:1 y:0\n            // 45  --> x:+ y:+\n            // 90  --> x:0 y:1\n            // 180 --> x:-1 y:0\n\n            var xComponent = rotationalIncrement * Math.cos(rotationAngle / 180 * Math.PI);\n            var yComponent = rotationalIncrement * Math.sin(rotationAngle / 180 * Math.PI);\n\n            this.rotation = {\n                x: xComponent * 360 * Math.PI / 180,\n                y: yComponent * 360 * Math.PI / 180\n            };\n        }\n    }, {\n        key: 'exportPositionTo',\n        value: function exportPositionTo(mesh) {\n            mesh.position.x = this.mesh.position.x;\n            mesh.position.y = this.mesh.position.y;\n            mesh.position.z = this.mesh.position.z;\n        }\n    }, {\n        key: 'spawnIndicator',\n        value: function spawnIndicator() {\n            if (this.hasIndicator) {\n                return;\n            }\n            this.hasIndicator = true;\n            var indicator = new _Indicator.Indicator();\n            indicator.mesh.position.x = this.mesh.position.x;\n            indicator.mesh.position.y = this.mesh.position.y;\n            indicator.mesh.position.z = this.mesh.position.z;\n            indicator.join(this.loop.background);\n        }\n    }, {\n        key: 'derivePitchingTrajectory',\n        value: function derivePitchingTrajectory(game) {\n            this.setType(game.pitchInFlight.name, game.pitcher.throws === 'right' ? 1 : -1);\n            var top = 200 - game.pitchTarget.y,\n                left = game.pitchTarget.x,\n                breakTop = 200 - game.pitchInFlight.y,\n                breakLeft = game.pitchInFlight.x,\n                flightTime = _baseballServicesMathinator.Mathinator.getFlightTime(game.pitchInFlight.velocity, _baseballUtilityHelper.helper.pitchDefinitions[game.pitchInFlight.name][2]);\n\n            var scale = SCALE;\n            var origin = {\n                x: game.pitcher.throws == 'left' ? 1.5 : -1.5,\n                y: _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 6,\n                z: -60.5 // mound distance\n            };\n            this.mesh.position.x = origin.x;\n            this.mesh.position.y = origin.y;\n            this.mesh.position.z = origin.z;\n\n            var ARC_APPROXIMATION_Y_ADDITIVE = 38; // made up number\n            var terminus = {\n                x: (left - 100) * scale,\n                y: (100 - top + 2 * ARC_APPROXIMATION_Y_ADDITIVE) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: INDICATOR_DEPTH\n            };\n            var breakingTerminus = {\n                x: (breakLeft - 100) * scale,\n                y: (100 - breakTop) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: INDICATOR_DEPTH\n            };\n\n            var lastPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            },\n                lastBreakingPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            };\n\n            var frames = [],\n                breakingFrames = [],\n                frameCount = flightTime * 60 | 0,\n                counter = frameCount * 1.08 | 0,\n                frame = 0;\n\n            var xBreak = breakingTerminus.x - terminus.x,\n                yBreak = breakingTerminus.y - terminus.y;\n            var breakingDistance = Math.sqrt(Math.pow(xBreak, 2) + Math.pow(yBreak, 2));\n            /**\r\n             * @type {number} 1.0+, an expression of how late the pitch breaks\r\n             */\n            var breakingLateness = breakingDistance / (2 * ARC_APPROXIMATION_Y_ADDITIVE) / scale,\n                breakingLatenessMomentumExponent = 0.2 + Math.pow(0.45, breakingLateness);\n\n            while (counter--) {\n                var progress = ++frame / frameCount;\n\n                // linear position\n                var position = {\n                    x: origin.x + (terminus.x - origin.x) * progress,\n                    y: origin.y + (terminus.y - origin.y) * progress,\n                    z: origin.z + (terminus.z - origin.z) * progress\n                };\n                // linear breaking position\n                var breakingInfluencePosition = {\n                    x: origin.x + (breakingTerminus.x - origin.x) * progress,\n                    y: origin.y + (breakingTerminus.y - origin.y) * progress,\n                    z: origin.z + (breakingTerminus.z - origin.z) * progress\n                };\n                if (progress > 1) {\n                    momentumScalar = 1 - Math.pow(progress, breakingLateness);\n                } else {\n                    var momentumScalar = Math.pow(1 - progress, breakingLatenessMomentumExponent);\n                }\n                var breakingScalar = 1 - momentumScalar,\n                    scalarSum = momentumScalar + breakingScalar;\n                // adjustment toward breaking ball position\n                var breakingPosition = {\n                    x: (position.x * momentumScalar + breakingInfluencePosition.x * breakingScalar) / scalarSum,\n                    y: (position.y * momentumScalar + breakingInfluencePosition.y * breakingScalar) / scalarSum,\n                    z: (position.z * momentumScalar + breakingInfluencePosition.z * breakingScalar) / scalarSum\n                };\n                var increment = {\n                    x: position.x - lastPosition.x,\n                    y: position.y - lastPosition.y,\n                    z: position.z - lastPosition.z\n                };\n                var breakingIncrement = {\n                    x: breakingPosition.x - lastBreakingPosition.x,\n                    y: breakingPosition.y - lastBreakingPosition.y,\n                    z: breakingPosition.z - lastBreakingPosition.z\n                };\n\n                lastPosition = position;\n                lastBreakingPosition = breakingPosition;\n\n                breakingFrames.push(breakingIncrement);\n                frames.push(increment);\n            }\n\n            var pause = 60;\n            while (pause--) {\n                breakingFrames.push({ x: 0, y: 0, z: 0 });\n                frames.push({ x: 0, y: 0, z: 0 });\n            }\n\n            this.breakingTrajectory = breakingFrames;\n            this.trajectory = frames;\n            return frames;\n        }\n    }, {\n        key: 'deriveTrajectory',\n        value: function deriveTrajectory(result, pitch) {\n            var dragScalarApproximation = {\n                distance: 1,\n                apexHeight: 0.57,\n                airTime: 0.96\n            };\n\n            var flyAngle = result.flyAngle,\n                distance = Math.abs(result.travelDistance),\n                scalar = result.travelDistance < 0 ? -1 : 1,\n                flightScalar = flyAngle < 7 ? -1 : 1,\n                splay = result.splay; // 0 is up the middle\n\n            if (flightScalar < 0 && result.travelDistance > 0) {\n                distance = Math.max(90, distance);\n            }\n\n            flyAngle = 1 + Math.abs(flyAngle); // todo why plus 1?\n            if (flyAngle > 90) flyAngle = 180 - flyAngle;\n\n            // velocity in m/s, I think\n            var velocity = dragScalarApproximation.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * flyAngle / 180));\n            var velocityVerticalComponent = Math.sin(_baseballServicesMathinator.Mathinator.RADIAN * flyAngle) * velocity;\n            // in feet\n            var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * dragScalarApproximation.apexHeight;\n            // in seconds\n            var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * dragScalarApproximation.airTime; // 2x freefall equation\n\n            var scale = SCALE;\n\n            var origin = {\n                x: pitch.x + result.x - 100,\n                y: pitch.y + result.y - 100,\n                z: 0\n            };\n\n            this.mesh.position.x = origin.x * scale;\n            this.mesh.position.y = origin.y * scale;\n            this.mesh.position.z = origin.z;\n\n            var extrema = {\n                x: Math.sin(splay / 180 * Math.PI) * distance,\n                y: apexHeight,\n                z: -Math.cos(splay / 180 * Math.PI) * distance\n            };\n\n            var frames = [],\n                frameCount = airTime * 60 | 0,\n                counter = frameCount,\n                frame = 0;\n\n            var lastHeight = 0;\n\n            while (counter--) {\n                var progress = ++frame / frameCount,\n                    percent = progress * 100;\n\n                // this equation is approximate\n                if (flightScalar < 0) {\n                    var currentDistance = progress * distance;\n                    y = (origin.y * scale + apexHeight * Math.abs(Math.sin(3 * Math.pow(currentDistance, 1.1) / distance * Math.PI / 2))) * ((100 - percent) / 100) + _AbstractMesh2.AbstractMesh.WORLD_BASE_Y * progress;\n                } else {\n                    var y = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 2) * apexHeight;\n                }\n\n                frames.push({\n                    x: extrema.x / frameCount,\n                    y: y - lastHeight,\n                    z: extrema.z / frameCount\n                });\n\n                lastHeight = y;\n            }\n            this.trajectory = frames;\n            return frames;\n        }\n    }]);\n\n    return Ball;\n})(_AbstractMesh2.AbstractMesh);\n\nBall.prototype.DEFAULT_RPM = 1000;\nBall.prototype.RPM = 1000;\nBall.prototype.RPS = 1000 / 60;\nBall.prototype.RP60thOfASecond = 1000 / 60 / 60;\nBall.prototype.rotation = {\n    x: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180, // in radians per 60th of a second\n    y: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180\n};\n\nexports.Ball = Ball;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10,\"./Indicator\":17,\"baseball/Services/Mathinator\":24,\"baseball/Utility/helper\":32}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Base = (function (_AbstractMesh) {\n    _inherits(Base, _AbstractMesh);\n\n    function Base(loop, base) {\n        _classCallCheck(this, Base);\n\n        _get(Object.getPrototypeOf(Base.prototype), 'constructor', this).call(this);\n        this.base = base;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Base, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xFFFFFF\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(3, 0.3, 3, 8, 8, 8), material);\n\n            mesh.rotation.x = -0 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 0 / 180 * Math.PI;\n\n            switch (this.base) {\n                case 'first':\n                    mesh.position.x = 64;\n                    mesh.position.z = -64;\n                    break;\n                case 'second':\n                    mesh.position.x = 0;\n                    mesh.position.z = -121;\n                    break;\n                case 'third':\n                    mesh.position.x = -64;\n                    mesh.position.z = -64;\n                    break;\n                case 'home':\n                    mesh.position.x = 0;\n                    mesh.position.z = 0;\n\n                    mesh.rotation.z = 0;\n            }\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.5;\n            mesh.position.z -= 0;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Base;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Base = Base;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar BattersEye = (function (_AbstractMesh) {\n    _inherits(BattersEye, _AbstractMesh);\n\n    function BattersEye(loop) {\n        _classCallCheck(this, BattersEye);\n\n        _get(Object.getPrototypeOf(BattersEye.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(BattersEye, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(200, 45, 4, 16, 16, 16), material);\n\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= 310;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return BattersEye;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.BattersEye = BattersEye;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Field = (function (_AbstractMesh) {\n    _inherits(Field, _AbstractMesh);\n\n    function Field(loop) {\n        _classCallCheck(this, Field);\n\n        _get(Object.getPrototypeOf(Field.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Field, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(155, 155, 32, 32), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = -102;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Field;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Field = Field;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Grass = (function (_AbstractMesh) {\n    _inherits(Grass, _AbstractMesh);\n\n    function Grass(loop, infield) {\n        _classCallCheck(this, Grass);\n\n        _get(Object.getPrototypeOf(Grass.prototype), 'constructor', this).call(this);\n        this.infield = infield;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Grass, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: this.infield ? 0x70934A : 0x476532\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(this.infield ? 80 : 8000, this.infield ? 80 : 8000, 16, 16), material);\n\n            if (this.infield) {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.2;\n                mesh.position.z = -62;\n            } else {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y - 0.2;\n                mesh.position.z = -570;\n            }\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Grass;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Grass = Grass;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar HomeDirt = (function (_AbstractMesh) {\n    _inherits(HomeDirt, _AbstractMesh);\n\n    function HomeDirt(loop) {\n        _classCallCheck(this, HomeDirt);\n\n        _get(Object.getPrototypeOf(HomeDirt.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(HomeDirt, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(8, 8, 16, 16), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = 0;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return HomeDirt;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.HomeDirt = HomeDirt;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Indicator = (function (_AbstractMesh) {\n    _inherits(Indicator, _AbstractMesh);\n\n    function Indicator(loop) {\n        _classCallCheck(this, Indicator);\n\n        _get(Object.getPrototypeOf(Indicator.prototype), 'constructor', this).call(this);\n        var n = 60;\n        this.trajectory = [];\n        while (n--) {\n            this.trajectory.push(1);\n        }\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Indicator, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var THREE = window.THREE;\n            var geometry = new THREE.CircleGeometry(0.30, 32);\n            var material = new THREE.MeshPhongMaterial({\n                color: 0xFFFFFF\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            this.trajectory.shift();\n\n            if (!this.trajectory.length) {\n                this.detach();\n            }\n        }\n    }]);\n\n    return Indicator;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Indicator = Indicator;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Mound = (function (_AbstractMesh) {\n    _inherits(Mound, _AbstractMesh);\n\n    function Mound(loop) {\n        _classCallCheck(this, Mound);\n\n        _get(Object.getPrototypeOf(Mound.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Mound, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.CircleGeometry(9), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.9;\n            mesh.position.z = -60.5;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Mound;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Mound = Mound;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Wall = (function (_AbstractMesh) {\n    _inherits(Wall, _AbstractMesh);\n\n    function Wall(loop, angle) {\n        _classCallCheck(this, Wall);\n\n        _get(Object.getPrototypeOf(Wall.prototype), 'constructor', this).call(this);\n        this.angle = angle;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Wall, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(120, 15 | 0, 4, 16, 16, 16), material);\n\n            var radians = this.angle / 180 * Math.PI;\n            mesh.rotation.y = -radians;\n\n            var hypotenuse = 320;\n            var distance = Math.cos(radians) * hypotenuse;\n            var offset = Math.sin(radians) * hypotenuse;\n\n            mesh.position.x += offset;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= distance;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Wall;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Wall = Wall;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],20:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar lighting = {\n    addTo: function addTo(scene) {\n        var light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1.0);\n        scene.add(light);\n        var sun = new THREE.DirectionalLight(0xffffbb, 0.45);\n        light.position.set(-1, 1, 1);\n        this.light = light;\n        this.sun = sun;\n        scene.add(sun);\n    },\n    setLuminosity: function setLuminosity(level) {\n        this.light.intensity = level;\n        this.sun.intensity = level / 2;\n    }\n};\n\nexports.lighting = lighting;\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/services/_services');\n\nvar _baseballRenderLoop = require('baseball/Render/Loop');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar Animator = function Animator() {\n    this.init();\n    throw new Error('No need to instantiate Animator');\n};\nAnimator.TweenMax = {};\nAnimator.prototype = {\n    identifier: 'Animator',\n    constructor: Animator,\n    /**\r\n     * console mode disables most animator functions\r\n     */\n    console: false,\n    TweenMax: {},\n    THREE: {},\n    /**\r\n     * anything other than webgl will use TweenMax for JS animations\r\n     */\n    renderingMode: 'webgl',\n    init: function init() {\n        if (Animator.console) return;\n        if (!this.loop && this.renderingMode === 'webgl') {\n            this.beginRender();\n        }\n    },\n    /**\r\n     * @returns {Loop}\r\n     */\n    beginRender: function beginRender() {\n        this.loop = new _baseballRenderLoop.Loop('webgl-container');\n        this.background = new _baseballRenderLoop.Loop('webgl-bg-container');\n        this.background.addStaticMeshes();\n\n        this.loop.background = this.background;\n        this.background.foreground = this.loop;\n\n        return this.loop;\n    },\n    /**\r\n     * @param level {Number} 0 to 1\r\n     */\n    setLuminosity: function setLuminosity(level) {\n        if (this.console) return;\n        this.loop.lighting.setLuminosity(level);\n        this.background.lighting.setLuminosity(level);\n    },\n    loadTweenMax: function loadTweenMax() {\n        if (this.console || typeof window !== 'object') {\n            Animator.TweenMax = {\n                'set': function set() {},\n                'to': function to() {},\n                'from': function from() {},\n                killAll: function killAll() {}\n            };\n        } else {\n            Animator.TweenMax = window.TweenMax;\n        }\n        return Animator.TweenMax;\n    },\n    TIME_FROM_SET: 2300, //ms\n    TIME_FROM_WINDUP: 3600, //ms\n    HOLD_UP_ALLOWANCE: 0.75, // seconds\n    pitchTarget: null,\n    pitchBreak: null,\n    /**\r\n     * this is called with $scope context binding\r\n     * @param callback\r\n     */\n    updateFlightPath: function updateFlightPath(callback) {\n        if (Animator.console) return;\n\n        if (Animator.renderingMode === 'webgl') {\n            return Animator.renderFlightPath(callback, this);\n        }\n        return Animator.tweenFlightPath(callback, this);\n    },\n    /**\r\n     * @param callback\r\n     * @param $scope\r\n     * animates the pitch's flight path\r\n     */\n    tweenFlightPath: function tweenFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            top = 200 - game.pitchTarget.y,\n            left = game.pitchTarget.x,\n            breakTop = 200 - game.pitchInFlight.y,\n            breakLeft = game.pitchInFlight.x,\n            $baseballs = $('.baseball'),\n            flightSpeed = 1.3 - 0.6 * (game.pitchInFlight.velocity + 300) / 400,\n            originTop = 50,\n            originLeft = 110 + (game.pitcher.throws == 'left' ? 20 : -20);\n        var pitch = this.pitchTarget = $('.main-area .target .baseball.pitch'),\n            henka = this.pitchBreak = $('.main-area .target .baseball.break'),\n            quarter = flightSpeed / 4;\n\n        var pitchTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 12, 4),\n            targetTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 10, 3);\n\n        var transitions = [pitchTransition(0, 0), pitchTransition(10, 0), pitchTransition(30, 1), pitchTransition(50, 2), targetTransition(100, 3), pitchTransition(100, 3, breakTop, breakLeft)];\n\n        TweenMax.set([pitch, henka], transitions[0]);\n        TweenMax.to([pitch, henka], quarter, transitions[1]);\n        TweenMax.to([pitch, henka], quarter, transitions[2]);\n        TweenMax.to([pitch, henka], quarter, transitions[3]);\n        TweenMax.to(pitch, quarter, transitions[4]);\n        TweenMax.to(henka, quarter, transitions[5]);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback == 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        if (!game.pitchInFlight.x) {\n            $baseballs.addClass('hide');\n        } else {\n            if (game.humanBatting() && Math.random() * 180 > game.batter.skill.offense.eye) {\n                $('.baseball.break').addClass('hide');\n            } else {\n                $('.baseball.break').removeClass('hide');\n            }\n            $('.baseball.pitch').removeClass('hide');\n        }\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\r\n     * @param callback\r\n     * @param $scope Angular scope\r\n     * webgl version of tweenFlightPath\r\n     */\n    renderFlightPath: function renderFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            flightSpeed = _baseballServices_services.Mathinator.getFlightTime(game.pitchInFlight.velocity, _baseballUtilityHelper.helper.pitchDefinitions[game.pitchInFlight.name][2]);\n\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var ball = new this.loop.constructors.Ball();\n        Animator._ball = ball;\n        ball.derivePitchingTrajectory(game);\n        ball.trajectory = ball.breakingTrajectory;\n        ball.join(this.loop);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback === 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        var $baseballs = $('.baseball');\n        $baseballs.addClass('hide');\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\r\n     * @param game\r\n     * @returns {*}\r\n     * This only animates the flight arc of the ball in play.\r\n     */\n    animateFieldingTrajectory: function animateFieldingTrajectory(game) {\n        if (Animator.console) return game.swingResult;\n\n        if (this.renderingMode === 'webgl') {\n            Animator.tweenFieldingTrajectory(game, true);\n            return Animator.renderFieldingTrajectory(game);\n        }\n        return Animator.tweenFieldingTrajectory(game);\n    },\n    /**\r\n     * @param game\r\n     * @param splayOnly\r\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\r\n     * JS/CSS animation\r\n     */\n    tweenFieldingTrajectory: function tweenFieldingTrajectory(game, splayOnly) {\n        var TweenMax = Animator.loadTweenMax();\n        var ball = $('.splay-indicator-ball');\n        TweenMax.killAll();\n        var result = game.swingResult;\n\n        var linearApproximateDragScalar = {\n            distance: 1,\n            apexHeight: 0.57,\n            airTime: 0.96\n        };\n\n        var angle = result.flyAngle,\n            distance = Math.abs(result.travelDistance),\n            scalar = result.travelDistance < 0 ? -1 : 1;\n\n        _baseballServices_services.Mathinator.memory.bounding = angle < 0;\n        angle = 1 + Math.abs(angle);\n        if (angle > 90) angle = 180 - angle;\n\n        var velocity = linearApproximateDragScalar.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * angle / 180));\n        var velocityVerticalComponent = Math.sin(_baseballServices_services.Mathinator.RADIAN * angle) * velocity;\n        var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * linearApproximateDragScalar.apexHeight;\n        var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * linearApproximateDragScalar.airTime; // 2x freefall equation\n\n        //log('angle', angle, 'vel', velocity, 'apex', apexHeight, 'air', airTime, 'dist', result.travelDistance);\n        var quarter = airTime / 4;\n        var mathinator = new _baseballServices_services.Mathinator();\n        var transitions = [mathinator.transitionalTrajectory(0, quarter, 0, apexHeight, scalar * distance, result.splay), mathinator.transitionalTrajectory(25, quarter, 0), mathinator.transitionalTrajectory(50, quarter, 1), mathinator.transitionalTrajectory(75, quarter, 2), mathinator.transitionalTrajectory(100, quarter, 3)];\n        TweenMax.set(ball, transitions[0]);\n        TweenMax.to(ball, quarter, transitions[1]);\n        TweenMax.to(ball, quarter, transitions[2]);\n        TweenMax.to(ball, quarter, transitions[3]);\n        TweenMax.to(ball, quarter, transitions[4]);\n\n        if (!splayOnly) {\n            ball = $('.indicator.baseball.break').removeClass('hide').show();\n            var time = quarter / 2;\n            transitions = [mathinator.transitionalCatcherPerspectiveTrajectory(0, time, 0, apexHeight, scalar * distance, result.splay, game.pitchInFlight), mathinator.transitionalCatcherPerspectiveTrajectory(12.5, time * 0.75, 0), mathinator.transitionalCatcherPerspectiveTrajectory(25, time * 0.80, 1), mathinator.transitionalCatcherPerspectiveTrajectory(37.5, time * 0.85, 2), mathinator.transitionalCatcherPerspectiveTrajectory(50, time * 0.90, 3), mathinator.transitionalCatcherPerspectiveTrajectory(62.5, time * 0.95, 4), mathinator.transitionalCatcherPerspectiveTrajectory(75, time, 5), mathinator.transitionalCatcherPerspectiveTrajectory(87.5, time, 6), mathinator.transitionalCatcherPerspectiveTrajectory(100, time, 7)];\n            TweenMax.set(ball, transitions[0]);\n            TweenMax.to(ball, time, transitions[1]);\n            TweenMax.to(ball, time, transitions[2]);\n            TweenMax.to(ball, time, transitions[3]);\n            TweenMax.to(ball, time, transitions[4]);\n            TweenMax.to(ball, time, transitions[5]);\n            TweenMax.to(ball, time, transitions[6]);\n            TweenMax.to(ball, time, transitions[7]);\n            TweenMax.to(ball, time, transitions[8]);\n\n            setTimeout(function () {\n                // hack\n                $('.indicator.baseball.break').removeClass('hide').show();\n            }, 50);\n        }\n\n        return game.swingResult;\n    },\n    /**\r\n     * @param game\r\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\r\n     * WebGL version of tweenFieldingTrajectory\r\n     */\n    renderFieldingTrajectory: function renderFieldingTrajectory(game) {\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var result = game.swingResult;\n\n        var ball = Animator._ball || new this.loop.constructors.Ball();\n        ball.deriveTrajectory(result, game.pitchInFlight);\n        ball.join(this.loop);\n\n        if (result.thrownOut || result.caught || result.bases) {\n            this.loop.setLookTarget(ball.mesh.position, 0.5);\n            if (Math.random() < 0.15 && result.travelDistance > 90 || Math.random() < 0.50 && result.travelDistance > 200) {\n                //var scale = 1;\n                //if (result.splay > 0) {\n                //    scale = -1;\n                //}\n                this.loop.setLookTarget(ball.mesh.position, 50.0);\n                this.loop.setMoveTarget(ball.mesh.position, 0.16);\n            }\n        }\n\n        return game.swingResult;\n    }\n};\n\nfor (var fn in Animator.prototype) {\n    if (Animator.prototype.hasOwnProperty(fn)) {\n        Animator[fn] = Animator.prototype[fn];\n    }\n}\n\nexports.Animator = Animator;\n\n},{\"baseball/Render/Loop\":9,\"baseball/Utility/helper\":32,\"baseball/services/_services\":36}],22:[function(require,module,exports){\n/**\r\n * For Probability!\r\n * @constructor\r\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Distribution = function Distribution() {};\n\nDistribution.prototype = {\n    identifier: 'Distribution',\n    constructor: Distribution,\n    /**\r\n     * @param scale {number}\r\n     * @returns {number}\r\n     */\n    chance: function chance(scale) {\n        if (!scale) scale = 1;\n        return Math.random() * scale;\n    },\n    /**\r\n     * @param fielder {Player}\r\n     * @returns {boolean}\r\n     */\n    error: function error(fielder) {\n        return (100 - fielder.skill.defense.fielding) * 0.40 + 4 > Math.random() * 100;\n    },\n    /**\r\n     * @param power\r\n     * @param flyAngle\r\n     * @returns {number}\r\n     */\n    landingDistance: function landingDistance(power, flyAngle) {\n        return (10 + power / 2 + Math.random() * 310 + power / 100 * 30) * (1 - Math.abs(flyAngle - 30) / 60);\n    },\n    /**\r\n     * @returns {{x: number, y: number}}\r\n     */\n    pitchLocation: function pitchLocation() {\n        var x, y;\n        if (Math.random() < 0.5) {\n            x = 50 + Math.floor(Math.random() * 70) - Math.floor(Math.random() * 15);\n        } else {\n            x = 150 + Math.floor(Math.random() * 15) - Math.floor(Math.random() * 70);\n        }\n        y = 30 + (170 - Math.floor(Math.sqrt(Math.random() * 28900)));\n        return { x: x, y: y };\n    },\n    /**\r\n     * swing centering basis\r\n     * @returns {number}\r\n     */\n    centralizedNumber: function centralizedNumber() {\n        return 100 + Math.floor(Math.random() * 15) - Math.floor(Math.random() * 15);\n    },\n    /**\r\n     * @param eye {Player.skill.offense.eye}\r\n     * @param x\r\n     * @param y\r\n     * @param umpire {Umpire}\r\n     */\n    swingLikelihood: function swingLikelihood(eye, x, y, umpire) {\n        var swingLikelihood = (200 - Math.abs(100 - x) - Math.abs(100 - y)) / 2;\n        if (x < 60 || x > 140 || y < 50 || y > 150) {\n            // ball\n            /** 138 based on avg O-Swing of 30% + 8% for fun, decreased by better eye */\n            swingLikelihood = (swingLikelihood + 138 - eye) / 2 - 15 * umpire.count.balls;\n        } else {\n            /** avg Swing rate of 65% - 8% for laughs, increased by better eye */\n            swingLikelihood = (57 + (2 * swingLikelihood + eye) / 3) / 2;\n        }\n        // higher late in the count\n        return swingLikelihood - 35 + 2 * (umpire.count.balls + 8 * umpire.count.strikes);\n    },\n    /**\r\n     * @param target {number} 0-200\r\n     * @param control {number} 0-100\r\n     * @returns {number}\r\n     */\n    pitchControl: function pitchControl(target, control) {\n        var effect = (50 - Math.random() * 100) / (1 + control / 100);\n        return Math.min(199.9, Math.max(0.1, target + effect));\n    },\n    /**\r\n     * @param pitch {Game.pitchInFlight}\r\n     * @param pitcher {Player}\r\n     * @param x {number}\r\n     * @param y {number}\r\n     * @returns {object|{x: number, y: number}}\r\n     * 0.5 to 1.5 of the pitch's nominal breaking effect X\r\n     * 0.5 to 1.5 of the pitch's nominal breaking effect Y, magnified for lower Y\r\n     */\n    breakEffect: function breakEffect(pitch, pitcher, x, y) {\n        var effect = {};\n        effect.x = Math.floor(x + pitch.breakDirection[0] * (0.50 + 0.5 * Math.random() + pitcher.pitching[pitch.name]['break'] / 200));\n        effect.y = Math.floor(y + pitch.breakDirection[1] * ((0.50 + 0.5 * Math.random() + pitcher.pitching[pitch.name]['break'] / 200) / (0.5 + y / 200)));\n        return effect;\n    },\n    /**\r\n     * Determine the swing target along an axis\r\n     * @param target {number} 0-200\r\n     * @param actual {number} 0-200\r\n     * @param eye {number} 0-100\r\n     * @returns {number} 0-200\r\n     */\n    cpuSwing: function cpuSwing(target, actual, eye) {\n        eye = Math.min(eye, 100); // higher eye would overcompensate here\n        return 100 + (target - 100) * (0.5 + Math.random() * eye / 200) - actual;\n    },\n    /**\r\n     * Determine the swing scalar\r\n     * @param eye {number} 0-100\r\n     * @returns {number}\r\n     */\n    swing: function swing(eye) {\n        return 100 / (eye + 25 + Math.random() * 50);\n    }\n};\n\nfor (var fn in Distribution.prototype) {\n    if (Distribution.prototype.hasOwnProperty(fn)) {\n        Distribution[fn] = Distribution.prototype[fn];\n    }\n}\n\nDistribution.main = function () {\n    var ump = {\n        count: {\n            balls: 0,\n            strikes: 0\n        }\n    };\n    while (ump.count.balls < 4) {\n        while (ump.count.strikes < 3) {\n            console.log('S', ump.count.strikes, 'B', ump.count.balls);\n            console.log('middle', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 100, 100, ump) | 0;\n            }));\n            console.log('corner', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 50, 50, ump) | 0;\n            }));\n            console.log('ball', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 15, 15, ump) | 0;\n            }));\n            ump.count.strikes++;\n        }\n        ump.count.balls++;\n        ump.count.strikes = 0;\n    }\n};\n\nexports.Distribution = Distribution;\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Iterator = function Iterator() {};\n\nIterator.prototype = {\n    identifier: 'Iterator',\n    constructor: Iterator,\n    each: function each(collection, map) {\n        var keys, i;\n        if (collection instanceof Array) {\n            for (i = 0; i < collection.length; i++) {\n                map(i, collection[i]);\n            }\n        } else {\n            keys = Object.keys(collection);\n            for (i = 0; i < keys.length; i++) {\n                map(keys[i], collection[keys[i]]);\n            }\n        }\n    }\n};\n\nfor (var fn in Iterator.prototype) {\n    if (Iterator.prototype.hasOwnProperty(fn)) {\n        Iterator[fn] = Iterator.prototype[fn];\n    }\n}\n\nexports.Iterator = Iterator;\n\n},{}],24:[function(require,module,exports){\n/**\r\n * For Math!\r\n * @constructor\r\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Mathinator = function Mathinator() {};\n\n/**\r\n * @param n\r\n * @returns {number}\r\n */\nMathinator.square = function (n) {\n    return n * n;\n};\n\nMathinator.prototype = {\n    identifier: 'Mathinator',\n    constructor: Mathinator,\n    /**\r\n     * CONST\r\n     */\n    RADIAN: Math.PI / 180,\n    SPLAY_INDICATOR_LEFT: -4,\n    /**\r\n     * @param offset {{x: number, y: number}}\r\n     * @param angle {number}\r\n     * @returns {{x: number, y: number}}\r\n     */\n    getAngularOffset: function getAngularOffset(offset, angle) {\n        var xScalar = offset.x < 0 ? -1 : 1,\n            yScalar = offset.y < 0 ? -1 : 1;\n        var originalAngle = Math.atan(offset.x / offset.y) / this.RADIAN;\n        var distance = Math.sqrt(offset.x * offset.x + offset.y * offset.y),\n            angledY = yScalar * Math.cos((angle - originalAngle) * this.RADIAN) * distance,\n            angledX = xScalar * Math.sqrt(distance * distance - angledY * angledY);\n        return {\n            x: angledX,\n            y: angledY\n        };\n    },\n    /**\r\n     * @param a {Array<Number>}\r\n     * @param b {Array<Number>}\r\n     * @returns {number}\r\n     */\n    getPolarDistance: function getPolarDistance(a, b) {\n        var radians = this.RADIAN;\n        return Math.sqrt(a[1] * a[1] + b[1] * b[1] - 2 * a[1] * b[1] * Math.cos(a[0] * radians - b[0] * radians));\n    },\n    /**\r\n     * @param origin\r\n     * @param target\r\n     * @returns {number}\r\n     * 0 is flat (left-right), positive is clockwise.\r\n     * We use 125 instead of 180 to account for natural hand-height adjustments\r\n     * of various swing heights.\r\n     */\n    battingAngle: function battingAngle(origin, target) {\n        return Math.atan((origin.y - target.y) / (target.x - origin.x)) / Math.PI * 125;\n    },\n    memory: {},\n    /**\r\n     * @param percent {number} 0-100\r\n     * @param quarter {number} seconds\r\n     * @param step {number} 0 and up\r\n     * @param [givenApexHeight] feet\r\n     * @param [givenDistance] in feet\r\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\r\n     * @returns {{bottom: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\r\n     */\n    transitionalTrajectory: function transitionalTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle) {\n        if (givenApexHeight) Mathinator.prototype.memory.apexHeight = givenApexHeight;\n        if (givenDistance) Mathinator.prototype.memory.distance = givenDistance;\n        if (givenSplayAngle) Mathinator.prototype.memory.splay = givenSplayAngle;\n        var apexHeight = Mathinator.prototype.memory.apexHeight,\n            distance = Mathinator.prototype.memory.distance,\n            splay = Mathinator.prototype.memory.splay;\n        var bottom, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            quarter *= 4;\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        bottom = Math.cos(splay * radian) * percent / 100 * distance * 95 / 300;\n        left = Math.sin(splay * radian) * percent / 100 * distance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        var apexRatio = Math.sqrt((50 - Math.abs(percent - 50)) / 100) * (1 / 0.7071);\n        if (bounding) {\n            padding = 1;\n            borderWidth = 1;\n        } else {\n            padding = apexRatio * apexHeight / 90 * 15;\n            borderWidth = 2 + apexRatio * 2;\n        }\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n        padding = Math.max(Math.min(padding, 12), 0);\n        return {\n            bottom: bottom,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\r\n     * @param percent {number} 0-100\r\n     * @param quarter {number} seconds\r\n     * @param step {number} 0 and up\r\n     * @param [givenApexHeight] feet\r\n     * @param [givenDistance] in feet\r\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\r\n     * @param [givenOrigin] Object with x, y -- pitchInFlight\r\n     * @returns {{top: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\r\n     */\n    transitionalCatcherPerspectiveTrajectory: function transitionalCatcherPerspectiveTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle, givenOrigin) {\n        var memory = Mathinator.prototype.memory;\n        if (givenApexHeight) memory.apexHeight = givenApexHeight;\n        if (givenDistance) memory.distance = givenDistance;\n        if (givenSplayAngle) memory.splay = givenSplayAngle;\n        if (givenOrigin) memory.origin = givenOrigin;\n        var apexHeight = memory.apexHeight,\n            distance = memory.distance,\n            splay = memory.splay,\n            origin = memory.origin;\n        var top, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        var height = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 1.2) * apexHeight,\n            currentDistance = distance * percent / 100;\n\n        var projection = Math.pow((500 - currentDistance) / 500, 2); // reduction of dimensions due to distance\n\n        top = 200 - origin.y - height * 20 * projection + percent / 100 * (origin.y - 85) * projection;\n        left = origin.x + Math.sin(splay * radian) * (currentDistance * 8) * projection;\n        padding = 12 * projection * projection;\n        borderWidth = Math.max(Math.min(padding / 3, 4), 0);\n\n        top = Math.max(Math.min(top, 500), -10000);\n        left = Math.max(Math.min(left, 10000), -10000);\n        padding = Math.max(Math.min(padding, 24), 1);\n\n        //console.log('height', height|0, apexHeight|0, projection, 'left/pad/border', left|0, padding|0, borderWidth|0, 'top', top);\n\n        return {\n            top: top,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\r\n     * @param swingResult\r\n     * @returns {Game.swingResult}\r\n     */\n    translateSwingResultToStylePosition: function translateSwingResultToStylePosition(swingResult) {\n        // CF HR bottom: 95px, centerline: left: 190px;\n        var bottom, left;\n\n        bottom = Math.cos(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300;\n        left = Math.sin(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n\n        swingResult.bottom = bottom + 'px';\n        swingResult.left = left + 'px';\n        return swingResult;\n    },\n    /**\r\n     * @param left {number} 0-200\r\n     * @param top {number} 0-200\r\n     * @param originLeft {number} 0-200\r\n     * @param originTop {number} 0-200\r\n     * @param quarter {number} seconds\r\n     * @param maxPadding {number} px padding at full size\r\n     * @param maxBorderWidth {number} px border width at full size\r\n     * @returns {Function}\r\n     */\n    pitchTransition: function pitchTransition(top, left, originTop, originLeft, quarter, maxPadding, maxBorderWidth) {\n        /**\r\n         * @param percent {number} 0-100\r\n         * @param step {number} 0 and up\r\n         * @param [breakTop] {number} 0-200 override\r\n         * @param [breakLeft] {number} 0-200 override\r\n         * @returns {{top: number, left: number, padding: string, borderWidth: string, transform: string, delay: number, ease: *}}\r\n         */\n        return function (percent, step, breakTop, breakLeft) {\n            var _top, _left;\n            _top = breakTop || top;\n            _left = breakLeft || left;\n            _top = originTop + Mathinator.square(percent / 100) * (_top - originTop);\n            if (step == 1) {\n                _top -= 2;\n            }\n            if (step == 2) {\n                _top -= 1;\n            }\n            _left = originLeft + Mathinator.square(percent / 100) * (_left - originLeft);\n            var padding = Math.max(Mathinator.square(percent / 100) * maxPadding, 1),\n                borderWidth = Math.max(Mathinator.square(percent / 100) * maxBorderWidth, 1);\n            return {\n                top: _top,\n                left: _left,\n                padding: padding + 'px',\n                borderWidth: borderWidth + 'px',\n                transform: 'translateZ(0)',\n                delay: quarter * step,\n                ease: Linear.easeNone\n            };\n        };\n    },\n    /**\r\n     * @param distance {number} feet\r\n     * @param throwing {number} 0-1\r\n     * @param fielding {number} 0-1\r\n     * @param intercept {number} approx. -140 to 140\r\n     * @returns {number} seconds\r\n     */\n    fielderReturnDelay: function fielderReturnDelay(distance, throwing, fielding, intercept) {\n        return distance / 90 // bip distance (up to 3s+)\n         + 5 * (distance / 310) // worst case time to reach the ball,\n         * Math.min(intercept - 120, 0) / -240 // a good intercept rating will cut the base down to 0\n         + 1 - (0.2 + fielding * 0.8) // gather time (up to 0.8s)\n         + distance / 90 / (0.5 + throwing / 2); // throwing distance (up to 2s)\n    },\n    /**\r\n     * @param player {Player}\r\n     * @returns {number} ~2.0\r\n     */\n    infieldThrowDelay: function infieldThrowDelay(player) {\n        var fielding = player.skill.defense.fielding,\n            throwing = player.skill.defense.throwing;\n        return 3.5 - (fielding + throwing) / 200;\n    },\n    /**\r\n     * @param speed {number} 0-100\r\n     * @returns {number} seconds\r\n     */\n    baseRunningTime: function baseRunningTime(speed) {\n        return 7.0 - speed / 100 * 4.1;\n    },\n    /**\r\n     * @param x {Number} bat offset\r\n     * @param y {Number} bat offset\r\n     * @param angle {Number} batting angle where 0 is horizontal, RHB clockwise increasing\r\n     * {\r\n     *   splay: -90 to 90 where 0 is up the middle,\r\n     *   fly: 0, flat, to 90, vertical pop up\r\n     * }\r\n     * @param eye {Number} 0 - 100 skill rating\r\n     * @returns {{splay: number, fly: number}}\r\n     */\n    getSplayAndFlyAngle: function getSplayAndFlyAngle(x, y, angle, eye) {\n\n        var splay = -1.5 * x - angle / 20 * y;\n        var direction = splay > 0 ? 1 : -1;\n        // additional random splay\n        // todo make it pull only\n        splay += direction * Math.random() * 40 * (100 / (50 + eye));\n\n        return {\n            splay: splay,\n            fly: -3 * y / ((angle + 25) / 35) // more difficult to hit a pop fly on a angled bat\n        };\n    },\n    /**\r\n     * @param velocityRating {Number} 0-100\r\n     * @param velocityScalar {Number} approx 1\r\n     * @returns {number}\r\n     */\n    getFlightTime: function getFlightTime(velocityRating, velocityScalar) {\n        return (1.3 - 0.6 * (velocityRating + 300) / 400) / velocityScalar;\n    }\n};\n\nfor (var fn in Mathinator.prototype) {\n    if (Mathinator.prototype.hasOwnProperty(fn)) {\n        Mathinator[fn] = Mathinator.prototype[fn];\n    }\n}\n\nexports.Mathinator = Mathinator;\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":21,\"baseball/Services/Distribution\":22,\"baseball/Services/Iterator\":23,\"baseball/Services/Mathinator\":24}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _TeamJapan = require('./TeamJapan');\n\nvar Provider = (function () {\n    function Provider() {\n        _classCallCheck(this, Provider);\n    }\n\n    _createClass(Provider, [{\n        key: 'assignTeam',\n        value: function assignTeam(game, team, side) {\n            var special = this.teams[team];\n            special.game = game;\n            game.teams[side] = special;\n        }\n    }]);\n\n    return Provider;\n})();\n\nProvider.prototype.teams = {\n    TeamJapan: _TeamJapan.samurai\n};\n\nexports.Provider = Provider;\n\n},{\"./TeamJapan\":27}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballTeamsTrainer = require('baseball/Teams/Trainer');\n\nvar samurai = new _baseballModel_models.Team('no init');\nsamurai.name = 'Japan';\nsamurai.nameJ = '日本';\n\nvar darvish = new _baseballModelPlayer.Player(samurai),\n    johjima = new _baseballModelPlayer.Player(samurai),\n    ogasawara = new _baseballModelPlayer.Player(samurai),\n    nishioka = new _baseballModelPlayer.Player(samurai),\n    kawasaki = new _baseballModelPlayer.Player(samurai),\n    murata = new _baseballModelPlayer.Player(samurai),\n    matsui = new _baseballModelPlayer.Player(samurai),\n    ichiro = new _baseballModelPlayer.Player(samurai),\n    inaba = new _baseballModelPlayer.Player(samurai);\n\nvar matsuzaka = new _baseballModelPlayer.Player(samurai),\n    fukudome = new _baseballModelPlayer.Player(samurai),\n    aoki = new _baseballModelPlayer.Player(samurai),\n    abe = new _baseballModelPlayer.Player(samurai),\n    iwamura = new _baseballModelPlayer.Player(samurai);\n\nvar coach = new _baseballTeamsTrainer.Trainer();\n\ncoach.makePlayer(darvish, 'Yu', 'Darvish', 'ダルビッシュ', '有', 150, { eye: 80, power: 80, speed: 80 }, { catching: 50, fielding: 70, throwing: 100, speed: 80 }, 'right', 'right', 11);\n\ncoach.makePlayer(johjima, 'Kenji', 'Johjima', '城島', '健司', 60, { eye: 90, power: 88, speed: 70 }, { catching: 140, fielding: 95, throwing: 88, speed: 94 }, 'right', 'right', 2);\n\ncoach.makePlayer(ogasawara, 'Michihiro', 'Ogasawara', '小笠原', '道大', 80, { eye: 96, power: 115, speed: 90 }, { catching: 50, fielding: 96, throwing: 85, speed: 70 }, 'left', 'right', 36);\n\ncoach.makePlayer(nishioka, 'Tsuyoshi', 'Nishioka', '西岡', '剛', 80, { eye: 88, power: 75, speed: 92 }, { catching: 90, fielding: 88, throwing: 88, speed: 90 }, 'right', 'right', 7);\n\ncoach.makePlayer(kawasaki, 'Munenori', 'Kawasaki', '川崎', '宗則', 80, { eye: 95, power: 75, speed: 92 }, { catching: 90, fielding: 98, throwing: 90, speed: 110 }, 'left', 'right', 52);\n\ncoach.makePlayer(murata, 'Shuichi', 'Murata', '村田', '修一', 80, { eye: 82, power: 110, speed: 60 }, { catching: 80, fielding: 80, throwing: 90, speed: 90 }, 'right', 'right', 25);\n\ncoach.makePlayer(matsui, 'Hideki', 'Matsui', '秀樹', '松井', 75, { eye: 104, power: 130, speed: 68 }, { catching: 40, fielding: 85, throwing: 70, speed: 60 }, 'left', 'right', 55);\n\ncoach.makePlayer(ichiro, 'Ichiro', 'Suzuki', 'イチロー', '', 115, { eye: 115, power: 48, speed: 99 }, { catching: 80, fielding: 110, throwing: 135, speed: 120 }, 'left', 'right', 51);\n\ncoach.makePlayer(inaba, 'Atsunori', 'Inaba', '稲葉', '篤紀', 80, { eye: 92, power: 95, speed: 75 }, { catching: 50, fielding: 95, throwing: 95, speed: 90 }, 'right', 'right', 41);\n\nsamurai.bench = [darvish, johjima, ogasawara, nishioka, kawasaki, murata, matsui, ichiro, inaba, matsuzaka, fukudome, aoki, abe, iwamura];\nsamurai.manager.makeLineup();\nsamurai.positions = {\n    pitcher: darvish,\n    catcher: johjima,\n\n    first: ogasawara,\n    second: nishioka,\n    short: kawasaki,\n    third: murata,\n\n    left: matsui,\n    center: ichiro,\n    right: inaba\n};\n\nfor (var position in samurai.positions) {\n    if (samurai.positions.hasOwnProperty(position)) {\n        samurai.positions[position].position = position;\n    }\n}\n\nsamurai.lineup = [ichiro, kawasaki, inaba, matsui, ogasawara, johjima, murata, nishioka, darvish];\n\nsamurai.lineup.map(function (player, order) {\n    player.order = order;\n});\n\nexports.samurai = samurai;\n\n},{\"baseball/Model/Player\":5,\"baseball/Model/_models\":8,\"baseball/Teams/Trainer\":28}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar Trainer = (function () {\n    function Trainer() {\n        _classCallCheck(this, Trainer);\n    }\n\n    _createClass(Trainer, [{\n        key: 'makePlayer',\n        value: function makePlayer(player, name, surname, surnameJ, nameJ, pitching, offense, defense, bats, throws, number) {\n            player.hero = true;\n\n            if ('rights' && 0) {\n                surnameJ = '代表';\n                nameJ = '選手';\n                name = 'TEAM';\n                surname = 'JPN';\n            }\n\n            player.name = name + ' ' + surname;\n            player.nameJ = surnameJ + nameJ;\n            player.surname = surname;\n            player.surnameJ = surnameJ;\n\n            player.spaceName(surnameJ, nameJ);\n            player.randomizeSkills(true, true);\n            player.skill.offense = offense;\n            player.skill.defense = defense;\n            player.skill.pitching = pitching;\n            player.bats = bats;\n            player.throws = throws;\n            player.number = number;\n            _baseballServicesIterator.Iterator.each(player.pitching, function (key, value) {\n                player.pitching[key].velocity += pitching / 5 | 0;\n                player.pitching[key]['break'] += pitching / 5 | 0;\n                player.pitching[key].control += pitching / 5 | 0;\n            });\n            player.resetStats(0);\n        }\n    }]);\n\n    return Trainer;\n})();\n\nexports.Trainer = Trainer;\n\n},{\"baseball/Services/Iterator\":23}],29:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nvar Log = function Log() {\n    this.init();\n};\n\nLog.prototype = {\n    game: 'instance of Game',\n    init: function init() {\n        this.stabilized = {\n            pitchRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            },\n            shortRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            }\n        };\n        this.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.shortRecord = {\n            e: [],\n            n: []\n        };\n        this.record = {\n            e: [],\n            n: []\n        };\n    },\n    SINGLE: 'H',\n    DOUBLE: '2B',\n    TRIPLE: '3B',\n    HOMERUN: 'HR',\n    WALK: 'BB',\n    GROUNDOUT: 'GO',\n    FLYOUT: 'FO',\n    LINEOUT: 'LO',\n    RUN: 'R',\n    STRIKEOUT: 'SO',\n    SACRIFICE: 'SAC',\n    REACHED_ON_ERROR: 'ROE',\n    FIELDERS_CHOICE: 'FC',\n    GIDP: '(IDP)',\n    GITP: '(ITP)',\n    stabilizeShortRecord: function stabilizeShortRecord() {\n        var rec = this.record.e.slice(0, 6);\n        this.shortRecord.e = rec;\n        this.stabilized.shortRecord.e = rec.concat(['', '', '', '', '', '']).slice(0, 6);\n\n        var rec2 = this.record.n.slice(0, 6);\n        this.shortRecord.n = rec2;\n        this.stabilized.shortRecord.n = rec2.concat(['', '', '', '', '', '']).slice(0, 6);\n    },\n    note: function note(_note, noteJ) {\n        this.record.e.unshift(_note);\n        this.record.n.unshift(noteJ);\n        this.stabilizeShortRecord();\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(noteJ);\n            } else {\n                console.log(_note);\n            }\n        });\n    },\n    getBatter: function getBatter(batter) {\n        var order = batter.team.nowBatting;\n        order = ({\n            0: (0, _baseballUtilityText.text)(' 1st'),\n            1: (0, _baseballUtilityText.text)(' 2nd'),\n            2: (0, _baseballUtilityText.text)(' 3rd'),\n            3: (0, _baseballUtilityText.text)(' 4th'),\n            4: (0, _baseballUtilityText.text)(' 5th'),\n            5: (0, _baseballUtilityText.text)(' 6th'),\n            6: (0, _baseballUtilityText.text)(' 7th'),\n            7: (0, _baseballUtilityText.text)(' 8th'),\n            8: (0, _baseballUtilityText.text)(' 9th')\n        })[order];\n        var positions = this.longFormFielder();\n        return (0, _baseballUtilityText.text)('Now batting') + order + _baseballUtilityText.text.comma() + positions[batter.position] + _baseballUtilityText.text.comma() + batter.getUniformNumber() + _baseballUtilityText.text.comma() + batter.getName();\n    },\n    noteBatter: function noteBatter(batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getBatter(batter);\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getBatter(batter);\n        _baseballUtilityText.text.mode = m;\n        this.note(record, recordJ);\n    },\n    getPitchLocationDescription: function getPitchLocationDescription(pitchInFlight, batterIsLefty) {\n        var x = pitchInFlight.x,\n            y = pitchInFlight.y,\n            say = '';\n        var noComma = false,\n            noComma2 = false;\n        var ball = false;\n        if (!batterIsLefty) x = 200 - x;\n        if (x < 50) {\n            say += (0, _baseballUtilityText.text)('way outside');\n            ball = true;\n        } else if (x < 70) {\n            say += (0, _baseballUtilityText.text)('outside');\n        } else if (x < 100) {\n            say += '';\n            noComma = true;\n        } else if (x < 130) {\n            say += '';\n            noComma = true;\n        } else if (x < 150) {\n            say += (0, _baseballUtilityText.text)('inside');\n        } else {\n            say += (0, _baseballUtilityText.text)('way inside');\n            ball = true;\n        }\n        if (say != '') say += _baseballUtilityText.text.comma();\n        if (y < 35) {\n            say += (0, _baseballUtilityText.text)('way low');\n            ball = true;\n        } else if (y < 65) {\n            say += (0, _baseballUtilityText.text)('low');\n        } else if (y < 135) {\n            say += '';\n            noComma2 = true;\n        } else if (y < 165) {\n            say += (0, _baseballUtilityText.text)('high');\n        } else {\n            say += (0, _baseballUtilityText.text)('way high');\n            ball = true;\n        }\n        if (noComma || noComma2) {\n            say = say.split(_baseballUtilityText.text.comma()).join('');\n            if (noComma && noComma2) {\n                say = (0, _baseballUtilityText.text)('down the middle');\n            }\n        }\n        // say = (ball ? 'Ball, ' : 'Strike, ') + say;\n        say = _baseballUtilityText.text.namePitch(pitchInFlight) + _baseballUtilityText.text.comma() + say + _baseballUtilityText.text.stop();\n        return say;\n    },\n    notePitch: function notePitch(pitchInFlight, batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.pop();\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.pop();\n        _baseballUtilityText.text.mode = m;\n    },\n    broadcastCount: function broadcastCount(justOuts) {\n        if (!this.game.umpire) return '';\n        var count = this.game.umpire.count;\n        if (this.lastOuts == 2 && count.outs == 0) {\n            outs = 3 + (0, _baseballUtilityText.text)(' outs');\n        } else {\n            var outs = count.outs + (count.outs == 1 ? (0, _baseballUtilityText.text)(' out') : (0, _baseballUtilityText.text)(' outs'));\n        }\n        this.lastOuts = count.outs;\n        if (justOuts) {\n            return outs + _baseballUtilityText.text.stop();\n        }\n        return count.strikes + '-' + count.balls + ', ' + outs + _baseballUtilityText.text.stop();\n    },\n    broadcastScore: function broadcastScore() {\n        return this.game.teams.away.getName() + ' ' + this.game.tally.away.R + ', ' + this.game.teams.home.getName() + ' ' + this.game.tally.home.R + _baseballUtilityText.text.stop();\n    },\n    broadcastRunners: function broadcastRunners() {\n        var field = this.game.field;\n        var runners = [field.first && (0, _baseballUtilityText.text)('first') || '', field.second && (0, _baseballUtilityText.text)('second') || '', field.third && (0, _baseballUtilityText.text)('third') || ''].filter(function (x) {\n            return x;\n        });\n\n        var runnerCount = 0;\n        runners.map(function (runner) {\n            if (runner) {\n                runnerCount++;\n            }\n        });\n\n        switch (runnerCount) {\n            case 0:\n                return (0, _baseballUtilityText.text)('Bases empty') + _baseballUtilityText.text.stop();\n            case 1:\n                return (0, _baseballUtilityText.text)('Runner on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n            default:\n                return (0, _baseballUtilityText.text)('Runners on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n        }\n    },\n    getSwing: function getSwing(swingResult) {\n        var result = '';\n        if (swingResult.looking) {\n            if (swingResult.strike) {\n                result += (0, _baseballUtilityText.text)('Strike.');\n            } else {\n                result += (0, _baseballUtilityText.text)('Ball.');\n            }\n        } else {\n            if (swingResult.contact) {\n                if (swingResult.foul) {\n                    result += (0, _baseballUtilityText.text)('Fouled off.');\n                } else {\n                    if (swingResult.caught) {\n                        result += (0, _baseballUtilityText.text)('In play.');\n                    } else {\n                        if (swingResult.thrownOut) {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        } else {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        }\n                    }\n                }\n            } else {\n                result += (0, _baseballUtilityText.text)('Swinging strike.');\n            }\n        }\n        return result;\n    },\n    noteSwing: function noteSwing(swingResult) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getSwing(swingResult);\n        pitchRecord.e[0] += record;\n        stabilized.e[0] += record;\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getSwing(swingResult);\n        pitchRecord.n[0] += recordJ;\n        stabilized.n[0] += recordJ;\n        _baseballUtilityText.text.mode = m;\n        recordJ = stabilized.n[0];\n        record = stabilized.e[0];\n        var giraffe = this;\n        record.indexOf('Previous') !== 0 && this.async(function () {\n            if (record.indexOf('In play') > -1 && record.indexOf('struck out') > -1) {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(recordJ);\n                } else {\n                    console.log(record);\n                }\n            } else {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(giraffe.broadcastCount(), recordJ);\n                } else {\n                    console.log(giraffe.broadcastCount(), record);\n                }\n            }\n        });\n    },\n    async: function async(fn) {\n        if (!this.game.console && !this.game.quickMode) {\n            setTimeout(fn, 100);\n        }\n    },\n    getPlateAppearanceResult: function getPlateAppearanceResult(game) {\n        var r = game.swingResult;\n        var record = '';\n        var batter = game.batter.getName();\n        var out = [];\n        if (r.looking) {\n            if (r.strike) {\n                record = batter + (0, _baseballUtilityText.text)(' struck out looking.');\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' walked.');\n            }\n        } else {\n            if (r.contact) {\n                var fielder = r.fielder,\n                    bases = r.bases,\n                    outBy;\n                if (r.caught) {\n                    if (r.flyAngle < 15) {\n                        outBy = 'line';\n                    } else {\n                        if (['left', 'center', 'right'].indexOf(r.fielder) < 0) {\n                            outBy = 'pop';\n                        } else {\n                            outBy = 'fly';\n                        }\n                    }\n                } else {\n                    if (r.foul) {\n                        // not possible to end PA on foul?\n                    } else {\n                            if (r.error) {\n                                bases = 1;\n                                outBy = 'error';\n                            } else {\n                                if (r.thrownOut) {\n                                    if (Math.random() < 0.5) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'thrown';\n                                    }\n                                } else {\n                                    switch (r.bases) {\n                                        case 1:\n                                        case 2:\n                                        case 3:\n                                            bases = r.bases;\n                                            break;\n                                        case 4:\n                                            bases = 4;\n                                            if (r.splay < -15) {\n                                                fielder = 'left';\n                                            } else if (r.splay < 15) {\n                                                fielder = 'center';\n                                            } else {\n                                                fielder = 'right';\n                                            }\n                                            break;\n                                    }\n                                }\n                                if (r.firstOut) {\n                                    out = out.concat(r.additionalOuts.filter(function (runner) {\n                                        return runner !== 'batter';\n                                    }));\n                                    out.doublePlay = r.doublePlay;\n                                }\n                                if (r.fieldersChoice) {\n                                    out.push(r.fieldersChoice);\n                                    if (r.outs == 3) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'fieldersChoice';\n                                    }\n                                }\n                            }\n                        }\n                }\n                record = _baseballUtilityText.text.contactResult(batter, fielder, bases, outBy, r.outs === 3 ? [] : r.sacrificeAdvances, out);\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' struck out swinging.');\n            }\n        }\n        return record;\n    },\n    notePlateAppearanceResult: function notePlateAppearanceResult(game) {\n        var m = _baseballUtilityText.text.mode,\n            prevJ = (0, _baseballUtilityText.text)('Previous: ', 'n'),\n            prev = (0, _baseballUtilityText.text)('Previous: ', 'e');\n\n        var statement,\n            record = this.record,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n\n        _baseballUtilityText.text.mode = 'e';\n        var result = this.getPlateAppearanceResult(game);\n        record.e.unshift(result);\n        statement = prev + result;\n        pitchRecord.e = [statement];\n        stabilized.e = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = 'n';\n        var resultJ = this.getPlateAppearanceResult(game);\n        record.n.unshift(resultJ);\n        statement = prevJ + resultJ;\n        pitchRecord.n = [statement];\n        stabilized.n = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = m;\n        var giraffe = this;\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(['%c' + resultJ, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            } else {\n                console.log(['%c' + result, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            }\n        });\n    },\n    pointer: 0,\n    stabilized: {\n        pitchRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        },\n        shortRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        }\n    },\n    pitchRecord: {\n        e: [],\n        n: []\n    },\n    shortRecord: {\n        e: [],\n        n: []\n    },\n    record: {\n        e: [],\n        n: []\n    },\n    longFormFielder: function longFormFielder() {\n        return {\n            first: (0, _baseballUtilityText.text)('first baseman'),\n            second: (0, _baseballUtilityText.text)('second baseman'),\n            third: (0, _baseballUtilityText.text)('third baseman'),\n            short: (0, _baseballUtilityText.text)('shortstop'),\n            pitcher: (0, _baseballUtilityText.text)('pitcher'),\n            catcher: (0, _baseballUtilityText.text)('catcher'),\n            left: (0, _baseballUtilityText.text)('left fielder'),\n            center: (0, _baseballUtilityText.text)('center fielder'),\n            right: (0, _baseballUtilityText.text)('right fielder')\n        };\n    }\n};\n\nexports.Log = Log;\n\n},{\"baseball/Utility/text\":33}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballUtilityData = require('baseball/Utility/data');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nexports.data = _baseballUtilityData.data;\nexports.helper = _baseballUtilityHelper.helper;\nexports.Log = _baseballUtilityLog.Log;\nexports.text = _baseballUtilityText.text;\n\n},{\"baseball/Utility/Log\":29,\"baseball/Utility/data\":31,\"baseball/Utility/helper\":32,\"baseball/Utility/text\":33}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar data = {\n    surnames: ['Sato', 'Suzuki', 'Takahashi', 'Tanaka', 'Watanabe', 'Ito', 'Nakamura', 'Kobayashi', 'Yamamoto', 'Kato', 'Yoshida', 'Yamada', 'Sasaki', 'Yamaguchi', 'Matsumoto', 'Inoue', 'Kimura', 'Shimizu', 'Hayashi', 'Saito', 'Saito', 'Yamazaki', 'Nakajima', 'Mori', 'Abe', 'Ikeda', 'Hashimoto', 'Ishikawa', 'Yamashita', 'Ogawa', 'Ishii', 'Hasegawa', 'Goto', 'Okada', 'Kondo', 'Maeda', 'Fujita', 'Endo', 'Aoki', 'Sakamoto', 'Murakami', 'Ota', 'Kaneko', 'Fujii', 'Fukuda', 'Nishimura', 'Miura', 'Takeuchi', 'Nakagawa', 'Okamoto', 'Matsuda', 'Harada', 'Nakano'],\n    surnamesJ: ['佐藤', '鈴木', '高橋', '田中', '渡辺', '伊藤', '中村', '小林', '山本', '加藤', '吉田', '山田', '佐々木', '山口', '松本', '井上', '木村', '清水', '林', '斉藤', '斎藤', '山崎', '中島', '森', '阿部', '池田', '橋本', '石川', '山下', '小川', '石井', '長谷川', '後藤', '岡田', '近藤', '前田', '藤田', '遠藤', '青木', '坂本', '村上', '太田', '金子', '藤井', '福田', '西村', '三浦', '竹内', '中川', '岡本', '松田', '原田', '中野'],\n\n    namesJ: ['匠', 'ヒカル', 'ゆうき', '翔太', '冬馬', '漣', '港区', 'ルイ', '樹', '賢治', '五木', '春', '光一', '宗介', 'こうすけ', '雄太', '大樹', '瑛太',\n    // newer set\n    '宏', '亨', '道夫', '聡', '昭', '茂雄', '勝', '純一', '和夫', '勲', '省三', '隆', '達夫', '正一', '輝夫', '俊夫', '史郎', '勇', '義弘', '良雄', '登', '義明', '正義', '秀夫', '肇', '月', '克己', '正男', '光男', '久', '耕三', '清', '次郎', '正博', '明子', '武', '勉', '晴夫', '裕二', '稔', '障子', '和子', '敦', '茂', '信夫', '恵一', '忠', '高尾', '薫', 'ケン', '健治', '哲夫', '啓二', '光一', '真一', '貞夫', '靖', '武', '雄', '文雄', '久雄', '一朗', '健一', '正明', '五郎', '誠', '昭夫', '誠司', '洋一', '康夫', '誠一', '正美', '則夫', '幸雄', '忠雄', '仁', 'シンジ', '豊', '邦雄', '修', '雅之', '三郎', '英治', '浩二', '栄一', '恒夫', '義郎', '進', '博之', '巌'],\n    names: ['Takumi', 'Hikaru', 'Yuuki', 'Shouta', 'Touma', 'Ren', 'Minato', 'Rui', 'Tatsuki', 'Kenji', 'Itsuki', 'Haru', 'Kouichi', 'Sousuke', 'Kousuke', 'Yuuta', 'Daiki', 'Eita',\n    // newer set\n    'Hiroshi', 'Toru', 'Michio', 'Satoshi', 'Akira', 'Shigeo', 'Masaru', 'Junichi', 'Kazuo', 'Isao', 'Shozo', 'Takashi', 'Tatsuo', 'Shoichi', 'Teruo', 'Toshio', 'Shiro', 'Isamu', 'Yoshihiro', 'Yoshio', 'Noboru', 'Yoshiaki', 'Tadayoshi', 'Hideo', 'Hajime', 'Akari', 'Katsumi', 'Masao', 'Mitsuo', 'Hisashi', 'Kozo', 'Kiyoshi', 'Jiro', 'Masahiro', 'Akiko', 'Takeshi', 'Tsutomu', 'Haruo', 'Yuji', 'Minoru', 'Shoji', 'Kazuko', 'Atsushi', 'Shigeru', 'Shinobu', 'Keiichi', 'Tadashi', 'Takao', 'Kaoru', 'Ken', 'Kenji', 'Tetsuo', 'Keiji', 'Koichi', 'Shinichi', 'Sadao', 'Yasushi', 'Takeshi', 'Yu', 'Fumio', 'Hisao', 'Ichiro', 'Kenichi', 'Masaaki', 'Goro', 'Makoto', 'Akio', 'Seiji', 'Yoichi', 'Yasuo', 'Seiichi', 'Masami', 'Norio', 'Yukio', 'Tadao', 'Hitoshi', 'Shinji', 'Yutaka', 'Kunio', 'Osamu', 'Masayuki', 'Saburo', 'Eiji', 'Koji', 'Eiichi', 'Tsuneo', 'Yoshio', 'Susumu', 'Hiroyuki', 'Iwao'],\n    teamNamesJ: ['横浜', '大阪', '名古屋', '札幌', '神戸', '京都', '福岡', '川崎', '埼玉県', '広島', '仙台', '千葉県', '新潟', '浜松', '静岡', '相模原', '岡山', '熊本', '鹿児島', '船橋', '川口', '姫路', '松山', '宇都宮', '松戸', '西宮', '倉敷', '市川', '福山', '尼崎', '金沢', '長崎', '横須賀', '富山', '高松', '町田', '岐阜', '枚方', '藤沢', '柏', '豊中', '長野県', '豊橋', '一宮', '和歌山', '岡崎', '宮崎', '奈良', '吹田', '高槻', '旭川', 'いわき', '高崎', '所沢', '川越', '秋田', '越谷', '前橋', '那覇', '四日市', '青森', '久留米', '春日井', '盛岡', '明石', '福島', '下関', '長岡', '市原', '函館', '茨城県', '福井', '加古川', '徳島', '水戸', '平塚', '佐世保', '呉', '八戸', '佐賀', '寝屋川', '富士', '春日部', '茅ヶ崎', '松本', '厚木', '大和', '上尾', '宝塚', '筑波', '沼津', '熊谷', '伊勢崎', '岸和田', '鳥取', '小田原', '鈴鹿', '松江', '日立'],\n    teamNames: ['Yokohama', 'Osaka', 'Nagoya', 'Sapporo', 'Kobe', 'Kyoto', 'Fukuoka', 'Kawasaki', 'Saitama', 'Hiroshima', 'Sendai', 'Chiba', 'Niigata', 'Hamamatsu', 'Shizuoka', 'Sagamihara', 'Okayama', 'Kumamoto', 'Kagoshima', 'Funabashi', 'Kawaguchi', 'Himeji', 'Matsuyama', 'Utsunomiya', 'Matsudo', 'Nishinomiya', 'Kurashiki', 'Ichikawa', 'Fukuyama', 'Amagasaki', 'Kanazawa', 'Nagasaki', 'Yokosuka', 'Toyama', 'Takamatsu', 'Machida', 'Gifu', 'Hirakata', 'Fujisawa', 'Kashiwa', 'Toyonaka', 'Nagano', 'Toyohashi', 'Ichinomiya', 'Wakayama', 'Okazaki', 'Miyazaki', 'Nara', 'Suita', 'Takatsuki', 'Asahikawa', 'Iwaki', 'Takasaki', 'Tokorozawa', 'Kawagoe', 'Akita', 'Koshigaya', 'Maebashi', 'Naha', 'Yokkaichi', 'Aomori', 'Kurume', 'Kasugai', 'Morioka', 'Akashi', 'Fukushima', 'Shimonoseki', 'Nagaoka', 'Ichihara', 'Hakodate', 'Ibaraki', 'Fukui', 'Kakogawa', 'Tokushima', 'Mito', 'Hiratsuka', 'Sasebo', 'Kure', 'Hachinohe', 'Saga', 'Neyagawa', 'Fuji', 'Kasukabe', 'Chigasaki', 'Matsumoto', 'Atsugi', 'Yamato', 'Ageo', 'Takarazuka', 'Tsukuba', 'Numazu', 'Kumagaya', 'Isesaki', 'Kishiwada', 'Tottori', 'Odawara', 'Suzuka', 'Matsue', 'Hitachi']\n};\n\nexports.data = data;\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar helper = {\n    /**\r\n     * rotation angle from 0 to 360 where 180 is a fastball's backspin and 90 is a slider's, 0 for curveball\r\n     * in the direction (CW for righty), CCW for lefty.\r\n     *\r\n     * x movement, y movement, speed ratio, rotation angle, RPM from RHP perspective where left is smaller X\r\n     */\n    pitchDefinitions: {\n        // fastball, kinda\n        '4-seam': [0, 0, 1, 180, 1000],\n        '2-seam': [20, -20, 0.90, -45, 1200],\n        'cutter': [-25, -20, 0.95, 75, 1200],\n        'sinker': [15, -30, 0.95, -45, 1500],\n\n        // breaking ball\n        'slider': [-50, -35, 0.88, 80, 2000],\n        'fork': [0, -70, 0.87, 20, 500],\n        'curve': [0, -110, 0.82, 10, 2500],\n\n        // change-up\n        'change': [0, -10, 0.86, -15, 1000]\n    },\n    selectRandomPitch: function selectRandomPitch() {\n        return ['4-seam', '2-seam', 'cutter', 'sinker', 'slider', 'fork', 'curve', 'change'][Math.floor(Math.random() * 8)];\n    }\n};\n\nexports.helper = helper;\n\n},{}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar text = function text(phrase, override) {\n    if (!text.mode) text.mode = 'n';\n    var string = ({\n        n: {\n            empty: '-',\n            ' 1st': '1番',\n            ' 2nd': '2番',\n            ' 3rd': '3番',\n            ' 4th': '4番',\n            ' 5th': '5番',\n            ' 6th': '6番',\n            ' 7th': '7番',\n            ' 8th': '8番',\n            ' 9th': '9番',\n            'Now batting': '次のバッター',\n            'way outside': '相当外角',\n            'outside': '外角',\n            'inside': '内角',\n            'way inside': '相当内角',\n            'way low': '相当低め',\n            'low': '低め',\n            'high': '高め',\n            'way high': '相当高め',\n            'down the middle': '真ん中',\n            'first baseman': 'ファースト',\n            'second baseman': 'セカンド',\n            'third baseman': 'サード',\n            'shortstop': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left fielder': 'レフト',\n            'center fielder': 'センター',\n            'right fielder': 'ライト',\n            'Strike.': 'ストライク。',\n            'Ball.': 'ボール。',\n            'Fouled off.': 'ファウル。',\n            'In play.': 'インプレー。',\n            'Swinging strike.': '空振り。',\n            ' outs': 'アウト',\n            ' out': 'アウト',\n            '4-seam': 'ストレート',\n            '2-seam': 'シュート',\n            'slider': 'スライダー',\n            'fork': 'フォーク',\n            'cutter': 'カット',\n            'sinker': 'シンカー',\n            'curve': 'カーブ',\n            'change': 'チェンジ',\n            ' struck out looking.': '、見逃し三振。',\n            ' walked.': '、フォアボール。',\n            ' struck out swinging.': '、空振り三振。',\n            'Previous: ': '前：',\n            'looks like: ': '予想',\n            'breaking ball': '変化球',\n            'fastball': 'ストレート',\n            'Batting, ': '打球',\n            'Catching, pitch selection': '捕球選択',\n            'Season': '記録',\n            'Game': '今試合',\n            'Pitch': '球',\n            'Control': '制球',\n            'Velocity': '速度',\n            'Break': '変化',\n            'At Bat': 'バッター',\n            'On Deck': '次バッター',\n            'Eye :': '目',\n            'Power :': '力',\n            'Speed :': '速',\n            'Up to Bat': '打席',\n            'Fielding': '守備',\n            'BA': '打率',\n            'OBP': '出塁',\n            'SLG': '長打',\n            'PA': '打席',\n            'H/2B/3B/HR': '安／二／三／本',\n            'H': '安',\n            '2B': '二',\n            '3B': '三',\n            'HR': '本塁打',\n            'RBI': '打点',\n            'R': '得点',\n            'BB': '四球',\n            'SO': '三振',\n\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'Runner on': 'ランナー',\n            'Runners on': 'ランナー',\n            'Bases empty': 'ランナーなし',\n            'base': '塁',\n\n            'Select Language:': '言語',\n            'Run Fast Simulation': 'シミュレーションを試合終了まで行う',\n            'Play Ball!': 'プレーボール',\n            'Spectate the CPU': 'CPU観戦',\n            'Play from the 7th': '７回からプレーする',\n\n            'Throws/Bats': ' ',\n            'LHP': '左投',\n            'RHP': '右投',\n            'LHB': '左打',\n            'RHB': '右打',\n            'L': '左投',\n            'R ': '右投',\n            ' L ': '左打',\n            ' R ': '右打',\n            '#': '背番号',\n\n            'Opponent connected': '相手選手見参',\n            'Click Here': 'ここにクリック',\n            'Play against Team Japan': '日本代表挑戦'\n        },\n        e: {\n            empty: '-',\n            'Season': 'Season'\n        }\n    })[override ? override : text.mode][phrase];\n    return string ? string : phrase;\n};\n\ntext.getBattersEye = function (game) {\n    var eye = {},\n        breaking = Math.abs(game.pitchInFlight.breakDirection[0]) + Math.abs(game.pitchInFlight.breakDirection[1]) > 40;\n    eye.e = text('looks like: ', 'e') + breaking ? text('breaking ball', 'e') : text('fastball', 'e');\n    eye.n = text('looks like: ', 'n') + breaking ? text('breaking ball', 'n') : text('fastball', 'n');\n    return eye;\n};\n\ntext.fielderShortName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': '一',\n            'second': '二',\n            'third': '三',\n            'short': '遊',\n            'pitcher': '投',\n            'catcher': '捕',\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[fielder];\n    }\n    return fielder;\n};\n\ntext.slash = function () {\n    if (text.mode == 'n') {\n        return '・';\n    }\n    return '/';\n};\n\ntext.fielderLongName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'short': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left': 'レフト',\n            'center': 'センター',\n            'right': 'ライト'\n        })[fielder];\n    }\n    return ({\n        first: text('first baseman'),\n        second: text('second baseman'),\n        third: text('third baseman'),\n        short: text('shortstop'),\n        pitcher: text('pitcher'),\n        catcher: text('catcher'),\n        left: text('left fielder'),\n        center: text('center fielder'),\n        right: text('right fielder')\n    })[fielder];\n};\n\ntext.comma = function () {\n    return ({ n: '、', e: ', ' })[text.mode];\n};\ntext.stop = function () {\n    return ({ n: '。', e: '. ' })[text.mode];\n};\n\ntext.namePitch = function (pitch) {\n    if (text.mode == 'e') {\n        return pitch.name.charAt(0).toUpperCase() + pitch.name.slice(1);\n    }\n    if (text.mode == 'n') {\n        return text(pitch.name);\n    }\n};\n\ntext.contactResult = function (batter, fielder, bases, outBy, sacrificeAdvances, out) {\n    var statement = '';\n    var infield = ['left', 'center', 'right'].indexOf(fielder) < 0;\n    var doublePlay = out.doublePlay;\n    if (text.mode == 'e') {\n        statement += batter;\n        if (outBy) {\n            switch (outBy) {\n                case 'fieldersChoice':\n                    play = out.length === 2 ? 'double play ' : '';\n                    statement += ' reached on a fielder\\'s choice ' + play + 'by ' + text.fielderShortName(fielder);\n                    break;\n                case 'line':\n                    statement += ' lined out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'fly':\n                    statement += ' flew out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'error':\n                    statement += ' reached on error by ' + text.fielderShortName(fielder);\n                    break;\n                case 'pop':\n                    statement += ' popped out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'ground':\n                    var play = doublePlay ? 'into a double play by' : 'out to';\n                    statement += ' grounded ' + play + ' ' + text.fielderShortName(fielder);\n                    break;\n                case 'thrown':\n                    play = doublePlay ? ' on a double play' : '';\n                    statement += ' was thrown out by ' + text.fielderShortName(fielder) + play;\n                    break;\n            }\n            if (out.length) {\n                var plural = out.length > 1;\n                var runner = plural ? 'Runners' : 'Runner';\n                var is = plural ? 'are' : 'is';\n                statement += '. ' + runner + ' from ' + text(out.join(text.comma())) + ' ' + is + ' out';\n            }\n        } else {\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += ' reached on an infield hit to ' + text.fielderShortName(fielder);\n                    } else {\n                        statement += ' reached on a single to ' + text.fielderShortName(fielder);\n                    }\n                    break;\n                case 2:\n                    statement += ' doubled past ' + text.fielderShortName(fielder);\n                    break;\n                case 3:\n                    statement += ' tripled past ' + text.fielderShortName(fielder);\n                    break;\n                case 4:\n                    statement += ' homered to ' + text.fielderShortName(fielder);\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += text.stop() + 'Runner on third scores';\n                } else {\n                    statement += text.stop() + 'Runner on ' + base + ' advances';\n                }\n            });\n        }\n        statement += text.stop();\n    }\n    if (text.mode == 'n') {\n        var stop = text.stop();\n        statement += batter + 'は';\n        if (outBy) {\n            var fielderLong = text.fielderLongName(fielder);\n            fielder = text.fielderShortName(fielder);\n            switch (outBy) {\n                case 'fieldersChoice':\n                    statement += '野選(' + fielder + ')で出塁';\n                    break;\n                case 'line':\n                    statement += fielder + '直';\n                    break;\n                case 'fly':\n                    statement += fielder + '飛';\n                    break;\n                case 'error':\n                    statement += 'エラー(' + fielder + ')で出塁';\n                    break;\n                case 'pop':\n                    statement += 'ポップフライで' + fielder + '飛';\n                    break;\n                case 'ground':\n                    statement += fielderLong + 'ゴロに封殺';\n                    break;\n                case 'thrown':\n                    statement += fielder + 'ゴロ';\n                    break;\n            }\n            if (out.length) {\n                statement += '。' + out.map(function (runner) {\n                    return text(runner);\n                }).join(text.comma()) + 'ランナーはアウト';\n            }\n            if (doublePlay) {\n                statement += '。ゲッツー';\n            }\n        } else {\n            fielder = text.fielderShortName(fielder);\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += '内野安打' + '(' + fielder + ')' + 'で出塁';\n                    } else {\n                        statement += '安打(' + fielder + ')' + 'で出塁';\n                    }\n                    break;\n                case 2:\n                    statement += '二塁打（' + fielder + '）で出塁';\n                    break;\n                case 3:\n                    statement += '三塁打（' + fielder + '）で出塁';\n                    break;\n                case 4:\n                    statement += '本塁打（' + fielder + '）';\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += stop + 'サードランナーホームイン';\n                } else {\n                    statement += stop + text(base) + 'ランナー進塁';\n                }\n            });\n        }\n        statement += stop;\n    }\n    return statement;\n};\n\nexports.text = text;\n\n},{}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballNamespace = require('baseball/namespace');\n\nif (typeof window == 'object') {\n    window.Baseball = _baseballNamespace.Baseball;\n}\n\nexports.Baseball = _baseballNamespace.Baseball;\n\n},{\"baseball/namespace\":35}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballTeamsProvider = require('baseball/Teams/Provider');\n\nvar Baseball = {};\n\nBaseball.model = {};\nBaseball.model.Game = Baseball.Game = _baseballModelGame.Game;\nBaseball.model.Player = Baseball.Player = _baseballModelPlayer.Player;\nBaseball.model.Team = Baseball.Team = _baseballModelTeam.Team;\n\nBaseball.service = {};\nBaseball.service.Animator = _baseballServices_services.Animator;\nBaseball.service.Distribution = _baseballServices_services.Distribution;\nBaseball.service.Iterator = _baseballServices_services.Iterator;\nBaseball.service.Mathinator = _baseballServices_services.Mathinator;\n\nBaseball.util = {};\nBaseball.util.text = _baseballUtility_utils.text;\nBaseball.util.Log = _baseballUtility_utils.Log;\n\nBaseball.teams = {};\nBaseball.teams.Provider = _baseballTeamsProvider.Provider;\n\nexports.Baseball = Baseball;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":25,\"baseball/Teams/Provider\":26,\"baseball/Utility/_utils\":30}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":21,\"baseball/Services/Distribution\":22,\"baseball/Services/Iterator\":23,\"baseball/Services/Mathinator\":24}]},{},[34]);\n","IndexController = function($scope, socket) {\r\n    var text = Baseball.util.text;\r\n    var Game = Baseball.Game;\r\n    var Animator = Baseball.service.Animator;\r\n\r\n    window.s = $scope;\r\n    $scope.t = text;\r\n\r\n    $scope.mode = function(setMode) {\r\n        if (setMode) {\r\n            text.mode = setMode;\r\n        }\r\n        return text.mode;\r\n    };\r\n\r\n    $scope.teamJapan = function() {\r\n        var provider = new Baseball.teams.Provider;\r\n        provider.assignTeam($scope.y, 'TeamJapan', 'away');\r\n        var game = $scope.y;\r\n        if (game.half === 'top') {\r\n            game.batter = game.teams.away.lineup[game.batter.order];\r\n            game.deck = game.teams.away.lineup[(game.batter.order + 1) % 9];\r\n            game.hole = game.teams.away.lineup[(game.batter.order + 2) % 9];\r\n        } else {\r\n            game.pitcher = game.teams.away.positions.pitcher;\r\n        }\r\n    };\r\n\r\n    $scope.proceedToGame = function(quickMode, spectateCpu) {\r\n        Game.prototype.humanControl = spectateCpu ? 'none' : 'home';\r\n        Game.prototype.quickMode = !!quickMode && quickMode !== 7;\r\n        $scope.y = new Game();\r\n        var game = $scope.y;\r\n        var field = window.location.hash ? window.location.hash.slice(1) : game.teams.home.name + Math.ceil(Math.random()*47);\r\n        if (typeof io !== 'undefined') {\r\n            socket.game = game;\r\n            $scope.socket = io(window.location.hostname + ':64321', {\r\n                reconnection: false\r\n            });\r\n            $scope.socketService = socket;\r\n            socket.socket = $scope.socket;\r\n            socket.start(field);\r\n        }\r\n        window.location.hash = '#' + field;\r\n        s2.y = game;\r\n        bindMethods();\r\n        $('.blocking').remove();\r\n        if (game.humanControl == 'none' && game.quickMode) {\r\n            var n = 0;\r\n            Animator.console = true;\r\n            game.console = true;\r\n            do {\r\n                n++;\r\n                game.simulateInput(function(callback) {\r\n                    typeof callback == 'function' && callback();\r\n                });\r\n            } while (game.stage != 'end' && n < 500);\r\n            Animator.console = game.console = false;\r\n            log('sim ended');\r\n            game.debugOut();\r\n        } else if (game.humanControl == 'none') {\r\n            var scalar = game.quickMode ? 0.05 : 1;\r\n            var auto = setInterval(function() {\r\n                if (game.stage == 'end') {\r\n                    clearInterval(auto);\r\n                }\r\n                game.simulatePitchAndSwing(function(callback) {\r\n                    game.quickMode ? void 0 : $scope.$apply();\r\n                    $scope.updateFlightPath(callback);\r\n                });\r\n            }, scalar*(game.field.hasRunnersOn() ? Animator.TIME_FROM_SET + 2000 : Animator.TIME_FROM_WINDUP + 2000));\r\n        }\r\n        if (quickMode === 7 && spectateCpu === undefined) {\r\n            Game.prototype.quickMode = true;\r\n            do {\r\n                game.simulateInput(function(callback) {\r\n                    typeof callback == 'function' && callback();\r\n                });\r\n            } while (game.stage != 'end' && game.inning != 7);\r\n            log('sim halted in 7th');\r\n            game.debugOut();\r\n            Game.prototype.quickMode = false;\r\n            game.simulateInput(function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        }\r\n        if (game.humanControl == 'away') {\r\n            game.simulateInput(function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        }\r\n        if (game.humanControl == 'home') {\r\n            $scope.showMessage = true;\r\n        }\r\n        if (!quickMode || quickMode === 7) {\r\n            game.timeOfDay.h = '00';\r\n            var delay = 100,\r\n                interval = 150;\r\n            while (delay < (game.startTime.h - game.timeOfDay.h) * interval) {\r\n                setTimeout(function() {\r\n                    game.passMinutes(60);\r\n                    $scope.$apply();\r\n                }, delay);\r\n                delay += interval;\r\n            }\r\n        }\r\n    };\r\n\r\n    var bindMethods = function() {\r\n        var game = $scope.y;\r\n        $scope.holdUpTimeouts = [];\r\n        $scope.expandScoreboard = false;\r\n        $scope.updateFlightPath = Animator.updateFlightPath.bind($scope);\r\n\r\n        // avoid scope cycles, any other easy way?\r\n        var bat = $('.target .swing.stance-indicator');\r\n        var showBat = function(event) {\r\n            if (game.humanBatting()) {\r\n                var offset = $('.target').offset();\r\n                var relativeOffset = {\r\n                    x : event.pageX - offset.left,\r\n                    y : 200 - (event.pageY - offset.top)\r\n                };\r\n                var angle = game.setBatAngle(relativeOffset.x, relativeOffset.y);\r\n                bat.css({\r\n                    top: 200-relativeOffset.y + \"px\",\r\n                    left: relativeOffset.x + \"px\",\r\n                    transform: \"rotate(\" + angle + \"deg) rotateY(\"+(game.batter.bats == \"left\" ? 0 : -0)+\"deg)\"\r\n                });\r\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\r\n                    bat.hide();\r\n                } else {\r\n                    bat.show();\r\n                }\r\n            }\r\n        };\r\n        var glove = $('.target .glove.stance-indicator');\r\n        var showGlove = function(event) {\r\n            if (game.humanPitching()) {\r\n                var offset = $('.target').offset();\r\n                var relativeOffset = {\r\n                    x : event.pageX - offset.left,\r\n                    y : 200 - (event.pageY - offset.top)\r\n                };\r\n                glove.css({\r\n                    top: 200-relativeOffset.y + \"px\",\r\n                    left: relativeOffset.x + \"px\"\r\n                });\r\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\r\n                    glove.hide();\r\n                } else {\r\n                    glove.show();\r\n                }\r\n            }\r\n        };\r\n\r\n        $scope.selectPitch = function(pitchName) {\r\n            if (game.stage == 'pitch') {\r\n                game.pitchInFlight = $.extend({}, game.pitcher.pitching[pitchName]);\r\n                game.pitchInFlight.name = pitchName;\r\n                game.swingResult.looking = true;\r\n            }\r\n        };\r\n        $scope.allowInput = true;\r\n        $scope.holdUp = function() {\r\n            $('.input-area').click();\r\n            $scope.$apply();\r\n        };\r\n        game.startOpponentPitching = function(callback) {\r\n            $scope.updateFlightPath(callback);\r\n        };\r\n        $scope.indicate = function($event) {\r\n            if (!$scope.allowInput) {\r\n                return;\r\n            }\r\n            if (game.pitcher.windingUp) {\r\n                return;\r\n            }\r\n            if (game.humanPitching()) $scope.allowInput = false;\r\n            var offset = $('.target').offset();\r\n            var relativeOffset = {\r\n                x : $event.pageX - offset.left,\r\n                y : 200 - ($event.pageY - offset.top)\r\n            };\r\n            clearTimeout($scope.lastTimeout);\r\n            while ($scope.holdUpTimeouts.length) {\r\n                clearTimeout($scope.holdUpTimeouts.shift());\r\n            }\r\n            $scope.showMessage = false;\r\n            game.receiveInput(relativeOffset.x, relativeOffset.y, function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        };\r\n        $scope.abbreviatePosition = function(position) {\r\n            if (text.mode == 'e') {\r\n                return {\r\n                    pitcher : 'P',\r\n                    catcher : 'C',\r\n                    first : '1B',\r\n                    second : '2B',\r\n                    short : 'SS',\r\n                    third : '3B',\r\n                    left : 'LF',\r\n                    center : 'CF',\r\n                    right : 'RF'\r\n                }[position];\r\n            }\r\n            return text.fielderShortName(position);\r\n        };\r\n        $scope.$watch('y.humanBatting()', function() {\r\n            if ($scope.y.humanBatting()) {\r\n                $('.input-area').mousemove(showBat);\r\n            } else {\r\n                $('.input-area').unbind('mousemove', showBat);\r\n                bat.hide();\r\n            }\r\n        });\r\n        $scope.$watch('y.humanPitching()', function() {\r\n            if ($scope.y.humanPitching()) {\r\n                $('.input-area').mousemove(showGlove);\r\n            } else {\r\n                $('.input-area').unbind('mousemove', showGlove);\r\n                glove.hide();\r\n            }\r\n        });\r\n        var aside = {\r\n            left: $('aside.image-panel.left'),\r\n            right: $('aside.image-panel.right')\r\n        };\r\n        //$scope.$watch('y.playResult', function() {\r\n        //    aside.left.hide();\r\n        //    aside.right.hide();\r\n        //    aside.left.fadeIn(1000, function() {\r\n        //        aside.left.fadeOut(1000);\r\n        //        aside.right.fadeIn(1000, function() {\r\n        //            aside.right.fadeOut(1000);\r\n        //        })\r\n        //    });\r\n        //    $scope.imagePanel = {\r\n        //        left: 'url(./public/images/' + $scope.y.playResult.batter + '.png)',\r\n        //        right: 'url(./public/images/' + $scope.y.playResult.fielder + '.png)'\r\n        //    };\r\n        //});\r\n    };\r\n\r\n\r\n};","var SocketService = function() {\r\n    var Service = function() {};\r\n    var game, socket, NO_OPERATION = function() {},\r\n        animator = Baseball.service.Animator;\r\n    Service.prototype = {\r\n        socket : {},\r\n        game : {},\r\n        connected : false,\r\n        start : function(key) {\r\n            game = this.game;\r\n            socket = this.socket;\r\n            game.opponentService = this;\r\n            this.connected = socket.connected;\r\n            this.on();\r\n            socket.emit('register', key);\r\n            socket.on('connect_failed reconnect_failed', function() {\r\n                console.log('connection unavailable');\r\n            });\r\n        },\r\n        on : function() {\r\n            var giraffe = this;\r\n            socket.on('register', this.register);\r\n            socket.on('connect reconnect', function() {\r\n                giraffe.connected = true;\r\n            });\r\n            socket.on('disconnect', function() {\r\n                giraffe.connected = false;\r\n            });\r\n            socket.on('pitch', function(pitch) {\r\n                //console.log('receive', 'pitch', pitch);\r\n                game.thePitch(0, 0, NO_OPERATION, pitch);\r\n                var scope = window.s;\r\n                animator.updateFlightPath.bind(scope)();\r\n            });\r\n            socket.on('swing', function(swing) {\r\n                //console.log('receive', 'swing', swing);\r\n                game.theSwing(0, 0, NO_OPERATION, swing);\r\n                var scope = window.s;\r\n                animator.updateFlightPath.bind(scope)(function() {\r\n                    if (swing.contact) {\r\n                        animator.animateFieldingTrajectory(game);\r\n                    }\r\n                });\r\n            });\r\n            socket.on('partner_disconnect', function() {\r\n                console.log('The opponent has disconnected');\r\n                game.opponentConnected = false;\r\n                var scope = window.s;\r\n                scope.$digest();\r\n            });\r\n            socket.on('partner_connect', function() {\r\n                game.opponentConnected = true;\r\n                var scope = window.s;\r\n                scope.$digest();\r\n            });\r\n            socket.on('opponent_taking_field', function() {\r\n                console.log('A challenger has appeared! Sending game data.');\r\n                socket.emit('game_data', game.toData());\r\n            });\r\n            socket.on('game_data', function(data) {\r\n                game.fromData(data);\r\n                var scope = window.s;\r\n                scope.$apply();\r\n            });\r\n            socket.on('field_in_use', function() {\r\n                game.opponentConnected = false;\r\n            });\r\n        },\r\n        off : function() {\r\n            socket.on('register', NO_OPERATION);\r\n        },\r\n        register: function(data) {\r\n            console.log(data);\r\n            if (data === 'away') {\r\n                game.humanControl = 'away';\r\n            }\r\n            socket.on('register', NO_OPERATION);\r\n        },\r\n        emitPitch : function(pitch) {\r\n            //console.log('emit', 'pitch', pitch);\r\n            socket.emit('pitch', pitch);\r\n        },\r\n        emitSwing : function(swing) {\r\n            //console.log('emit', 'swing', swing);\r\n            socket.emit('swing', swing);\r\n        },\r\n        swing : function() {\r\n\r\n        },\r\n        pitch : function() {\r\n\r\n        }\r\n    };\r\n    return new Service;\r\n};","BattersDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/batters.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","BatteryDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/battery.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","FieldDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/field.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","RatingBlockDirective = function() {\r\n    return {\r\n        scope: {\r\n            rating: '='\r\n        },\r\n        transclude: true,\r\n        templateUrl: 'public/html/views/directives/ratingBlock.html?cache='+cacheKey,\r\n        link: function(scope) {\r\n        }\r\n    };\r\n};","ScoreboardDirective = function() {\r\n    return {\r\n        scope: {\r\n            game: '=',\r\n            text: '='\r\n        },\r\n        templateUrl: 'public/html/views/directives/scoreboard.html?cache='+cacheKey,\r\n        link: function(scope) {\r\n            window.s2 = scope;\r\n            scope.t = scope.text;\r\n            scope.y = scope.game;\r\n        }\r\n    };\r\n};","var app = angular.module('YakyuuAikoukai', ['directives'])\r\n    .service('socket', SocketService)\r\n    .controller('IndexController', ['$scope', 'socket', IndexController]);\r\n\r\napp.config(function($interpolateProvider) {\r\n    $interpolateProvider.startSymbol('{{');\r\n    $interpolateProvider.endSymbol('}}');\r\n});\r\n\r\ncacheKey = Math.floor(Math.random()*1500);\r\n\r\nangular.module('directives', [])\r\n    .directive('scoreboard', ScoreboardDirective)\r\n    .directive('batters', BattersDirective)\r\n    .directive('battery', BatteryDirective)\r\n    .directive('field', FieldDirective)\r\n    .directive('ratingBlock', RatingBlockDirective);"],"sourceRoot":"/source/"}