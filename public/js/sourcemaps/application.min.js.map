{"version":3,"sources":["bundle.js","IndexController.js","SocketService.js","battersData.js","batteryData.js","field.js","ratingBlock.js","scoreboard.js","application.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_baseballUtilityLog","AtBat","text","this","infield","indexOf","INFIELD_HIT_INDICATOR","replace","split","RBI_INDICATOR","rbi","log","Log","beneficial","WALK","SINGLE","HOMERUN","DOUBLE","TRIPLE","SACRIFICE","REACHED_ON_ERROR","constructor","identifier","baseball/Utility/Log",2,"_baseballModelPlayer","_baseballServices_services","Field","game","init","first","second","third","hasRunnersOn","Player","determineSwingContactResult","swing","x","y","eye","batter","skill","offense","angles","Mathinator","getSplayAndFlyAngle","angle","splayAngle","splay","flyAngle","fly","power","bonus","landingDistance","Distribution","Math","abs","foul","fielder","findFielder","min","travelDistance","sacrificeAdvances","half","teams","home","positions","away","fatigue","error","fieldingEase","defense","fielding","throwingEase","throwing","fielderTravel","getPolarDistance","interceptRating","speed","caught","umpire","count","outs","sacrificeThrowInTime","fielderReturnDelay","getBaseRunningTime","push","bases","thrownOut","fieldingReturnDelay","fieldingDelay","outfielder","left","center","right","baseRunningTime","random","fieldersChoice","fielders","team","force","forcePlaySituation","additionalOuts","throwingDelay","infieldThrowDelay","catcher","doublePlay","firstOut","swingResult","Animator","console","animateFieldingTrajectory","horizontalVelocity","cos","PI","fielderLateralReachDegrees","fielderArcPosition","pitcher","short","b","fieldingTest","distance","data","fielderCandidates","fielderSelectionTest","aggregateFieldingTest","tally","distances","false","selections","returnFielder","minDistance","giraffe","Iterator","each","position","spot","thisDistance","baseball/Model/Player","baseball/Services/_services",3,"_baseballModelField","_baseballModelTeam","_baseballModelUmpire","_baseballUtility_utils","Game","m","gamesIntoSeason","humanControl","quickMode","debug","startTime","h","slice","timeOfDay","mode","floor","field","Team","helper","name","pickName","Umpire","humanPitching","stage","autoPitchSelect","passMinutes","minutes","parseInt","setLuminosity","getInning","inning","toUpperCase","humanBatting","end","R","getName","stats","pitching","W","L","note","simulateInput","callback","pitchTarget","autoPitch","autoSwing","simulatePitchAndSwing","setTimeout","TIME_FROM_SET","TIME_FROM_WINDUP","receiveInput","thePitch","theSwing","pitchNames","keys","pitchName","pitch","pitchInFlight","windingUp","$","addClass","windup","css","pitchLocation","animate","width","removeClass","deceptiveX","deceptiveY","convergence","convergenceSum","balls","strikes","centralizedNumber","cpuSwing","swingProbability","swingLikelihood","opponentConnected","waitingCallback","awaitPitch","opponentService","emitSwing","awaitSwing","emitPitch","inFlight","override","breakDirection","pitchDefinitions","battersEye","getBattersEye","control","pitchControl","breakEffect","notePitch","setBatAngle","recalculation","getAngularOffset","precision","looking","contact","strike","max","sqrt","pow","noteSwing","result","makeCall","emit","startOpponentPitching","origin","bats","battingAngle","debugOut","filter","PO","map","hitters","lineup","concat","atBats","getAtBats","ab","LO","FO","GO","GIDP","SO","BB","SAC","FC","table","scoreboard","toData","players","deck","hole","nameJ","says","player","serialize","pitchRecord","record","fromData","playerJson","index","playerData","JSON","parse","side","resetStats","stabilizeShortRecord","velocity","break","playResult","showPlayResultPanels","batterOutcomes","atBat","pop","fielderOutcomes","pitchSelect",4,5,6,7,8,9,"resetTally","H","E","baseball/Model/Field","baseball/Model/Team","baseball/Model/Umpire","baseball/Utility/_utils","Manager","makeLineup","jerseyNumber","selectForSkill","bench","number","order","pool","skillset","requiredThrowingHandedness","selection","rating","skills","cursor","property","shift","_baseballModel_models","hero","averaging","randomizeSkills","surnameKey","surnames","nameKey","names","jSurname","surnamesJ","jGivenName","namesJ","spaceName","surname","surnameJ","stringify","atBatObjects","IP","ER","GS","arguments","undefined","randBetween","total","isNaN","pa","paRemaining","bb","so","doubles","triples","hr","hbp","sac","chances","pitches","K","getK9","getERA","ERA","HR","WHIP","getWHIP","batting","getBA","getBABIP","ba","getOBP","obp","getSLG","slg","2b","3b","A","K9","item","recordRBI","recordInfieldHit","allPitches","randValue","isPitching","catching","slider","fork","cutter","sinker","curve","change","reduce","prev","current","getSurname","getUniformNumber","getOrder","baseball/Model/_models","_baseballModelManager","bullpen","manager","j","teamNameIndex","teamNames","teamNamesJ","nowBatting","expanded","baseball/Model/Manager","playBall","batterRunner","noteBatter","advanceRunners","LINEOUT","FLYOUT","newBatter","runner","FIELDERS_CHOICE","reachBase","GROUNDOUT","hitByPitch","STRIKEOUT","changeSides","isWalk","RUN","canAdvance","notePlateAppearanceResult","lastBatter","_baseballModelAtBat","_baseballModelGame","baseball/Model/AtBat","baseball/Model/Game","_meshBall","_meshMound","_meshBase","_meshField","_meshGrass","_meshHomeDirt","_meshBattersEye","_meshWall","_sceneLighting","VERTICAL_CORRECTION","INITIAL_CAMERA_DISTANCE","THREE","AHEAD","Vector3","INITIAL_POSITION","Loop","elementClass","main","window","loop","requestAnimationFrame","bind","panToward","moveToward","moveTarget","objects","renderer","render","scene","camera","getThree","Scene","attach","lighting","addTo","PerspectiveCamera","getAspect","_target","resetCamera","join","Mound","HomeDirt","Grass","BattersEye","Wall","Base","pos","rate","z","bob","removeEventListener","onResize","addEventListener","element","document","getElementsByClassName","innerHTML","WebGLRenderer","alpha","setSize","appendChild","domElement","aspect","fov","offsetWidth","updateProjectionMatrix","HEIGHT","vector","maxIncrement","panSpeed","forAllLoops","lookAt","moveSpeed","panning","setLookTarget","setMoveTarget","moveCamera","fn","background","foreground","ball","Ball","setType","rotate","constructors","./mesh/Ball","./mesh/Base","./mesh/BattersEye","./mesh/Field","./mesh/Grass","./mesh/HomeDirt","./mesh/Mound","./mesh/Wall","./scene/lighting",10,"_Loop","AbstractMesh","add","mesh","splice","remove","WORLD_BASE_Y","../Loop",11,"_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_get","_x","_x2","_x3","_again","object","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_AbstractMesh2","_baseballServicesMathinator","_Indicator","_baseballUtilityHelper","SCALE","_AbstractMesh","trajectory","Array","hasIndicator","breakingTrajectory","getMesh","baseURL","loader","TextureLoader","textureColor","load","textureBump","geometry","SphereGeometry","material","MeshPhongMaterial","bumpMap","bumpScale","Mesh","frame","spawnIndicator","detach","type","handednessScalar","rpm","rotationAngle","setRotation","rotation","meshRotation","RPM","RPS","rotationalIncrement","RP60thOfASecond","xComponent","yComponent","sin","indicator","Indicator","top","breakTop","breakLeft","flightTime","getFlightTime","scale","ARC_APPROXIMATION_Y_ADDITIVE","terminus","breakingTerminus","lastPosition","lastBreakingPosition","frames","breakingFrames","frameCount","counter","progress","breakingInfluencePosition","momentumScalar","breakingScalar","scalarSum","breakingPosition","increment","breakingIncrement","pause","dragScalarApproximation","apexHeight","airTime","velocityVerticalComponent","RADIAN","extrema","lastHeight","percent","DEFAULT_RPM","./AbstractMesh","./Indicator","baseball/Services/Mathinator","baseball/Utility/helper",12,"base","MeshLambertMaterial","color","BoxGeometry",13,14,"PlaneGeometry",15,16,17,"CircleGeometry",18,19,"radians","hypotenuse","offset",20,"light","HemisphereLight","sun","DirectionalLight","set","level","intensity",21,"_baseballRenderLoop","TweenMax","renderingMode","beginRender","addStaticMeshes","loadTweenMax","to","from","killAll","HOLD_UP_ALLOWANCE","pitchBreak","updateFlightPath","renderFlightPath","tweenFlightPath","$scope","$baseballs","flightSpeed","originTop","originLeft","henka","quarter","pitchTransition","targetTransition","transitions","lastTimeout","allowInput","$apply","holdUpTimeouts","holdUp","_ball","derivePitchingTrajectory","tweenFieldingTrajectory","renderFieldingTrajectory","splayOnly","linearApproximateDragScalar","scalar","memory","bounding","mathinator","transitionalTrajectory","show","time","transitionalCatcherPerspectiveTrajectory","deriveTrajectory","hasOwnProperty","baseball/Render/Loop","baseball/services/_services",22,"chance","effect","actual","ump",23,"collection",24,"square","SPLAY_INDICATOR_LEFT","xScalar","yScalar","originalAngle","atan","angledY","angledX","step","givenApexHeight","givenDistance","givenSplayAngle","bottom","padding","borderWidth","radian","apexRatio","delay","ease","Power4","easeOut","Linear","easeNone","givenOrigin","height","currentDistance","projection","translateSwingResultToStylePosition","maxPadding","maxBorderWidth","_top","_left","transform","intercept","direction","velocityRating",25,"_baseballServicesAnimator","_baseballServicesDistribution","_baseballServicesIterator","baseball/Services/Animator","baseball/Services/Distribution","baseball/Services/Iterator",26,"_TeamJapan","Provider","special","TeamJapan","samurai","./TeamJapan",27,"_baseballTeamsTrainer","darvish","johjima","ogasawara","nishioka","kawasaki","murata","matsui","ichiro","inaba","matsuzaka","fukudome","aoki","abe","iwamura","coach","Trainer","makePlayer","baseball/Teams/Trainer",28,"throws",29,"_baseballUtilityText","stabilized","shortRecord","GITP","rec","rec2","_note","noteJ","unshift","async","getBatter",0,"longFormFielder","comma","recordJ","getPitchLocationDescription","batterIsLefty","say","noComma","noComma2","namePitch","stop","broadcastCount","justOuts","lastOuts","broadcastScore","broadcastRunners","runners","runnerCount","getSwing","getPlateAppearanceResult","out","outBy","contactResult","statement","prevJ","resultJ","pointer","baseball/Utility/text",30,"_baseballUtilityData","baseball/Utility/data",31,32,"4-seam","2-seam","selectRandomPitch",33,"phrase","string","empty"," 1st"," 2nd"," 3rd"," 4th"," 5th"," 6th"," 7th"," 8th"," 9th","Now batting","way outside","outside","inside","way inside","way low","low","high","way high","down the middle","first baseman","second baseman","third baseman","shortstop","left fielder","center fielder","right fielder","Strike.","Ball.","Fouled off.","In play.","Swinging strike."," outs"," out"," struck out looking."," walked."," struck out swinging.","Previous: ","looks like: ","breaking ball","fastball","Batting, ","Catching, pitch selection","Season","Pitch","Control","Velocity","Break","At Bat","On Deck","Eye :","Power :","Speed :","Up to Bat","Fielding","BA","OBP","SLG","PA","H/2B/3B/HR","2B","3B","RBI","Runner on","Runners on","Bases empty","Select Language:","Run Fast Simulation","Play Ball!","Spectate the CPU","Play from the 7th","Throws/Bats","LHP","RHP","LHB","RHB","R "," L "," R ","#","Opponent connected","Click Here","Play against Team Japan","breaking","fielderShortName","slash","fielderLongName","charAt","play","plural","is","fielderLong",34,"_baseballNamespace","Baseball","baseball/namespace",35,"_baseballTeamsProvider","model","service","util","baseball/Teams/Provider",36,"IndexController","socket","setMode","teamJapan","provider","assignTeam","proceedToGame","spectateCpu","location","hash","ceil","io","hostname","socketService","start","s2","bindMethods","auto","setInterval","clearInterval","showMessage","interval","expandScoreboard","bat","showBat","event","relativeOffset","pageX","pageY","hide","glove","showGlove","selectPitch","extend","click","indicate","$event","clearTimeout","abbreviatePosition","$watch","mousemove","unbind","SocketService","Service","NO_OPERATION","animator","connected","on","register","scope","$digest","off","BattersDirective","templateUrl","cacheKey","transclude","BatteryDirective","FieldDirective","RatingBlockDirective","link","ScoreboardDirective","app","angular","controller","config","$interpolateProvider","startSymbol","endSymbol","directive"],"mappings":"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","file":"application.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar AtBat = (function () {\n    function AtBat(text) {\n        _classCallCheck(this, AtBat);\n\n        this.infield = text.indexOf(AtBat.prototype.INFIELD_HIT_INDICATOR) > -1 ? AtBat.prototype.INFIELD_HIT_INDICATOR : '';\n        text = text.replace(AtBat.prototype.INFIELD_HIT_INDICATOR, '');\n        this.text = text.split(AtBat.prototype.RBI_INDICATOR)[0];\n        this.rbi = text.split(this.text)[1] + '';\n\n        var log = new _baseballUtilityLog.Log();\n\n        var beneficial = [log.WALK, log.SINGLE, log.HOMERUN, log.DOUBLE, log.TRIPLE, log.SACRIFICE, log.REACHED_ON_ERROR];\n        if (beneficial.indexOf(this.text) > -1) {\n            this.beneficial = true;\n        }\n    }\n\n    _createClass(AtBat, [{\n        key: 'toString',\n        value: function toString() {\n            return '' + this.infield + this.text + this.rbi;\n        }\n    }]);\n\n    return AtBat;\n})();\n\nAtBat.prototype.constructor = AtBat;\nAtBat.prototype.identifier = 'AtBat';\nAtBat.prototype.INFIELD_HIT_INDICATOR = '';\nAtBat.prototype.RBI_INDICATOR = '+';\n\nexports.AtBat = AtBat;\n\n},{\"baseball/Utility/Log\":29}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\n/**\r\n * The baseball field tracks the ball's movement, fielders, and what runners are on\r\n * @param game\r\n * @constructor\r\n */\nvar Field = function Field(game) {\n    this.init(game);\n};\n\nField.prototype = {\n    constructor: Field,\n    init: function init(game) {\n        this.game = game;\n        this.first = null;\n        this.second = null;\n        this.third = null;\n    },\n    /**\r\n     * @returns {boolean}\r\n     */\n    hasRunnersOn: function hasRunnersOn() {\n        return this.first instanceof _baseballModelPlayer.Player || this.second instanceof _baseballModelPlayer.Player || this.third instanceof _baseballModelPlayer.Player;\n    },\n    /**\r\n     * @param swing\r\n     * @returns {object}\r\n     */\n    determineSwingContactResult: function determineSwingContactResult(swing) {\n        var x = swing.x,\n            y = swing.y;\n        var eye = this.game.batter.skill.offense.eye;\n        /**\r\n         * The initial splay angle is 90 degrees for hitting up the middle and 0\r\n         * for a hard foul left, 180 is a foul right. Depending on the angle of the bat,\r\n         * a y-axis displacement which would otherwise pop or ground the ball can instead\r\n         * increase the left/right effect.\r\n         */\n        var angles = _baseballServices_services.Mathinator.getSplayAndFlyAngle(x, y, swing.angle, eye);\n        var splayAngle = angles.splay;\n\n        var flyAngle = angles.fly;\n        var power = this.game.batter.skill.offense.power + (this.game.batter.eye.bonus || 0) / 5;\n        var landingDistance = _baseballServices_services.Distribution.landingDistance(power, flyAngle);\n        if (flyAngle < 0 && landingDistance > 95) {\n            landingDistance = (landingDistance - 95) / 4 + 95;\n        }\n        var game = this.game;\n\n        if (Math.abs(splayAngle) > 50) swing.foul = true;\n        swing.fielder = this.findFielder(splayAngle, landingDistance, power, flyAngle);\n        if (['first', 'second', 'short', 'third'].indexOf(swing.fielder) > -1) {\n            landingDistance = Math.min(landingDistance, 110); // stopped by infielder\n        }\n        swing.travelDistance = landingDistance;\n        swing.flyAngle = flyAngle;\n        /**\r\n         * the splay for the result is adjusted to 0 being up the middle and negatives being left field\r\n         * @type {number}\r\n         */\n        swing.splay = splayAngle;\n        swing.sacrificeAdvances = [];\n\n        if (swing.fielder) {\n            var fielder = game.half == 'top' ? game.teams.home.positions[swing.fielder] : game.teams.away.positions[swing.fielder];\n            fielder.fatigue += 4;\n            swing.error = false;\n            var fieldingEase = fielder.skill.defense.fielding / 100,\n                throwingEase = fielder.skill.defense.throwing / 100;\n            //reach the batted ball?\n            swing.fielderTravel = this.getPolarDistance(this.positions[swing.fielder], [splayAngle + 90, landingDistance]);\n            var interceptRating = fielder.skill.defense.speed * 1.8 + flyAngle * 2.4 - swing.fielderTravel * 1.55 - 15;\n            if (interceptRating > 0 && flyAngle > 4) {\n                //caught cleanly?\n                if (_baseballServices_services.Distribution.error(fielder)) {\n                    //error\n                    fieldingEase *= 0.5;\n                    swing.error = true;\n                    swing.caught = false;\n                } else {\n                    swing.caught = true;\n                    if (game.umpire.count.outs < 2) {\n                        var sacrificeThrowInTime = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, 100);\n                        // todo ran into outfield assist\n                        if (this.first && sacrificeThrowInTime > this.first.getBaseRunningTime() + 4.5) {\n                            swing.sacrificeAdvances.push('first');\n                        }\n                        if (this.second && sacrificeThrowInTime > this.second.getBaseRunningTime()) {\n                            swing.sacrificeAdvances.push('second');\n                        }\n                        if (this.third && sacrificeThrowInTime > this.third.getBaseRunningTime() - 0.5) {\n                            swing.sacrificeAdvances.push('third');\n                        }\n                    }\n                }\n            } else {\n                swing.caught = false;\n            }\n\n            if (!swing.caught) {\n                swing.bases = 0;\n                swing.thrownOut = false; // default value\n                var fieldingReturnDelay = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, interceptRating);\n                swing.fieldingDelay = fieldingReturnDelay;\n                swing.outfielder = ({ 'left': 1, 'center': 1, 'right': 1 })[swing.fielder] == 1;\n                var speed = game.batter.skill.offense.speed,\n                    baseRunningTime = _baseballServices_services.Mathinator.baseRunningTime(speed);\n\n                if (swing.outfielder) {\n                    swing.bases = 1;\n                    baseRunningTime *= 0.95;\n                    fieldingReturnDelay -= baseRunningTime;\n                    eye = game.batter.skill.offense.eye / 400;\n\n                    while (fieldingReturnDelay > baseRunningTime && swing.bases < 3 && Math.random() < 0.25 + eye) {\n                        baseRunningTime *= 0.95;\n                        swing.bases++;\n                        fieldingReturnDelay -= baseRunningTime;\n                    }\n                } else {\n                    var first = this.first,\n                        second = this.second,\n                        third = this.third;\n                    swing.fieldersChoice = null;\n                    swing.bases = fieldingReturnDelay >= baseRunningTime + 1 ? 1 : 0;\n                    if (first && fieldingReturnDelay < first.getBaseRunningTime()) swing.fieldersChoice = 'first';\n                    if (first && second && fieldingReturnDelay < second.getBaseRunningTime() + 0.6) swing.fieldersChoice = 'second';\n                    if (third && fieldingReturnDelay < third.getBaseRunningTime()) swing.fieldersChoice = 'third';\n                    // double play\n                    var outs = game.umpire.count.outs;\n                    if (swing.fieldersChoice) {\n                        outs++;\n                        swing.bases = 1;\n                        var fielders = fielder.team.positions;\n                        var force = this.forcePlaySituation();\n                        if (force) {\n                            var additionalOuts = [];\n                            var throwingDelay = fieldingReturnDelay;\n                            if (third && force === 'third' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher) + throwingDelay < second.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher);\n                                fielders.catcher.fatigue += 4;\n                                additionalOuts.push('second');\n                                outs++;\n                                force = 'second';\n                            }\n                            if (second && force === 'second' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third) + throwingDelay < first.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third);\n                                fielders.third.fatigue += 4;\n                                additionalOuts.push('first');\n                                outs++;\n                                force = 'first';\n                            }\n                            if (first && force === 'first' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second) + throwingDelay < game.batter.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second);\n                                fielders.second.fatigue += 4;\n                                additionalOuts.push('batter');\n                                swing.bases = 0;\n                                // todo (or shortstop)\n                                outs++;\n                            }\n                            if (outs - game.umpire.count.outs === 2) {\n                                swing.doublePlay = true;\n                            }\n                            if (additionalOuts.length) {\n                                swing.additionalOuts = additionalOuts;\n                                swing.firstOut = swing.fieldersChoice;\n                                if (additionalOuts.indexOf('batter') > -1) {\n                                    delete swing.fieldersChoice;\n                                }\n                            }\n                        }\n                        //console.log('DP?', !!this.forcePlaySituation(), 'throwingDelay', throwingDelay,\n                        //    'fielding delay', fieldingReturnDelay, 'runner', game.batter.getBaseRunningTime());\n                        //if (typeof additionalOuts !== 'undefined' && additionalOuts.length) {\n                        //    console.log('omg dp', additionalOuts);\n                        //}\n                    } else {\n                            delete swing.additionalOuts;\n                            delete swing.firstOut;\n                            delete swing.doublePlay;\n                            delete swing.fieldersChoice;\n                        }\n                }\n                swing.thrownOut = swing.bases == 0;\n                if (swing.thrownOut) {\n                    swing.thrownOut = true;\n                    swing.error = false;\n                }\n            }\n        } else {\n            if (Math.abs(splayAngle) < 45 && landingDistance > 300) {\n                swing.bases = 4;\n            } else {\n                swing.foul = true;\n                swing.caught = false;\n            }\n        }\n        this.game.swingResult = swing;\n        if (!_baseballServices_services.Animator.console) {\n            _baseballServices_services.Animator.animateFieldingTrajectory(this.game);\n        }\n    },\n    forcePlaySituation: function forcePlaySituation() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        return first && second && third && 'third' || first && second && 'second' || first && 'first';\n    },\n    //printRunnerNames : function() {\n    //    return [this.first ? this.first.getName() : '', this.second ? this.second.getName() : '', this.third ? this.third.getname() : ''];\n    //},\n    /**\r\n     * @param splayAngle {Number} 0 to 180, apparently\r\n     * @param landingDistance {Number} in feet, up to 310 or so\r\n     * @param power {Number} 0-100\r\n     * @param flyAngle {Number} roughly -15 to 90\r\n     * @returns {string|boolean}\r\n     */\n    findFielder: function findFielder(splayAngle, landingDistance, power, flyAngle) {\n        var angle = splayAngle; // 0 is up the middle, clockwise increasing\n\n        var fielder;\n\n        if (Math.abs(angle) > 50) return false; // foul\n        if (landingDistance < 10 && landingDistance > -20) {\n            return 'catcher';\n        } else if (landingDistance >= 10 && landingDistance < 45 && Math.abs(angle) < 5) {\n            return 'pitcher';\n        }\n\n        var infield = landingDistance < 145 - Math.abs(angle) / 90 * 50;\n        if (flyAngle < 12) {\n            // 7 degrees straight would fly over the infielder, but add some for arc\n            var horizontalVelocity = Math.cos(flyAngle / 180 * Math.PI) * (85 + power / 100 * 10); // mph toward infielder\n            if (flyAngle < 0) horizontalVelocity *= 0.5; // velocity loss on bounce\n            var fielderLateralReachDegrees = 1 + 22.5 * (100 - horizontalVelocity) / 100; // up to 90/4 = 22.5\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n            var fielderArcPosition = this.positions[fielder][0] - 90;\n            // a good infielder can field a hard hit grounder even with a high terminal distance\n            infield = Math.abs(angle - fielderArcPosition) < fielderLateralReachDegrees;\n        }\n\n        // ball in the air to infielder\n        if (infield && landingDistance > 15) {\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n        } else if (landingDistance < 310) {\n            // past the infield or fly ball to outfielder\n            if (angle < -15) {\n                fielder = 'left';\n            } else if (angle < 16) {\n                fielder = 'center';\n            } else {\n                fielder = 'right';\n            }\n        } else {\n            fielder = false;\n        }\n        return fielder;\n    },\n    positions: {\n        pitcher: [90, 66],\n        catcher: [0, 0],\n        first: [90 + 45 - 7, 98],\n        second: [90 + 12.5, 130],\n        short: [90 - 12.5, 130],\n        third: [90 - 45 + 7, 98],\n        left: [45 + 14, 280],\n        center: [90, 280],\n        right: [135 - 14, 280]\n    },\n    getPolarDistance: function getPolarDistance(a, b) {\n        return _baseballServices_services.Mathinator.getPolarDistance(a, b);\n    },\n    fieldingTest: function fieldingTest() {\n        var angle = Math.random() * 90 + 45;\n        var distance = Math.random() * 320;\n        var fielder = this.findFielder(angle, distance);\n        var data = {};\n        if (fielder) {\n            var fielderCandidates = this.fielderSelectionTest(angle, distance, true);\n            data.fielder = fielderCandidates[1];\n            data[fielderCandidates[0]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[0]][0], this.positions[fielderCandidates[0]][1]]);\n            data[fielderCandidates[1]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[1]][0], this.positions[fielderCandidates[1]][1]]);\n            return data;\n        }\n    },\n    aggregateFieldingTest: function aggregateFieldingTest() {\n        var fielders = {\n            pitcher: { tally: 0, distances: [] },\n            catcher: { tally: 0, distances: [] },\n            first: { tally: 0, distances: [] },\n            second: { tally: 0, distances: [] },\n            short: { tally: 0, distances: [] },\n            third: { tally: 0, distances: [] },\n            left: { tally: 0, distances: [] },\n            center: { tally: 0, distances: [] },\n            right: { tally: 0, distances: [] },\n            'false': { tally: 0, distances: [] }\n        };\n        var selections = [];\n        for (var i = 0; i < 1000; i++) {\n            var angle = Math.random() * 90 + 45;\n            var distance = Math.random() * 320;\n            var fielder = this.findFielder(angle, distance);\n            fielders[fielder].tally++;\n            if (fielder) {\n                fielders[fielder].distances.push(this.getPolarDistance([angle, distance], [this.positions[fielder][0], this.positions[fielder][1]]));\n            }\n            selections.push([angle, distance]);\n            selections.push(this.fielderSelectionTest(angle, distance, true));\n        }\n        return [fielders, selections];\n    },\n    fielderSelectionTest: function fielderSelectionTest(angle, distance, returnFielder) {\n        var distances = [];\n        var minDistance = 300;\n        var giraffe = this;\n        var fielder = false;\n        Iterator.each(this.positions, function (position, spot) {\n            var thisDistance = giraffe.getPolarDistance([angle, distance], spot);\n            distances[thisDistance] = position;\n            if (minDistance > thisDistance) {\n                minDistance = thisDistance;\n                fielder = position;\n            }\n        });\n        return returnFielder ? [fielder, this.findFielder(angle, distance)] : distances;\n    }\n};\n\nexports.Field = Field;\n\n},{\"baseball/Model/Player\":5,\"baseball/Services/_services\":25}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Game = function Game(m) {\n    this.init(m);\n};\n\nGame.prototype = {\n    constructor: Game,\n    gamesIntoSeason: 0,\n    humanControl: 'home', //home, away, both, none\n    console: false,\n    quickMode: true,\n    debug: [],\n    pitcher: {}, // Player&\n    batter: {}, // Player&\n    init: function init(m) {\n        this.startTime = {\n            h: ('00' + (Math.random() * 8 + 10 | 0)).slice(-2),\n            m: ('00' + (Math.random() * 60 | 0)).slice(-2)\n        };\n        this.timeOfDay = {\n            h: this.startTime.h,\n            m: this.startTime.m\n        };\n        if (m) _baseballUtility_utils.text.mode = m;\n        this.gamesIntoSeason = 1 + Math.floor(Math.random() * 142);\n        this.field = new _baseballModelField.Field(this);\n        this.teams.away = new _baseballModelTeam.Team(this);\n        this.teams.home = new _baseballModelTeam.Team(this);\n        this.log = new _baseballUtilityLog.Log();\n        this.log.game = this;\n        this.debug = [];\n        this.helper = _baseballUtility_utils.helper;\n        while (this.teams.away.name == this.teams.home.name) {\n            this.teams.away.pickName();\n        }\n        this.umpire = new _baseballModelUmpire.Umpire(this);\n        if (this.humanPitching()) {\n            this.stage = 'pitch';\n        }\n        this.autoPitchSelect();\n        _baseballServices_services.Animator.init();\n    },\n    passMinutes: function passMinutes(minutes) {\n        this.timeOfDay.m = ('00' + (parseInt(this.timeOfDay.m) + parseInt(minutes))).slice(-2);\n        if (parseInt(this.timeOfDay.m) >= 60) {\n            this.timeOfDay.m = ('00' + parseInt(this.timeOfDay.m) % 60).slice(-2);\n            this.timeOfDay.h = ('00' + (parseInt(this.timeOfDay.h) + 1) % 24).slice(-2);\n        }\n        _baseballServices_services.Animator.setLuminosity(1 - Math.abs(12 - this.timeOfDay.h) / 12);\n    },\n    getInning: function getInning() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.inning + (this.half == 'top' ? 'オモテ' : 'ウラ') : this.half.toUpperCase() + ' ' + this.inning;\n    },\n    humanBatting: function humanBatting() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'away';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'home';\n        }\n    },\n    humanPitching: function humanPitching() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'home';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'away';\n        }\n    },\n    end: function end() {\n        this.stage = 'end';\n        var e, n;\n        e = this.tally.home.R > this.tally.away.R ? 'Home team wins!' : this.tally.home.R == this.tally.away.R ? 'You tied. Yes, you can do that.' : 'Visitors win!';\n        n = this.tally.home.R > this.tally.away.R ? this.teams.home.getName() + 'の勝利' : this.tally.home.R == this.tally.away.R ? '引き分け' : this.teams.away.getName() + 'の勝利';\n        if (this.tally.home.R > this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.W++;\n            this.teams.away.positions.pitcher.stats.pitching.L++;\n        } else if (this.tally.home.R < this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.L++;\n            this.teams.away.positions.pitcher.stats.pitching.W++;\n        }\n        this.log.note(e, n);\n        this.log.note('Reload to play again', 'リロるは次の試合へ');\n    },\n    stage: 'pitch', //pitch, swing\n    simulateInput: function simulateInput(callback) {\n        var stage = this.stage,\n            pitchTarget = this.pitchTarget;\n        if (stage == 'end') {\n            return;\n        }\n        if (stage == 'pitch') {\n            this.autoPitch(callback);\n        } else if (stage == 'swing') {\n            if (typeof pitchTarget != 'object') {\n                this.pitchTarget = { x: 100, y: 100 };\n            }\n            this.autoSwing(this.pitchTarget.x, this.pitchTarget.y, callback);\n        }\n    },\n    simulatePitchAndSwing: function simulatePitchAndSwing(callback) {\n        if (this.stage == 'end') {\n            return;\n        }\n        this.autoPitch(callback);\n        var giraffe = this;\n        setTimeout(function () {\n            if (typeof giraffe.pitchTarget != 'object') {\n                giraffe.pitchTarget = { x: 100, y: 100 };\n            }\n            giraffe.autoSwing(giraffe.pitchTarget.x, giraffe.pitchTarget.y, function (callback) {\n                callback();\n            });\n        }, giraffe.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET + 1200 : _baseballServices_services.Animator.TIME_FROM_WINDUP + 1200);\n    },\n    /**\r\n     * generically receive click input and decide what to do\r\n     * @param x\r\n     * @param y\r\n     * @param callback\r\n     */\n    receiveInput: function receiveInput(x, y, callback) {\n        if (this.humanControl == 'none') {\n            return;\n        }\n        if (this.stage == 'end') {\n            return;\n        }\n        if (this.stage == 'pitch' && this.humanPitching()) {\n            this.thePitch(x, y, callback);\n        } else if (this.stage == 'swing' && this.humanBatting()) {\n            this.theSwing(x, y, callback);\n        }\n    },\n    autoPitchSelect: function autoPitchSelect() {\n        var pitchNames = Object.keys(this.pitcher.pitching);\n        var pitchName = pitchNames[Math.random() * pitchNames.length | 0];\n        var pitch = this.pitcher.pitching[pitchName];\n        pitch.name = pitchName;\n        this.pitchInFlight = pitch;\n    },\n    autoPitch: function autoPitch(callback) {\n        var pitcher = this.pitcher,\n            giraffe = this;\n        if (this.stage == 'pitch') {\n            this.autoPitchSelect();\n            pitcher.windingUp = true;\n            if (!this.console) {\n                $('.baseball').addClass('hide');\n                var windup = $('.windup');\n                windup.css('width', '100%');\n            }\n            var pitch = _baseballServices_services.Distribution.pitchLocation(),\n                x = pitch.x,\n                y = pitch.y;\n            if (this.quickMode) {\n                this.thePitch(x, y, callback);\n            } else {\n                windup.animate({ width: 0 }, this.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET : _baseballServices_services.Animator.TIME_FROM_WINDUP, function () {\n                    !giraffe.console && $('.baseball.pitch').removeClass('hide');\n                    giraffe.thePitch(x, y, callback);\n                    pitcher.windingUp = false;\n                });\n            }\n        }\n    },\n    autoSwing: function autoSwing(deceptiveX, deceptiveY, callback) {\n        var giraffe = this;\n        var bonus = this.batter.eye.bonus || 0,\n            eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus,\n            convergence,\n            convergenceSum;\n\n        var x = _baseballServices_services.Distribution.centralizedNumber(),\n            y = _baseballServices_services.Distribution.centralizedNumber();\n\n        if (100 * Math.random() < eye) {\n            // identified the break\n            deceptiveX = this.pitchInFlight.x;\n            deceptiveY = this.pitchInFlight.y;\n        }\n\n        if (100 * Math.random() < eye) {\n            // identified the location\n            convergence = eye / 25;\n            convergenceSum = 1 + convergence;\n        } else {\n            convergence = eye / 100;\n            convergenceSum = 1 + convergence;\n        }\n\n        x = (deceptiveX * convergence + x) / convergenceSum;\n        y = (deceptiveY * convergence + y) / convergenceSum;\n\n        this.swingResult.x = _baseballServices_services.Distribution.cpuSwing(x, this.pitchInFlight.x, eye);\n        this.swingResult.y = _baseballServices_services.Distribution.cpuSwing(y, this.pitchInFlight.y, eye * 0.75);\n\n        var swingProbability = _baseballServices_services.Distribution.swingLikelihood(eye, x, y, this.umpire);\n        if (swingProbability < 100 * Math.random()) {\n            x = -20;\n        }\n\n        callback(function () {\n            giraffe.theSwing(x, y);\n        });\n    },\n    opponentConnected: false,\n    waitingCallback: function waitingCallback() {},\n    awaitPitch: function awaitPitch(callback, swingResult) {\n        var giraffe = this;\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitSwing(swingResult);\n        } else {\n            setTimeout(function () {\n                giraffe.autoPitch(callback);\n            }, 4000);\n        }\n    },\n    awaitSwing: function awaitSwing(x, y, callback, pitchInFlight, pitchTarget) {\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitPitch({\n                inFlight: pitchInFlight,\n                target: pitchTarget\n            });\n        } else {\n            this.autoSwing(x, y, callback);\n        }\n    },\n    thePitch: function thePitch(x, y, callback, override) {\n        if (this.stage == 'pitch') {\n            if (override) {\n                this.pitchInFlight = override.inFlight;\n                this.pitchTarget = override.target;\n                callback = this.waitingCallback;\n            } else {\n                this.pitcher.fatigue++;\n                this.pitchTarget.x = x;\n                this.pitchTarget.y = y;\n\n                this.pitchInFlight.breakDirection = this.helper.pitchDefinitions[this.pitchInFlight.name].slice(0, 2);\n                this.battersEye = _baseballUtility_utils.text.getBattersEye(this);\n\n                var control = Math.floor(this.pitchInFlight.control - this.pitcher.fatigue / 2);\n                this.pitchTarget.x = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.x, control);\n                this.pitchTarget.y = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.y, control);\n\n                if (this.pitcher.throws == 'right') this.pitchInFlight.breakDirection[0] *= -1;\n\n                var breakEffect = _baseballServices_services.Distribution.breakEffect(this.pitchInFlight, this.pitcher, this.pitchTarget.x, this.pitchTarget.y);\n\n                this.pitchInFlight.x = breakEffect.x;\n                this.pitchInFlight.y = breakEffect.y;\n            }\n            this.log.notePitch(this.pitchInFlight, this.batter);\n\n            this.stage = 'swing';\n            if (this.humanControl != 'none' && (this.humanControl == 'both' || this.humanBatting())) {\n                callback();\n            } else {\n                this.awaitSwing(x, y, callback, this.pitchInFlight, this.pitchTarget);\n            }\n        }\n    },\n    battersEye: {\n        e: '',\n        n: ''\n    },\n    theSwing: function theSwing(x, y, callback, override) {\n        if (this.stage == 'swing') {\n            if (override) {\n                this.swingResult = override;\n                callback = this.waitingCallback;\n            } else {\n                this.swingResult = {};\n                var bonus = this.batter.eye.bonus || 0,\n                    eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus;\n\n                if (x >= 0 && x <= 200) {\n                    this.batter.fatigue++;\n\n                    this.swingResult.x = x - this.pitchInFlight.x;\n                    this.swingResult.y = y - this.pitchInFlight.y;\n                    this.swingResult.angle = this.setBatAngle();\n\n                    var recalculation = _baseballServices_services.Mathinator.getAngularOffset(this.swingResult, this.swingResult.angle);\n                    var precision = _baseballServices_services.Distribution.swing(eye);\n\n                    this.swingResult.x = recalculation.x * precision;\n                    this.swingResult.y = -5 + recalculation.y * precision;\n\n                    //log(recalculation.y, precision);\n\n                    this.swingResult.looking = false;\n                    if (Math.abs(this.swingResult.x) < 60 && Math.abs(this.swingResult.y) < 35) {\n                        this.swingResult.contact = true;\n                        this.field.determineSwingContactResult(this.swingResult);\n                        // log(this.swingResult.flyAngle, Math.floor(this.swingResult.x), Math.floor(this.swingResult.y));\n                        this.debug.push(this.swingResult);\n                    } else {\n                        this.swingResult.contact = false;\n                    }\n                } else {\n                    this.swingResult.strike = this.pitchInFlight.x > 50 && this.pitchInFlight.x < 150 && this.pitchInFlight.y > 35 && this.pitchInFlight.y < 165;\n                    this.batter.eye.bonus = Math.max(0, eye - Math.sqrt(Math.pow(this.batter.eye.x - this.pitchInFlight.x, 2) + Math.pow(this.batter.eye.y - this.pitchInFlight.y, 2)) * 1.5);\n                    this.swingResult.contact = false;\n                    this.swingResult.looking = true;\n                    this.batter.eye.x = this.pitchInFlight.x;\n                    this.batter.eye.y = this.pitchInFlight.y;\n                }\n            }\n            this.log.noteSwing(this.swingResult);\n            this.stage = 'pitch';\n\n            var half = this.half;\n            var result = this.swingResult;\n            this.umpire.makeCall();\n            emit = false;\n            if (half != this.half) {\n                callback = this.startOpponentPitching;\n                var emit = !override;\n            }\n\n            if (typeof callback == 'function') {\n                if (this.humanControl != 'none' && (this.humanControl == 'both' || this.teams[this.humanControl] == this.pitcher.team)) {\n                    callback();\n                    if (emit) {\n                        if (this.opponentService && this.opponentConnected) {\n                            this.opponentService.emitSwing(result);\n                        }\n                    }\n                } else {\n                    this.awaitPitch(callback, result);\n                }\n            }\n        }\n    },\n    setBatAngle: function setBatAngle(x, y) {\n        var giraffe = this,\n            pitchInFlight = this.pitchInFlight,\n            swingResult = this.swingResult;\n        var origin = {\n            x: giraffe.batter.bats == 'right' ? -10 : 210,\n            y: 160\n        };\n        var swing = {\n            x: x ? x : pitchInFlight.x + swingResult.x,\n            y: y ? y : pitchInFlight.y + swingResult.y\n        };\n        return _baseballServices_services.Mathinator.battingAngle(origin, swing);\n    },\n    debugOut: function debugOut() {\n        log('slugging', this.debug.filter(function (a) {\n            return a.bases == 1;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 2;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 3;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 4;\n        }).length);\n        log('grounders', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < -5;\n        }).length);\n        log('grounders thrown out', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < -5 && a.thrownOut;\n        }).length);\n        log('weak air hits (thrown out)', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle > 0 && a.thrownOut;\n        }).length);\n        log('good air hits (not caught)', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle > 0 && !a.thrownOut;\n        }).length);\n\n        var PO = {};\n        this.debug.map(function (a) {\n            if (!a.fielder) return;\n            if (!PO[a.fielder]) {\n                PO[a.fielder] = 0;\n            }\n            if (!a.bases && a.fielder) {\n                PO[a.fielder]++;\n            }\n        });\n        log('fielding outs', PO);\n\n        var hitters = this.teams.away.lineup.concat(this.teams.home.lineup);\n        var atBats = [];\n        hitters.map(function (a) {\n            atBats = atBats.concat(a.getAtBats().map(function (ab) {\n                return ab.text;\n            }));\n        });\n\n        var LO = atBats.filter(function (ab) {\n            return ab == 'LO';\n        }).length;\n        var FO = atBats.filter(function (ab) {\n            return ab == 'FO';\n        }).length;\n        var GO = atBats.filter(function (ab) {\n            return ab == 'GO';\n        }).length;\n        var GIDP = atBats.filter(function (ab) {\n            return ab == '(IDP)';\n        }).length;\n        var SO = atBats.filter(function (ab) {\n            return ab == 'SO';\n        }).length;\n        var BB = atBats.filter(function (ab) {\n            return ab == 'BB';\n        }).length;\n        var SAC = atBats.filter(function (ab) {\n            return ab == 'SAC';\n        }).length;\n        var FC = atBats.filter(function (ab) {\n            return ab == 'FC';\n        }).length;\n        log('line outs', LO, 'fly outs', FO, 'groundouts', GO, 'strikeouts', SO, 'sacrifices', SAC, 'FC', FC, 'gidp', GIDP);\n        log('BB', BB);\n        log('fouls', this.debug.filter(function (a) {\n            return a.foul;\n        }).length);\n        log('fatigue, home vs away');\n        var teams = this.teams;\n        var fatigue = { home: {}, away: {} };\n        _baseballServices_services.Iterator.each(this.teams.home.positions, function (key) {\n            var position = key;\n            fatigue.home[position] = teams.home.positions[position].fatigue;\n            fatigue.away[position] = teams.away.positions[position].fatigue;\n        });\n        console.table(fatigue);\n        console.table(this.scoreboard);\n        console.table(this.tally);\n    },\n    toData: function toData() {\n        var data = {};\n        data.half = this.half;\n        data.inning = this.inning;\n        data.tally = this.tally;\n        var giraffe = this;\n        var players = this.teams.away.lineup.concat(this.teams.home.lineup);\n        // note: bench not included\n        data.field = {\n            first: players.indexOf(this.field.first),\n            second: players.indexOf(this.field.second),\n            third: players.indexOf(this.field.third)\n        };\n        data.batter = players.indexOf(this.batter);\n        data.deck = players.indexOf(this.deck);\n        data.hole = players.indexOf(this.hole);\n        data.teams = {\n            home: {\n                name: giraffe.teams.home.name,\n                nameJ: giraffe.teams.home.nameJ\n            },\n            away: {\n                name: giraffe.teams.away.name,\n                nameJ: giraffe.teams.away.nameJ\n            }\n        };\n        data.umpire = {\n            says: giraffe.umpire.says,\n            count: {\n                strikes: giraffe.umpire.count.strikes,\n                balls: giraffe.umpire.count.balls,\n                outs: giraffe.umpire.count.outs\n            }\n        };\n        data.players = players.map(function (player) {\n            return player.serialize();\n        });\n        data.log = {\n            pitchRecord: giraffe.log.pitchRecord,\n            record: giraffe.log.record\n        };\n        data.gamesIntoSeason = this.gamesIntoSeason;\n        return data;\n    },\n    fromData: function fromData(data) {\n        this.half = data.half;\n        this.inning = data.inning;\n        this.tally = data.tally;\n        var giraffe = this;\n        var players = data.players.map(function (playerJson, index) {\n            var playerData = JSON.parse(playerJson);\n            if (index > 8) {\n                var side = 'home';\n                index = index - 9;\n            } else {\n                side = 'away';\n            }\n            var player = giraffe.teams[side].positions[playerData.position];\n            player.fromData(playerData);\n            giraffe.teams[side].lineup[index] = player;\n            player.resetStats(data.gamesIntoSeason);\n            return player;\n        });\n        this.field.first = players[data.field.first];\n        this.field.second = players[data.field.second];\n        this.field.third = players[data.field.third];\n        this.batter = players[data.batter];\n        this.deck = players[data.deck];\n        this.hole = players[data.hole];\n        this.umpire.says = data.umpire.says;\n        this.umpire.count = data.umpire.count;\n        this.teams.away.name = data.teams.away.name;\n        this.teams.away.nameJ = data.teams.away.nameJ;\n        this.teams.home.name = data.teams.home.name;\n        this.teams.home.nameJ = data.teams.home.nameJ;\n        this.log.pitchRecord = data.log.pitchRecord;\n        this.log.record = data.log.record;\n        this.log.stabilizeShortRecord();\n        this.gamesIntoSeason = data.gamesIntoSeason;\n        return this;\n    },\n    startOpponentPitching: null, // late function\n    pitchTarget: { x: 100, y: 100 },\n    pitchInFlight: {\n        x: 100,\n        y: 100,\n        breakDirection: [0, 0],\n        name: 'slider',\n        velocity: 50,\n        'break': 50,\n        control: 50\n    },\n    swingResult: {\n        x: 100, //difference to pitch location\n        y: 100, //difference to pitch location\n        strike: false,\n        foul: false,\n        caught: false,\n        contact: false,\n        looking: true,\n        bases: 0,\n        fielder: 'short',\n        outs: 0\n    },\n    playResult: {\n        batter: '',\n        fielder: ''\n    },\n    showPlayResultPanels: function showPlayResultPanels(batter) {\n        var batterOutcomes = {};\n        var atBat = batter.atBats.slice(0).pop();\n        var fielderOutcomes = {};\n        var n = function n() {\n            var n = Math.floor(Math.random() * 3);\n            return n ? n : '';\n        };\n        this.playResult = {\n            batter: 'B_placeholder' + n() || batterOutcomes[atBat] || 'batter/' + atBat,\n            fielder: 'F_placeholder' + n() || fielderOutcomes[atBat] || 'fielder/' + atBat\n        };\n    },\n    pitchSelect: function pitchSelect() {},\n    field: null,\n    teams: {\n        away: null,\n        home: null\n    },\n    log: null,\n    half: 'top',\n    inning: 1,\n    scoreboard: {\n        away: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        },\n        home: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        }\n    },\n    resetTally: function resetTally() {\n        this.tally = {\n            away: {\n                H: 0,\n                R: 0,\n                E: 0\n            },\n            home: {\n                H: 0,\n                R: 0,\n                E: 0\n            }\n        };\n    },\n    tally: {\n        away: {\n            H: 0,\n            R: 0,\n            E: 0\n        },\n        home: {\n            H: 0,\n            R: 0,\n            E: 0\n        }\n    }\n};\n\nexports.Game = Game;\n\n},{\"baseball/Model/Field\":2,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":25,\"baseball/Utility/Log\":29,\"baseball/Utility/_utils\":30}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Manager = function Manager(team) {\n    this.init(team);\n};\n\nManager.prototype = {\n    constructor: Manager,\n    init: function init(team) {\n        this.team = team;\n    },\n    makeLineup: function makeLineup() {\n        var jerseyNumber = 1;\n        this.team.positions.pitcher = this.selectForSkill(this.team.bench, ['pitching']);\n        this.team.positions.pitcher.position = 'pitcher';\n        if (!this.team.positions.pitcher.number) {\n            this.team.positions.pitcher.number = jerseyNumber++;\n        }\n        this.team.positions.catcher = this.selectForSkill(this.team.bench, ['defense', 'catching'], 'right');\n        this.team.positions.catcher.position = 'catcher';\n        if (!this.team.positions.catcher.number) {\n            this.team.positions.catcher.number = jerseyNumber++;\n        }\n        _baseballServices_services.Iterator.each(this.team.bench, function (key, player) {\n            if (!player.number) {\n                player.number = jerseyNumber++;\n            }\n        });\n        this.team.positions.short = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.short.position = 'short';\n        this.team.positions.second = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.second.position = 'second';\n        this.team.positions.third = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.third.position = 'third';\n        this.team.positions.center = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.center.position = 'center';\n        this.team.positions.left = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.left.position = 'left';\n        this.team.positions.right = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.right.position = 'right';\n        this.team.positions.first = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'left');\n        this.team.positions.first.position = 'first';\n\n        this.team.lineup[3] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[3].order = 3;\n        this.team.lineup[2] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[2].order = 2;\n        this.team.lineup[4] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[4].order = 4;\n        this.team.lineup[0] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[0].order = 0;\n        this.team.lineup[1] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[1].order = 1;\n        this.team.lineup[5] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[5].order = 5;\n        this.team.lineup[6] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[6].order = 6;\n        this.team.lineup[7] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[7].order = 7;\n        this.team.lineup[8] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[8].order = 8;\n    },\n    selectForSkill: function selectForSkill(pool, skillset, requiredThrowingHandedness) {\n        if (this.team.bench.length || pool == this.team.positions) {\n            var selection = this.team.bench[0];\n            var rating = 0;\n            var index = 0;\n            _baseballServices_services.Iterator.each(pool, function (key, player) {\n                var skills = skillset.slice();\n                var cursor = player.skill;\n                var property = skills.shift();\n                while (property) {\n                    cursor = cursor[property];\n                    property = skills.shift();\n                }\n                if (!(player.order + 1) && cursor >= rating && (!requiredThrowingHandedness || player.throws == requiredThrowingHandedness)) {\n                    rating = cursor;\n                    selection = player;\n                    index = key;\n                }\n            });\n            if (pool == this.team.bench) {\n                delete this.team.bench[index];\n                this.team.bench = this.team.bench.filter(function (player) {\n                    return player instanceof selection.constructor;\n                });\n            }\n            return selection;\n        }\n        return 'no players available';\n    }\n};\n\nexports.Manager = Manager;\n\n},{\"baseball/Services/_services\":25}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar Player = function Player(team) {\n    this.init(team);\n    this.resetStats(this.team.game && this.team.game.gamesIntoSeason || 0);\n};\n\nPlayer.prototype = {\n    constructor: Player,\n    init: function init(team, hero) {\n        this.throws = Math.random() > 0.86 ? 'left' : 'right';\n        this.bats = Math.random() > 0.75 ? 'left' : 'right';\n        this.team = team;\n        this.skill = {};\n        this.eye = {\n            x: 100,\n            y: 100\n        };\n        this.pitching = { averaging: [] };\n        this.number = 0;\n        this.randomizeSkills(hero || Math.random() > 0.9);\n        var surnameKey = Math.floor(Math.random() * _baseballUtility_utils.data.surnames.length),\n            nameKey = Math.floor(Math.random() * _baseballUtility_utils.data.names.length);\n\n        this.name = _baseballUtility_utils.data.surnames[surnameKey] + ' ' + _baseballUtility_utils.data.names[nameKey];\n        var jSurname = _baseballUtility_utils.data.surnamesJ[surnameKey],\n            jGivenName = _baseballUtility_utils.data.namesJ[nameKey];\n        this.spaceName(jSurname, jGivenName);\n        this.surname = _baseballUtility_utils.data.surnames[surnameKey];\n        this.surnameJ = _baseballUtility_utils.data.surnamesJ[surnameKey];\n        this.atBats = [];\n    },\n    spaceName: function spaceName(jSurname, jGivenName) {\n        if (jSurname.length == 1 && jGivenName.length <= 2) jSurname += '・';\n        if (jGivenName.length == 1 && jSurname.indexOf('・') < 0 && jSurname.length <= 2) jSurname += '・';\n        this.nameJ = jSurname + jGivenName;\n        this.surnameJ = jSurname;\n    },\n    serialize: function serialize() {\n        var team = this.team;\n        delete this.team;\n        var data = JSON.stringify(this);\n        this.team = team;\n        return data;\n    },\n    fromData: function fromData(data) {\n        var giraffe = this;\n        _baseballServices_services.Iterator.each(data, function (key, value) {\n            giraffe[key] = value;\n        });\n        delete this.atBatObjects;\n        this.getAtBats();\n    },\n    resetStats: function resetStats() {\n        var gamesIntoSeason = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n        var offense = this.skill.offense;\n        var defense = this.skill.defense;\n        var randBetween = function randBetween(a, b, skill) {\n            var total = 0,\n                count = 0;\n            skill += '';\n            if (!skill) skill = '';\n            _baseballServices_services.Iterator.each(skill.split(' '), function (key, value) {\n                var skill = value;\n                if (offense[skill]) skill = offense[skill];\n                if (defense[skill]) skill = defense[skill];\n                if (isNaN(skill)) skill = 50;\n                total += skill;\n                count++;\n            });\n\n            skill = Math.sqrt(0.05 + Math.random() * 0.95) * (total / (count * 0.97));\n            return Math.floor(skill / 100 * (b - a) + a);\n        };\n        var IP, ER, GS, W, L;\n        if (this.skill.pitching > 65) {\n            IP = (this.skill.pitching - 65) * gamesIntoSeason / 20;\n            ER = IP / 9 * randBetween(800, 215, this.skill.pitching) / 100;\n            if (IP > gamesIntoSeason) {\n                //starter\n                GS = Math.floor(gamesIntoSeason / 5);\n                W = randBetween(GS * 0.1, GS * 0.8, this.skill.pitching / 1.20);\n                L = randBetween(GS - W, 0, this.skill.pitching / 3);\n            } else {\n                //reliever\n                GS = Math.floor(gamesIntoSeason / 40);\n                W = randBetween(0, GS * 0.6, this.skill.pitching);\n                L = randBetween(GS - W, 0, this.skill.pitching);\n            }\n        }\n        var pa = randBetween(gamesIntoSeason * 3, gamesIntoSeason * 5, 'speed eye');\n        var paRemaining = pa;\n        var bb = Math.floor(randBetween(0, 18, 'power eye') * paRemaining / 100);\n        paRemaining -= bb;\n        var ab = paRemaining;\n        var so = Math.floor(randBetween(25, 2, 'eye') * paRemaining / 100);\n        paRemaining -= so;\n        var h = Math.floor(randBetween(185, 372, 'eye power speed') * paRemaining / 1000);\n        paRemaining -= h;\n\n        var doubles = randBetween(0, h / 4, 'power speed');\n        var triples = randBetween(0, h / 12, 'speed');\n        var hr = Math.max(0, randBetween(-h / 20, h / 5, 'power eye'));\n        var r = randBetween(h / 8, (h + bb) / 3, 'speed') + hr;\n        var rbi = randBetween(h / 8, h / 2, 'power eye') + hr;\n        var hbp = randBetween(0, gamesIntoSeason / 25);\n        var sac = randBetween(0, gamesIntoSeason / 5, 'eye');\n\n        var chances = randBetween(0, gamesIntoSeason * 10, 'fielding');\n        var E = randBetween(chances / 10, 0, 'fielding');\n        var PO = chances - E;\n\n        this.stats = {\n            pitching: {\n                pitches: 0, // in game\n                GS: GS,\n                W: W,\n                L: L,\n                strikes: 0, // in game\n                K: 0, // in game\n                getK9: function getK9() {\n                    return this.K / (this.IP[0] / 9);\n                },\n                getERA: function getERA() {\n                    return 9 * this.ER / Math.max(1 / 3, this.IP[0] + this.IP[1] / 3);\n                },\n                ERA: null,\n                ER: ER,\n                H: 0, // in game\n                HR: 0, // in game\n                BB: 0, // in game\n                IP: [IP, 0],\n                WHIP: 0,\n                getWHIP: function getWHIP() {\n                    return (this.H + this.BB) / (this.IP[0] ? this.IP[0] : 1);\n                }\n            },\n            batting: {\n                getBA: function getBA() {\n                    return this.h / Math.max(1, this.ab);\n                },\n                getBABIP: function getBABIP() {\n                    return (this.h - this.hr) / (this.ab - this.so - this.hr + this.sac);\n                },\n                ba: null,\n                getOBP: function getOBP() {\n                    return (this.h + this.bb + this.hbp) / (this.ab + this.bb + this.hbp + this.sac);\n                },\n                obp: null,\n                getSLG: function getSLG() {\n                    return (this.h - this['2b'] - this['3b'] - this.hr + 2 * this['2b'] + 3 * this['3b'] + 4 * this.hr) / this.ab;\n                },\n                slg: null,\n                pa: pa,\n                ab: ab,\n                so: so,\n                bb: bb,\n                h: h,\n                '2b': doubles,\n                '3b': triples,\n                hr: hr,\n                r: r,\n                rbi: rbi,\n                hbp: hbp,\n                sac: sac\n            },\n            fielding: {\n                E: E,\n                PO: PO, // should depend on position\n                A: Math.floor(Math.random() * 5) + 1 // ehh should depend on position\n            }\n        };\n        this.stats.pitching.ERA = this.stats.pitching.getERA();\n        this.stats.pitching.K9 = this.stats.pitching.getK9();\n        this.stats.pitching.WHIP = this.stats.pitching.getWHIP();\n        this.stats.batting.ba = this.stats.batting.getBA();\n    },\n    atBatObjects: [],\n    getAtBats: function getAtBats() {\n        if (this.atBats.length > this.atBatObjects.length) {\n            this.atBatObjects = this.atBats.map(function (item) {\n                return new _baseballModel_models.AtBat(item);\n            });\n        }\n        return this.atBatObjects;\n    },\n    recordRBI: function recordRBI() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.RBI_INDICATOR;\n    },\n    recordInfieldHit: function recordInfieldHit() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.INFIELD_HIT_INDICATOR;\n    },\n    getBaseRunningTime: function getBaseRunningTime() {\n        return _baseballServices_services.Mathinator.baseRunningTime(this.skill.offense.speed);\n    },\n    randomizeSkills: function randomizeSkills(hero, allPitches) {\n        this.hero = hero;\n        var giraffe = this;\n        var randValue = function randValue(isPitching) {\n            var value = Math.floor(Math.pow(Math.random(), 0.75) * 80 + Math.random() * 20);\n            if (hero) {\n                value += Math.floor((100 - value) * Math.max(Math.random(), isPitching ? 0 : 0.65));\n            }\n            if (isPitching) giraffe.pitching.averaging.push(value);\n            return value;\n        };\n        this.skill.offense = {\n            eye: randValue(),\n            power: randValue(),\n            speed: randValue()\n        };\n        this.skill.defense = {\n            catching: randValue(),\n            fielding: randValue(),\n            speed: randValue(),\n            throwing: randValue()\n        };\n        this.pitching.averaging = [];\n        this.pitching['4-seam'] = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        this.pitching.slider = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        if (Math.random() < 0.17 || allPitches) {\n            // can pitch!\n            if (Math.random() > 0.6 || allPitches) {\n                this.pitching['2-seam'] = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.18 || allPitches) {\n                this.pitching.fork = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() > 0.77 || allPitches) {\n                this.pitching.cutter = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.21 || allPitches) {\n                this.pitching.sinker = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.4 || allPitches) {\n                this.pitching.curve = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.9 || allPitches) {\n                this.pitching.change = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n        }\n        this.skill.pitching = Math.floor(this.pitching.averaging.reduce(function (prev, current) {\n            return prev + current;\n        }) / this.pitching.averaging.length + this.pitching.averaging.length * 3);\n        delete this.pitching.averaging;\n    },\n    getSurname: function getSurname() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.surnameJ : this.surname;\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    getUniformNumber: function getUniformNumber() {\n        return (0, _baseballUtility_utils.text)('#') + this.number;\n    },\n    getOrder: function getOrder() {\n        return (0, _baseballUtility_utils.text)([' 1st', ' 2nd', ' 3rd', ' 4th', ' 5th', ' 6th', '7th', ' 8th', ' 9th'][this.order]);\n    },\n    eye: {},\n    fatigue: 0,\n    name: '',\n    number: 0,\n    position: '',\n    atBats: []\n};\n\nexports.Player = Player;\n\n},{\"baseball/Model/_models\":8,\"baseball/Services/_services\":25,\"baseball/Utility/_utils\":30}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar Team = function Team(game) {\n    this.init(game);\n};\n\nTeam.prototype = {\n    constructor: Team,\n    init: function init(game) {\n        this.pickName();\n        this.lineup = [];\n        this.bench = [];\n        this.bullpen = [];\n        this.positions = {\n            pitcher: null,\n            catcher: null,\n            first: null,\n            second: null,\n            short: null,\n            third: null,\n            left: null,\n            center: null,\n            right: null\n        };\n        this.manager = new _baseballModelManager.Manager(this);\n        if (game !== 'no init') {\n            this.game = game;\n            for (var j = 0; j < 20; j++) {\n                this.bench.push(new _baseballModelPlayer.Player(this));\n            }\n            if (this.bench.length == 20) {\n                this.manager.makeLineup();\n            }\n        }\n    },\n    pickName: function pickName() {\n        var teamNameIndex = Math.floor(Math.random() * _baseballUtility_utils.data.teamNames.length);\n        this.name = _baseballUtility_utils.data.teamNames[teamNameIndex];\n        this.nameJ = _baseballUtility_utils.data.teamNamesJ[teamNameIndex];\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    lineup: [],\n    positions: {},\n    manager: null,\n    bench: [],\n    bullpen: [],\n    nowBatting: 0,\n    expanded: 'Player&'\n};\n\nexports.Team = Team;\n\n},{\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":30}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar Umpire = function Umpire(game) {\n    this.init(game);\n};\n\nUmpire.prototype = {\n    constructor: Umpire,\n    init: function init(game) {\n        this.game = game;\n        this.playBall();\n    },\n    count: {\n        strikes: 0,\n        balls: 0,\n        outs: 0\n    },\n    playBall: function playBall() {\n        var game = this.game;\n        game.half = 'top';\n        game.inning = 1;\n        game.batter = game.teams.away.lineup[0];\n        game.batterRunner = game.teams.away.lineup[0];\n        game.deck = game.teams.away.lineup[1];\n        game.hole = game.teams.away.lineup[2];\n        game.pitcher = game.teams.home.positions.pitcher;\n        var n = '一回のオモテ、' + game.teams.away.getName() + 'の攻撃対' + game.teams.home.getName() + '、ピッチャーは' + game.teams.home.positions.pitcher.getName() + '。',\n            e = 'Top 1, ' + game.teams.away.name + ' offense vs. ' + game.teams.home.positions.pitcher.name + ' starting for ' + game.teams.home.name;\n        game.log.note(e, n);\n        game.log.noteBatter(game.batter);\n    },\n    makeCall: function makeCall() {\n        this.says = '';\n        var game = this.game;\n        var result = game.swingResult;\n        var pitcher = game.pitcher;\n        var batter = game.batter;\n\n        if (game.swingResult.fielder) {\n            var fielder = game.teams[game.half == 'top' ? 'home' : 'away'].positions[result.fielder];\n        } else {\n            fielder = null;\n        }\n\n        game.batterRunner = game.batter;\n\n        pitcher.stats.pitching.pitches++;\n        if (result.looking) {\n            if (result.strike) {\n                this.count.strikes++;\n                pitcher.stats.pitching.strikes++;\n            } else {\n                this.count.balls++;\n            }\n        } else {\n            pitcher.stats.pitching.strikes++;\n            if (result.contact) {\n                game.passMinutes(1);\n                if (result.caught) {\n                    batter.stats.batting.pa++;\n                    pitcher.stats.pitching.IP[1]++;\n                    if (result.sacrificeAdvances.length && this.count.outs < 2) {\n                        batter.stats.batting.sac++;\n                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SACRIFICE);\n                        this.advanceRunners(false, null, result.sacrificeAdvances);\n                    } else {\n                        batter.stats.batting.ab++;\n                        if (result.flyAngle < 15) {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.LINEOUT);\n                        } else {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FLYOUT);\n                        }\n                    }\n                    this.count.outs++;\n                    this.newBatter();\n                } else {\n                    if (result.foul) {\n                        this.count.strikes++;\n                        if (this.count.strikes > 2) this.count.strikes = 2;\n                    } else {\n                        batter.stats.batting.pa++;\n                        batter.stats.batting.ab++;\n                        if (result.firstOut) {\n                            game.field[result.firstOut] = null;\n                            result.additionalOuts.map(function (runner) {\n                                if (runner !== 'batter') {\n                                    game.field[runner] = null;\n                                }\n                            });\n                            this.count.outs += result.additionalOuts.length;\n                        }\n                        if (result.fieldersChoice && this.count.outs < 2) {\n                            result.bases = 0;\n                            this.count.outs++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FIELDERS_CHOICE);\n                            this.advanceRunners(false, result.fieldersChoice);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            this.reachBase();\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        } else if (result.fieldersChoice) {\n                            result.bases = 0;\n                            result.thrownOut = true;\n                        }\n                        if (result.thrownOut) {\n                            this.count.outs++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            if (this.count.outs < 3) {\n                                this.advanceRunners(false);\n                            }\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        }\n                        if (result.hitByPitch) {\n                            batter.stats.batting.ab--;\n                        }\n                        if (result.bases) {\n                            if (!result.error) {\n                                game.tally[game.half == 'top' ? 'away' : 'home'][_baseballUtility_utils.Log.prototype.SINGLE]++;\n                                pitcher.stats.pitching.H++;\n                            } else {\n                                if (result.bases > 0) {\n                                    game.tally[game.half == 'top' ? 'home' : 'away'].E++;\n                                    fielder.stats.fielding.E++;\n                                }\n                            }\n                            var bases = result.bases;\n                            switch (bases) {\n                                case 0:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                                    break;\n                                case 1:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                    } else {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SINGLE);\n                                        batter.stats.batting.h++;\n                                    }\n                                    break;\n                                case 2:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.DOUBLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['2b']++;\n                                    break;\n                                case 3:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.TRIPLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['3b']++;\n                                    break;\n                                case 4:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.HOMERUN);\n                                    pitcher.stats.pitching.HR++;\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting.hr++;\n                                    break;\n                            }\n                            if (bases > 0 && bases < 4 && !result.error) {\n                                if (['left', 'right', 'center'].indexOf(result.fielder) == -1) {\n                                    batter.recordInfieldHit();\n                                }\n                            }\n                            if (bases >= 1) {\n                                this.advanceRunners();\n                                this.reachBase();\n                                bases -= 1;\n                            }\n                            while (bases > 0) {\n                                bases -= 1;\n                                this.advanceRunners();\n                            }\n                            this.newBatter();\n                        }\n                    }\n                }\n            } else {\n                this.count.strikes++;\n            }\n        }\n\n        this.says = this.count.balls + ' and ' + this.count.strikes;\n\n        result.outs = this.count.outs;\n\n        if (this.count.strikes > 2) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.ab++;\n            batter.stats.batting.so++;\n            pitcher.stats.pitching.K++;\n            this.count.outs++;\n            pitcher.stats.pitching.IP[1]++;\n            this.count.balls = this.count.strikes = 0;\n            this.says = 'Strike three. Batter out.';\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.STRIKEOUT);\n            this.newBatter();\n        }\n        if (this.count.balls > 3) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.bb++;\n            pitcher.stats.pitching.BB++;\n            this.says = 'Ball four.';\n            this.count.balls = this.count.strikes = 0;\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.WALK);\n            this.advanceRunners(true).reachBase().newBatter();\n        }\n        if (this.count.outs > 2) {\n            this.says = 'Three outs, change.';\n            this.count.outs = this.count.balls = this.count.strikes = 0;\n            pitcher.stats.pitching.IP[0]++;\n            pitcher.stats.pitching.IP[1] = 0;\n            this.changeSides();\n        }\n    },\n    reachBase: function reachBase() {\n        var game = this.game;\n        game.field.first = game.batter;\n        game.field.first.fatigue += 2;\n        return this;\n    },\n    advanceRunners: function advanceRunners(isWalk, fieldersChoice, sacrificeAdvances) {\n        isWalk = !!isWalk;\n        var game = this.game;\n        var first = game.field.first,\n            second = game.field.second,\n            third = game.field.third,\n            swing = game.swingResult;\n\n        if (isWalk) {\n            if (first) {\n                if (second) {\n                    if (third) {\n                        //bases loaded\n                        game.batter.recordRBI();\n                        game.batter.stats.batting.rbi++;\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        third.stats.batting.r++;\n                        game.pitcher.stats.pitching.ER++;\n                        game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                        game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                        game.field.third = second;\n                        game.field.second = first;\n                        first = null;\n                    } else {\n                        // 1st and second\n                        game.field.third = second;\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                } else {\n                    if (third) {\n                        // first and third\n                        game.field.second = first;\n                        game.field.first = null;\n                    } else {\n                        // first only\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                }\n            } else {\n                // no one on first\n            }\n        } else {\n                if (fieldersChoice) {\n                    game.field[fieldersChoice] = null;\n                    first = game.field.first;\n                    second = game.field.second;\n                    third = game.field.third;\n                }\n                var canAdvance = function canAdvance() {\n                    return true;\n                };\n                if (sacrificeAdvances) {\n                    canAdvance = function (position) {\n                        switch (position) {\n                            case 'first':\n                                return sacrificeAdvances.indexOf('first') > -1 && (canAdvance('second') || !second);\n                            case 'second':\n                                return sacrificeAdvances.indexOf('second') > -1 && (canAdvance('third') || !third);\n                            case 'third':\n                                return sacrificeAdvances.indexOf('third') > -1;\n                        }\n                    };\n                }\n                if (third instanceof _baseballModelPlayer.Player && canAdvance('third')) {\n                    // run scored\n                    game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                    game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                    if (game.batter != third) {\n                        game.batter.recordRBI();\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    }\n                    game.batter.stats.batting.rbi++;\n                    third.stats.batting.r++;\n                    game.pitcher.stats.pitching.ER++;\n                }\n                if (second && canAdvance('second')) {\n                    game.field.third = second;\n                } else {\n                    game.field.third = null;\n                }\n                if (first && canAdvance('first')) {\n                    game.field.second = first;\n                } else {\n                    game.field.second = null;\n                }\n                game.field.first = null;\n            }\n        return this;\n    },\n    newBatter: function newBatter() {\n        var game = this.game;\n        game.passMinutes(2);\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.count.balls = this.count.strikes = 0;\n        game.log.notePlateAppearanceResult(game);\n        var team = game.half == 'bottom' ? game.teams.home : game.teams.away;\n        game.lastBatter = game.batter;\n        game.batter = team.lineup[(team.nowBatting + 1) % 9];\n        game.deck = team.lineup[(team.nowBatting + 2) % 9];\n        game.hole = team.lineup[(team.nowBatting + 3) % 9];\n        team.nowBatting = (team.nowBatting + 1) % 9;\n        if (this.count.outs < 3) {\n            game.log.noteBatter(game.batter);\n        }\n        game.showPlayResultPanels(game.lastBatter);\n    },\n    changeSides: function changeSides() {\n        var game = this.game;\n        game.passMinutes(5);\n        game.swingResult = {};\n        game.swingResult.looking = true; // hide bat\n        game.pitchInFlight.x = null; // hide ball\n        game.pitchInFlight.y = null; // hide ball\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        var offense, defense;\n        game.field.first = null;\n        game.field.second = null;\n        game.field.third = null;\n        if (game.half == 'top') {\n            if (game.inning == 9 && game.tally.home.R > game.tally.away.R) {\n                return game.end();\n            }\n            game.half = 'bottom';\n        } else {\n            if (game.inning + 1 > 9) {\n                return game.end();\n            }\n            game.inning++;\n            game.half = 'top';\n        }\n        offense = game.half == 'top' ? 'away' : 'home';\n        defense = game.half == 'top' ? 'home' : 'away';\n        var n = game.inning + '回の' + (game.half == 'top' ? 'オモテ' : 'ウラ') + '、' + game.teams[game.half == 'top' ? 'away' : 'home'].getName() + 'の攻撃。',\n            e = (game.half == 'top' ? 'Top' : 'Bottom') + ' ' + game.inning;\n        game.log.note(e, n);\n        var team = game.teams[offense];\n        game.batter = team.lineup[team.nowBatting];\n        game.batterRunner = game.batter;\n        game.deck = team.lineup[(team.nowBatting + 1) % 9];\n        game.hole = team.lineup[(team.nowBatting + 2) % 9];\n\n        game.pitcher = game.teams[defense].positions.pitcher;\n        game.log.noteBatter(game.batter);\n        game.autoPitchSelect();\n    },\n    says: 'Play ball!',\n    game: null\n};\n\nexports.Umpire = Umpire;\n\n},{\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":30}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nexports.AtBat = _baseballModelAtBat.AtBat;\nexports.Field = _baseballModelField.Field;\nexports.Game = _baseballModelGame.Game;\nexports.Manager = _baseballModelManager.Manager;\nexports.Player = _baseballModelPlayer.Player;\nexports.Team = _baseballModelTeam.Team;\nexports.Umpire = _baseballModelUmpire.Umpire;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _meshBall = require('./mesh/Ball');\n\nvar _meshMound = require('./mesh/Mound');\n\nvar _meshBase = require('./mesh/Base');\n\nvar _meshField = require('./mesh/Field');\n\nvar _meshGrass = require('./mesh/Grass');\n\nvar _meshHomeDirt = require('./mesh/HomeDirt');\n\nvar _meshBattersEye = require('./mesh/BattersEye');\n\nvar _meshWall = require('./mesh/Wall');\n\nvar _sceneLighting = require('./scene/lighting');\n\n/**\r\n * the constants should be tuned so that the camera coincides with the DOM's strike zone overlay\r\n * @type {number}\r\n */\nvar VERTICAL_CORRECTION = -0.2;\nvar INITIAL_CAMERA_DISTANCE = 8;\n\nif (typeof THREE !== 'undefined') {\n    var AHEAD = new THREE.Vector3(0, VERTICAL_CORRECTION, -60.5);\n    var INITIAL_POSITION = new THREE.Vector3(0, VERTICAL_CORRECTION, INITIAL_CAMERA_DISTANCE);\n}\n\n/**\r\n * manager for the rendering loop\r\n */\n\nvar Loop = (function () {\n    function Loop(elementClass) {\n        _classCallCheck(this, Loop);\n\n        this.elementClass = elementClass;\n        this.main();\n        window.loop = this;\n    }\n\n    /**\r\n     * individual objects<AbstractMesh> can attach and detach to the manager to be rendered\r\n     */\n\n    _createClass(Loop, [{\n        key: 'loop',\n        value: function loop() {\n            requestAnimationFrame(this.loop.bind(this));\n            this.panToward(this.target);\n            this.moveToward(this.moveTarget);\n            this.objects.map(function (i) {\n                return i.animate();\n            });\n            //this.breathe();\n            this.renderer.render(this.scene, this.camera);\n        }\n\n        /**\r\n         * initialize lights, camera, action\r\n         */\n    }, {\n        key: 'main',\n        value: function main() {\n            this.objects = [];\n            if (this.getThree()) {\n\n                var THREE = this.THREE;\n\n                var scene = this.scene = new THREE.Scene();\n                this.attach();\n                this.lighting = _sceneLighting.lighting;\n                _sceneLighting.lighting.addTo(scene);\n                var camera = this.camera = new THREE.PerspectiveCamera(60, this.getAspect(), 0.1, 500);\n\n                this.target = new THREE.Vector3(0, 0, -60.5);\n                this._target = new THREE.Vector3(0, 0, -60.5);\n                this.moveTarget = camera.position;\n\n                this.resetCamera();\n                this.loop();\n            }\n        }\n\n        /**\r\n         * used by the background layer\r\n         */\n    }, {\n        key: 'addStaticMeshes',\n        value: function addStaticMeshes() {\n            new _meshField.Field().join(this);\n            new _meshMound.Mound().join(this);\n            new _meshHomeDirt.HomeDirt().join(this);\n            new _meshGrass.Grass().join(this);\n            new _meshGrass.Grass(this, true);\n            new _meshBattersEye.BattersEye().join(this);\n\n            new _meshWall.Wall(this, -30);\n            new _meshWall.Wall(this, -15);\n            new _meshWall.Wall(this, 15);\n            new _meshWall.Wall(this, 30);\n\n            new _meshBase.Base(this, 'first');\n            new _meshBase.Base(this, 'second');\n            new _meshBase.Base(this, 'third');\n            new _meshBase.Base(this, 'home');\n        }\n\n        /**\r\n         * experimental camera bobbing\r\n         */\n    }, {\n        key: 'breathe',\n        value: function breathe() {\n            var pos = this.camera.position;\n            var x = pos.x,\n                y = pos.y,\n                z = pos.z;\n            var rate = 0.0005 * this.bob || 1;\n            if (y > 0.6) {\n                this.bob = -1;\n            } else if (y < -0.6) {\n                this.bob = 1;\n            }\n            //pos.x += rate;\n            pos.y += rate;\n            pos.z += rate;\n        }\n    }, {\n        key: 'getThree',\n        value: function getThree() {\n            if (this.THREE === Loop.prototype.THREE && typeof window === 'object' && window.THREE) {\n                return this.THREE = window.THREE;\n            }\n            return false;\n        }\n\n        /**\r\n         * attach to the DOM\r\n         * @returns {THREE.WebGLRenderer}\r\n         */\n    }, {\n        key: 'attach',\n        value: function attach() {\n            window.removeEventListener('resize', this.onResize.bind(this), false);\n            window.addEventListener('resize', this.onResize.bind(this), false);\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            element.innerHTML = '';\n            var THREE = this.THREE;\n            var renderer = new THREE.WebGLRenderer({ alpha: true });\n            this.setSize(renderer);\n            //renderer.setClearColor(0xffffff, 0);\n\n            element.appendChild(renderer.domElement);\n\n            this.renderer = renderer;\n            return renderer;\n        }\n\n        /**\r\n         * higher FOV on lower view widths\r\n         */\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            this.camera.aspect = this.getAspect();\n            this.camera.fov = 90 - 30 * (element.offsetWidth / 1000);\n            this.camera.updateProjectionMatrix();\n            this.setSize(this.renderer);\n        }\n    }, {\n        key: 'setSize',\n        value: function setSize(renderer) {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            var width = element.offsetWidth;\n            renderer.setSize(width, HEIGHT);\n        }\n    }, {\n        key: 'getAspect',\n        value: function getAspect() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            return element.offsetWidth / HEIGHT;\n        }\n\n        /**\r\n         * incrementally pan toward the vector given\r\n         * @param vector\r\n         */\n    }, {\n        key: 'panToward',\n        value: function panToward(vector) {\n            var maxIncrement = this.panSpeed;\n            this.forAllLoops(function (loop) {\n                var target = loop._target;\n                target.x = target.x + Math.max(Math.min((vector.x - target.x) / 100, maxIncrement), -maxIncrement);\n                target.y = target.y + Math.max(Math.min((vector.y - target.y) / 100, maxIncrement), -maxIncrement);\n                target.z = target.z + Math.max(Math.min((vector.z - target.z) / 100, maxIncrement), -maxIncrement);\n                loop.camera.lookAt(target);\n            });\n        }\n\n        /**\r\n         * incrementally move the camera to the vector\r\n         * @param vector\r\n         */\n    }, {\n        key: 'moveToward',\n        value: function moveToward(vector) {\n            var maxIncrement = this.moveSpeed;\n            this.forAllLoops(function (loop) {\n                var position = loop.camera.position;\n                position.x += Math.max(Math.min(vector.x - position.x, maxIncrement), -maxIncrement);\n                position.y += Math.max(Math.min(vector.y - position.y, maxIncrement), -maxIncrement);\n                position.z += Math.max(Math.min(vector.z - position.z, maxIncrement), -maxIncrement);\n            });\n        }\n\n        /**\r\n         * setting a target will cause the camera to pan toward it using the pan method above\r\n         * @param vector\r\n         * @param panSpeed\r\n         */\n    }, {\n        key: 'setLookTarget',\n        value: function setLookTarget(vector, panSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.panSpeed = panSpeed || 0.9;\n                loop.panning = vector !== AHEAD;\n                loop.target = vector;\n            });\n        }\n\n        /**\r\n         * setting a target will cause the camera to move toward it using the incremental method above\r\n         * @param vector\r\n         * @param moveSpeed\r\n         */\n    }, {\n        key: 'setMoveTarget',\n        value: function setMoveTarget(vector, moveSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.moveSpeed = moveSpeed || 0.7;\n                loop.moveTarget = vector;\n            });\n        }\n    }, {\n        key: 'resetCamera',\n        value: function resetCamera() {\n            this.setLookTarget(AHEAD, 0.9);\n            this.setMoveTarget(INITIAL_POSITION, 0.5);\n        }\n    }, {\n        key: 'moveCamera',\n        value: function moveCamera(x, y, z) {\n            if (typeof x === 'object') {\n                return this.moveCamera(x.x, x.y, x.z);\n            }\n            this.forAllLoops(function (loop) {\n                loop.camera.position.x = x;\n                loop.camera.position.y = y;\n                loop.camera.position.z = z;\n            });\n        }\n\n        /**\r\n         * execute the function on all loops\r\n         * @param fn {Function}\r\n         */\n    }, {\n        key: 'forAllLoops',\n        value: function forAllLoops(fn) {\n            if (this.background) {\n                fn(this.background);\n            }\n            if (this.foreground) {\n                fn(this.foreground);\n            }\n            fn(this);\n        }\n    }, {\n        key: 'test',\n        value: function test() {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.setType('4-seam');\n            //with (ball.mesh.rotation) {x=0,y=0,z=0}; ball.rotation = {x:0.00, y:0.00};\n            ball.animate = function () {\n                ball.rotate();\n            };\n            ball.join(this);\n            // Baseball.service.Animator.loop.test();\n        }\n    }]);\n\n    return Loop;\n})();\n\nvar HEIGHT = 700;\nLoop.VERTICAL_CORRECTION = VERTICAL_CORRECTION;\nLoop.prototype.THREE = {};\nLoop.prototype.constructors = {\n    Ball: _meshBall.Ball,\n    Mound: _meshMound.Mound,\n    Field: _meshField.Field\n};\n\nexports.Loop = Loop;\n\n},{\"./mesh/Ball\":11,\"./mesh/Base\":12,\"./mesh/BattersEye\":13,\"./mesh/Field\":14,\"./mesh/Grass\":15,\"./mesh/HomeDirt\":16,\"./mesh/Mound\":18,\"./mesh/Wall\":19,\"./scene/lighting\":20}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _Loop = require('../Loop');\n\n/**\r\n * Each class should adhere to this pattern.\r\n * When a scene object has been positioned correctly and its trajectory set,\r\n * it should use ::join to attach itself to the scene.\r\n *\r\n * While attached, the animate method will be called on each frame.\r\n * Typically the animate method can run through the trajectory queue and then\r\n * detach itself. @see Ball\r\n *\r\n * For static meshes the animate method will do nothing, leaving the mesh permanently attached.\r\n */\n\nvar AbstractMesh = (function () {\n    function AbstractMesh() {\n        _classCallCheck(this, AbstractMesh);\n    }\n\n    /**\r\n     * since we are using (0, 0, 0) vector for the center of the strike zone, the actual ground level will be offset\r\n     * downward\r\n     * @type {number}\r\n     */\n\n    _createClass(AbstractMesh, [{\n        key: 'attach',\n\n        /**\r\n         * attach and detach should be used to maintain the correct object list\r\n         * todo use the built in object list of the scene object\r\n         */\n        value: function attach() {\n            var objects = this.loop.objects;\n            if (objects.indexOf(this) === -1) {\n                objects.push(this);\n            }\n            this.loop.scene.add(this.mesh);\n        }\n    }, {\n        key: 'detach',\n        value: function detach() {\n            var objects = this.loop.objects;\n            var index = objects.indexOf(this);\n            if (index !== -1) {\n                this.loop.objects.splice(index, 1);\n            }\n            this.loop.scene.remove(this.mesh);\n        }\n    }, {\n        key: 'join',\n        value: function join(loop) {\n            this.loop = loop || this.loop;\n            if (this.loop instanceof _Loop.Loop) {\n                this.attach();\n            }\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return AbstractMesh;\n})();\n\nAbstractMesh.WORLD_BASE_Y = -7;\n\nexports.AbstractMesh = AbstractMesh;\n\n},{\"../Loop\":9}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nvar _Indicator = require('./Indicator');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\n/**\r\n * on the DOM the pitch zone is 200x200 pixels\r\n * here we scale the strike zone to 4.2 units (feet)\r\n * for display purposes. It is only approximately related to actual pitch zone dimensions.\r\n * @type {number}\r\n */\nvar SCALE = 2.1 / 100;\n\nvar Ball = (function (_AbstractMesh) {\n    _inherits(Ball, _AbstractMesh);\n\n    /**\r\n     *\r\n     * @param loop\r\n     * @param trajectory {Array<Vector3>} incremental vectors applied each frame\r\n     * e.g. for 1 second of flight time there should be 60 incremental vectors\r\n     */\n\n    function Ball(loop, trajectory) {\n        _classCallCheck(this, Ball);\n\n        _get(Object.getPrototypeOf(Ball.prototype), 'constructor', this).call(this);\n        if (!(loop instanceof _Loop.Loop) && loop instanceof Array) {\n            trajectory = loop;\n        }\n        this.hasIndicator = false;\n        this.trajectory = trajectory ? trajectory : [];\n        this.breakingTrajectory = [];\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n        this.setType('4-seam', 1);\n    }\n\n    _createClass(Ball, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            /** @see threex.sportballs */\n            var baseURL = 'public/';\n            var THREE = window.THREE;\n            var loader = new THREE.TextureLoader();\n            var textureColor = loader.load(baseURL + 'images/BaseballColor.jpg');\n            var textureBump = loader.load(baseURL + 'images/BaseballBump.jpg');\n            var geometry = new THREE.SphereGeometry(0.5, 32, 16);\n            var material = new THREE.MeshPhongMaterial({\n                map: textureColor,\n                bumpMap: textureBump,\n                bumpScale: 0.01\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n\n        /**\r\n         * Leave an indicator when crossing the home plate front plane,\r\n         * and rotate while moving (default 1000 RPM)\r\n         */\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var frame = this.trajectory.shift(),\n                pos = this.mesh.position;\n\n            if (frame) {\n                pos.x += frame.x;\n                pos.y += frame.y;\n                pos.z += frame.z;\n            }\n            if (pos.z > -5 && !this.hasIndicator) {\n                this.spawnIndicator();\n            }\n            if (frame.x + frame.y + frame.z !== 0) {\n                this.rotate();\n            }\n            if (!this.trajectory.length) {\n                this.detach();\n                this.loop.resetCamera();\n            }\n        }\n    }, {\n        key: 'setType',\n        value: function setType(type, handednessScalar) {\n            var rpm = _baseballUtilityHelper.helper.pitchDefinitions[type][4];\n            var rotationAngle = _baseballUtilityHelper.helper.pitchDefinitions[type][3];\n            this.setRotation(rpm, rotationAngle * (handednessScalar || 1));\n        }\n    }, {\n        key: 'rotate',\n        value: function rotate() {\n            var rotation = this.rotation;\n            var meshRotation = this.mesh.rotation;\n            meshRotation.x += rotation.x;\n            meshRotation.y += rotation.y;\n        }\n    }, {\n        key: 'setRotation',\n        value: function setRotation(rpm, rotationAngle) {\n            this.RPM = rpm;\n            this.RPS = this.RPM / 60;\n            var rotationalIncrement = this.RP60thOfASecond = this.RPS / 60;\n\n            // calculate rotational components\n            // +x is CCW along x axis increasing\n            // +y is CW along y axis increasing\n            // +z (unused) is CW along z axis increasing\n\n            // 0   --> x:1 y:0\n            // 45  --> x:+ y:+\n            // 90  --> x:0 y:1\n            // 180 --> x:-1 y:0\n\n            var xComponent = rotationalIncrement * Math.cos(rotationAngle / 180 * Math.PI);\n            var yComponent = rotationalIncrement * Math.sin(rotationAngle / 180 * Math.PI);\n\n            this.rotation = {\n                x: xComponent * 360 * Math.PI / 180,\n                y: yComponent * 360 * Math.PI / 180\n            };\n        }\n    }, {\n        key: 'exportPositionTo',\n        value: function exportPositionTo(mesh) {\n            mesh.position.x = this.mesh.position.x;\n            mesh.position.y = this.mesh.position.y;\n            mesh.position.z = this.mesh.position.z;\n        }\n    }, {\n        key: 'spawnIndicator',\n        value: function spawnIndicator() {\n            if (this.hasIndicator) {\n                return;\n            }\n            this.hasIndicator = true;\n            var indicator = new _Indicator.Indicator();\n            indicator.mesh.position.x = this.mesh.position.x;\n            indicator.mesh.position.y = this.mesh.position.y;\n            indicator.mesh.position.z = this.mesh.position.z;\n            indicator.join(this.loop.background);\n        }\n    }, {\n        key: 'derivePitchingTrajectory',\n        value: function derivePitchingTrajectory(game) {\n            this.setType(game.pitchInFlight.name, game.pitcher.throws === 'right' ? 1 : -1);\n            var top = 200 - game.pitchTarget.y,\n                left = game.pitchTarget.x,\n                breakTop = 200 - game.pitchInFlight.y,\n                breakLeft = game.pitchInFlight.x,\n                flightTime = _baseballServicesMathinator.Mathinator.getFlightTime(game.pitchInFlight.velocity);\n\n            var scale = SCALE;\n            var origin = {\n                x: game.pitcher.throws == 'left' ? 1.5 : -1.5,\n                y: _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 6,\n                z: -60.5 // mound distance\n            };\n            this.mesh.position.x = origin.x;\n            this.mesh.position.y = origin.y;\n            this.mesh.position.z = origin.z;\n\n            var ARC_APPROXIMATION_Y_ADDITIVE = 38; // made up number\n            var terminus = {\n                x: (left - 100) * scale,\n                y: (100 - top + 1.5 * ARC_APPROXIMATION_Y_ADDITIVE) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: 0\n            };\n            var breakingTerminus = {\n                x: (breakLeft - 100) * scale,\n                y: (100 - breakTop - 0.5 * ARC_APPROXIMATION_Y_ADDITIVE) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: 0\n            };\n\n            var lastPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            },\n                lastBreakingPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            };\n\n            var frames = [],\n                breakingFrames = [],\n                frameCount = flightTime * 60 | 0,\n                counter = frameCount | 0,\n                frame = 0;\n\n            while (counter--) {\n                var progress = ++frame / frameCount;\n\n                var position = {\n                    x: origin.x + (terminus.x - origin.x) * progress,\n                    y: origin.y + (terminus.y - origin.y) * progress,\n                    z: origin.z + (terminus.z - origin.z) * progress\n                };\n                var breakingInfluencePosition = {\n                    x: origin.x + (breakingTerminus.x - origin.x) * progress,\n                    y: origin.y + (breakingTerminus.y - origin.y) * progress,\n                    z: origin.z + (breakingTerminus.z - origin.z) * progress\n                };\n                var momentumScalar = Math.pow(1 - progress, 0.58),\n                    // approximation of arc, meaningless constant\n                breakingScalar = 1 - momentumScalar,\n                    scalarSum = momentumScalar + breakingScalar;\n                var breakingPosition = {\n                    x: (position.x * momentumScalar + breakingInfluencePosition.x * breakingScalar) / scalarSum,\n                    y: (position.y * momentumScalar + breakingInfluencePosition.y * breakingScalar) / scalarSum,\n                    z: (position.z * momentumScalar + breakingInfluencePosition.z * breakingScalar) / scalarSum\n                };\n                var increment = {\n                    x: position.x - lastPosition.x,\n                    y: position.y - lastPosition.y,\n                    z: position.z - lastPosition.z\n                };\n                var breakingIncrement = {\n                    x: breakingPosition.x - lastBreakingPosition.x,\n                    y: breakingPosition.y - lastBreakingPosition.y,\n                    z: breakingPosition.z - lastBreakingPosition.z\n                };\n\n                lastPosition = position;\n                lastBreakingPosition = breakingPosition;\n\n                breakingFrames.push(breakingIncrement);\n                frames.push(increment);\n            }\n\n            var pause = 60;\n            while (pause--) {\n                breakingFrames.push({ x: 0, y: 0, z: 0 });\n                frames.push({ x: 0, y: 0, z: 0 });\n            }\n\n            this.breakingTrajectory = breakingFrames;\n            this.trajectory = frames;\n            return frames;\n        }\n    }, {\n        key: 'deriveTrajectory',\n        value: function deriveTrajectory(result, pitch) {\n            var dragScalarApproximation = {\n                distance: 1,\n                apexHeight: 0.57,\n                airTime: 0.96\n            };\n\n            var flyAngle = result.flyAngle,\n                distance = Math.abs(result.travelDistance),\n                scalar = result.travelDistance < 0 ? -1 : 1,\n                splay = result.splay; // 0 is up the middle\n\n            flyAngle = 1 + Math.abs(flyAngle); // todo why plus 1?\n            if (flyAngle > 90) flyAngle = 180 - flyAngle;\n\n            // velocity in m/s, I think\n            var velocity = dragScalarApproximation.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * flyAngle / 180));\n            var velocityVerticalComponent = Math.sin(_baseballServicesMathinator.Mathinator.RADIAN * flyAngle) * velocity;\n            // in feet\n            var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * dragScalarApproximation.apexHeight;\n            // in seconds\n            var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * dragScalarApproximation.airTime; // 2x freefall equation\n\n            var scale = SCALE;\n\n            var origin = {\n                x: pitch.x + result.x - 100,\n                y: pitch.y + result.y - 100,\n                z: 0\n            };\n\n            this.mesh.position.x = origin.x * scale;\n            this.mesh.position.y = origin.y * scale;\n            this.mesh.position.z = origin.z;\n\n            var extrema = {\n                x: Math.sin(splay / 180 * Math.PI) * distance,\n                y: apexHeight,\n                z: -Math.cos(splay / 180 * Math.PI) * distance\n            };\n\n            var frames = [],\n                frameCount = airTime * 60 | 0,\n                counter = frameCount,\n                frame = 0;\n\n            var lastHeight = 0;\n\n            while (counter--) {\n                var progress = ++frame / frameCount,\n                    percent = progress * 100;\n\n                // this equation is approximate\n                var y = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 2) * apexHeight;\n\n                frames.push({\n                    x: extrema.x / frameCount,\n                    y: y - lastHeight,\n                    z: extrema.z / frameCount\n                });\n\n                lastHeight = y;\n            }\n            this.trajectory = frames;\n            return frames;\n        }\n    }]);\n\n    return Ball;\n})(_AbstractMesh2.AbstractMesh);\n\nBall.prototype.DEFAULT_RPM = 1000;\nBall.prototype.RPM = 1000;\nBall.prototype.RPS = 1000 / 60;\nBall.prototype.RP60thOfASecond = 1000 / 60 / 60;\nBall.prototype.rotation = {\n    x: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180, // in radians per 60th of a second\n    y: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180\n};\n\nexports.Ball = Ball;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10,\"./Indicator\":17,\"baseball/Services/Mathinator\":24,\"baseball/Utility/helper\":32}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Base = (function (_AbstractMesh) {\n    _inherits(Base, _AbstractMesh);\n\n    function Base(loop, base) {\n        _classCallCheck(this, Base);\n\n        _get(Object.getPrototypeOf(Base.prototype), 'constructor', this).call(this);\n        this.base = base;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Base, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xFFFFFF\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(3, 0.3, 3, 8, 8, 8), material);\n\n            mesh.rotation.x = -0 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 0 / 180 * Math.PI;\n\n            switch (this.base) {\n                case 'first':\n                    mesh.position.x = 64;\n                    mesh.position.z = -64;\n                    break;\n                case 'second':\n                    mesh.position.x = 0;\n                    mesh.position.z = -121;\n                    break;\n                case 'third':\n                    mesh.position.x = -64;\n                    mesh.position.z = -64;\n                    break;\n                case 'home':\n                    mesh.position.x = 0;\n                    mesh.position.z = 0;\n\n                    mesh.rotation.z = 0;\n            }\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.5;\n            mesh.position.z -= 18;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Base;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Base = Base;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar BattersEye = (function (_AbstractMesh) {\n    _inherits(BattersEye, _AbstractMesh);\n\n    function BattersEye(loop) {\n        _classCallCheck(this, BattersEye);\n\n        _get(Object.getPrototypeOf(BattersEye.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(BattersEye, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(200, 45, 4, 16, 16, 16), material);\n\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= 310;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return BattersEye;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.BattersEye = BattersEye;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Field = (function (_AbstractMesh) {\n    _inherits(Field, _AbstractMesh);\n\n    function Field(loop) {\n        _classCallCheck(this, Field);\n\n        _get(Object.getPrototypeOf(Field.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Field, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(155, 155, 32, 32), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = -120;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Field;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Field = Field;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Grass = (function (_AbstractMesh) {\n    _inherits(Grass, _AbstractMesh);\n\n    function Grass(loop, infield) {\n        _classCallCheck(this, Grass);\n\n        _get(Object.getPrototypeOf(Grass.prototype), 'constructor', this).call(this);\n        this.infield = infield;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Grass, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: this.infield ? 0x70934A : 0x476532\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(this.infield ? 80 : 8000, this.infield ? 80 : 8000, 16, 16), material);\n\n            if (this.infield) {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.2;\n                mesh.position.z = -80;\n            } else {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y - 0.2;\n                mesh.position.z = -570;\n            }\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Grass;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Grass = Grass;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar HomeDirt = (function (_AbstractMesh) {\n    _inherits(HomeDirt, _AbstractMesh);\n\n    function HomeDirt(loop) {\n        _classCallCheck(this, HomeDirt);\n\n        _get(Object.getPrototypeOf(HomeDirt.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(HomeDirt, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(8, 8, 16, 16), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = -18;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return HomeDirt;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.HomeDirt = HomeDirt;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Indicator = (function (_AbstractMesh) {\n    _inherits(Indicator, _AbstractMesh);\n\n    function Indicator(loop) {\n        _classCallCheck(this, Indicator);\n\n        _get(Object.getPrototypeOf(Indicator.prototype), 'constructor', this).call(this);\n        var n = 60;\n        this.trajectory = [];\n        while (n--) {\n            this.trajectory.push(1);\n        }\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Indicator, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var THREE = window.THREE;\n            var geometry = new THREE.CircleGeometry(0.34, 32);\n            var material = new THREE.MeshPhongMaterial({\n                color: 0xFFFFFF\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            this.trajectory.shift();\n\n            if (!this.trajectory.length) {\n                this.detach();\n            }\n        }\n    }]);\n\n    return Indicator;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Indicator = Indicator;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Mound = (function (_AbstractMesh) {\n    _inherits(Mound, _AbstractMesh);\n\n    function Mound(loop) {\n        _classCallCheck(this, Mound);\n\n        _get(Object.getPrototypeOf(Mound.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Mound, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.CircleGeometry(9), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.9;\n            mesh.position.z = -60.5;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Mound;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Mound = Mound;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Wall = (function (_AbstractMesh) {\n    _inherits(Wall, _AbstractMesh);\n\n    function Wall(loop, angle) {\n        _classCallCheck(this, Wall);\n\n        _get(Object.getPrototypeOf(Wall.prototype), 'constructor', this).call(this);\n        this.angle = angle;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Wall, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(120, 15 | 0, 4, 16, 16, 16), material);\n\n            var radians = this.angle / 180 * Math.PI;\n            mesh.rotation.y = -radians;\n\n            var hypotenuse = 320;\n            var distance = Math.cos(radians) * hypotenuse;\n            var offset = Math.sin(radians) * hypotenuse;\n\n            mesh.position.x += offset;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= distance;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Wall;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Wall = Wall;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10}],20:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar lighting = {\n    addTo: function addTo(scene) {\n        var light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1.0);\n        scene.add(light);\n        var sun = new THREE.DirectionalLight(0xffffbb, 0.45);\n        light.position.set(-1, 1, 1);\n        this.light = light;\n        this.sun = sun;\n        scene.add(sun);\n    },\n    setLuminosity: function setLuminosity(level) {\n        this.light.intensity = level;\n        this.sun.intensity = level / 2;\n    }\n};\n\nexports.lighting = lighting;\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/services/_services');\n\nvar _baseballRenderLoop = require('baseball/Render/Loop');\n\nvar Animator = function Animator() {\n    this.init();\n    throw new Error('No need to instantiate Animator');\n};\nAnimator.TweenMax = {};\nAnimator.prototype = {\n    identifier: 'Animator',\n    constructor: Animator,\n    /**\r\n     * console mode disables most animator functions\r\n     */\n    console: false,\n    TweenMax: {},\n    THREE: {},\n    /**\r\n     * anything other than webgl will use TweenMax for JS animations\r\n     */\n    renderingMode: 'webgl',\n    init: function init() {\n        if (Animator.console) return;\n        if (!this.loop && this.renderingMode === 'webgl') {\n            this.beginRender();\n        }\n    },\n    /**\r\n     * @returns {Loop}\r\n     */\n    beginRender: function beginRender() {\n        this.loop = new _baseballRenderLoop.Loop('webgl-container');\n        this.background = new _baseballRenderLoop.Loop('webgl-bg-container');\n        this.background.addStaticMeshes();\n\n        this.loop.background = this.background;\n        this.background.foreground = this.loop;\n\n        return this.loop;\n    },\n    /**\r\n     * @param level {Number} 0 to 1\r\n     */\n    setLuminosity: function setLuminosity(level) {\n        if (this.console) return;\n        this.loop.lighting.setLuminosity(level);\n        this.background.lighting.setLuminosity(level);\n    },\n    loadTweenMax: function loadTweenMax() {\n        if (this.console || typeof window !== 'object') {\n            Animator.TweenMax = {\n                'set': function set() {},\n                'to': function to() {},\n                'from': function from() {},\n                killAll: function killAll() {}\n            };\n        } else {\n            Animator.TweenMax = window.TweenMax;\n        }\n        return Animator.TweenMax;\n    },\n    TIME_FROM_SET: 2300, //ms\n    TIME_FROM_WINDUP: 3600, //ms\n    HOLD_UP_ALLOWANCE: 0.75, // seconds\n    pitchTarget: null,\n    pitchBreak: null,\n    /**\r\n     * this is called with $scope context binding\r\n     * @param callback\r\n     */\n    updateFlightPath: function updateFlightPath(callback) {\n        if (Animator.console) return;\n\n        if (Animator.renderingMode === 'webgl') {\n            return Animator.renderFlightPath(callback, this);\n        }\n        return Animator.tweenFlightPath(callback, this);\n    },\n    /**\r\n     * @param callback\r\n     * @param $scope\r\n     * animates the pitch's flight path\r\n     */\n    tweenFlightPath: function tweenFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            top = 200 - game.pitchTarget.y,\n            left = game.pitchTarget.x,\n            breakTop = 200 - game.pitchInFlight.y,\n            breakLeft = game.pitchInFlight.x,\n            $baseballs = $('.baseball'),\n            flightSpeed = 1.3 - 0.6 * (game.pitchInFlight.velocity + 300) / 400,\n            originTop = 50,\n            originLeft = 110 + (game.pitcher.throws == 'left' ? 20 : -20);\n        var pitch = this.pitchTarget = $('.main-area .target .baseball.pitch'),\n            henka = this.pitchBreak = $('.main-area .target .baseball.break'),\n            quarter = flightSpeed / 4;\n\n        var pitchTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 12, 4),\n            targetTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 10, 3);\n\n        var transitions = [pitchTransition(0, 0), pitchTransition(10, 0), pitchTransition(30, 1), pitchTransition(50, 2), targetTransition(100, 3), pitchTransition(100, 3, breakTop, breakLeft)];\n\n        TweenMax.set([pitch, henka], transitions[0]);\n        TweenMax.to([pitch, henka], quarter, transitions[1]);\n        TweenMax.to([pitch, henka], quarter, transitions[2]);\n        TweenMax.to([pitch, henka], quarter, transitions[3]);\n        TweenMax.to(pitch, quarter, transitions[4]);\n        TweenMax.to(henka, quarter, transitions[5]);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback == 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        if (!game.pitchInFlight.x) {\n            $baseballs.addClass('hide');\n        } else {\n            if (game.humanBatting() && Math.random() * 180 > game.batter.skill.offense.eye) {\n                $('.baseball.break').addClass('hide');\n            } else {\n                $('.baseball.break').removeClass('hide');\n            }\n            $('.baseball.pitch').removeClass('hide');\n        }\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\r\n     * @param callback\r\n     * @param $scope Angular scope\r\n     * webgl version of tweenFlightPath\r\n     */\n    renderFlightPath: function renderFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            flightSpeed = _baseballServices_services.Mathinator.getFlightTime(game.pitchInFlight.velocity);\n\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var ball = new this.loop.constructors.Ball();\n        Animator._ball = ball;\n        ball.derivePitchingTrajectory(game);\n        ball.trajectory = ball.breakingTrajectory;\n        ball.join(this.loop);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback === 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        var $baseballs = $('.baseball');\n        $baseballs.addClass('hide');\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\r\n     * @param game\r\n     * @returns {*}\r\n     * This only animates the flight arc of the ball in play.\r\n     */\n    animateFieldingTrajectory: function animateFieldingTrajectory(game) {\n        if (Animator.console) return game.swingResult;\n\n        if (this.renderingMode === 'webgl') {\n            Animator.tweenFieldingTrajectory(game, true);\n            return Animator.renderFieldingTrajectory(game);\n        }\n        return Animator.tweenFieldingTrajectory(game);\n    },\n    /**\r\n     * @param game\r\n     * @param splayOnly\r\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\r\n     * JS/CSS animation\r\n     */\n    tweenFieldingTrajectory: function tweenFieldingTrajectory(game, splayOnly) {\n        var TweenMax = Animator.loadTweenMax();\n        var ball = $('.splay-indicator-ball');\n        TweenMax.killAll();\n        var result = game.swingResult;\n\n        var linearApproximateDragScalar = {\n            distance: 1,\n            apexHeight: 0.57,\n            airTime: 0.96\n        };\n\n        var angle = result.flyAngle,\n            distance = Math.abs(result.travelDistance),\n            scalar = result.travelDistance < 0 ? -1 : 1;\n\n        _baseballServices_services.Mathinator.memory.bounding = angle < 0;\n        angle = 1 + Math.abs(angle);\n        if (angle > 90) angle = 180 - angle;\n\n        var velocity = linearApproximateDragScalar.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * angle / 180));\n        var velocityVerticalComponent = Math.sin(_baseballServices_services.Mathinator.RADIAN * angle) * velocity;\n        var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * linearApproximateDragScalar.apexHeight;\n        var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * linearApproximateDragScalar.airTime; // 2x freefall equation\n\n        //log('angle', angle, 'vel', velocity, 'apex', apexHeight, 'air', airTime, 'dist', result.travelDistance);\n        var quarter = airTime / 4;\n        var mathinator = new _baseballServices_services.Mathinator();\n        var transitions = [mathinator.transitionalTrajectory(0, quarter, 0, apexHeight, scalar * distance, result.splay), mathinator.transitionalTrajectory(25, quarter, 0), mathinator.transitionalTrajectory(50, quarter, 1), mathinator.transitionalTrajectory(75, quarter, 2), mathinator.transitionalTrajectory(100, quarter, 3)];\n        TweenMax.set(ball, transitions[0]);\n        TweenMax.to(ball, quarter, transitions[1]);\n        TweenMax.to(ball, quarter, transitions[2]);\n        TweenMax.to(ball, quarter, transitions[3]);\n        TweenMax.to(ball, quarter, transitions[4]);\n\n        if (!splayOnly) {\n            ball = $('.indicator.baseball.break').removeClass('hide').show();\n            var time = quarter / 2;\n            transitions = [mathinator.transitionalCatcherPerspectiveTrajectory(0, time, 0, apexHeight, scalar * distance, result.splay, game.pitchInFlight), mathinator.transitionalCatcherPerspectiveTrajectory(12.5, time * 0.75, 0), mathinator.transitionalCatcherPerspectiveTrajectory(25, time * 0.80, 1), mathinator.transitionalCatcherPerspectiveTrajectory(37.5, time * 0.85, 2), mathinator.transitionalCatcherPerspectiveTrajectory(50, time * 0.90, 3), mathinator.transitionalCatcherPerspectiveTrajectory(62.5, time * 0.95, 4), mathinator.transitionalCatcherPerspectiveTrajectory(75, time, 5), mathinator.transitionalCatcherPerspectiveTrajectory(87.5, time, 6), mathinator.transitionalCatcherPerspectiveTrajectory(100, time, 7)];\n            TweenMax.set(ball, transitions[0]);\n            TweenMax.to(ball, time, transitions[1]);\n            TweenMax.to(ball, time, transitions[2]);\n            TweenMax.to(ball, time, transitions[3]);\n            TweenMax.to(ball, time, transitions[4]);\n            TweenMax.to(ball, time, transitions[5]);\n            TweenMax.to(ball, time, transitions[6]);\n            TweenMax.to(ball, time, transitions[7]);\n            TweenMax.to(ball, time, transitions[8]);\n\n            setTimeout(function () {\n                // hack\n                $('.indicator.baseball.break').removeClass('hide').show();\n            }, 50);\n        }\n\n        return game.swingResult;\n    },\n    /**\r\n     * @param game\r\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\r\n     * WebGL version of tweenFieldingTrajectory\r\n     */\n    renderFieldingTrajectory: function renderFieldingTrajectory(game) {\n        if (!this.loop) {\n            this.beginRender();\n        }\n\n        var ball = Animator._ball || new this.loop.constructors.Ball();\n        ball.deriveTrajectory(game.swingResult, game.pitchInFlight);\n        ball.join(this.loop);\n\n        this.loop.setLookTarget(ball.mesh.position, 0.5);\n        if (Math.random() < 0.15 && game.swingResult.travelDistance > 90 || Math.random() < 0.35 && game.swingResult.travelDistance > 250) {\n            var scale = 1;\n            if (Math.random() > 0.5) {\n                scale = -1;\n            }\n            this.loop.setMoveTarget({\n                x: scale * 80, y: 2 + Math.random() * 24, z: -70\n            }, 0.3);\n        }\n\n        return game.swingResult;\n    }\n};\n\nfor (var fn in Animator.prototype) {\n    if (Animator.prototype.hasOwnProperty(fn)) {\n        Animator[fn] = Animator.prototype[fn];\n    }\n}\n\nexports.Animator = Animator;\n\n},{\"baseball/Render/Loop\":9,\"baseball/services/_services\":36}],22:[function(require,module,exports){\n/**\r\n * For Probability!\r\n * @constructor\r\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Distribution = function Distribution() {};\n\nDistribution.prototype = {\n    identifier: 'Distribution',\n    constructor: Distribution,\n    /**\r\n     * @param scale {number}\r\n     * @returns {number}\r\n     */\n    chance: function chance(scale) {\n        if (!scale) scale = 1;\n        return Math.random() * scale;\n    },\n    /**\r\n     * @param fielder {Player}\r\n     * @returns {boolean}\r\n     */\n    error: function error(fielder) {\n        return (100 - fielder.skill.defense.fielding) * 0.40 + 4 > Math.random() * 100;\n    },\n    /**\r\n     * @param power\r\n     * @param flyAngle\r\n     * @returns {number}\r\n     */\n    landingDistance: function landingDistance(power, flyAngle) {\n        return (10 + power / 2 + Math.random() * 310 + power / 100 * 30) * (1 - Math.abs(flyAngle - 30) / 60);\n    },\n    /**\r\n     * @returns {{x: number, y: number}}\r\n     */\n    pitchLocation: function pitchLocation() {\n        var x, y;\n        if (Math.random() < 0.5) {\n            x = 50 + Math.floor(Math.random() * 70) - Math.floor(Math.random() * 15);\n        } else {\n            x = 150 + Math.floor(Math.random() * 15) - Math.floor(Math.random() * 70);\n        }\n        y = 30 + (170 - Math.floor(Math.sqrt(Math.random() * 28900)));\n        return { x: x, y: y };\n    },\n    /**\r\n     * swing centering basis\r\n     * @returns {number}\r\n     */\n    centralizedNumber: function centralizedNumber() {\n        return 100 + Math.floor(Math.random() * 15) - Math.floor(Math.random() * 15);\n    },\n    /**\r\n     * @param eye {Player.skill.offense.eye}\r\n     * @param x\r\n     * @param y\r\n     * @param umpire {Umpire}\r\n     */\n    swingLikelihood: function swingLikelihood(eye, x, y, umpire) {\n        var swingLikelihood = (200 - Math.abs(100 - x) - Math.abs(100 - y)) / 2;\n        if (x < 60 || x > 140 || y < 50 || y > 150) {\n            // ball\n            /** 138 based on avg O-Swing of 30% + 8% for fun, decreased by better eye */\n            swingLikelihood = (swingLikelihood + 138 - eye) / 2 - 15 * umpire.count.balls;\n        } else {\n            /** avg Swing rate of 65% - 8% for laughs, increased by better eye */\n            swingLikelihood = (57 + (2 * swingLikelihood + eye) / 3) / 2;\n        }\n        // higher late in the count\n        return swingLikelihood - 35 + 2 * (umpire.count.balls + 8 * umpire.count.strikes);\n    },\n    /**\r\n     * @param target {number} 0-200\r\n     * @param control {number} 0-100\r\n     * @returns {number}\r\n     */\n    pitchControl: function pitchControl(target, control) {\n        var effect = (50 - Math.random() * 100) / (1 + control / 100);\n        return Math.min(199.9, Math.max(0.1, target + effect));\n    },\n    /**\r\n     * @param pitch {Game.pitchInFlight}\r\n     * @param pitcher {Player}\r\n     * @param x {number}\r\n     * @param y {number}\r\n     * @returns {object|{x: number, y: number}}\r\n     */\n    breakEffect: function breakEffect(pitch, pitcher, x, y) {\n        var effect = {};\n        effect.x = Math.floor(x + pitch.breakDirection[0] * (0.55 + 1.5 * Math.random() * pitcher.pitching[pitch.name]['break'] / 250));\n        effect.y = Math.floor(y + pitch.breakDirection[1] * (0.55 + 1.5 * Math.random() * pitcher.pitching[pitch.name]['break'] / 250 / (0.5 + y / 200)));\n        return effect;\n    },\n    /**\r\n     * Determine the swing target along an axis\r\n     * @param target {number} 0-200\r\n     * @param actual {number} 0-200\r\n     * @param eye {number} 0-100\r\n     * @returns {number} 0-200\r\n     */\n    cpuSwing: function cpuSwing(target, actual, eye) {\n        eye = Math.min(eye, 100); // higher eye would overcompensate here\n        return 100 + (target - 100) * (0.5 + Math.random() * eye / 200) - actual;\n    },\n    /**\r\n     * Determine the swing scalar\r\n     * @param eye {number} 0-100\r\n     * @returns {number}\r\n     */\n    swing: function swing(eye) {\n        return 100 / (eye + 25 + Math.random() * 50);\n    }\n};\n\nfor (var fn in Distribution.prototype) {\n    if (Distribution.prototype.hasOwnProperty(fn)) {\n        Distribution[fn] = Distribution.prototype[fn];\n    }\n}\n\nDistribution.main = function () {\n    var ump = {\n        count: {\n            balls: 0,\n            strikes: 0\n        }\n    };\n    while (ump.count.balls < 4) {\n        while (ump.count.strikes < 3) {\n            console.log('S', ump.count.strikes, 'B', ump.count.balls);\n            console.log('middle', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 100, 100, ump) | 0;\n            }));\n            console.log('corner', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 50, 50, ump) | 0;\n            }));\n            console.log('ball', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 15, 15, ump) | 0;\n            }));\n            ump.count.strikes++;\n        }\n        ump.count.balls++;\n        ump.count.strikes = 0;\n    }\n};\n\nexports.Distribution = Distribution;\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Iterator = function Iterator() {};\n\nIterator.prototype = {\n    identifier: 'Iterator',\n    constructor: Iterator,\n    each: function each(collection, map) {\n        var keys, i;\n        if (collection instanceof Array) {\n            for (i = 0; i < collection.length; i++) {\n                map(i, collection[i]);\n            }\n        } else {\n            keys = Object.keys(collection);\n            for (i = 0; i < keys.length; i++) {\n                map(keys[i], collection[keys[i]]);\n            }\n        }\n    }\n};\n\nfor (var fn in Iterator.prototype) {\n    if (Iterator.prototype.hasOwnProperty(fn)) {\n        Iterator[fn] = Iterator.prototype[fn];\n    }\n}\n\nexports.Iterator = Iterator;\n\n},{}],24:[function(require,module,exports){\n/**\r\n * For Math!\r\n * @constructor\r\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Mathinator = function Mathinator() {};\n\n/**\r\n * @param n\r\n * @returns {number}\r\n */\nMathinator.square = function (n) {\n    return n * n;\n};\n\nMathinator.prototype = {\n    identifier: 'Mathinator',\n    constructor: Mathinator,\n    /**\r\n     * CONST\r\n     */\n    RADIAN: Math.PI / 180,\n    SPLAY_INDICATOR_LEFT: -4,\n    /**\r\n     * @param offset {{x: number, y: number}}\r\n     * @param angle {number}\r\n     * @returns {{x: number, y: number}}\r\n     */\n    getAngularOffset: function getAngularOffset(offset, angle) {\n        var xScalar = offset.x < 0 ? -1 : 1,\n            yScalar = offset.y < 0 ? -1 : 1;\n        var originalAngle = Math.atan(offset.x / offset.y) / this.RADIAN;\n        var distance = Math.sqrt(offset.x * offset.x + offset.y * offset.y),\n            angledY = yScalar * Math.cos((angle - originalAngle) * this.RADIAN) * distance,\n            angledX = xScalar * Math.sqrt(distance * distance - angledY * angledY);\n        return {\n            x: angledX,\n            y: angledY\n        };\n    },\n    /**\r\n     * @param a {Array<Number>}\r\n     * @param b {Array<Number>}\r\n     * @returns {number}\r\n     */\n    getPolarDistance: function getPolarDistance(a, b) {\n        var radians = this.RADIAN;\n        return Math.sqrt(a[1] * a[1] + b[1] * b[1] - 2 * a[1] * b[1] * Math.cos(a[0] * radians - b[0] * radians));\n    },\n    /**\r\n     * @param origin\r\n     * @param target\r\n     * @returns {number}\r\n     * 0 is flat (left-right), positive is clockwise.\r\n     * We use 125 instead of 180 to account for natural hand-height adjustments\r\n     * of various swing heights.\r\n     */\n    battingAngle: function battingAngle(origin, target) {\n        return Math.atan((origin.y - target.y) / (target.x - origin.x)) / Math.PI * 125;\n    },\n    memory: {},\n    /**\r\n     * @param percent {number} 0-100\r\n     * @param quarter {number} seconds\r\n     * @param step {number} 0 and up\r\n     * @param [givenApexHeight] feet\r\n     * @param [givenDistance] in feet\r\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\r\n     * @returns {{bottom: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\r\n     */\n    transitionalTrajectory: function transitionalTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle) {\n        if (givenApexHeight) Mathinator.prototype.memory.apexHeight = givenApexHeight;\n        if (givenDistance) Mathinator.prototype.memory.distance = givenDistance;\n        if (givenSplayAngle) Mathinator.prototype.memory.splay = givenSplayAngle;\n        var apexHeight = Mathinator.prototype.memory.apexHeight,\n            distance = Mathinator.prototype.memory.distance,\n            splay = Mathinator.prototype.memory.splay;\n        var bottom, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            quarter *= 4;\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        bottom = Math.cos(splay * radian) * percent / 100 * distance * 95 / 300;\n        left = Math.sin(splay * radian) * percent / 100 * distance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        var apexRatio = Math.sqrt((50 - Math.abs(percent - 50)) / 100) * (1 / 0.7071);\n        if (bounding) {\n            padding = 1;\n            borderWidth = 1;\n        } else {\n            padding = apexRatio * apexHeight / 90 * 15;\n            borderWidth = 2 + apexRatio * 2;\n        }\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n        padding = Math.max(Math.min(padding, 12), 0);\n        return {\n            bottom: bottom,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\r\n     * @param percent {number} 0-100\r\n     * @param quarter {number} seconds\r\n     * @param step {number} 0 and up\r\n     * @param [givenApexHeight] feet\r\n     * @param [givenDistance] in feet\r\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\r\n     * @param [givenOrigin] Object with x, y -- pitchInFlight\r\n     * @returns {{top: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\r\n     */\n    transitionalCatcherPerspectiveTrajectory: function transitionalCatcherPerspectiveTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle, givenOrigin) {\n        var memory = Mathinator.prototype.memory;\n        if (givenApexHeight) memory.apexHeight = givenApexHeight;\n        if (givenDistance) memory.distance = givenDistance;\n        if (givenSplayAngle) memory.splay = givenSplayAngle;\n        if (givenOrigin) memory.origin = givenOrigin;\n        var apexHeight = memory.apexHeight,\n            distance = memory.distance,\n            splay = memory.splay,\n            origin = memory.origin;\n        var top, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        var height = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 1.2) * apexHeight,\n            currentDistance = distance * percent / 100;\n\n        var projection = Math.pow((500 - currentDistance) / 500, 2); // reduction of dimensions due to distance\n\n        top = 200 - origin.y - height * 20 * projection + percent / 100 * (origin.y - 85) * projection;\n        left = origin.x + Math.sin(splay * radian) * (currentDistance * 8) * projection;\n        padding = 12 * projection * projection;\n        borderWidth = Math.max(Math.min(padding / 3, 4), 0);\n\n        top = Math.max(Math.min(top, 500), -10000);\n        left = Math.max(Math.min(left, 10000), -10000);\n        padding = Math.max(Math.min(padding, 24), 1);\n\n        //console.log('height', height|0, apexHeight|0, projection, 'left/pad/border', left|0, padding|0, borderWidth|0, 'top', top);\n\n        return {\n            top: top,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\r\n     * @param swingResult\r\n     * @returns {Game.swingResult}\r\n     */\n    translateSwingResultToStylePosition: function translateSwingResultToStylePosition(swingResult) {\n        // CF HR bottom: 95px, centerline: left: 190px;\n        var bottom, left;\n\n        bottom = Math.cos(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300;\n        left = Math.sin(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n\n        swingResult.bottom = bottom + 'px';\n        swingResult.left = left + 'px';\n        return swingResult;\n    },\n    /**\r\n     * @param left {number} 0-200\r\n     * @param top {number} 0-200\r\n     * @param originLeft {number} 0-200\r\n     * @param originTop {number} 0-200\r\n     * @param quarter {number} seconds\r\n     * @param maxPadding {number} px padding at full size\r\n     * @param maxBorderWidth {number} px border width at full size\r\n     * @returns {Function}\r\n     */\n    pitchTransition: function pitchTransition(top, left, originTop, originLeft, quarter, maxPadding, maxBorderWidth) {\n        /**\r\n         * @param percent {number} 0-100\r\n         * @param step {number} 0 and up\r\n         * @param [breakTop] {number} 0-200 override\r\n         * @param [breakLeft] {number} 0-200 override\r\n         * @returns {{top: number, left: number, padding: string, borderWidth: string, transform: string, delay: number, ease: *}}\r\n         */\n        return function (percent, step, breakTop, breakLeft) {\n            var _top, _left;\n            _top = breakTop || top;\n            _left = breakLeft || left;\n            _top = originTop + Mathinator.square(percent / 100) * (_top - originTop);\n            if (step == 1) {\n                _top -= 2;\n            }\n            if (step == 2) {\n                _top -= 1;\n            }\n            _left = originLeft + Mathinator.square(percent / 100) * (_left - originLeft);\n            var padding = Math.max(Mathinator.square(percent / 100) * maxPadding, 1),\n                borderWidth = Math.max(Mathinator.square(percent / 100) * maxBorderWidth, 1);\n            return {\n                top: _top,\n                left: _left,\n                padding: padding + 'px',\n                borderWidth: borderWidth + 'px',\n                transform: 'translateZ(0)',\n                delay: quarter * step,\n                ease: Linear.easeNone\n            };\n        };\n    },\n    /**\r\n     * @param distance {number} feet\r\n     * @param throwing {number} 0-1\r\n     * @param fielding {number} 0-1\r\n     * @param intercept {number} approx. -140 to 140\r\n     * @returns {number} seconds\r\n     */\n    fielderReturnDelay: function fielderReturnDelay(distance, throwing, fielding, intercept) {\n        return distance / 90 // bip distance (up to 3s+)\n         + 5 * (distance / 310) // worst case time to reach the ball,\n         * Math.min(intercept - 120, 0) / -240 // a good intercept rating will cut the base down to 0\n         + 1 - (0.2 + fielding * 0.8) // gather time (up to 0.8s)\n         + distance / 90 / (0.5 + throwing / 2); // throwing distance (up to 2s)\n    },\n    /**\r\n     * @param player {Player}\r\n     * @returns {number} ~2.0\r\n     */\n    infieldThrowDelay: function infieldThrowDelay(player) {\n        var fielding = player.skill.defense.fielding,\n            throwing = player.skill.defense.throwing;\n        return 3.5 - (fielding + throwing) / 200;\n    },\n    /**\r\n     * @param speed {number} 0-100\r\n     * @returns {number} seconds\r\n     */\n    baseRunningTime: function baseRunningTime(speed) {\n        return 7.0 - speed / 100 * 4.1;\n    },\n    /**\r\n     * @param x {Number} bat offset\r\n     * @param y {Number} bat offset\r\n     * @param angle {Number} batting angle where 0 is horizontal, RHB clockwise increasing\r\n     * {\r\n     *   splay: -90 to 90 where 0 is up the middle,\r\n     *   fly: 0, flat, to 90, vertical pop up\r\n     * }\r\n     * @param eye {Number} 0 - 100 skill rating\r\n     * @returns {{splay: number, fly: number}}\r\n     */\n    getSplayAndFlyAngle: function getSplayAndFlyAngle(x, y, angle, eye) {\n\n        var splay = -2.5 * x - angle / 20 * y;\n        var direction = splay > 0 ? 1 : -1;\n        // additional timing splay\n        splay += direction * Math.random() * 45 * (100 / (50 + eye));\n\n        return {\n            splay: splay,\n            fly: -3 * y - angle / 35 * y\n        };\n    },\n    /**\r\n     * @param velocityRating {Number} 0-100\r\n     * @returns {number}\r\n     */\n    getFlightTime: function getFlightTime(velocityRating) {\n        return 1.3 - 0.6 * (velocityRating + 300) / 400;\n    }\n};\n\nfor (var fn in Mathinator.prototype) {\n    if (Mathinator.prototype.hasOwnProperty(fn)) {\n        Mathinator[fn] = Mathinator.prototype[fn];\n    }\n}\n\nexports.Mathinator = Mathinator;\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":21,\"baseball/Services/Distribution\":22,\"baseball/Services/Iterator\":23,\"baseball/Services/Mathinator\":24}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _TeamJapan = require('./TeamJapan');\n\nvar Provider = (function () {\n    function Provider() {\n        _classCallCheck(this, Provider);\n    }\n\n    _createClass(Provider, [{\n        key: 'assignTeam',\n        value: function assignTeam(game, team, side) {\n            var special = this.teams[team];\n            special.game = game;\n            game.teams[side] = special;\n        }\n    }]);\n\n    return Provider;\n})();\n\nProvider.prototype.teams = {\n    TeamJapan: _TeamJapan.samurai\n};\n\nexports.Provider = Provider;\n\n},{\"./TeamJapan\":27}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballTeamsTrainer = require('baseball/Teams/Trainer');\n\nvar samurai = new _baseballModel_models.Team('no init');\nsamurai.name = 'Japan';\nsamurai.nameJ = '日本';\n\nvar darvish = new _baseballModelPlayer.Player(samurai),\n    johjima = new _baseballModelPlayer.Player(samurai),\n    ogasawara = new _baseballModelPlayer.Player(samurai),\n    nishioka = new _baseballModelPlayer.Player(samurai),\n    kawasaki = new _baseballModelPlayer.Player(samurai),\n    murata = new _baseballModelPlayer.Player(samurai),\n    matsui = new _baseballModelPlayer.Player(samurai),\n    ichiro = new _baseballModelPlayer.Player(samurai),\n    inaba = new _baseballModelPlayer.Player(samurai);\n\nvar matsuzaka = new _baseballModelPlayer.Player(samurai),\n    fukudome = new _baseballModelPlayer.Player(samurai),\n    aoki = new _baseballModelPlayer.Player(samurai),\n    abe = new _baseballModelPlayer.Player(samurai),\n    iwamura = new _baseballModelPlayer.Player(samurai);\n\nvar coach = new _baseballTeamsTrainer.Trainer();\n\ncoach.makePlayer(darvish, 'Yu', 'Darvish', 'ダルビッシュ', '有', 150, { eye: 80, power: 80, speed: 80 }, { catching: 50, fielding: 70, throwing: 100, speed: 80 }, 'right', 'right', 11);\n\ncoach.makePlayer(johjima, 'Kenji', 'Johjima', '城島', '健司', 60, { eye: 90, power: 88, speed: 70 }, { catching: 140, fielding: 95, throwing: 88, speed: 94 }, 'right', 'right', 2);\n\ncoach.makePlayer(ogasawara, 'Michihiro', 'Ogasawara', '小笠原', '道大', 80, { eye: 96, power: 115, speed: 90 }, { catching: 50, fielding: 96, throwing: 85, speed: 70 }, 'left', 'right', 36);\n\ncoach.makePlayer(nishioka, 'Tsuyoshi', 'Nishioka', '西岡', '剛', 80, { eye: 88, power: 75, speed: 92 }, { catching: 90, fielding: 88, throwing: 88, speed: 90 }, 'right', 'right', 7);\n\ncoach.makePlayer(kawasaki, 'Munenori', 'Kawasaki', '川崎', '宗則', 80, { eye: 95, power: 75, speed: 92 }, { catching: 90, fielding: 98, throwing: 90, speed: 110 }, 'left', 'right', 52);\n\ncoach.makePlayer(murata, 'Shuichi', 'Murata', '村田', '修一', 80, { eye: 82, power: 110, speed: 60 }, { catching: 80, fielding: 80, throwing: 90, speed: 90 }, 'right', 'right', 25);\n\ncoach.makePlayer(matsui, 'Hideki', 'Matsui', '秀樹', '松井', 75, { eye: 104, power: 130, speed: 68 }, { catching: 40, fielding: 85, throwing: 70, speed: 60 }, 'left', 'right', 55);\n\ncoach.makePlayer(ichiro, 'Ichiro', 'Suzuki', 'イチロー', '', 115, { eye: 115, power: 48, speed: 99 }, { catching: 80, fielding: 110, throwing: 135, speed: 120 }, 'left', 'right', 51);\n\ncoach.makePlayer(inaba, 'Atsunori', 'Inaba', '稲葉', '篤紀', 80, { eye: 92, power: 95, speed: 75 }, { catching: 50, fielding: 95, throwing: 95, speed: 90 }, 'right', 'right', 41);\n\nsamurai.bench = [darvish, johjima, ogasawara, nishioka, kawasaki, murata, matsui, ichiro, inaba, matsuzaka, fukudome, aoki, abe, iwamura];\nsamurai.manager.makeLineup();\nsamurai.positions = {\n    pitcher: darvish,\n    catcher: johjima,\n\n    first: ogasawara,\n    second: nishioka,\n    short: kawasaki,\n    third: murata,\n\n    left: matsui,\n    center: ichiro,\n    right: inaba\n};\n\nfor (var position in samurai.positions) {\n    if (samurai.positions.hasOwnProperty(position)) {\n        samurai.positions[position].position = position;\n    }\n}\n\nsamurai.lineup = [ichiro, kawasaki, inaba, matsui, ogasawara, johjima, murata, nishioka, darvish];\n\nsamurai.lineup.map(function (player, order) {\n    player.order = order;\n});\n\nexports.samurai = samurai;\n\n},{\"baseball/Model/Player\":5,\"baseball/Model/_models\":8,\"baseball/Teams/Trainer\":28}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar Trainer = (function () {\n    function Trainer() {\n        _classCallCheck(this, Trainer);\n    }\n\n    _createClass(Trainer, [{\n        key: 'makePlayer',\n        value: function makePlayer(player, name, surname, surnameJ, nameJ, pitching, offense, defense, bats, throws, number) {\n            player.hero = true;\n\n            if ('rights' && 0) {\n                surnameJ = '代表';\n                nameJ = '選手';\n                name = 'TEAM';\n                surname = 'JPN';\n            }\n\n            player.name = name + ' ' + surname;\n            player.nameJ = surnameJ + nameJ;\n            player.surname = surname;\n            player.surnameJ = surnameJ;\n\n            player.spaceName(surnameJ, nameJ);\n            player.randomizeSkills(true, true);\n            player.skill.offense = offense;\n            player.skill.defense = defense;\n            player.skill.pitching = pitching;\n            player.bats = bats;\n            player.throws = throws;\n            player.number = number;\n            _baseballServicesIterator.Iterator.each(player.pitching, function (key, value) {\n                player.pitching[key].velocity += pitching / 5 | 0;\n                player.pitching[key]['break'] += pitching / 5 | 0;\n                player.pitching[key].control += pitching / 5 | 0;\n            });\n            player.resetStats(0);\n        }\n    }]);\n\n    return Trainer;\n})();\n\nexports.Trainer = Trainer;\n\n},{\"baseball/Services/Iterator\":23}],29:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nvar Log = function Log() {\n    this.init();\n};\n\nLog.prototype = {\n    game: 'instance of Game',\n    init: function init() {\n        this.stabilized = {\n            pitchRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            },\n            shortRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            }\n        };\n        this.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.shortRecord = {\n            e: [],\n            n: []\n        };\n        this.record = {\n            e: [],\n            n: []\n        };\n    },\n    SINGLE: 'H',\n    DOUBLE: '2B',\n    TRIPLE: '3B',\n    HOMERUN: 'HR',\n    WALK: 'BB',\n    GROUNDOUT: 'GO',\n    FLYOUT: 'FO',\n    LINEOUT: 'LO',\n    RUN: 'R',\n    STRIKEOUT: 'SO',\n    SACRIFICE: 'SAC',\n    REACHED_ON_ERROR: 'ROE',\n    FIELDERS_CHOICE: 'FC',\n    GIDP: '(IDP)',\n    GITP: '(ITP)',\n    stabilizeShortRecord: function stabilizeShortRecord() {\n        var rec = this.record.e.slice(0, 6);\n        this.shortRecord.e = rec;\n        this.stabilized.shortRecord.e = rec.concat(['', '', '', '', '', '']).slice(0, 6);\n\n        var rec2 = this.record.n.slice(0, 6);\n        this.shortRecord.n = rec2;\n        this.stabilized.shortRecord.n = rec2.concat(['', '', '', '', '', '']).slice(0, 6);\n    },\n    note: function note(_note, noteJ) {\n        this.record.e.unshift(_note);\n        this.record.n.unshift(noteJ);\n        this.stabilizeShortRecord();\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(noteJ);\n            } else {\n                console.log(_note);\n            }\n        });\n    },\n    getBatter: function getBatter(batter) {\n        var order = batter.team.nowBatting;\n        order = ({\n            0: (0, _baseballUtilityText.text)(' 1st'),\n            1: (0, _baseballUtilityText.text)(' 2nd'),\n            2: (0, _baseballUtilityText.text)(' 3rd'),\n            3: (0, _baseballUtilityText.text)(' 4th'),\n            4: (0, _baseballUtilityText.text)(' 5th'),\n            5: (0, _baseballUtilityText.text)(' 6th'),\n            6: (0, _baseballUtilityText.text)(' 7th'),\n            7: (0, _baseballUtilityText.text)(' 8th'),\n            8: (0, _baseballUtilityText.text)(' 9th')\n        })[order];\n        var positions = this.longFormFielder();\n        return (0, _baseballUtilityText.text)('Now batting') + order + _baseballUtilityText.text.comma() + positions[batter.position] + _baseballUtilityText.text.comma() + batter.getUniformNumber() + _baseballUtilityText.text.comma() + batter.getName();\n    },\n    noteBatter: function noteBatter(batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getBatter(batter);\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getBatter(batter);\n        _baseballUtilityText.text.mode = m;\n        this.note(record, recordJ);\n    },\n    getPitchLocationDescription: function getPitchLocationDescription(pitchInFlight, batterIsLefty) {\n        var x = pitchInFlight.x,\n            y = pitchInFlight.y,\n            say = '';\n        var noComma = false,\n            noComma2 = false;\n        var ball = false;\n        if (!batterIsLefty) x = 200 - x;\n        if (x < 50) {\n            say += (0, _baseballUtilityText.text)('way outside');\n            ball = true;\n        } else if (x < 70) {\n            say += (0, _baseballUtilityText.text)('outside');\n        } else if (x < 100) {\n            say += '';\n            noComma = true;\n        } else if (x < 130) {\n            say += '';\n            noComma = true;\n        } else if (x < 150) {\n            say += (0, _baseballUtilityText.text)('inside');\n        } else {\n            say += (0, _baseballUtilityText.text)('way inside');\n            ball = true;\n        }\n        if (say != '') say += _baseballUtilityText.text.comma();\n        if (y < 35) {\n            say += (0, _baseballUtilityText.text)('way low');\n            ball = true;\n        } else if (y < 65) {\n            say += (0, _baseballUtilityText.text)('low');\n        } else if (y < 135) {\n            say += '';\n            noComma2 = true;\n        } else if (y < 165) {\n            say += (0, _baseballUtilityText.text)('high');\n        } else {\n            say += (0, _baseballUtilityText.text)('way high');\n            ball = true;\n        }\n        if (noComma || noComma2) {\n            say = say.split(_baseballUtilityText.text.comma()).join('');\n            if (noComma && noComma2) {\n                say = (0, _baseballUtilityText.text)('down the middle');\n            }\n        }\n        // say = (ball ? 'Ball, ' : 'Strike, ') + say;\n        say = _baseballUtilityText.text.namePitch(pitchInFlight) + _baseballUtilityText.text.comma() + say + _baseballUtilityText.text.stop();\n        return say;\n    },\n    notePitch: function notePitch(pitchInFlight, batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.pop();\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.pop();\n        _baseballUtilityText.text.mode = m;\n    },\n    broadcastCount: function broadcastCount(justOuts) {\n        if (!this.game.umpire) return '';\n        var count = this.game.umpire.count;\n        if (this.lastOuts == 2 && count.outs == 0) {\n            outs = 3 + (0, _baseballUtilityText.text)(' outs');\n        } else {\n            var outs = count.outs + (count.outs == 1 ? (0, _baseballUtilityText.text)(' out') : (0, _baseballUtilityText.text)(' outs'));\n        }\n        this.lastOuts = count.outs;\n        if (justOuts) {\n            return outs + _baseballUtilityText.text.stop();\n        }\n        return count.strikes + '-' + count.balls + ', ' + outs + _baseballUtilityText.text.stop();\n    },\n    broadcastScore: function broadcastScore() {\n        return this.game.teams.away.getName() + ' ' + this.game.tally.away.R + ', ' + this.game.teams.home.getName() + ' ' + this.game.tally.home.R + _baseballUtilityText.text.stop();\n    },\n    broadcastRunners: function broadcastRunners() {\n        var field = this.game.field;\n        var runners = [field.first && (0, _baseballUtilityText.text)('first') || '', field.second && (0, _baseballUtilityText.text)('second') || '', field.third && (0, _baseballUtilityText.text)('third') || ''].filter(function (x) {\n            return x;\n        });\n\n        var runnerCount = 0;\n        runners.map(function (runner) {\n            if (runner) {\n                runnerCount++;\n            }\n        });\n\n        switch (runnerCount) {\n            case 0:\n                return (0, _baseballUtilityText.text)('Bases empty') + _baseballUtilityText.text.stop();\n            case 1:\n                return (0, _baseballUtilityText.text)('Runner on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n            default:\n                return (0, _baseballUtilityText.text)('Runners on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n        }\n    },\n    getSwing: function getSwing(swingResult) {\n        var result = '';\n        if (swingResult.looking) {\n            if (swingResult.strike) {\n                result += (0, _baseballUtilityText.text)('Strike.');\n            } else {\n                result += (0, _baseballUtilityText.text)('Ball.');\n            }\n        } else {\n            if (swingResult.contact) {\n                if (swingResult.foul) {\n                    result += (0, _baseballUtilityText.text)('Fouled off.');\n                } else {\n                    if (swingResult.caught) {\n                        result += (0, _baseballUtilityText.text)('In play.');\n                    } else {\n                        if (swingResult.thrownOut) {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        } else {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        }\n                    }\n                }\n            } else {\n                result += (0, _baseballUtilityText.text)('Swinging strike.');\n            }\n        }\n        return result;\n    },\n    noteSwing: function noteSwing(swingResult) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getSwing(swingResult);\n        pitchRecord.e[0] += record;\n        stabilized.e[0] += record;\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getSwing(swingResult);\n        pitchRecord.n[0] += recordJ;\n        stabilized.n[0] += recordJ;\n        _baseballUtilityText.text.mode = m;\n        recordJ = stabilized.n[0];\n        record = stabilized.e[0];\n        var giraffe = this;\n        record.indexOf('Previous') !== 0 && this.async(function () {\n            if (record.indexOf('In play') > -1 && record.indexOf('struck out') > -1) {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(recordJ);\n                } else {\n                    console.log(record);\n                }\n            } else {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(giraffe.broadcastCount(), recordJ);\n                } else {\n                    console.log(giraffe.broadcastCount(), record);\n                }\n            }\n        });\n    },\n    async: function async(fn) {\n        if (!this.game.console && !this.game.quickMode) {\n            setTimeout(fn, 100);\n        }\n    },\n    getPlateAppearanceResult: function getPlateAppearanceResult(game) {\n        var r = game.swingResult;\n        var record = '';\n        var batter = game.batter.getName();\n        var out = [];\n        if (r.looking) {\n            if (r.strike) {\n                record = batter + (0, _baseballUtilityText.text)(' struck out looking.');\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' walked.');\n            }\n        } else {\n            if (r.contact) {\n                var fielder = r.fielder,\n                    bases = r.bases,\n                    outBy;\n                if (r.caught) {\n                    if (r.flyAngle < 15) {\n                        outBy = 'line';\n                    } else {\n                        if (['left', 'center', 'right'].indexOf(r.fielder) < 0) {\n                            outBy = 'pop';\n                        } else {\n                            outBy = 'fly';\n                        }\n                    }\n                } else {\n                    if (r.foul) {\n                        // not possible to end PA on foul?\n                    } else {\n                            if (r.error) {\n                                bases = 1;\n                                outBy = 'error';\n                            } else {\n                                if (r.thrownOut) {\n                                    if (Math.random() < 0.5) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'thrown';\n                                    }\n                                } else {\n                                    switch (r.bases) {\n                                        case 1:\n                                        case 2:\n                                        case 3:\n                                            bases = r.bases;\n                                            break;\n                                        case 4:\n                                            bases = 4;\n                                            if (r.splay < -15) {\n                                                fielder = 'left';\n                                            } else if (r.splay < 15) {\n                                                fielder = 'center';\n                                            } else {\n                                                fielder = 'right';\n                                            }\n                                            break;\n                                    }\n                                }\n                                if (r.firstOut) {\n                                    out = out.concat(r.additionalOuts.filter(function (runner) {\n                                        return runner !== 'batter';\n                                    }));\n                                    out.doublePlay = r.doublePlay;\n                                }\n                                if (r.fieldersChoice) {\n                                    out.push(r.fieldersChoice);\n                                    if (r.outs == 3) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'fieldersChoice';\n                                    }\n                                }\n                            }\n                        }\n                }\n                record = _baseballUtilityText.text.contactResult(batter, fielder, bases, outBy, r.outs === 3 ? [] : r.sacrificeAdvances, out);\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' struck out swinging.');\n            }\n        }\n        return record;\n    },\n    notePlateAppearanceResult: function notePlateAppearanceResult(game) {\n        var m = _baseballUtilityText.text.mode,\n            prevJ = (0, _baseballUtilityText.text)('Previous: ', 'n'),\n            prev = (0, _baseballUtilityText.text)('Previous: ', 'e');\n\n        var statement,\n            record = this.record,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n\n        _baseballUtilityText.text.mode = 'e';\n        var result = this.getPlateAppearanceResult(game);\n        record.e.unshift(result);\n        statement = prev + result;\n        pitchRecord.e = [statement];\n        stabilized.e = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = 'n';\n        var resultJ = this.getPlateAppearanceResult(game);\n        record.n.unshift(resultJ);\n        statement = prevJ + resultJ;\n        pitchRecord.n = [statement];\n        stabilized.n = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = m;\n        var giraffe = this;\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(['%c' + resultJ, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            } else {\n                console.log(['%c' + result, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            }\n        });\n    },\n    pointer: 0,\n    stabilized: {\n        pitchRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        },\n        shortRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        }\n    },\n    pitchRecord: {\n        e: [],\n        n: []\n    },\n    shortRecord: {\n        e: [],\n        n: []\n    },\n    record: {\n        e: [],\n        n: []\n    },\n    longFormFielder: function longFormFielder() {\n        return {\n            first: (0, _baseballUtilityText.text)('first baseman'),\n            second: (0, _baseballUtilityText.text)('second baseman'),\n            third: (0, _baseballUtilityText.text)('third baseman'),\n            short: (0, _baseballUtilityText.text)('shortstop'),\n            pitcher: (0, _baseballUtilityText.text)('pitcher'),\n            catcher: (0, _baseballUtilityText.text)('catcher'),\n            left: (0, _baseballUtilityText.text)('left fielder'),\n            center: (0, _baseballUtilityText.text)('center fielder'),\n            right: (0, _baseballUtilityText.text)('right fielder')\n        };\n    }\n};\n\nexports.Log = Log;\n\n},{\"baseball/Utility/text\":33}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballUtilityData = require('baseball/Utility/data');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nexports.data = _baseballUtilityData.data;\nexports.helper = _baseballUtilityHelper.helper;\nexports.Log = _baseballUtilityLog.Log;\nexports.text = _baseballUtilityText.text;\n\n},{\"baseball/Utility/Log\":29,\"baseball/Utility/data\":31,\"baseball/Utility/helper\":32,\"baseball/Utility/text\":33}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar data = {\n    surnames: ['Sato', 'Suzuki', 'Takahashi', 'Tanaka', 'Watanabe', 'Ito', 'Nakamura', 'Kobayashi', 'Yamamoto', 'Kato', 'Yoshida', 'Yamada', 'Sasaki', 'Yamaguchi', 'Matsumoto', 'Inoue', 'Kimura', 'Shimizu', 'Hayashi', 'Saito', 'Saito', 'Yamazaki', 'Nakajima', 'Mori', 'Abe', 'Ikeda', 'Hashimoto', 'Ishikawa', 'Yamashita', 'Ogawa', 'Ishii', 'Hasegawa', 'Goto', 'Okada', 'Kondo', 'Maeda', 'Fujita', 'Endo', 'Aoki', 'Sakamoto', 'Murakami', 'Ota', 'Kaneko', 'Fujii', 'Fukuda', 'Nishimura', 'Miura', 'Takeuchi', 'Nakagawa', 'Okamoto', 'Matsuda', 'Harada', 'Nakano'],\n    surnamesJ: ['佐藤', '鈴木', '高橋', '田中', '渡辺', '伊藤', '中村', '小林', '山本', '加藤', '吉田', '山田', '佐々木', '山口', '松本', '井上', '木村', '清水', '林', '斉藤', '斎藤', '山崎', '中島', '森', '阿部', '池田', '橋本', '石川', '山下', '小川', '石井', '長谷川', '後藤', '岡田', '近藤', '前田', '藤田', '遠藤', '青木', '坂本', '村上', '太田', '金子', '藤井', '福田', '西村', '三浦', '竹内', '中川', '岡本', '松田', '原田', '中野'],\n\n    namesJ: ['匠', 'ヒカル', 'ゆうき', '翔太', '冬馬', '漣', '港区', 'ルイ', '樹', '賢治', '五木', '春', '光一', '宗介', 'こうすけ', '雄太', '大樹', '瑛太',\n    // newer set\n    '宏', '亨', '道夫', '聡', '昭', '茂雄', '勝', '純一', '和夫', '勲', '省三', '隆', '達夫', '正一', '輝夫', '俊夫', '史郎', '勇', '義弘', '良雄', '登', '義明', '正義', '秀夫', '肇', '月', '克己', '正男', '光男', '久', '耕三', '清', '次郎', '正博', '明子', '武', '勉', '晴夫', '裕二', '稔', '障子', '和子', '敦', '茂', '信夫', '恵一', '忠', '高尾', '薫', 'ケン', '健治', '哲夫', '啓二', '光一', '真一', '貞夫', '靖', '武', '雄', '文雄', '久雄', '一朗', '健一', '正明', '五郎', '誠', '昭夫', '誠司', '洋一', '康夫', '誠一', '正美', '則夫', '幸雄', '忠雄', '仁', 'シンジ', '豊', '邦雄', '修', '雅之', '三郎', '英治', '浩二', '栄一', '恒夫', '義郎', '進', '博之', '巌'],\n    names: ['Takumi', 'Hikaru', 'Yuuki', 'Shouta', 'Touma', 'Ren', 'Minato', 'Rui', 'Tatsuki', 'Kenji', 'Itsuki', 'Haru', 'Kouichi', 'Sousuke', 'Kousuke', 'Yuuta', 'Daiki', 'Eita',\n    // newer set\n    'Hiroshi', 'Toru', 'Michio', 'Satoshi', 'Akira', 'Shigeo', 'Masaru', 'Junichi', 'Kazuo', 'Isao', 'Shozo', 'Takashi', 'Tatsuo', 'Shoichi', 'Teruo', 'Toshio', 'Shiro', 'Isamu', 'Yoshihiro', 'Yoshio', 'Noboru', 'Yoshiaki', 'Tadayoshi', 'Hideo', 'Hajime', 'Akari', 'Katsumi', 'Masao', 'Mitsuo', 'Hisashi', 'Kozo', 'Kiyoshi', 'Jiro', 'Masahiro', 'Akiko', 'Takeshi', 'Tsutomu', 'Haruo', 'Yuji', 'Minoru', 'Shoji', 'Kazuko', 'Atsushi', 'Shigeru', 'Shinobu', 'Keiichi', 'Tadashi', 'Takao', 'Kaoru', 'Ken', 'Kenji', 'Tetsuo', 'Keiji', 'Koichi', 'Shinichi', 'Sadao', 'Yasushi', 'Takeshi', 'Yu', 'Fumio', 'Hisao', 'Ichiro', 'Kenichi', 'Masaaki', 'Goro', 'Makoto', 'Akio', 'Seiji', 'Yoichi', 'Yasuo', 'Seiichi', 'Masami', 'Norio', 'Yukio', 'Tadao', 'Hitoshi', 'Shinji', 'Yutaka', 'Kunio', 'Osamu', 'Masayuki', 'Saburo', 'Eiji', 'Koji', 'Eiichi', 'Tsuneo', 'Yoshio', 'Susumu', 'Hiroyuki', 'Iwao'],\n    teamNamesJ: ['横浜', '大阪', '名古屋', '札幌', '神戸', '京都', '福岡', '川崎', '埼玉県', '広島', '仙台', '千葉県', '新潟', '浜松', '静岡', '相模原', '岡山', '熊本', '鹿児島', '船橋', '川口', '姫路', '松山', '宇都宮', '松戸', '西宮', '倉敷', '市川', '福山', '尼崎', '金沢', '長崎', '横須賀', '富山', '高松', '町田', '岐阜', '枚方', '藤沢', '柏', '豊中', '長野県', '豊橋', '一宮', '和歌山', '岡崎', '宮崎', '奈良', '吹田', '高槻', '旭川', 'いわき', '高崎', '所沢', '川越', '秋田', '越谷', '前橋', '那覇', '四日市', '青森', '久留米', '春日井', '盛岡', '明石', '福島', '下関', '長岡', '市原', '函館', '茨城県', '福井', '加古川', '徳島', '水戸', '平塚', '佐世保', '呉', '八戸', '佐賀', '寝屋川', '富士', '春日部', '茅ヶ崎', '松本', '厚木', '大和', '上尾', '宝塚', '筑波', '沼津', '熊谷', '伊勢崎', '岸和田', '鳥取', '小田原', '鈴鹿', '松江', '日立'],\n    teamNames: ['Yokohama', 'Osaka', 'Nagoya', 'Sapporo', 'Kobe', 'Kyoto', 'Fukuoka', 'Kawasaki', 'Saitama', 'Hiroshima', 'Sendai', 'Chiba', 'Niigata', 'Hamamatsu', 'Shizuoka', 'Sagamihara', 'Okayama', 'Kumamoto', 'Kagoshima', 'Funabashi', 'Kawaguchi', 'Himeji', 'Matsuyama', 'Utsunomiya', 'Matsudo', 'Nishinomiya', 'Kurashiki', 'Ichikawa', 'Fukuyama', 'Amagasaki', 'Kanazawa', 'Nagasaki', 'Yokosuka', 'Toyama', 'Takamatsu', 'Machida', 'Gifu', 'Hirakata', 'Fujisawa', 'Kashiwa', 'Toyonaka', 'Nagano', 'Toyohashi', 'Ichinomiya', 'Wakayama', 'Okazaki', 'Miyazaki', 'Nara', 'Suita', 'Takatsuki', 'Asahikawa', 'Iwaki', 'Takasaki', 'Tokorozawa', 'Kawagoe', 'Akita', 'Koshigaya', 'Maebashi', 'Naha', 'Yokkaichi', 'Aomori', 'Kurume', 'Kasugai', 'Morioka', 'Akashi', 'Fukushima', 'Shimonoseki', 'Nagaoka', 'Ichihara', 'Hakodate', 'Ibaraki', 'Fukui', 'Kakogawa', 'Tokushima', 'Mito', 'Hiratsuka', 'Sasebo', 'Kure', 'Hachinohe', 'Saga', 'Neyagawa', 'Fuji', 'Kasukabe', 'Chigasaki', 'Matsumoto', 'Atsugi', 'Yamato', 'Ageo', 'Takarazuka', 'Tsukuba', 'Numazu', 'Kumagaya', 'Isesaki', 'Kishiwada', 'Tottori', 'Odawara', 'Suzuka', 'Matsue', 'Hitachi']\n};\n\nexports.data = data;\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar helper = {\n    /**\r\n     * rotation angle from 0 to 360 where 180 is a fastball's backspin and 90 is a slider's, 0 for curveball\r\n     * in the direction (CW for righty), CCW for lefty.\r\n     *\r\n     * x movement, y movement, speed ratio, rotation angle, RPM from RHP perspective where left is smaller X\r\n     */\n    pitchDefinitions: {\n        // fastball, kinda\n        '4-seam': [0, 0, 1, 180, 1000],\n        '2-seam': [20, -20, 0.90, -45, 1200],\n        'cutter': [-25, -20, 0.95, 75, 1200],\n        'sinker': [15, -30, 0.95, -45, 1500],\n\n        // breaking ball\n        'slider': [-50, -35, 0.9, 80, 2000],\n        'fork': [0, -70, 0.87, 20, 500],\n        'curve': [0, -110, 0.82, 10, 2500],\n\n        // change-up\n        'change': [0, -10, 0.88, -15, 1000]\n    },\n    selectRandomPitch: function selectRandomPitch() {\n        return ['4-seam', '2-seam', 'cutter', 'sinker', 'slider', 'fork', 'curve', 'change'][Math.floor(Math.random() * 8)];\n    }\n};\n\nexports.helper = helper;\n\n},{}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar text = function text(phrase, override) {\n    if (!text.mode) text.mode = 'n';\n    var string = ({\n        n: {\n            empty: '-',\n            ' 1st': '1番',\n            ' 2nd': '2番',\n            ' 3rd': '3番',\n            ' 4th': '4番',\n            ' 5th': '5番',\n            ' 6th': '6番',\n            ' 7th': '7番',\n            ' 8th': '8番',\n            ' 9th': '9番',\n            'Now batting': '次のバッター',\n            'way outside': '相当外角',\n            'outside': '外角',\n            'inside': '内角',\n            'way inside': '相当内角',\n            'way low': '相当低め',\n            'low': '低め',\n            'high': '高め',\n            'way high': '相当高め',\n            'down the middle': '真ん中',\n            'first baseman': 'ファースト',\n            'second baseman': 'セカンド',\n            'third baseman': 'サード',\n            'shortstop': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left fielder': 'レフト',\n            'center fielder': 'センター',\n            'right fielder': 'ライト',\n            'Strike.': 'ストライク。',\n            'Ball.': 'ボール。',\n            'Fouled off.': 'ファウル。',\n            'In play.': 'インプレー。',\n            'Swinging strike.': '空振り。',\n            ' outs': 'アウト',\n            ' out': 'アウト',\n            '4-seam': 'ストレート',\n            '2-seam': 'シュート',\n            'slider': 'スライダー',\n            'fork': 'フォーク',\n            'cutter': 'カット',\n            'sinker': 'シンカー',\n            'curve': 'カーブ',\n            'change': 'チェンジ',\n            ' struck out looking.': '、見逃し三振。',\n            ' walked.': '、フォアボール。',\n            ' struck out swinging.': '、空振り三振。',\n            'Previous: ': '前：',\n            'looks like: ': '予想',\n            'breaking ball': '変化球',\n            'fastball': 'ストレート',\n            'Batting, ': '打球',\n            'Catching, pitch selection': '捕球選択',\n            'Season': '記録',\n            'Game': '今試合',\n            'Pitch': '球',\n            'Control': '制球',\n            'Velocity': '速度',\n            'Break': '変化',\n            'At Bat': 'バッター',\n            'On Deck': '次バッター',\n            'Eye :': '目',\n            'Power :': '力',\n            'Speed :': '速',\n            'Up to Bat': '打席',\n            'Fielding': '守備',\n            'BA': '打率',\n            'OBP': '出塁',\n            'SLG': '長打',\n            'PA': '打席',\n            'H/2B/3B/HR': '安／二／三／本',\n            'H': '安',\n            '2B': '二',\n            '3B': '三',\n            'HR': '本塁打',\n            'RBI': '打点',\n            'R': '得点',\n            'BB': '四球',\n            'SO': '三振',\n\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'Runner on': 'ランナー',\n            'Runners on': 'ランナー',\n            'Bases empty': 'ランナーなし',\n            'base': '塁',\n\n            'Select Language:': '言語',\n            'Run Fast Simulation': 'シミュレーションを試合終了まで行う',\n            'Play Ball!': 'プレーボール',\n            'Spectate the CPU': 'CPU観戦',\n            'Play from the 7th': '７回からプレーする',\n\n            'Throws/Bats': ' ',\n            'LHP': '左投',\n            'RHP': '右投',\n            'LHB': '左打',\n            'RHB': '右打',\n            'L': '左投',\n            'R ': '右投',\n            ' L ': '左打',\n            ' R ': '右打',\n            '#': '背番号',\n\n            'Opponent connected': '相手選手見参',\n            'Click Here': 'ここにクリック',\n            'Play against Team Japan': '日本代表挑戦'\n        },\n        e: {\n            empty: '-',\n            'Season': 'Season'\n        }\n    })[override ? override : text.mode][phrase];\n    return string ? string : phrase;\n};\n\ntext.getBattersEye = function (game) {\n    var eye = {},\n        breaking = Math.abs(game.pitchInFlight.breakDirection[0]) + Math.abs(game.pitchInFlight.breakDirection[1]) > 40;\n    eye.e = text('looks like: ', 'e') + breaking ? text('breaking ball', 'e') : text('fastball', 'e');\n    eye.n = text('looks like: ', 'n') + breaking ? text('breaking ball', 'n') : text('fastball', 'n');\n    return eye;\n};\n\ntext.fielderShortName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': '一',\n            'second': '二',\n            'third': '三',\n            'short': '遊',\n            'pitcher': '投',\n            'catcher': '捕',\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[fielder];\n    }\n    return fielder;\n};\n\ntext.slash = function () {\n    if (text.mode == 'n') {\n        return '・';\n    }\n    return '/';\n};\n\ntext.fielderLongName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'short': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left': 'レフト',\n            'center': 'センター',\n            'right': 'ライト'\n        })[fielder];\n    }\n    return ({\n        first: text('first baseman'),\n        second: text('second baseman'),\n        third: text('third baseman'),\n        short: text('shortstop'),\n        pitcher: text('pitcher'),\n        catcher: text('catcher'),\n        left: text('left fielder'),\n        center: text('center fielder'),\n        right: text('right fielder')\n    })[fielder];\n};\n\ntext.comma = function () {\n    return ({ n: '、', e: ', ' })[text.mode];\n};\ntext.stop = function () {\n    return ({ n: '。', e: '. ' })[text.mode];\n};\n\ntext.namePitch = function (pitch) {\n    if (text.mode == 'e') {\n        return pitch.name.charAt(0).toUpperCase() + pitch.name.slice(1);\n    }\n    if (text.mode == 'n') {\n        return text(pitch.name);\n    }\n};\n\ntext.contactResult = function (batter, fielder, bases, outBy, sacrificeAdvances, out) {\n    var statement = '';\n    var infield = ['left', 'center', 'right'].indexOf(fielder) < 0;\n    var doublePlay = out.doublePlay;\n    if (text.mode == 'e') {\n        statement += batter;\n        if (outBy) {\n            switch (outBy) {\n                case 'fieldersChoice':\n                    play = out.length === 2 ? 'double play ' : '';\n                    statement += ' reached on a fielder\\'s choice ' + play + 'by ' + text.fielderShortName(fielder);\n                    break;\n                case 'line':\n                    statement += ' lined out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'fly':\n                    statement += ' flew out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'error':\n                    statement += ' reached on error by ' + text.fielderShortName(fielder);\n                    break;\n                case 'pop':\n                    statement += ' popped out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'ground':\n                    var play = doublePlay ? 'into a double play by' : 'out to';\n                    statement += ' grounded ' + play + ' ' + text.fielderShortName(fielder);\n                    break;\n                case 'thrown':\n                    play = doublePlay ? ' on a double play' : '';\n                    statement += ' was thrown out by ' + text.fielderShortName(fielder) + play;\n                    break;\n            }\n            if (out.length) {\n                var plural = out.length > 1;\n                var runner = plural ? 'Runners' : 'Runner';\n                var is = plural ? 'are' : 'is';\n                statement += '. ' + runner + ' from ' + text(out.join(text.comma())) + ' ' + is + ' out';\n            }\n        } else {\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += ' reached on an infield hit to ' + text.fielderShortName(fielder);\n                    } else {\n                        statement += ' reached on a single to ' + text.fielderShortName(fielder);\n                    }\n                    break;\n                case 2:\n                    statement += ' doubled past ' + text.fielderShortName(fielder);\n                    break;\n                case 3:\n                    statement += ' tripled past ' + text.fielderShortName(fielder);\n                    break;\n                case 4:\n                    statement += ' homered to ' + text.fielderShortName(fielder);\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += text.stop() + 'Runner on third scores';\n                } else {\n                    statement += text.stop() + 'Runner on ' + base + ' advances';\n                }\n            });\n        }\n        statement += text.stop();\n    }\n    if (text.mode == 'n') {\n        var stop = text.stop();\n        statement += batter + 'は';\n        if (outBy) {\n            var fielderLong = text.fielderLongName(fielder);\n            fielder = text.fielderShortName(fielder);\n            switch (outBy) {\n                case 'fieldersChoice':\n                    statement += '野選(' + fielder + ')で出塁';\n                    break;\n                case 'line':\n                    statement += fielder + '直';\n                    break;\n                case 'fly':\n                    statement += fielder + '飛';\n                    break;\n                case 'error':\n                    statement += 'エラー(' + fielder + ')で出塁';\n                    break;\n                case 'pop':\n                    statement += 'ポップフライで' + fielder + '飛';\n                    break;\n                case 'ground':\n                    statement += fielderLong + 'ゴロに封殺';\n                    break;\n                case 'thrown':\n                    statement += fielder + 'ゴロ';\n                    break;\n            }\n            if (out.length) {\n                statement += '。' + out.map(function (runner) {\n                    return text(runner);\n                }).join(text.comma()) + 'ランナーはアウト';\n            }\n            if (doublePlay) {\n                statement += '。ゲッツー';\n            }\n        } else {\n            fielder = text.fielderShortName(fielder);\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += '内野安打' + '(' + fielder + ')' + 'で出塁';\n                    } else {\n                        statement += '安打(' + fielder + ')' + 'で出塁';\n                    }\n                    break;\n                case 2:\n                    statement += '二塁打（' + fielder + '）で出塁';\n                    break;\n                case 3:\n                    statement += '三塁打（' + fielder + '）で出塁';\n                    break;\n                case 4:\n                    statement += '本塁打（' + fielder + '）';\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += stop + 'サードランナーホームイン';\n                } else {\n                    statement += stop + text(base) + 'ランナー進塁';\n                }\n            });\n        }\n        statement += stop;\n    }\n    return statement;\n};\n\nexports.text = text;\n\n},{}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballNamespace = require('baseball/namespace');\n\nif (typeof window == 'object') {\n    window.Baseball = _baseballNamespace.Baseball;\n}\n\nexports.Baseball = _baseballNamespace.Baseball;\n\n},{\"baseball/namespace\":35}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballTeamsProvider = require('baseball/Teams/Provider');\n\nvar Baseball = {};\n\nBaseball.model = {};\nBaseball.model.Game = Baseball.Game = _baseballModelGame.Game;\nBaseball.model.Player = Baseball.Player = _baseballModelPlayer.Player;\nBaseball.model.Team = Baseball.Team = _baseballModelTeam.Team;\n\nBaseball.service = {};\nBaseball.service.Animator = _baseballServices_services.Animator;\nBaseball.service.Distribution = _baseballServices_services.Distribution;\nBaseball.service.Iterator = _baseballServices_services.Iterator;\nBaseball.service.Mathinator = _baseballServices_services.Mathinator;\n\nBaseball.util = {};\nBaseball.util.text = _baseballUtility_utils.text;\nBaseball.util.Log = _baseballUtility_utils.Log;\n\nBaseball.teams = {};\nBaseball.teams.Provider = _baseballTeamsProvider.Provider;\n\nexports.Baseball = Baseball;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":25,\"baseball/Teams/Provider\":26,\"baseball/Utility/_utils\":30}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":21,\"baseball/Services/Distribution\":22,\"baseball/Services/Iterator\":23,\"baseball/Services/Mathinator\":24}]},{},[34]);\n","IndexController = function($scope, socket) {\r\n    var text = Baseball.util.text;\r\n    var Game = Baseball.Game;\r\n    var Animator = Baseball.service.Animator;\r\n\r\n    window.s = $scope;\r\n    $scope.t = text;\r\n\r\n    $scope.mode = function(setMode) {\r\n        if (setMode) {\r\n            text.mode = setMode;\r\n        }\r\n        return text.mode;\r\n    };\r\n\r\n    $scope.teamJapan = function() {\r\n        var provider = new Baseball.teams.Provider;\r\n        provider.assignTeam($scope.y, 'TeamJapan', 'away');\r\n        var game = $scope.y;\r\n        if (game.half === 'top') {\r\n            game.batter = game.teams.away.lineup[game.batter.order];\r\n            game.deck = game.teams.away.lineup[(game.batter.order + 1) % 9];\r\n            game.hole = game.teams.away.lineup[(game.batter.order + 2) % 9];\r\n        } else {\r\n            game.pitcher = game.teams.away.positions.pitcher;\r\n        }\r\n    };\r\n\r\n    $scope.proceedToGame = function(quickMode, spectateCpu) {\r\n        Game.prototype.humanControl = spectateCpu ? 'none' : 'home';\r\n        Game.prototype.quickMode = !!quickMode && quickMode !== 7;\r\n        $scope.y = new Game();\r\n        var game = $scope.y;\r\n        var field = window.location.hash ? window.location.hash.slice(1) : game.teams.home.name + Math.ceil(Math.random()*47);\r\n        if (typeof io !== 'undefined') {\r\n            socket.game = game;\r\n            $scope.socket = io(window.location.hostname + ':64321');\r\n            $scope.socketService = socket;\r\n            socket.socket = $scope.socket;\r\n            socket.start(field);\r\n        }\r\n        window.location.hash = '#' + field;\r\n        s2.y = game;\r\n        bindMethods();\r\n        $('.blocking').remove();\r\n        if (game.humanControl == 'none' && game.quickMode) {\r\n            var n = 0;\r\n            Animator.console = true;\r\n            game.console = true;\r\n            do {\r\n                n++;\r\n                game.simulateInput(function(callback) {\r\n                    typeof callback == 'function' && callback();\r\n                });\r\n            } while (game.stage != 'end' && n < 500);\r\n            Animator.console = game.console = false;\r\n            log('sim ended');\r\n            game.debugOut();\r\n        } else if (game.humanControl == 'none') {\r\n            var scalar = game.quickMode ? 0.05 : 1;\r\n            var auto = setInterval(function() {\r\n                if (game.stage == 'end') {\r\n                    clearInterval(auto);\r\n                }\r\n                game.simulatePitchAndSwing(function(callback) {\r\n                    game.quickMode ? void 0 : $scope.$apply();\r\n                    $scope.updateFlightPath(callback);\r\n                });\r\n            }, scalar*(game.field.hasRunnersOn() ? Animator.TIME_FROM_SET + 2000 : Animator.TIME_FROM_WINDUP + 2000));\r\n        }\r\n        if (quickMode === 7 && spectateCpu === undefined) {\r\n            Game.prototype.quickMode = true;\r\n            do {\r\n                game.simulateInput(function(callback) {\r\n                    typeof callback == 'function' && callback();\r\n                });\r\n            } while (game.stage != 'end' && game.inning != 7);\r\n            log('sim halted in 7th');\r\n            game.debugOut();\r\n            Game.prototype.quickMode = false;\r\n            game.simulateInput(function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        }\r\n        if (game.humanControl == 'away') {\r\n            game.simulateInput(function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        }\r\n        if (game.humanControl == 'home') {\r\n            $scope.showMessage = true;\r\n        }\r\n        if (!quickMode || quickMode === 7) {\r\n            game.timeOfDay.h = '00';\r\n            var delay = 100,\r\n                interval = 150;\r\n            while (delay < (game.startTime.h - game.timeOfDay.h) * interval) {\r\n                setTimeout(function() {\r\n                    game.passMinutes(60);\r\n                    $scope.$apply();\r\n                }, delay);\r\n                delay += interval;\r\n            }\r\n        }\r\n    };\r\n\r\n    var bindMethods = function() {\r\n        var game = $scope.y;\r\n        $scope.holdUpTimeouts = [];\r\n        $scope.expandScoreboard = false;\r\n        $scope.updateFlightPath = Animator.updateFlightPath.bind($scope);\r\n\r\n        // avoid scope cycles, any other easy way?\r\n        var bat = $('.target .swing.stance-indicator');\r\n        var showBat = function(event) {\r\n            if (game.humanBatting()) {\r\n                var offset = $('.target').offset();\r\n                var relativeOffset = {\r\n                    x : event.pageX - offset.left,\r\n                    y : 200 - (event.pageY - offset.top)\r\n                };\r\n                var angle = game.setBatAngle(relativeOffset.x, relativeOffset.y);\r\n                bat.css({\r\n                    top: 200-relativeOffset.y + \"px\",\r\n                    left: relativeOffset.x + \"px\",\r\n                    transform: \"rotate(\" + angle + \"deg) rotateY(\"+(game.batter.bats == \"left\" ? 0 : -0)+\"deg)\"\r\n                });\r\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\r\n                    bat.hide();\r\n                } else {\r\n                    bat.show();\r\n                }\r\n            }\r\n        };\r\n        var glove = $('.target .glove.stance-indicator');\r\n        var showGlove = function(event) {\r\n            if (game.humanPitching()) {\r\n                var offset = $('.target').offset();\r\n                var relativeOffset = {\r\n                    x : event.pageX - offset.left,\r\n                    y : 200 - (event.pageY - offset.top)\r\n                };\r\n                glove.css({\r\n                    top: 200-relativeOffset.y + \"px\",\r\n                    left: relativeOffset.x + \"px\"\r\n                });\r\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\r\n                    glove.hide();\r\n                } else {\r\n                    glove.show();\r\n                }\r\n            }\r\n        };\r\n\r\n        $scope.selectPitch = function(pitchName) {\r\n            if (game.stage == 'pitch') {\r\n                game.pitchInFlight = $.extend({}, game.pitcher.pitching[pitchName]);\r\n                game.pitchInFlight.name = pitchName;\r\n                game.swingResult.looking = true;\r\n            }\r\n        };\r\n        $scope.allowInput = true;\r\n        $scope.holdUp = function() {\r\n            $('.input-area').click();\r\n            $scope.$apply();\r\n        };\r\n        game.startOpponentPitching = function(callback) {\r\n            $scope.updateFlightPath(callback);\r\n        };\r\n        $scope.indicate = function($event) {\r\n            if (!$scope.allowInput) {\r\n                return;\r\n            }\r\n            if (game.pitcher.windingUp) {\r\n                return;\r\n            }\r\n            if (game.humanPitching()) $scope.allowInput = false;\r\n            var offset = $('.target').offset();\r\n            var relativeOffset = {\r\n                x : $event.pageX - offset.left,\r\n                y : 200 - ($event.pageY - offset.top)\r\n            };\r\n            clearTimeout($scope.lastTimeout);\r\n            while ($scope.holdUpTimeouts.length) {\r\n                clearTimeout($scope.holdUpTimeouts.shift());\r\n            }\r\n            $scope.showMessage = false;\r\n            game.receiveInput(relativeOffset.x, relativeOffset.y, function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        };\r\n        $scope.abbreviatePosition = function(position) {\r\n            if (text.mode == 'e') {\r\n                return {\r\n                    pitcher : 'P',\r\n                    catcher : 'C',\r\n                    first : '1B',\r\n                    second : '2B',\r\n                    short : 'SS',\r\n                    third : '3B',\r\n                    left : 'LF',\r\n                    center : 'CF',\r\n                    right : 'RF'\r\n                }[position];\r\n            }\r\n            return text.fielderShortName(position);\r\n        };\r\n        $scope.$watch('y.humanBatting()', function() {\r\n            if ($scope.y.humanBatting()) {\r\n                $('.input-area').mousemove(showBat);\r\n            } else {\r\n                $('.input-area').unbind('mousemove', showBat);\r\n                bat.hide();\r\n            }\r\n        });\r\n        $scope.$watch('y.humanPitching()', function() {\r\n            if ($scope.y.humanPitching()) {\r\n                $('.input-area').mousemove(showGlove);\r\n            } else {\r\n                $('.input-area').unbind('mousemove', showGlove);\r\n                glove.hide();\r\n            }\r\n        });\r\n        var aside = {\r\n            left: $('aside.image-panel.left'),\r\n            right: $('aside.image-panel.right')\r\n        };\r\n        //$scope.$watch('y.playResult', function() {\r\n        //    aside.left.hide();\r\n        //    aside.right.hide();\r\n        //    aside.left.fadeIn(1000, function() {\r\n        //        aside.left.fadeOut(1000);\r\n        //        aside.right.fadeIn(1000, function() {\r\n        //            aside.right.fadeOut(1000);\r\n        //        })\r\n        //    });\r\n        //    $scope.imagePanel = {\r\n        //        left: 'url(./public/images/' + $scope.y.playResult.batter + '.png)',\r\n        //        right: 'url(./public/images/' + $scope.y.playResult.fielder + '.png)'\r\n        //    };\r\n        //});\r\n    };\r\n\r\n\r\n};","var SocketService = function() {\r\n    var Service = function() {};\r\n    var game, socket, NO_OPERATION = function() {},\r\n        animator = Baseball.service.Animator;\r\n    Service.prototype = {\r\n        socket : {},\r\n        game : {},\r\n        connected : false,\r\n        start : function(key) {\r\n            game = this.game;\r\n            socket = this.socket;\r\n            game.opponentService = this;\r\n            this.connected = socket.connected;\r\n            this.on();\r\n            socket.emit('register', key);\r\n        },\r\n        on : function() {\r\n            var giraffe = this;\r\n            socket.on('register', this.register);\r\n            socket.on('connect reconnect', function() {\r\n                giraffe.connected = true;\r\n            });\r\n            socket.on('disconnect', function() {\r\n                giraffe.connected = false;\r\n            });\r\n            socket.on('pitch', function(pitch) {\r\n                //console.log('receive', 'pitch', pitch);\r\n                game.thePitch(0, 0, NO_OPERATION, pitch);\r\n                var scope = window.s;\r\n                animator.updateFlightPath.bind(scope)();\r\n            });\r\n            socket.on('swing', function(swing) {\r\n                //console.log('receive', 'swing', swing);\r\n                game.theSwing(0, 0, NO_OPERATION, swing);\r\n                var scope = window.s;\r\n                animator.updateFlightPath.bind(scope)(function() {\r\n                    if (swing.contact) {\r\n                        animator.animateFieldingTrajectory(game);\r\n                    }\r\n                });\r\n            });\r\n            socket.on('partner_disconnect', function() {\r\n                console.log('The opponent has disconnected');\r\n                game.opponentConnected = false;\r\n                var scope = window.s;\r\n                scope.$digest();\r\n            });\r\n            socket.on('partner_connect', function() {\r\n                game.opponentConnected = true;\r\n                var scope = window.s;\r\n                scope.$digest();\r\n            });\r\n            socket.on('opponent_taking_field', function() {\r\n                console.log('A challenger has appeared! Sending game data.');\r\n                socket.emit('game_data', game.toData());\r\n            });\r\n            socket.on('game_data', function(data) {\r\n                game.fromData(data);\r\n                var scope = window.s;\r\n                scope.$apply();\r\n            });\r\n            socket.on('field_in_use', function() {\r\n                game.opponentConnected = false;\r\n            });\r\n        },\r\n        off : function() {\r\n            socket.on('register', NO_OPERATION);\r\n        },\r\n        register: function(data) {\r\n            console.log(data);\r\n            if (data === 'away') {\r\n                game.humanControl = 'away';\r\n            }\r\n            socket.on('register', NO_OPERATION);\r\n        },\r\n        emitPitch : function(pitch) {\r\n            //console.log('emit', 'pitch', pitch);\r\n            socket.emit('pitch', pitch);\r\n        },\r\n        emitSwing : function(swing) {\r\n            //console.log('emit', 'swing', swing);\r\n            socket.emit('swing', swing);\r\n        },\r\n        swing : function() {\r\n\r\n        },\r\n        pitch : function() {\r\n\r\n        }\r\n    };\r\n    return new Service;\r\n};","BattersDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/batters.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","BatteryDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/battery.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","FieldDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/field.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","RatingBlockDirective = function() {\r\n    return {\r\n        scope: {\r\n            rating: '='\r\n        },\r\n        transclude: true,\r\n        templateUrl: 'public/html/views/directives/ratingBlock.html?cache='+cacheKey,\r\n        link: function(scope) {\r\n        }\r\n    };\r\n};","ScoreboardDirective = function() {\r\n    return {\r\n        scope: {\r\n            game: '=',\r\n            text: '='\r\n        },\r\n        templateUrl: 'public/html/views/directives/scoreboard.html?cache='+cacheKey,\r\n        link: function(scope) {\r\n            window.s2 = scope;\r\n            scope.t = scope.text;\r\n            scope.y = scope.game;\r\n        }\r\n    };\r\n};","var app = angular.module('YakyuuAikoukai', ['directives'])\r\n    .service('socket', SocketService)\r\n    .controller('IndexController', ['$scope', 'socket', IndexController]);\r\n\r\napp.config(function($interpolateProvider) {\r\n    $interpolateProvider.startSymbol('{{');\r\n    $interpolateProvider.endSymbol('}}');\r\n});\r\n\r\ncacheKey = Math.floor(Math.random()*1500);\r\n\r\nangular.module('directives', [])\r\n    .directive('scoreboard', ScoreboardDirective)\r\n    .directive('batters', BattersDirective)\r\n    .directive('battery', BatteryDirective)\r\n    .directive('field', FieldDirective)\r\n    .directive('ratingBlock', RatingBlockDirective);"],"sourceRoot":"/source/"}