{"version":3,"sources":["bundle.js","IndexController.js","SocketService.js","battersData.js","batteryData.js","field.js","ratingBlock.js","scoreboard.js","application.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_baseballUtilityLog","AtBat","text","this","infield","indexOf","INFIELD_HIT_INDICATOR","replace","split","RBI_INDICATOR","rbi","log","Log","beneficial","WALK","SINGLE","HOMERUN","DOUBLE","TRIPLE","SACRIFICE","REACHED_ON_ERROR","STOLEN_BASE","RUN","constructor","identifier","baseball/Utility/Log",2,"_baseballModelPlayer","_baseballServices_services","Field","game","init","first","second","third","hasRunnersOn","Player","determineSwingContactResult","swing","fatigue","x","y","eye","batter","skill","offense","angles","Mathinator","getSplayAndFlyAngle","angle","splayAngle","splay","flyAngle","fly","power","bonus","landingDistance","Distribution","Math","abs","foul","fielder","findFielder","min","max","travelDistance","sacrificeAdvances","half","teams","home","positions","away","error","fieldingEase","defense","fielding","throwingEase","throwing","fielderTravel","getPolarDistance","speedComponent","sqrt","speed","interceptRating","stats","E","caught","PO","umpire","count","outs","sacrificeThrowInTime","fielderReturnDelay","getBaseRunningTime","push","bases","thrownOut","fieldingReturnDelay","fieldingDelay","outfielder","left","center","right","baseRunningTime","random","fieldersChoice","fielders","team","force","forcePlaySituation","additionalOuts","throwingDelay","infieldThrowDelay","catcher","doublePlay","firstOut","swingResult","Animator","console","_ball","hasIndicator","animateFieldingTrajectory","getLeadRunner","horizontalVelocity","cos","PI","fielderLateralReachDegrees","fielderArcPosition","pitcher","short","b","baseball/Model/Player","baseball/Services/_services",3,"_baseballModelField","_baseballModelTeam","_baseballModelUmpire","_baseballUtility_utils","Game","m","gamesIntoSeason","humanControl","quickMode","debug","reset","startTime","h","timeOfDay","mode","floor","field","Team","helper","name","pickName","Umpire","humanPitching","stage","autoPitchSelect","loop","setTimeOfDay","passMinutes","minutes","time","parseInt","setTargetTimeOfDay","getInning","inning","toUpperCase","humanBatting","end","tally","R","getName","pitching","W","L","note","simulateInput","callback","pitchTarget","autoPitch","autoSwing","simulatePitchAndSwing","giraffe","setTimeout","TIME_FROM_SET","TIME_FROM_WINDUP","receiveInput","thePitch","theSwing","pitchNames","keys","pitchName","pitch","pitchInFlight","windingUp","$","addClass","windup","css","pitchLocation","resetCamera","animate","width","removeClass","deceptiveX","deceptiveY","convergence","convergenceSum","balls","strikes","centralizedNumber","cpuSwing","swingProbability","swingLikelihood","opponentConnected","onBatterReady","batterReady","setValue","undefined","ready","waitingCallback","awaitPitch","opponentService","emitSwing","awaitSwing","emitPitch","inFlight","override","breakDirection","pitchDefinitions","slice","battersEye","getBattersEye","control","pitchControl","breakEffect","notePitch","result","setBatAngle","recalculation","getAngularOffset","precision","looking","contact","strike","pow","stealAttempt","RUNNER_GO","RUNNERS_DISCRETION","thief","base","validToSteal","discretion","willSteal","attemptSteal","noteSwing","makeCall","emit","startOpponentPitching","origin","bats","battingAngle","debugOut","filter","map","JSON","stringify","hitters","lineup","concat","atBats","getAtBats","ab","LO","FO","GO","GIDP","SO","BB","SAC","FC","CS","SB","Iterator","each","position","table","scoreboard","toData","data","players","deck","hole","nameJ","says","player","serialize","pitchRecord","record","fromData","playerJson","index","playerData","parse","side","resetStats","stabilizeShortRecord","velocity","break","playResult","showPlayResultPanels","batterOutcomes","atBat","pop","fielderOutcomes","pitchSelect",4,5,6,7,8,9,"resetTally","H","baseball/Model/Field","baseball/Model/Team","baseball/Model/Umpire","baseball/Utility/_utils","Manager","makeLineup","jerseyNumber","selectForSkill","bench","number","order","pool","skillset","requiredThrowingHandedness","selection","rating","skills","cursor","property","shift","_baseballModel_models","hero","averaging","randomizeSkills","surnameKey","surnames","nameKey","names","jSurname","surnamesJ","jGivenName","namesJ","spaceName","surname","surnameJ","atBatObjects","substitute","substituted","bullpen","splice","noteSubstitution","IP","ER","GS","arguments","randBetween","total","isNaN","pa","paRemaining","bb","so","sb","cs","doubles","triples","hr","hbp","sac","chances","pitches","K","getK9","getERA","ERA","HR","WHIP","getWHIP","batting","getBA","getBABIP","ba","getOBP","obp","getSLG","getSlash","slash","join","slg","2b","3b","A","K9","item","recordRBI","recordInfieldHit","success","stealSuccess","stoleABase","caughtStealing","attemptedBase","defensiveAverage","_this","allPitches","randValue","isPitching","catching","slider","fork","cutter","sinker","curve","change","reduce","prev","current","getSurname","getUniformNumber","getOrder","toString","baseball/Model/_models","_baseballModelManager","heroRate","RUNNER_HOLD","manager","j","teamNameIndex","teamNames","teamNamesJ","nowBatting","expanded","baseball/Model/Manager","playBall","batterRunner","noteBatter","runScores","CAUGHT_STEALING","changeSides","advanceRunners","LINEOUT","FLYOUT","newBatter","runner","FIELDERS_CHOICE","reachBase","GROUNDOUT","hitByPitch","STRIKEOUT","isWalk","canAdvance","arm","notePlateAppearanceResult","lastBatter","_baseballModelAtBat","_baseballModelGame","baseball/Model/AtBat","baseball/Model/Game","_meshBall","_meshMound","_meshBase","_meshField","_meshGrass","_meshHomeDirt","_meshBattersEye","_meshWall","_meshSky","_meshSun","_sceneLighting","_ShadersSkyShader","_baseballServicesAnimator","VERTICAL_CORRECTION","INITIAL_CAMERA_DISTANCE","THREE","AHEAD","Vector3","INITIAL_POSITION","Loop","elementClass","loadSkyShader","main","window","requestAnimationFrame","bind","panToward","omt","overwatchMoveTarget","moveToward","moveTarget","z","objects","renderer","render","scene","camera","getThree","Scene","fog","FogExp2","attach","lighting","addTo","PerspectiveCamera","getAspect","_target","addition","hours","background","sun","setTargetTime","sky","azimuth","uniforms","inclination","derivePosition","luminosity","setLuminosity","Mound","HomeDirt","Grass","BattersEye","Sun","Sky","Wall","Base","pos","rate","bob","removeEventListener","onResize","addEventListener","element","document","getElementsByClassName","innerHTML","WebGLRenderer","alpha","setSize","appendChild","domElement","aspect","fov","offsetWidth","updateProjectionMatrix","HEIGHT","vector","maxIncrement","panSpeed","forAllLoops","lookAt","moveSpeed","panning","setLookTarget","setMoveTarget","moveCamera","fn","foreground","ball","Ball","setType","rotate","deriveTrajectory","constructors","./Shaders/SkyShader","./mesh/Ball","./mesh/Base","./mesh/BattersEye","./mesh/Field","./mesh/Grass","./mesh/HomeDirt","./mesh/Mound","./mesh/Sky","./mesh/Sun","./mesh/Wall","./scene/lighting","baseball/Services/Animator",10,"ShaderLib","luminance","type","turbidity","reileigh","mieCoefficient","mieDirectionalG","sunPosition","vertexShader","fragmentShader","skyShader","skyUniforms","UniformsUtils","clone","skyMat","ShaderMaterial","BackSide","skyGeo","SphereBufferGeometry","skyMesh","Mesh","mesh",11,"_Loop","AbstractMesh","add","remove","WORLD_BASE_Y","../Loop",12,"_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_get","_x","_x2","_x3","_again","object","receiver","desc","parent","getter","Function","getOwnPropertyDescriptor","get","getPrototypeOf","_AbstractMesh2","_baseballServicesMathinator","_Indicator","_baseballUtilityHelper","SCALE","INDICATOR_DEPTH","_AbstractMesh","trajectory","Array","breakingTrajectory","getMesh","bounce","baseURL","loader","TextureLoader","textureColor","load","textureBump","geometry","SphereGeometry","material","MeshPhongMaterial","bumpMap","bumpScale","frame","spawnIndicator","detach","handednessScalar","rpm","rotationAngle","setRotation","rotation","meshRotation","RPM","RPS","rotationalIncrement","RP60thOfASecond","xComponent","yComponent","sin","indicator","Indicator","top","breakTop","breakLeft","flightTime","getFlightTime","scale","ARC_APPROXIMATION_Y_ADDITIVE","terminus","breakingTerminus","lastPosition","lastBreakingPosition","frames","breakingFrames","frameCount","counter","xBreak","yBreak","breakingDistance","breakingLateness","breakingLatenessMomentumExponent","progress","breakingInfluencePosition","momentumScalar","breakingScalar","scalarSum","breakingPosition","increment","breakingIncrement","pause","dragScalarApproximation","distance","apexHeight","airTime","flightScalar","velocityVerticalComponent","RADIAN","extrema","lastHeight","percent","currentDistance","DEFAULT_RPM","./AbstractMesh","./Indicator","baseball/Services/Mathinator","baseball/Utility/helper",13,"MeshLambertMaterial","color","BoxGeometry",14,15,"PlaneGeometry",16,17,18,"CircleGeometry",19,20,"hasOwnProperty","setUniforms",21,"targetTime","MeshBasicMaterial","wireframe","visible","theta","phi","copy","addMinutes",22,"radians","hypotenuse","offset",23,"light","HemisphereLight","DirectionalLight","set","level","intensity",24,"_baseballRenderLoop","TweenMax","renderingMode","beginRender","addStaticMeshes","loadTweenMax","to","from","killAll","HOLD_UP_ALLOWANCE","pitchBreak","updateFlightPath","renderFlightPath","tweenFlightPath","$scope","$baseballs","flightSpeed","originTop","originLeft","henka","quarter","pitchTransition","targetTransition","transitions","lastTimeout","allowInput","$apply","holdUpTimeouts","holdUp","derivePitchingTrajectory","tweenFieldingTrajectory","renderFieldingTrajectory","splayOnly","linearApproximateDragScalar","scalar","memory","bounding","mathinator","transitionalTrajectory","show","transitionalCatcherPerspectiveTrajectory","setOverwatchMoveTarget","baseball/Render/Loop","baseball/services/_services",25,"ceil","chance","goodContactBonus","sum","effect","actual","volitional","rand","rand2","smoothedRand2","pitchBaseSpeedMultiplier","ump",26,"collection",27,"square","SPLAY_INDICATOR_LEFT","xScalar","yScalar","originalAngle","atan","angledY","angledX","step","givenApexHeight","givenDistance","givenSplayAngle","bottom","padding","borderWidth","radian","apexRatio","delay","ease","Power4","easeOut","Linear","easeNone","givenOrigin","height","projection","translateSwingResultToStylePosition","maxPadding","maxBorderWidth","_top","_left","transform","intercept","direction","velocityRating","velocityScalar",28,"_baseballServicesDistribution","_baseballServicesIterator","baseball/Services/Distribution","baseball/Services/Iterator",29,"_TeamJapan","Provider","special","TeamJapan","samurai","./TeamJapan",30,"_baseballTeamsTrainer","darvish","johjima","ogasawara","nishioka","kawasaki","murata","matsui","ichiro","inaba","coach","Trainer","makePlayer","baseball/Teams/Trainer",31,"throws",32,"_baseballUtilityText","stabilized","shortRecord","GITP","rec","rec2","_note","noteJ","only","unshift","async","getBatter","longFormFielder","comma","recordJ","getPitchLocationDescription","batterIsLefty","say","noComma","noComma2","namePitch","stop","broadcastCount","justOuts","lastOuts","broadcastScore","broadcastRunners","runners","runnerCount","getSwing","steal","noteStealAttempt","space","baseShortName","sub","substitution","getPlateAppearanceResult","out","outBy","contactResult","statement","prevJ","resultJ","pointer","baseball/Utility/text",33,"_baseballUtilityData","baseball/Utility/data",34,35,"4-seam","2-seam","selectRandomPitch",36,"phrase","string","empty"," 1st"," 2nd"," 3rd"," 4th"," 5th"," 6th"," 7th"," 8th"," 9th","Now batting","way outside","outside","inside","way inside","way low","low","high","way high","down the middle","first baseman","second baseman","third baseman","shortstop","left fielder","center fielder","right fielder","Strike.","Ball.","Fouled off.","In play.","Swinging strike."," outs"," out"," struck out looking."," walked."," struck out swinging.","Previous: ","looks like: ","breaking ball","fastball","Batting, ","Catching, pitch selection","Season","Pitch","Control","Velocity","Break","At Bat","On Deck","Eye","Power","Speed","Up to Bat","Fielding","Pitching","BA","OBP","SLG","PA","H/2B/3B/HR","2B","3B","RBI","Runner on","Runners on","Bases empty","stolen base","caught stealing","Steal","Opportunistic","Hold","Select Language:","Run Fast Simulation","Play Ball!","Spectate the CPU","Play from the 7th","Throws/Bats","LHP","RHP","LHB","RHB","R "," L "," R ","#","Opponent connected","Click Here","Amateur Baseball Club","Amateur Baseball Team","College Team","Industrial League Team","Training Squad","Team Japan","Substituted","Batter Ready","originalMode","fielderShortName","output","breaking","1st","2nd","3rd","Home","fielderLongName","charAt","play","plural","is","fielderLong",37,"_baseballNamespace","Baseball","baseball/namespace",38,"_baseballTeamsProvider","model","service","util","baseball/Teams/Provider",39,"IndexController","socket","setMode","localStorage","__$yakyuuaikoukai_text_mode","storedMode","teamJapan","provider","assignTeam","sim","proceedToGame","seventh","playball","spectate","spectateCpu","location","hash","io","reconnection","socketService","start","s2","bindMethods","auto","setInterval","clearInterval","showMessage","expandScoreboard","bat","showBat","event","relativeOffset","pageX","pageY","hide","glove","showGlove","generateTeam","clickLineup","selectSubstitute","selectPitch","extend","click","indicate","$event","clearTimeout","abbreviatePosition","$watch","mousemove","unbind","SocketService","Service","NO_OPERATION","animator","connected","on","register","scope","$digest","off","BattersDirective","templateUrl","cacheKey","transclude","BatteryDirective","FieldDirective","RatingBlockDirective","link","ScoreboardDirective","app","angular","controller","config","$interpolateProvider","startSymbol","endSymbol","directive"],"mappings":"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","file":"application.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar AtBat = (function () {\n    function AtBat(text) {\n        _classCallCheck(this, AtBat);\n\n        this.infield = text.indexOf(AtBat.prototype.INFIELD_HIT_INDICATOR) > -1 ? AtBat.prototype.INFIELD_HIT_INDICATOR : '';\n        text = text.replace(AtBat.prototype.INFIELD_HIT_INDICATOR, '');\n        this.text = text.split(AtBat.prototype.RBI_INDICATOR)[0];\n        this.rbi = text.split(this.text)[1] + '';\n\n        var log = new _baseballUtilityLog.Log();\n\n        var beneficial = [log.WALK, log.SINGLE, log.HOMERUN, log.DOUBLE, log.TRIPLE, log.SACRIFICE, log.REACHED_ON_ERROR, log.STOLEN_BASE, log.RUN];\n        if (beneficial.indexOf(this.text) > -1) {\n            this.beneficial = true;\n        }\n    }\n\n    _createClass(AtBat, [{\n        key: 'toString',\n        value: function toString() {\n            return '' + this.infield + this.text + this.rbi;\n        }\n    }]);\n\n    return AtBat;\n})();\n\nAtBat.prototype.constructor = AtBat;\nAtBat.prototype.identifier = 'AtBat';\nAtBat.prototype.INFIELD_HIT_INDICATOR = '';\nAtBat.prototype.RBI_INDICATOR = '+';\n\nexports.AtBat = AtBat;\n\n},{\"baseball/Utility/Log\":32}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\n/**\n * The baseball field tracks the ball's movement, fielders, and what runners are on\n * @param game\n * @constructor\n */\nvar Field = function Field(game) {\n    this.init(game);\n};\n\nField.prototype = {\n    constructor: Field,\n    init: function init(game) {\n        this.game = game;\n        this.first = null;\n        this.second = null;\n        this.third = null;\n    },\n    /**\n     * @returns {boolean}\n     */\n    hasRunnersOn: function hasRunnersOn() {\n        return this.first instanceof _baseballModelPlayer.Player || this.second instanceof _baseballModelPlayer.Player || this.third instanceof _baseballModelPlayer.Player;\n    },\n    /**\n     * @param swing\n     * @returns {object}\n     */\n    determineSwingContactResult: function determineSwingContactResult(swing) {\n\n        if (this.first) this.first.fatigue += 4;\n        if (this.second) this.second.fatigue += 4;\n        if (this.third) this.third.fatigue += 4;\n\n        var x = swing.x,\n            y = swing.y;\n        var eye = this.game.batter.skill.offense.eye;\n        /**\n         * The initial splay angle is 90 degrees for hitting up the middle and 0\n         * for a hard foul left, 180 is a foul right. Depending on the angle of the bat,\n         * a y-axis displacement which would otherwise pop or ground the ball can instead\n         * increase the left/right effect.\n         */\n        var angles = _baseballServices_services.Mathinator.getSplayAndFlyAngle(x, y, swing.angle, eye);\n        var splayAngle = angles.splay;\n\n        var flyAngle = angles.fly;\n        var power = this.game.batter.skill.offense.power + (this.game.batter.eye.bonus || 0) / 5;\n        var landingDistance = _baseballServices_services.Distribution.landingDistance(power, flyAngle, x, y);\n        if (flyAngle < 0 && landingDistance > 95) {\n            landingDistance = (landingDistance - 95) / 4 + 95;\n        }\n        var game = this.game;\n\n        if (Math.abs(splayAngle) > 50) swing.foul = true;\n        swing.fielder = this.findFielder(splayAngle, landingDistance, power, flyAngle);\n        if (['first', 'second', 'short', 'third'].indexOf(swing.fielder) > -1) {\n            landingDistance = Math.min(landingDistance, 110); // stopped by infielder\n        } else {\n                landingDistance = Math.max(landingDistance, 150); // rolled past infielder\n            }\n        swing.travelDistance = landingDistance;\n        swing.flyAngle = flyAngle;\n        /**\n         * the splay for the result is adjusted to 0 being up the middle and negatives being left field\n         * @type {number}\n         */\n        swing.splay = splayAngle;\n        swing.sacrificeAdvances = [];\n\n        if (swing.fielder) {\n            var fielder = game.half == 'top' ? game.teams.home.positions[swing.fielder] : game.teams.away.positions[swing.fielder];\n            fielder.fatigue += 4;\n            swing.error = false;\n            var fieldingEase = fielder.skill.defense.fielding / 100,\n                throwingEase = fielder.skill.defense.throwing / 100;\n            //reach the batted ball?\n            swing.fielderTravel = this.getPolarDistance(this.positions[swing.fielder], [splayAngle + 90, landingDistance]);\n            var speedComponent = (1 + Math.sqrt(fielder.skill.defense.speed / 100)) / 2 * 100;\n            var interceptRating = speedComponent * 1.8 + flyAngle * 2.4 - swing.fielderTravel * 1.55 - 15;\n            if (interceptRating > 0 && flyAngle > 4) {\n                //caught cleanly?\n                if (_baseballServices_services.Distribution.error(fielder)) {\n                    //error\n                    fieldingEase *= 0.5;\n                    swing.error = true;\n                    fielder.stats.fielding.E++;\n                    swing.caught = false;\n                } else {\n                    fielder.stats.fielding.PO++;\n                    swing.caught = true;\n                    if (game.umpire.count.outs < 2) {\n                        var sacrificeThrowInTime = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, 100);\n                        // todo ran into outfield assist\n                        if (this.first && sacrificeThrowInTime > this.first.getBaseRunningTime() + 4.5) {\n                            swing.sacrificeAdvances.push('first');\n                        }\n                        if (this.second && sacrificeThrowInTime > this.second.getBaseRunningTime()) {\n                            swing.sacrificeAdvances.push('second');\n                        }\n                        if (this.third && sacrificeThrowInTime > this.third.getBaseRunningTime() - 0.5) {\n                            swing.sacrificeAdvances.push('third');\n                        }\n                    }\n                }\n            } else {\n                swing.caught = false;\n            }\n\n            if (!swing.caught) {\n                swing.bases = 0;\n                swing.thrownOut = false; // default value\n                var fieldingReturnDelay = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, interceptRating);\n                swing.fieldingDelay = fieldingReturnDelay;\n                swing.outfielder = ({ 'left': 1, 'center': 1, 'right': 1 })[swing.fielder] == 1;\n                var speed = game.batter.skill.offense.speed,\n                    baseRunningTime = _baseballServices_services.Mathinator.baseRunningTime(speed);\n\n                if (swing.outfielder) {\n                    swing.bases = 1;\n                    baseRunningTime *= 1.05;\n                    fieldingReturnDelay -= baseRunningTime;\n\n                    while ((fieldingReturnDelay > baseRunningTime && Math.random() < 0.25 + speed / 200 || Math.random() < 0.04 + speed / 650) && swing.bases < 3) {\n                        baseRunningTime *= 0.95;\n                        swing.bases++;\n                        fieldingReturnDelay -= baseRunningTime;\n                    }\n                } else {\n                    var first = this.first,\n                        second = this.second,\n                        third = this.third;\n                    swing.fieldersChoice = null;\n                    swing.bases = fieldingReturnDelay >= baseRunningTime + 1 ? 1 : 0;\n                    if (first && fieldingReturnDelay < first.getBaseRunningTime()) swing.fieldersChoice = 'first';\n                    if (first && second && fieldingReturnDelay < second.getBaseRunningTime() + 0.6) swing.fieldersChoice = 'second';\n                    if (third && fieldingReturnDelay < third.getBaseRunningTime()) swing.fieldersChoice = 'third';\n                    // double play\n                    var outs = game.umpire.count.outs;\n                    if (swing.fieldersChoice) {\n                        outs++;\n                        swing.bases = 1;\n                        var fielders = fielder.team.positions;\n                        var force = this.forcePlaySituation();\n                        if (force) {\n                            var additionalOuts = [];\n                            var throwingDelay = fieldingReturnDelay;\n                            if (third && force === 'third' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher) + throwingDelay < second.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher);\n                                fielders.catcher.fatigue += 4;\n                                additionalOuts.push('second');\n                                outs++;\n                                force = 'second';\n                            }\n                            if (second && force === 'second' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third) + throwingDelay < first.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third);\n                                fielders.third.fatigue += 4;\n                                additionalOuts.push('first');\n                                outs++;\n                                force = 'first';\n                            }\n                            if (first && force === 'first' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second) + throwingDelay < game.batter.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second);\n                                fielders.second.fatigue += 4;\n                                additionalOuts.push('batter');\n                                swing.bases = 0;\n                                // todo (or shortstop)\n                                outs++;\n                            }\n                            if (outs - game.umpire.count.outs === 2) {\n                                swing.doublePlay = true;\n                            }\n                            if (additionalOuts.length) {\n                                swing.additionalOuts = additionalOuts;\n                                swing.firstOut = swing.fieldersChoice;\n                                if (additionalOuts.indexOf('batter') > -1) {\n                                    delete swing.fieldersChoice;\n                                }\n                            }\n                        }\n                        //console.log('DP?', !!this.forcePlaySituation(), 'throwingDelay', throwingDelay,\n                        //    'fielding delay', fieldingReturnDelay, 'runner', game.batter.getBaseRunningTime());\n                        //if (typeof additionalOuts !== 'undefined' && additionalOuts.length) {\n                        //    console.log('omg dp', additionalOuts);\n                        //}\n                    } else {\n                            delete swing.additionalOuts;\n                            delete swing.firstOut;\n                            delete swing.doublePlay;\n                            delete swing.fieldersChoice;\n                        }\n                }\n                swing.thrownOut = swing.bases == 0;\n                if (swing.thrownOut) {\n                    fielder.stats.fielding.PO++; // todo A to PO\n                    swing.thrownOut = true;\n                    swing.error = false;\n                }\n            }\n        } else {\n            if (Math.abs(splayAngle) < 45 && landingDistance > 300) {\n                swing.bases = 4;\n            } else {\n                swing.foul = true;\n                swing.caught = false;\n            }\n        }\n        this.game.swingResult = swing;\n        if (!_baseballServices_services.Animator.console) {\n            _baseballServices_services.Animator._ball.hasIndicator = true;\n            _baseballServices_services.Animator.animateFieldingTrajectory(this.game);\n        }\n    },\n    forcePlaySituation: function forcePlaySituation() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        return first && second && third && 'third' || first && second && 'second' || first && 'first';\n    },\n    /**\n     * @returns {Player}\n     * the best steal candidate.\n     */\n    getLeadRunner: function getLeadRunner() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        if (third && first && !second) return first;\n        return third || second || first;\n    },\n    //printRunnerNames : function() {\n    //    return [this.first ? this.first.getName() : '', this.second ? this.second.getName() : '', this.third ? this.third.getname() : ''];\n    //},\n    /**\n     * @param splayAngle {Number} 0 to 180, apparently\n     * @param landingDistance {Number} in feet, up to 310 or so\n     * @param power {Number} 0-100\n     * @param flyAngle {Number} roughly -15 to 90\n     * @returns {string|boolean}\n     */\n    findFielder: function findFielder(splayAngle, landingDistance, power, flyAngle) {\n        var angle = splayAngle; // 0 is up the middle, clockwise increasing\n\n        var fielder;\n\n        if (Math.abs(angle) > 50) return false; // foul\n        if (landingDistance < 10 && landingDistance > -20) {\n            return 'catcher';\n        } else if (landingDistance >= 10 && landingDistance < 45 && Math.abs(angle) < 5) {\n            return 'pitcher';\n        }\n\n        var infield = landingDistance < 145 - Math.abs(angle) / 90 * 50;\n        if (flyAngle < 7) {\n            // 7 degrees straight would fly over the infielder, but add some for arc\n            var horizontalVelocity = Math.cos(flyAngle / 180 * Math.PI) * (85 + power / 100 * 10); // mph toward infielder\n            if (flyAngle < 0) horizontalVelocity *= 0.5; // velocity loss on bounce\n            var fielderLateralReachDegrees = 1 + 22.5 * (100 - horizontalVelocity) / 100; // up to 90/4 = 22.5\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n            var fielderArcPosition = this.positions[fielder][0] - 90;\n            // a good infielder can field a hard hit grounder even with a high terminal distance\n            infield = Math.abs(angle - fielderArcPosition) < fielderLateralReachDegrees;\n        }\n\n        // ball in the air to infielder\n        if (infield && landingDistance > 15) {\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n        } else if (landingDistance < 310) {\n            // past the infield or fly ball to outfielder\n            if (angle < -15) {\n                fielder = 'left';\n            } else if (angle < 16) {\n                fielder = 'center';\n            } else {\n                fielder = 'right';\n            }\n        } else {\n            fielder = false;\n        }\n        return fielder;\n    },\n    /**\n     * approximate fielder positions (polar degrees where 90 is up the middle, distance from origin (home plate))\n     */\n    positions: {\n        pitcher: [90, 66],\n        catcher: [0, 0],\n        first: [90 + 45 - 7, 98],\n        second: [90 + 12.5, 130],\n        short: [90 - 12.5, 130],\n        third: [90 - 45 + 7, 98],\n        left: [45 + 14, 280],\n        center: [90, 280],\n        right: [135 - 14, 280]\n    },\n    getPolarDistance: function getPolarDistance(a, b) {\n        return _baseballServices_services.Mathinator.getPolarDistance(a, b);\n    }\n};\n\nexports.Field = Field;\n\n},{\"baseball/Model/Player\":5,\"baseball/Services/_services\":28}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Game = function Game(m) {\n    this.init(m);\n};\n\nGame.prototype = {\n    constructor: Game,\n    gamesIntoSeason: 0,\n    humanControl: 'home', //home, away, both, none\n    console: false,\n    quickMode: true,\n    debug: [],\n    pitcher: {}, // Player&\n    batter: {}, // Player&\n    init: function init(m) {\n        this.reset();\n        this.startTime = {\n            h: Math.random() * 8 + 10 | 0,\n            m: Math.random() * 60 | 0\n        };\n        this.timeOfDay = {\n            h: this.startTime.h,\n            m: this.startTime.m\n        };\n        if (m) _baseballUtility_utils.text.mode = m;\n        this.gamesIntoSeason = 5 + Math.floor(Math.random() * 133);\n        this.field = new _baseballModelField.Field(this);\n        this.teams.away = new _baseballModelTeam.Team(this);\n        this.teams.home = new _baseballModelTeam.Team(this);\n        this.log = new _baseballUtilityLog.Log();\n        this.log.game = this;\n        this.debug = [];\n        this.helper = _baseballUtility_utils.helper;\n        while (this.teams.away.name == this.teams.home.name) {\n            this.teams.away.pickName();\n        }\n        this.umpire = new _baseballModelUmpire.Umpire(this);\n        if (this.humanPitching()) {\n            this.stage = 'pitch';\n        }\n        this.autoPitchSelect();\n        _baseballServices_services.Animator.init();\n        if (!_baseballServices_services.Animator.console) _baseballServices_services.Animator.loop.setTimeOfDay(0, 0);\n    },\n    passMinutes: function passMinutes(minutes) {\n        var time = this.timeOfDay;\n        time.m = parseInt(time.m);\n        time.m += parseInt(minutes);\n        while (time.m >= 60) {\n            time.m = parseInt(time.m) - 60;\n            time.h = (parseInt(time.h) + 1) % 24;\n        }\n        if (!_baseballServices_services.Animator.console) _baseballServices_services.Animator.loop.setTargetTimeOfDay(time.h, time.m);\n    },\n    getInning: function getInning() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.inning + (this.half == 'top' ? 'オモテ' : 'ウラ') : this.half.toUpperCase() + ' ' + this.inning;\n    },\n    humanBatting: function humanBatting() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'away';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'home';\n        }\n    },\n    humanPitching: function humanPitching() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'home';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'away';\n        }\n    },\n    end: function end() {\n        this.stage = 'end';\n        var e, n;\n        e = this.tally.home.R > this.tally.away.R ? 'Home team wins!' : this.tally.home.R == this.tally.away.R ? 'You tied. Yes, you can do that.' : 'Visitors win!';\n        n = this.tally.home.R > this.tally.away.R ? this.teams.home.getName() + 'の勝利' : this.tally.home.R == this.tally.away.R ? '引き分け' : this.teams.away.getName() + 'の勝利';\n        if (this.tally.home.R > this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.W++;\n            this.teams.away.positions.pitcher.stats.pitching.L++;\n        } else if (this.tally.home.R < this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.L++;\n            this.teams.away.positions.pitcher.stats.pitching.W++;\n        }\n        this.log.note(e, n);\n        this.log.note('Reload to play again', 'リロるは次の試合へ');\n    },\n    stage: 'pitch', //pitch, swing\n    simulateInput: function simulateInput(callback) {\n        var stage = this.stage,\n            pitchTarget = this.pitchTarget;\n        if (stage == 'end') {\n            return;\n        }\n        if (stage == 'pitch') {\n            this.autoPitch(callback);\n        } else if (stage == 'swing') {\n            if (typeof pitchTarget != 'object') {\n                this.pitchTarget = { x: 100, y: 100 };\n            }\n            this.autoSwing(this.pitchTarget.x, this.pitchTarget.y, callback);\n        }\n    },\n    simulatePitchAndSwing: function simulatePitchAndSwing(callback) {\n        if (this.stage == 'end') {\n            return;\n        }\n        this.autoPitch(callback);\n        var giraffe = this;\n        setTimeout(function () {\n            if (typeof giraffe.pitchTarget != 'object') {\n                giraffe.pitchTarget = { x: 100, y: 100 };\n            }\n            giraffe.autoSwing(giraffe.pitchTarget.x, giraffe.pitchTarget.y, function (callback) {\n                callback();\n            });\n        }, giraffe.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET + 2500 : _baseballServices_services.Animator.TIME_FROM_WINDUP + 2500);\n    },\n    /**\n     * generically receive click input and decide what to do\n     * @param x\n     * @param y\n     * @param callback\n     */\n    receiveInput: function receiveInput(x, y, callback) {\n        if (this.humanControl == 'none') {\n            return;\n        }\n        if (this.stage == 'end') {\n            return;\n        }\n        if (this.stage == 'pitch' && this.humanPitching()) {\n            this.thePitch(x, y, callback);\n        } else if (this.stage == 'swing' && this.humanBatting()) {\n            this.theSwing(x, y, callback);\n        }\n    },\n    autoPitchSelect: function autoPitchSelect() {\n        var pitchNames = Object.keys(this.pitcher.pitching);\n        var pitchName = pitchNames[Math.random() * pitchNames.length | 0];\n        var pitch = this.pitcher.pitching[pitchName];\n        pitch.name = pitchName;\n        this.pitchInFlight = pitch;\n    },\n    autoPitch: function autoPitch(callback) {\n        var pitcher = this.pitcher,\n            giraffe = this;\n        if (this.stage == 'pitch') {\n            this.autoPitchSelect();\n            pitcher.windingUp = true;\n            if (!this.console) {\n                $('.baseball').addClass('hide');\n                var windup = $('.windup');\n                windup.css('width', '100%');\n            }\n            var count = this.umpire.count;\n            var pitch = _baseballServices_services.Distribution.pitchLocation(count),\n                x = pitch.x,\n                y = pitch.y;\n            if (this.quickMode) {\n                this.thePitch(x, y, callback);\n            } else {\n                if (!_baseballServices_services.Animator.console) {\n                    _baseballServices_services.Animator.loop.resetCamera();\n                }\n                windup.animate({ width: 0 }, this.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET : _baseballServices_services.Animator.TIME_FROM_WINDUP, function () {\n                    !giraffe.console && $('.baseball.pitch').removeClass('hide');\n                    giraffe.thePitch(x, y, callback);\n                    pitcher.windingUp = false;\n                });\n            }\n        }\n    },\n    autoSwing: function autoSwing(deceptiveX, deceptiveY, callback) {\n        var giraffe = this;\n        var bonus = this.batter.eye.bonus || 0,\n            eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus,\n            convergence,\n            convergenceSum;\n\n        var x = _baseballServices_services.Distribution.centralizedNumber(),\n            y = _baseballServices_services.Distribution.centralizedNumber();\n\n        if (100 * Math.random() < eye) {\n            // identified the break\n            deceptiveX = this.pitchInFlight.x;\n            deceptiveY = this.pitchInFlight.y;\n        }\n\n        if (100 * Math.random() < eye) {\n            // identified the location\n            convergence = eye / 25;\n            convergenceSum = 1 + convergence;\n        } else {\n            convergence = eye / 100;\n            convergenceSum = 1 + convergence;\n        }\n\n        x = (deceptiveX * convergence + x) / convergenceSum;\n        y = (deceptiveY * convergence + y) / convergenceSum;\n\n        this.swingResult.x = _baseballServices_services.Distribution.cpuSwing(x, this.pitchInFlight.x, eye);\n        this.swingResult.y = _baseballServices_services.Distribution.cpuSwing(y, this.pitchInFlight.y, eye * 0.75);\n\n        var swingProbability = _baseballServices_services.Distribution.swingLikelihood(eye, x, y, this.umpire);\n        if (swingProbability < 100 * Math.random()) {\n            x = -20;\n        }\n\n        callback(function () {\n            giraffe.theSwing(x, y);\n        });\n    },\n    opponentConnected: false,\n    /**\n     * variable for what to do when the batter becomes ready for a pitch\n     */\n    onBatterReady: function onBatterReady() {},\n    /**\n     * @param setValue\n     * @returns {boolean|*}\n     * trigger batter readiness passively, or actively with setValue, i.e. ready to see pitch\n     */\n    batterReady: function batterReady(setValue) {\n        if (setValue !== undefined) {\n            this.batter.ready = !!setValue;\n        }\n        if (this.batter.ready) {\n            this.onBatterReady();\n        }\n        return this.batter.ready;\n    },\n    waitingCallback: function waitingCallback() {},\n    awaitPitch: function awaitPitch(callback, swingResult) {\n        var giraffe = this;\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitSwing(swingResult);\n            this.onBatterReady = function () {};\n        } else {\n            giraffe.onBatterReady = function () {\n                giraffe.autoPitch(callback);\n            };\n            setTimeout(function () {\n                giraffe.batterReady();\n            }, 5200);\n        }\n    },\n    awaitSwing: function awaitSwing(x, y, callback, pitchInFlight, pitchTarget) {\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitPitch({\n                inFlight: pitchInFlight,\n                target: pitchTarget\n            });\n        } else {\n            this.autoSwing(x, y, callback);\n        }\n    },\n    thePitch: function thePitch(x, y, callback, override) {\n        var pitch = this.pitchInFlight;\n        if (this.stage == 'pitch') {\n            if (override) {\n                this.pitchInFlight = override.inFlight;\n                this.pitchTarget = override.target;\n                callback = this.waitingCallback;\n            } else {\n                this.pitcher.fatigue++;\n                this.pitchTarget.x = x;\n                this.pitchTarget.y = y;\n\n                pitch.breakDirection = this.helper.pitchDefinitions[pitch.name].slice(0, 2);\n                this.battersEye = _baseballUtility_utils.text.getBattersEye(this);\n\n                var control = Math.floor(pitch.control - this.pitcher.fatigue / 2);\n                this.pitchTarget.x = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.x, control);\n                this.pitchTarget.y = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.y, control);\n\n                if (this.pitcher.throws == 'right') pitch.breakDirection[0] *= -1;\n\n                var breakEffect = _baseballServices_services.Distribution.breakEffect(pitch, this.pitcher, this.pitchTarget.x, this.pitchTarget.y);\n\n                pitch.x = breakEffect.x;\n                pitch.y = breakEffect.y;\n            }\n\n            this.log.notePitch(pitch, this.batter);\n\n            this.stage = 'swing';\n            if (this.humanControl != 'none' && (this.humanControl == 'both' || this.humanBatting())) {\n                callback();\n            } else {\n                this.awaitSwing(x, y, callback, pitch, this.pitchTarget);\n            }\n        }\n    },\n    battersEye: {\n        e: '',\n        n: ''\n    },\n    theSwing: function theSwing(x, y, callback, override) {\n        var pitch = this.pitchInFlight;\n        if (this.stage == 'swing') {\n            if (override) {\n                var result = this.swingResult = override;\n                callback = this.waitingCallback;\n            } else {\n                this.swingResult = result = {};\n                var bonus = this.batter.eye.bonus || 0,\n                    eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus;\n\n                if (x >= 0 && x <= 200) {\n                    this.batter.fatigue++;\n\n                    result.x = x - pitch.x;\n                    result.y = y - pitch.y;\n                    result.angle = this.setBatAngle();\n\n                    var recalculation = _baseballServices_services.Mathinator.getAngularOffset(result, result.angle);\n                    var precision = _baseballServices_services.Distribution.swing(eye);\n\n                    result.x = recalculation.x * precision;\n                    result.y = -5 + recalculation.y * precision;\n\n                    //log(recalculation.y, precision);\n\n                    result.looking = false;\n                    if (Math.abs(result.x) < 60 && Math.abs(result.y) < 35) {\n                        result.contact = true;\n                        this.field.determineSwingContactResult(result);\n                        // log(result.flyAngle, Math.floor(result.x), Math.floor(result.y));\n                        this.debug.push(result);\n                    } else {\n                        result.contact = false;\n                    }\n                } else {\n                    result.strike = pitch.x > 50 && pitch.x < 150 && pitch.y > 35 && pitch.y < 165;\n                    this.batter.eye.bonus = Math.max(0, eye - Math.sqrt(Math.pow(this.batter.eye.x - pitch.x, 2) + Math.pow(this.batter.eye.y - pitch.y, 2)) * 1.5);\n                    result.contact = false;\n                    result.looking = true;\n                    this.batter.eye.x = pitch.x;\n                    this.batter.eye.y = pitch.y;\n                }\n            }\n\n            // stealing bases\n            var field = this.field;\n            var team = this.batter.team;\n            if ((team.stealAttempt === _baseballModelTeam.Team.RUNNER_GO || team.stealAttempt === _baseballModelTeam.Team.RUNNERS_DISCRETION) && !this.opponentConnected) {\n                var thief = field.getLeadRunner();\n                if (thief instanceof _baseballModelPlayer.Player) {\n                    switch (thief) {\n                        case field.first:\n                            var base = 2;\n                            break;\n                        case field.second:\n                            base = 3;\n                            break;\n                        case field.third:\n                            base = 4;\n                    }\n                    var validToSteal = true;\n                    if (result.looking) {\n                        var count = this.umpire.count;\n                        if (count.strikes >= 2 && result.strike && count.outs >= 2) validToSteal = false;\n                        if (count.balls >= 3 && !result.strike && field.first) validToSteal = false;\n                    }\n                    if (result.foul || result.caught) {\n                        validToSteal = false;\n                    }\n                    var discretion = team.stealAttempt === 'go' || _baseballServices_services.Distribution.willSteal(pitch, this.pitcher.team.positions.catcher, thief, base);\n                    if (discretion && validToSteal) {\n                        thief.attemptSteal(this, base);\n                    }\n                    team.stealAttempt = _baseballModelTeam.Team.RUNNERS_DISCRETION;\n                }\n            }\n\n            this.log.noteSwing(result);\n            this.stage = 'pitch';\n\n            var half = this.half;\n            this.umpire.makeCall();\n            emit = false;\n            if (half != this.half) {\n                callback = this.startOpponentPitching;\n                var emit = !override;\n            }\n\n            if (typeof callback == 'function') {\n                if (this.humanControl != 'none' && (this.humanControl == 'both' || this.teams[this.humanControl] == this.pitcher.team)) {\n                    callback();\n                    if (emit) {\n                        if (this.opponentService && this.opponentConnected) {\n                            this.opponentService.emitSwing(result);\n                        }\n                    }\n                } else {\n                    this.awaitPitch(callback, result);\n                }\n            }\n        }\n    },\n    setBatAngle: function setBatAngle(x, y) {\n        var giraffe = this,\n            pitchInFlight = this.pitchInFlight,\n            swingResult = this.swingResult;\n        var origin = {\n            x: giraffe.batter.bats == 'right' ? -10 : 210,\n            y: 199\n        };\n        var swing = {\n            x: x ? x : pitchInFlight.x + swingResult.x,\n            y: y ? y : pitchInFlight.y + swingResult.y\n        };\n        return _baseballServices_services.Mathinator.battingAngle(origin, swing);\n    },\n    debugOut: function debugOut() {\n        log('slugging', this.debug.filter(function (a) {\n            return a.bases == 1;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 2;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 3;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 4;\n        }).length);\n        log('grounders', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < 0;\n        }).length, 'thrown out', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < 0 && a.thrownOut;\n        }).length);\n        log('flies/liners', this.debug.filter(function (a) {\n            return !a.foul && a.flyAngle > 0;\n        }).length, 'caught', this.debug.filter(function (a) {\n            return a.caught && a.flyAngle > 0;\n        }).length);\n\n        var PO = {};\n        this.debug.map(function (a) {\n            if (!a.fielder) return;\n            if (!PO[a.fielder]) {\n                PO[a.fielder] = 0;\n            }\n            if (!a.bases && a.fielder) {\n                PO[a.fielder]++;\n            }\n        });\n        log('fielding outs', JSON.stringify(PO));\n\n        var hitters = this.teams.away.lineup.concat(this.teams.home.lineup);\n        var atBats = [];\n        hitters.map(function (a) {\n            atBats = atBats.concat(a.getAtBats().map(function (ab) {\n                return ab.text;\n            }));\n        });\n\n        var LO = atBats.filter(function (ab) {\n            return ab == 'LO';\n        }).length;\n        var FO = atBats.filter(function (ab) {\n            return ab == 'FO';\n        }).length;\n        var GO = atBats.filter(function (ab) {\n            return ab == 'GO';\n        }).length;\n        var GIDP = atBats.filter(function (ab) {\n            return ab == '(IDP)';\n        }).length;\n        var SO = atBats.filter(function (ab) {\n            return ab == 'SO';\n        }).length;\n        var BB = atBats.filter(function (ab) {\n            return ab == 'BB';\n        }).length;\n        var SAC = atBats.filter(function (ab) {\n            return ab == 'SAC';\n        }).length;\n        var FC = atBats.filter(function (ab) {\n            return ab == 'FC';\n        }).length;\n        var CS = atBats.filter(function (ab) {\n            return ab == 'CS';\n        }).length;\n        var SB = atBats.filter(function (ab) {\n            return ab == 'SB';\n        }).length;\n\n        log('line outs', LO, 'fly outs', FO, 'groundouts', GO, 'strikeouts', SO, 'sacrifices', SAC, 'FC', FC, 'gidp', GIDP, 'CS', CS, 'total', LO + FO + GO + SO + SAC + FC + GIDP + CS);\n\n        log('BB', BB, 'SB', SB);\n        log('fouls', this.debug.filter(function (a) {\n            return a.foul;\n        }).length);\n        log('fatigue, home vs away');\n        var teams = this.teams;\n        var fatigue = { home: {}, away: {} };\n        _baseballServices_services.Iterator.each(this.teams.home.positions, function (key) {\n            var position = key;\n            fatigue.home[position] = teams.home.positions[position].fatigue;\n            fatigue.away[position] = teams.away.positions[position].fatigue;\n        });\n        console.table(fatigue);\n        console.table(this.scoreboard);\n        console.table(this.tally);\n    },\n    toData: function toData() {\n        var data = {};\n        data.half = this.half;\n        data.inning = this.inning;\n        data.tally = this.tally;\n        var giraffe = this;\n        var players = this.teams.away.lineup.concat(this.teams.home.lineup);\n        // note: bench not included\n        data.field = {\n            first: players.indexOf(this.field.first),\n            second: players.indexOf(this.field.second),\n            third: players.indexOf(this.field.third)\n        };\n        data.batter = players.indexOf(this.batter);\n        data.deck = players.indexOf(this.deck);\n        data.hole = players.indexOf(this.hole);\n        data.teams = {\n            home: {\n                name: giraffe.teams.home.name,\n                nameJ: giraffe.teams.home.nameJ\n            },\n            away: {\n                name: giraffe.teams.away.name,\n                nameJ: giraffe.teams.away.nameJ\n            }\n        };\n        data.umpire = {\n            says: giraffe.umpire.says,\n            count: {\n                strikes: giraffe.umpire.count.strikes,\n                balls: giraffe.umpire.count.balls,\n                outs: giraffe.umpire.count.outs\n            }\n        };\n        data.players = players.map(function (player) {\n            return player.serialize();\n        });\n        data.log = {\n            pitchRecord: giraffe.log.pitchRecord,\n            record: giraffe.log.record\n        };\n        data.gamesIntoSeason = this.gamesIntoSeason;\n        return data;\n    },\n    fromData: function fromData(data) {\n        this.half = data.half;\n        this.inning = data.inning;\n        this.tally = data.tally;\n        var giraffe = this;\n        var players = data.players.map(function (playerJson, index) {\n            var playerData = JSON.parse(playerJson);\n            if (index > 8) {\n                var side = 'home';\n                index = index - 9;\n            } else {\n                side = 'away';\n            }\n            var player = giraffe.teams[side].positions[playerData.position];\n            player.fromData(playerData);\n            giraffe.teams[side].lineup[index] = player;\n            player.resetStats(data.gamesIntoSeason);\n            return player;\n        });\n        this.field.first = players[data.field.first];\n        this.field.second = players[data.field.second];\n        this.field.third = players[data.field.third];\n        this.batter = players[data.batter];\n        this.deck = players[data.deck];\n        this.hole = players[data.hole];\n        this.umpire.says = data.umpire.says;\n        this.umpire.count = data.umpire.count;\n        this.teams.away.name = data.teams.away.name;\n        this.teams.away.nameJ = data.teams.away.nameJ;\n        this.teams.home.name = data.teams.home.name;\n        this.teams.home.nameJ = data.teams.home.nameJ;\n        this.log.pitchRecord = data.log.pitchRecord;\n        this.log.record = data.log.record;\n        this.log.stabilizeShortRecord();\n        this.gamesIntoSeason = data.gamesIntoSeason;\n        if (this.humanPitching()) {\n            this.autoPitchSelect();\n        }\n        return this;\n    },\n    startOpponentPitching: null, // late function\n    pitchTarget: { x: 100, y: 100 },\n    pitchInFlight: {\n        x: 100,\n        y: 100,\n        breakDirection: [0, 0],\n        name: 'slider',\n        velocity: 50,\n        'break': 50,\n        control: 50\n    },\n    swingResult: {\n        x: 100, //difference to pitch location\n        y: 100, //difference to pitch location\n        strike: false,\n        foul: false,\n        caught: false,\n        contact: false,\n        looking: true,\n        bases: 0,\n        fielder: 'short',\n        outs: 0\n    },\n    playResult: {\n        batter: '',\n        fielder: ''\n    },\n    showPlayResultPanels: function showPlayResultPanels(batter) {\n        var batterOutcomes = {};\n        var atBat = batter.atBats.slice(0).pop();\n        var fielderOutcomes = {};\n        var n = function n() {\n            var n = Math.floor(Math.random() * 3);\n            return n ? n : '';\n        };\n        this.playResult = {\n            batter: 'B_placeholder' + n() || batterOutcomes[atBat] || 'batter/' + atBat,\n            fielder: 'F_placeholder' + n() || fielderOutcomes[atBat] || 'fielder/' + atBat\n        };\n    },\n    pitchSelect: function pitchSelect() {},\n    field: null,\n    teams: {\n        away: null,\n        home: null\n    },\n    log: null,\n    half: 'top',\n    inning: 1,\n    scoreboard: {\n        away: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        },\n        home: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        }\n    },\n    reset: function reset() {\n        this.scoreboard = {\n            away: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0,\n                5: 0,\n                6: 0,\n                7: 0,\n                8: 0,\n                9: 0\n            },\n            home: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0,\n                5: 0,\n                6: 0,\n                7: 0,\n                8: 0,\n                9: 0\n            }\n        };\n        this.resetTally();\n    },\n    resetTally: function resetTally() {\n        this.tally = {\n            away: {\n                H: 0,\n                R: 0,\n                E: 0\n            },\n            home: {\n                H: 0,\n                R: 0,\n                E: 0\n            }\n        };\n    },\n    tally: {\n        away: {\n            H: 0,\n            R: 0,\n            E: 0\n        },\n        home: {\n            H: 0,\n            R: 0,\n            E: 0\n        }\n    }\n};\n\nexports.Game = Game;\n\n},{\"baseball/Model/Field\":2,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":28,\"baseball/Utility/Log\":32,\"baseball/Utility/_utils\":33}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Manager = function Manager(team) {\n    this.init(team);\n};\n\nManager.prototype = {\n    constructor: Manager,\n    init: function init(team) {\n        this.team = team;\n    },\n    makeLineup: function makeLineup() {\n        var jerseyNumber = 1;\n        this.team.positions.pitcher = this.selectForSkill(this.team.bench, ['pitching']);\n        this.team.positions.pitcher.position = 'pitcher';\n        if (!this.team.positions.pitcher.number) {\n            this.team.positions.pitcher.number = jerseyNumber++;\n        }\n        this.team.positions.catcher = this.selectForSkill(this.team.bench, ['defense', 'catching'], 'right');\n        this.team.positions.catcher.position = 'catcher';\n        if (!this.team.positions.catcher.number) {\n            this.team.positions.catcher.number = jerseyNumber++;\n        }\n        _baseballServices_services.Iterator.each(this.team.bench, function (key, player) {\n            if (!player.number) {\n                player.number = jerseyNumber++;\n            }\n        });\n        this.team.positions.short = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.short.position = 'short';\n        this.team.positions.second = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.second.position = 'second';\n        this.team.positions.third = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.third.position = 'third';\n        this.team.positions.center = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.center.position = 'center';\n        this.team.positions.left = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.left.position = 'left';\n        this.team.positions.right = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.right.position = 'right';\n        this.team.positions.first = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'left');\n        this.team.positions.first.position = 'first';\n\n        this.team.lineup[3] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[3].order = 3;\n        this.team.lineup[2] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[2].order = 2;\n        this.team.lineup[4] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[4].order = 4;\n        this.team.lineup[0] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[0].order = 0;\n        this.team.lineup[1] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[1].order = 1;\n        this.team.lineup[5] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[5].order = 5;\n        this.team.lineup[6] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[6].order = 6;\n        this.team.lineup[7] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[7].order = 7;\n        this.team.lineup[8] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[8].order = 8;\n    },\n    selectForSkill: function selectForSkill(pool, skillset, requiredThrowingHandedness) {\n        if (this.team.bench.length || pool == this.team.positions) {\n            var selection = this.team.bench[0];\n            var rating = 0;\n            var index = 0;\n            _baseballServices_services.Iterator.each(pool, function (key, player) {\n                var skills = skillset.slice();\n                var cursor = player.skill;\n                var property = skills.shift();\n                while (property) {\n                    cursor = cursor[property];\n                    property = skills.shift();\n                }\n                if (!(player.order + 1) && cursor >= rating && (!requiredThrowingHandedness || player.throws == requiredThrowingHandedness)) {\n                    rating = cursor;\n                    selection = player;\n                    index = key;\n                }\n            });\n            if (pool == this.team.bench) {\n                delete this.team.bench[index];\n                this.team.bench = this.team.bench.filter(function (player) {\n                    return player instanceof selection.constructor;\n                });\n            }\n            return selection;\n        }\n        return 'no players available';\n    }\n};\n\nexports.Manager = Manager;\n\n},{\"baseball/Services/_services\":28}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar Player = function Player(team, hero) {\n    this.init(team, hero);\n    this.resetStats(this.team.game && this.team.game.gamesIntoSeason || 0);\n};\n\nPlayer.prototype = {\n    constructor: Player,\n    init: function init(team, hero) {\n        this.ready = false;\n        this.throws = Math.random() > 0.86 ? 'left' : 'right';\n        this.bats = Math.random() > 0.75 ? 'left' : 'right';\n        this.team = team;\n        this.skill = {};\n        this.eye = {\n            x: 100,\n            y: 100\n        };\n        this.pitching = { averaging: [] };\n        this.number = 0;\n        this.randomizeSkills(hero || Math.random() > 0.9);\n        var surnameKey = Math.floor(Math.random() * _baseballUtility_utils.data.surnames.length),\n            nameKey = Math.floor(Math.random() * _baseballUtility_utils.data.names.length);\n\n        this.name = _baseballUtility_utils.data.surnames[surnameKey] + ' ' + _baseballUtility_utils.data.names[nameKey];\n        var jSurname = _baseballUtility_utils.data.surnamesJ[surnameKey],\n            jGivenName = _baseballUtility_utils.data.namesJ[nameKey];\n        this.spaceName(jSurname, jGivenName);\n        this.surname = _baseballUtility_utils.data.surnames[surnameKey];\n        this.surnameJ = _baseballUtility_utils.data.surnamesJ[surnameKey];\n        this.atBats = [];\n    },\n    spaceName: function spaceName(jSurname, jGivenName) {\n        if (jSurname.length == 1 && jGivenName.length <= 2) jSurname += '・';\n        if (jGivenName.length == 1 && jSurname.indexOf('・') < 0 && jSurname.length <= 2) jSurname += '・';\n        this.nameJ = jSurname + jGivenName;\n        this.surnameJ = jSurname;\n    },\n    serialize: function serialize() {\n        var team = this.team;\n        delete this.team;\n        var data = JSON.stringify(this);\n        this.team = team;\n        return data;\n    },\n    fromData: function fromData(data) {\n        var giraffe = this;\n        _baseballServices_services.Iterator.each(data, function (key, value) {\n            giraffe[key] = value;\n        });\n        delete this.atBatObjects;\n        this.getAtBats();\n    },\n    substitute: function substitute(player) {\n        if (player.team !== this.team) return false;\n        var order = player.order,\n            position = player.position;\n        player.team.substituted.push(player);\n        player.team.positions[position] = this;\n        player.team.lineup[order] = this;\n\n        this.position = position;\n        this.order = order;\n\n        var game = this.team.game;\n        if (game.pitcher === player) game.pitcher = this;\n        if (game.batter === player) game.batter = this;\n        if (game.deck === player) game.deck = this;\n        if (game.hole === player) game.hole = this;\n\n        var field = game.field;\n        if (field.first === player) field.first = this;\n        if (field.second === player) field.second = this;\n        if (field.third === player) field.third = this;\n\n        var bench = this.team.bench,\n            bullpen = this.team.bullpen;\n        if (bench.indexOf(this) > -1) {\n            bench.splice(bench.indexOf(this), 1);\n        }\n        if (bullpen.indexOf(this) > -1) {\n            bullpen.splice(bullpen.indexOf(this), 1);\n        }\n        game.log.noteSubstitution(this, player);\n    },\n    resetStats: function resetStats() {\n        var gamesIntoSeason = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n        var offense = this.skill.offense;\n        var defense = this.skill.defense;\n        var randBetween = function randBetween(a, b, skill) {\n            var total = 0,\n                count = 0;\n            skill += '';\n            if (!skill) skill = '';\n            _baseballServices_services.Iterator.each(skill.split(' '), function (key, value) {\n                var skill = value;\n                if (offense[skill]) skill = offense[skill];\n                if (defense[skill]) skill = defense[skill];\n                if (isNaN(skill)) skill = 50;\n                total += skill;\n                count++;\n            });\n\n            skill = Math.sqrt(0.05 + Math.random() * 0.95) * (total / (count * 0.97));\n            return Math.floor(skill / 100 * (b - a) + a);\n        };\n        var IP, ER, GS, W, L;\n        if (this.skill.pitching > 65) {\n            IP = (this.skill.pitching - 65) * gamesIntoSeason / 20;\n            ER = IP / 9 * randBetween(800, 215, this.skill.pitching) / 100;\n            if (IP > gamesIntoSeason) {\n                //starter\n                GS = Math.floor(gamesIntoSeason / 5);\n                W = randBetween(GS * 0.1, GS * 0.8, this.skill.pitching / 1.20);\n                L = randBetween(GS - W, 0, this.skill.pitching / 3);\n            } else {\n                //reliever\n                GS = Math.floor(gamesIntoSeason / 40);\n                W = randBetween(0, GS * 0.6, this.skill.pitching);\n                L = randBetween(GS - W, 0, this.skill.pitching);\n            }\n        }\n        var pa = randBetween(gamesIntoSeason * 3, gamesIntoSeason * 5, 'speed eye');\n        var paRemaining = pa;\n        var bb = Math.floor(randBetween(0, 18, 'power eye') * paRemaining / 100);\n        paRemaining -= bb;\n        var ab = paRemaining;\n        var so = Math.floor(randBetween(25, 2, 'eye') * paRemaining / 100);\n        paRemaining -= so;\n        var h = Math.floor(randBetween(185, 372, 'eye power speed') * paRemaining / 1000);\n        paRemaining -= h;\n        var sb = randBetween(0, (h + bb) / 6, 'speed') | 0;\n        var cs = randBetween(sb, 0, 'speed eye') | 0;\n\n        var doubles = randBetween(0, h / 4, 'power speed');\n        var triples = randBetween(0, h / 12, 'speed');\n        var hr = Math.max(0, randBetween(-h / 20, h / 5, 'power eye'));\n        var r = randBetween(h / 8, (h + bb) / 3, 'speed') + hr;\n        var rbi = randBetween(h / 8, h / 2, 'power eye') + hr;\n        var hbp = randBetween(0, gamesIntoSeason / 25);\n        var sac = randBetween(0, gamesIntoSeason / 5, 'eye');\n\n        var chances = randBetween(gamesIntoSeason * 5, pa - bb - so - hr, 'fielding');\n        var E = randBetween(chances / 10, 0, 'fielding');\n        var PO = chances - E;\n\n        this.stats = {\n            pitching: {\n                pitches: 0, // in game\n                GS: GS,\n                W: W,\n                L: L,\n                strikes: 0, // in game\n                K: 0, // in game\n                getK9: function getK9() {\n                    return this.K / (this.IP[0] / 9);\n                },\n                getERA: function getERA() {\n                    return 9 * this.ER / Math.max(1 / 3, this.IP[0] + this.IP[1] / 3);\n                },\n                ERA: null,\n                ER: ER,\n                H: 0, // in game\n                HR: 0, // in game\n                BB: 0, // in game\n                IP: [IP, 0],\n                WHIP: 0,\n                getWHIP: function getWHIP() {\n                    return (this.H + this.BB) / (this.IP[0] ? this.IP[0] : 1);\n                }\n            },\n            batting: {\n                getBA: function getBA() {\n                    return this.h / Math.max(1, this.ab);\n                },\n                getBABIP: function getBABIP() {\n                    return (this.h - this.hr) / (this.ab - this.so - this.hr + this.sac);\n                },\n                ba: null,\n                getOBP: function getOBP() {\n                    return (this.h + this.bb + this.hbp) / (this.ab + this.bb + this.hbp + this.sac);\n                },\n                obp: null,\n                getSLG: function getSLG() {\n                    return (this.h - this['2b'] - this['3b'] - this.hr + 2 * this['2b'] + 3 * this['3b'] + 4 * this.hr) / this.ab;\n                },\n                getSlash: function getSlash() {\n                    this.slash = this.slash || [this.getBA(), this.getOBP(), this.getSLG()].map(function (x) {\n                        if (x < 1) return (x + '0000').slice(1, 5);\n                        return (x + '0000').slice(0, 5);\n                    }).join('/');\n                    return this.slash;\n                },\n                slg: null,\n                pa: pa,\n                ab: ab,\n                so: so,\n                bb: bb,\n                h: h,\n                '2b': doubles,\n                '3b': triples,\n                hr: hr,\n                r: r,\n                rbi: rbi,\n                hbp: hbp,\n                sac: sac,\n                sb: sb,\n                cs: cs\n            },\n            fielding: {\n                E: E,\n                PO: PO, // should depend on position\n                A: Math.floor(Math.random() * 5) + 1 // ehh should depend on position\n            }\n        };\n        this.stats.pitching.ERA = this.stats.pitching.getERA();\n        this.stats.pitching.K9 = this.stats.pitching.getK9();\n        this.stats.pitching.WHIP = this.stats.pitching.getWHIP();\n        this.stats.batting.ba = this.stats.batting.getBA();\n    },\n    atBatObjects: [],\n    getAtBats: function getAtBats() {\n        if (this.atBats.length > this.atBatObjects.length) {\n            this.atBatObjects = this.atBats.map(function (item) {\n                return new _baseballModel_models.AtBat(item);\n            });\n        }\n        return this.atBatObjects;\n    },\n    recordRBI: function recordRBI() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.RBI_INDICATOR;\n    },\n    recordInfieldHit: function recordInfieldHit() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.INFIELD_HIT_INDICATOR;\n    },\n    getBaseRunningTime: function getBaseRunningTime() {\n        return _baseballServices_services.Mathinator.baseRunningTime(this.skill.offense.speed);\n    },\n    attemptSteal: function attemptSteal(game, base) {\n        var pitch = game.pitchInFlight;\n        var success = _baseballServices_services.Distribution.stealSuccess(pitch, game.pitcher.team.positions.catcher, this, base, this.team.stealAttempt === _baseballModel_models.Team.RUNNERS_DISCRETION);\n        if (success) {\n            game.swingResult.stoleABase = this;\n            game.swingResult.caughtStealing = null;\n        } else {\n            game.swingResult.stoleABase = null;\n            game.swingResult.caughtStealing = this;\n        }\n        switch (base) {\n            case 1:\n                base = '1st';\n                break;\n            case 2:\n                base = '2nd';\n                break;\n            case 3:\n                base = '3rd';\n                break;\n            case 4:\n                base = 'Home';\n        }\n        game.swingResult.attemptedBase = base;\n        return this;\n    },\n    defensiveAverage: function defensiveAverage() {\n        var _this = this.skill.defense;\n        return (_this.speed + _this.fielding + _this.throwing) / 3;\n    },\n    randomizeSkills: function randomizeSkills(hero, allPitches) {\n        this.hero = hero;\n        var giraffe = this;\n        var randValue = function randValue(isPitching) {\n            var value = Math.floor(Math.pow(Math.random(), 0.75) * 80 + Math.random() * 20);\n            if (hero) {\n                value += Math.floor((100 - value) * Math.max(Math.random(), isPitching ? 0 : 0.65));\n            }\n            if (isPitching) giraffe.pitching.averaging.push(value);\n            return value;\n        };\n        this.skill.offense = {\n            eye: randValue(),\n            power: randValue(),\n            speed: randValue()\n        };\n        this.skill.defense = {\n            catching: randValue(),\n            fielding: randValue(),\n            speed: randValue(),\n            throwing: randValue()\n        };\n        this.pitching.averaging = [];\n        this.pitching['4-seam'] = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        this.pitching.slider = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        if (Math.random() < 0.17 || allPitches) {\n            // can pitch!\n            if (Math.random() > 0.6 || allPitches) {\n                this.pitching['2-seam'] = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.18 || allPitches) {\n                this.pitching.fork = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() > 0.77 || allPitches) {\n                this.pitching.cutter = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.21 || allPitches) {\n                this.pitching.sinker = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.4 || allPitches) {\n                this.pitching.curve = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.9 || allPitches) {\n                this.pitching.change = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n        }\n        this.skill.pitching = Math.floor(this.pitching.averaging.reduce(function (prev, current) {\n            return prev + current;\n        }) / this.pitching.averaging.length + this.pitching.averaging.length * 3);\n        delete this.pitching.averaging;\n    },\n    getSurname: function getSurname() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.surnameJ : this.surname;\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    getUniformNumber: function getUniformNumber() {\n        return (0, _baseballUtility_utils.text)('#') + this.number;\n    },\n    getOrder: function getOrder() {\n        return (0, _baseballUtility_utils.text)([' 1st', ' 2nd', ' 3rd', ' 4th', ' 5th', ' 6th', '7th', ' 8th', ' 9th'][this.order]);\n    },\n    /**\n     * to ease comparison in Angular (?)\n     */\n    toString: function toString() {\n        return this.name + ' #' + this.number;\n    },\n    eye: {},\n    fatigue: 0,\n    name: '',\n    number: 0,\n    position: '',\n    atBats: []\n};\n\nexports.Player = Player;\n\n},{\"baseball/Model/_models\":8,\"baseball/Services/_services\":28,\"baseball/Utility/_utils\":33}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar Team = function Team(game, heroRate) {\n    this.init(game, heroRate);\n};\n\nTeam.RUNNERS_DISCRETION = 'runnersDiscretion';\nTeam.RUNNER_GO = 'go';\nTeam.RUNNER_HOLD = 'hold';\n\nTeam.prototype = {\n    constructor: Team,\n    init: function init(game, heroRate) {\n        heroRate = heroRate || 0.10;\n        this.substituted = [];\n        this.pickName();\n        this.lineup = [];\n        this.bench = [];\n        this.bullpen = [];\n        this.positions = {\n            pitcher: null,\n            catcher: null,\n            first: null,\n            second: null,\n            short: null,\n            third: null,\n            left: null,\n            center: null,\n            right: null\n        };\n        this.manager = new _baseballModelManager.Manager(this);\n        if (game !== 'no init') {\n            this.game = game;\n            for (var j = 0; j < 20; j++) {\n                this.bench.push(new _baseballModelPlayer.Player(this, Math.random() < heroRate));\n            }\n            if (this.bench.length == 20) {\n                this.manager.makeLineup();\n            }\n        }\n    },\n    pickName: function pickName() {\n        var teamNameIndex = Math.floor(Math.random() * _baseballUtility_utils.data.teamNames.length);\n        this.name = _baseballUtility_utils.data.teamNames[teamNameIndex];\n        this.nameJ = _baseballUtility_utils.data.teamNamesJ[teamNameIndex];\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    stealAttempt: Team.RUNNERS_DISCRETION,\n    lineup: [],\n    positions: {},\n    manager: null,\n    bench: [],\n    bullpen: [],\n    nowBatting: 0,\n    expanded: 'Player&'\n};\n\nexports.Team = Team;\n\n},{\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":33}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar Umpire = function Umpire(game) {\n    this.init(game);\n};\n\nUmpire.prototype = {\n    constructor: Umpire,\n    init: function init(game) {\n        this.game = game;\n        this.playBall();\n    },\n    count: {\n        strikes: 0,\n        balls: 0,\n        outs: 0\n    },\n    playBall: function playBall() {\n        var game = this.game;\n        game.half = 'top';\n        game.inning = 1;\n        game.batter = game.teams.away.lineup[0];\n        game.batterRunner = game.teams.away.lineup[0];\n        game.deck = game.teams.away.lineup[1];\n        game.hole = game.teams.away.lineup[2];\n        game.pitcher = game.teams.home.positions.pitcher;\n        var n = '一回のオモテ、' + game.teams.away.getName() + 'の攻撃対' + game.teams.home.getName() + '、ピッチャーは' + game.teams.home.positions.pitcher.getName() + '。',\n            e = 'Top 1, ' + game.teams.away.name + ' offense vs. ' + game.teams.home.positions.pitcher.name + ' starting for ' + game.teams.home.name;\n        game.log.note(e, n);\n        game.batter.ready = true;\n        game.log.noteBatter(game.batter);\n    },\n    makeCall: function makeCall() {\n        this.says = '';\n        var game = this.game;\n        var result = game.swingResult;\n        var pitcher = game.pitcher;\n        var batter = game.batter;\n        var field = game.field;\n\n        if (game.swingResult.fielder) {\n            var fielder = game.teams[game.half == 'top' ? 'home' : 'away'].positions[result.fielder];\n        } else {\n            fielder = null;\n        }\n\n        game.batterRunner = game.batter;\n\n        if (result.stoleABase) {\n            var thief = result.stoleABase;\n            thief.atBats.push(_baseballUtility_utils.Log.prototype.STOLEN_BASE);\n            switch (thief) {\n                case field.first:\n                    field.second = thief;\n                    field.first = null;\n                    break;\n                case field.second:\n                    field.third = thief;\n                    field.second = null;\n                    break;\n                case field.third:\n                    field.third = null;\n                    thief.stats.batting.r++;\n                    thief.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    this.runScores();\n            }\n            thief.stats.batting.sb++;\n        }\n        if (result.caughtStealing) {\n            game.teams[game.half == 'top' ? 'home' : 'away'].positions['catcher'].stats.fielding.PO++;\n            this.count.outs++;\n            thief = result.caughtStealing;\n            thief.stats.batting.cs++;\n            thief.atBats.push(_baseballUtility_utils.Log.prototype.CAUGHT_STEALING);\n            switch (thief) {\n                case field.first:\n                    field.first = null;\n                    break;\n                case field.second:\n                    field.second = null;\n                    break;\n                case field.third:\n                    field.third = null;\n            }\n            if (this.count.outs >= 3) {\n                this.says = 'Three outs, change.';\n                this.count.outs = this.count.balls = this.count.strikes = 0;\n                pitcher.stats.pitching.IP[0]++;\n                pitcher.stats.pitching.IP[1] = 0;\n                return this.changeSides();\n            }\n        }\n\n        pitcher.stats.pitching.pitches++;\n        if (result.looking) {\n            if (result.strike) {\n                this.count.strikes++;\n                pitcher.stats.pitching.strikes++;\n            } else {\n                this.count.balls++;\n            }\n        } else {\n            pitcher.stats.pitching.strikes++;\n            if (result.contact) {\n                game.passMinutes(1);\n                if (result.caught) {\n                    batter.stats.batting.pa++;\n                    pitcher.stats.pitching.IP[1]++;\n                    if (result.sacrificeAdvances.length && this.count.outs < 2) {\n                        batter.stats.batting.sac++;\n                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SACRIFICE);\n                        this.advanceRunners(false, null, result.sacrificeAdvances);\n                    } else {\n                        batter.stats.batting.ab++;\n                        if (result.flyAngle < 15) {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.LINEOUT);\n                        } else {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FLYOUT);\n                        }\n                    }\n                    this.count.outs++;\n                    fielder.stats.fielding.PO++;\n                    this.newBatter();\n                } else {\n                    if (result.foul) {\n                        this.count.strikes++;\n                        if (this.count.strikes > 2) this.count.strikes = 2;\n                    } else {\n                        batter.stats.batting.pa++;\n                        batter.stats.batting.ab++;\n                        if (result.firstOut) {\n                            game.field[result.firstOut] = null;\n                            result.additionalOuts.map(function (runner) {\n                                if (runner !== 'batter') {\n                                    game.field[runner] = null;\n                                }\n                            });\n                            this.count.outs += result.additionalOuts.length;\n                        }\n                        if (result.fieldersChoice && this.count.outs < 2) {\n                            result.bases = 0;\n                            this.count.outs++;\n                            fielder.stats.fielding.PO++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FIELDERS_CHOICE);\n                            this.advanceRunners(false, result.fieldersChoice);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            this.reachBase();\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        } else if (result.fieldersChoice) {\n                            result.bases = 0;\n                            result.thrownOut = true;\n                        }\n                        if (result.thrownOut) {\n                            this.count.outs++;\n                            fielder.stats.fielding.PO++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            if (this.count.outs < 3) {\n                                this.advanceRunners(false);\n                            }\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        }\n                        if (result.hitByPitch) {\n                            batter.stats.batting.ab--;\n                        }\n                        if (result.bases) {\n                            if (!result.error) {\n                                game.tally[game.half == 'top' ? 'away' : 'home'][_baseballUtility_utils.Log.prototype.SINGLE]++;\n                                pitcher.stats.pitching.H++;\n                            } else {\n                                if (result.bases > 0) {\n                                    game.tally[game.half == 'top' ? 'home' : 'away'].E++;\n                                    fielder.stats.fielding.E++;\n                                }\n                            }\n                            var bases = result.bases;\n                            switch (bases) {\n                                case 0:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                                    break;\n                                case 1:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                        break;\n                                    }\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SINGLE);\n                                    batter.stats.batting.h++;\n                                    break;\n                                case 2:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                        break;\n                                    }\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.DOUBLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['2b']++;\n                                    break;\n                                case 3:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                        break;\n                                    }\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.TRIPLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['3b']++;\n                                    break;\n                                case 4:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                        break;\n                                    }\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.HOMERUN);\n                                    pitcher.stats.pitching.HR++;\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting.hr++;\n                                    break;\n                            }\n                            if (bases > 0 && bases < 4 && !result.error) {\n                                if (['left', 'right', 'center'].indexOf(result.fielder) == -1) {\n                                    batter.recordInfieldHit();\n                                }\n                            }\n                            if (bases >= 1) {\n                                this.advanceRunners();\n                                this.reachBase();\n                                bases -= 1;\n                            }\n                            while (bases > 0) {\n                                bases -= 1;\n                                this.advanceRunners();\n                            }\n                            this.newBatter();\n                        }\n                    }\n                }\n            } else {\n                this.count.strikes++;\n            }\n        }\n\n        this.says = this.count.balls + ' and ' + this.count.strikes;\n\n        result.outs = this.count.outs;\n\n        if (this.count.strikes > 2) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.ab++;\n            batter.stats.batting.so++;\n            pitcher.stats.pitching.K++;\n            this.count.outs++;\n            pitcher.stats.pitching.IP[1]++;\n            this.count.balls = this.count.strikes = 0;\n            this.says = 'Strike three. Batter out.';\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.STRIKEOUT);\n            this.newBatter();\n        }\n        if (this.count.balls > 3) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.bb++;\n            pitcher.stats.pitching.BB++;\n            this.says = 'Ball four.';\n            this.count.balls = this.count.strikes = 0;\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.WALK);\n            this.advanceRunners(true).reachBase().newBatter();\n        }\n        if (this.count.outs > 2) {\n            this.says = 'Three outs, change.';\n            this.count.outs = this.count.balls = this.count.strikes = 0;\n            pitcher.stats.pitching.IP[0]++;\n            pitcher.stats.pitching.IP[1] = 0;\n            this.changeSides();\n        }\n    },\n    reachBase: function reachBase() {\n        var game = this.game;\n        game.field.first = game.batter;\n        game.field.first.fatigue += 2;\n        return this;\n    },\n    advanceRunners: function advanceRunners(isWalk, fieldersChoice, sacrificeAdvances) {\n        isWalk = !!isWalk;\n        var game = this.game;\n        var first = game.field.first,\n            second = game.field.second,\n            third = game.field.third,\n            swing = game.swingResult;\n\n        if (isWalk) {\n            if (first) {\n                if (second) {\n                    if (third) {\n                        //bases loaded\n                        game.batter.recordRBI();\n                        game.batter.stats.batting.rbi++;\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        third.stats.batting.r++;\n                        game.pitcher.stats.pitching.ER++;\n                        this.runScores();\n                        game.field.third = second;\n                        game.field.second = first;\n                        first = null;\n                    } else {\n                        // 1st and second\n                        game.field.third = second;\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                } else {\n                    if (third) {\n                        // first and third\n                        game.field.second = first;\n                        game.field.first = null;\n                    } else {\n                        // first only\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                }\n            } else {\n                // no one on first\n            }\n        } else {\n                if (fieldersChoice) {\n                    game.field[fieldersChoice] = null;\n                    first = game.field.first;\n                    second = game.field.second;\n                    third = game.field.third;\n                }\n                var canAdvance = function canAdvance() {\n                    return true;\n                };\n                if (sacrificeAdvances) {\n                    canAdvance = function (position) {\n                        switch (position) {\n                            case 'first':\n                                return sacrificeAdvances.indexOf('first') > -1 && !game.field.second;\n                            case 'second':\n                                return sacrificeAdvances.indexOf('second') > -1 && !game.field.third;\n                            case 'third':\n                                return sacrificeAdvances.indexOf('third') > -1;\n                        }\n                    };\n                }\n                var arm = 0;\n                if (swing.fielder) {\n                    var fielder = game.pitcher.team.positions[swing.fielder];\n                    if (['left', 'center', 'right'].indexOf(fielder.position) > -1) {\n                        arm = fielder.skill.defense.throwing;\n                    } else {\n                        arm = fielder.skill.defense.throwing + 120; // very rare extra bases on infield BIP\n                    }\n                }\n                if (third && canAdvance('third')) {\n                    // run scored\n                    this.runScores();\n                    if (game.batter != third) {\n                        game.batter.recordRBI();\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    }\n                    game.batter.stats.batting.rbi++;\n                    third.stats.batting.r++;\n                    game.pitcher.stats.pitching.ER++;\n                    game.field.third = null;\n                }\n                if (second && canAdvance('second')) {\n                    game.field.third = second;\n                    game.field.second = null;\n                    if (second != game.batter && !sacrificeAdvances && Math.random() * (second.skill.offense.speed + 120) > arm + 50) {\n\n                        this.runScores();\n                        if (game.batter != second) {\n                            game.batter.recordRBI();\n                            second.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        }\n                        game.field.third = null;\n                    }\n                }\n                if (first && canAdvance('first')) {\n                    game.field.second = first;\n                    game.field.first = null;\n                    if (first != game.batter && !game.field.third && !sacrificeAdvances && Math.random() * (first.skill.offense.speed + 120) > arm + 60) {\n\n                        game.field.third = first;\n                        game.field.second = null;\n                    }\n                }\n            }\n        return this;\n    },\n    runScores: function runScores() {\n        var game = this.game;\n        game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n        game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n    },\n    newBatter: function newBatter() {\n        var game = this.game;\n        game.passMinutes(2);\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.count.balls = this.count.strikes = 0;\n        game.log.notePlateAppearanceResult(game);\n        var team = game.half == 'bottom' ? game.teams.home : game.teams.away;\n        game.lastBatter = game.batter;\n        game.batter = team.lineup[(team.nowBatting + 1) % 9];\n        game.batter.ready = false;\n        if (!game.humanBatting()) {\n            game.batter.ready = true;\n        }\n        game.deck = team.lineup[(team.nowBatting + 2) % 9];\n        game.hole = team.lineup[(team.nowBatting + 3) % 9];\n        team.nowBatting = (team.nowBatting + 1) % 9;\n        if (this.count.outs < 3) {\n            game.log.noteBatter(game.batter);\n        }\n        game.showPlayResultPanels(game.lastBatter);\n    },\n    changeSides: function changeSides() {\n        var game = this.game;\n        game.passMinutes(5);\n        game.swingResult = {};\n        game.swingResult.looking = true; // hide bat\n        game.pitchInFlight.x = null; // hide ball\n        game.pitchInFlight.y = null; // hide ball\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        var offense, defense;\n        game.field.first = null;\n        game.field.second = null;\n        game.field.third = null;\n        if (game.half == 'top') {\n            if (game.inning == 9 && game.tally.home.R > game.tally.away.R) {\n                return game.end();\n            }\n            game.half = 'bottom';\n        } else {\n            if (game.inning + 1 > 9) {\n                return game.end();\n            }\n            game.inning++;\n            game.half = 'top';\n        }\n        offense = game.half == 'top' ? 'away' : 'home';\n        defense = game.half == 'top' ? 'home' : 'away';\n        var n = game.inning + '回の' + (game.half == 'top' ? 'オモテ' : 'ウラ') + '、' + game.teams[game.half == 'top' ? 'away' : 'home'].getName() + 'の攻撃。',\n            e = (game.half == 'top' ? 'Top' : 'Bottom') + ' ' + game.inning;\n        game.log.note(e, n);\n        var team = game.teams[offense];\n        game.batter = team.lineup[team.nowBatting];\n        game.batterRunner = game.batter;\n        game.deck = team.lineup[(team.nowBatting + 1) % 9];\n        game.hole = team.lineup[(team.nowBatting + 2) % 9];\n\n        game.pitcher = game.teams[defense].positions.pitcher;\n        game.log.noteBatter(game.batter);\n        game.autoPitchSelect();\n        game.field.defense = team.positions;\n    },\n    says: 'Play ball!',\n    game: null\n};\n\nexports.Umpire = Umpire;\n\n},{\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":33}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nexports.AtBat = _baseballModelAtBat.AtBat;\nexports.Field = _baseballModelField.Field;\nexports.Game = _baseballModelGame.Game;\nexports.Manager = _baseballModelManager.Manager;\nexports.Player = _baseballModelPlayer.Player;\nexports.Team = _baseballModelTeam.Team;\nexports.Umpire = _baseballModelUmpire.Umpire;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _meshBall = require('./mesh/Ball');\n\nvar _meshMound = require('./mesh/Mound');\n\nvar _meshBase = require('./mesh/Base');\n\nvar _meshField = require('./mesh/Field');\n\nvar _meshGrass = require('./mesh/Grass');\n\nvar _meshHomeDirt = require('./mesh/HomeDirt');\n\nvar _meshBattersEye = require('./mesh/BattersEye');\n\nvar _meshWall = require('./mesh/Wall');\n\nvar _meshSky = require('./mesh/Sky');\n\nvar _meshSun = require('./mesh/Sun');\n\nvar _sceneLighting = require('./scene/lighting');\n\nvar _ShadersSkyShader = require('./Shaders/SkyShader');\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\n/**\n * the constants should be tuned so that the camera coincides with the DOM's strike zone overlay\n * @type {number}\n */\nvar VERTICAL_CORRECTION = -0.2;\nvar INITIAL_CAMERA_DISTANCE = 8;\n\nif (typeof THREE !== 'undefined') {\n    var AHEAD = new THREE.Vector3(0, VERTICAL_CORRECTION, -60.5);\n    var INITIAL_POSITION = new THREE.Vector3(0, VERTICAL_CORRECTION, INITIAL_CAMERA_DISTANCE);\n}\n\n/**\n * manager for the rendering loop\n */\n\nvar Loop = (function () {\n    function Loop(elementClass) {\n        _classCallCheck(this, Loop);\n\n        (0, _ShadersSkyShader.loadSkyShader)();\n        this.elementClass = elementClass;\n        this.main();\n        window.loop = this;\n        this.timeOfDay = {\n            h: 0,\n            m: 0\n        };\n    }\n\n    /**\n     * individual objects<AbstractMesh> can attach and detach to the manager to be rendered\n     */\n\n    _createClass(Loop, [{\n        key: 'loop',\n        value: function loop() {\n            requestAnimationFrame(this.loop.bind(this));\n            this.panToward(this.target);\n            var omt = this.overwatchMoveTarget;\n            this.moveToward(this.moveTarget || {\n                x: omt.x,\n                y: omt.y + 12,\n                z: omt.z\n            });\n            this.objects.map(function (i) {\n                return i.animate();\n            });\n            //this.breathe();\n            this.renderer.render(this.scene, this.camera);\n        }\n\n        /**\n         * initialize lights, camera, action\n         */\n    }, {\n        key: 'main',\n        value: function main() {\n            this.objects = [];\n            if (this.getThree()) {\n\n                var THREE = this.THREE;\n\n                var scene = this.scene = new THREE.Scene();\n                scene.fog = new THREE.FogExp2(0x624E46, 0.002);\n                this.attach();\n                this.lighting = _sceneLighting.lighting;\n                _sceneLighting.lighting.addTo(scene);\n                var camera = this.camera = new THREE.PerspectiveCamera(60, this.getAspect(), 0.1, 1000000);\n\n                this.target = new THREE.Vector3(0, 0, -60.5);\n                this._target = new THREE.Vector3(0, 0, -60.5);\n                this.moveTarget = camera.position;\n\n                this.resetCamera();\n                this.loop();\n            }\n        }\n\n        /**\n         * @param addition\n         */\n    }, {\n        key: 'addMinutes',\n        value: function addMinutes(addition) {\n            var hours = this.timeOfDay.h,\n                minutes = this.timeOfDay.m;\n            minutes += addition;\n            while (minutes >= 60) {\n                minutes -= 60;\n                hours += 1;\n                hours %= 24;\n            }\n            this.setTimeOfDay(hours, minutes);\n        }\n\n        /**\n         * @param hours\n         * @param minutes\n         * gradual transition\n         */\n    }, {\n        key: 'setTargetTimeOfDay',\n        value: function setTargetTimeOfDay(hours, minutes) {\n            if (this.background) {\n                var sun = this.background.sun;\n            } else {\n                sun = this.sun;\n            }\n            sun.setTargetTime(hours, minutes);\n        }\n\n        /**\n         * @param hours {Number} 0-24\n         * @param minutes {Number} 0-60\n         * instant transition\n         */\n    }, {\n        key: 'setTimeOfDay',\n        value: function setTimeOfDay(hours, minutes) {\n            this.timeOfDay = {\n                h: hours,\n                m: minutes\n            };\n            if (this.background) {\n                var sky = this.background.sky,\n                    sun = this.background.sun;\n            } else {\n                sky = this.sky;\n                sun = this.sun;\n            }\n            if (hours < 7.5) {\n                hours += 24;\n            }\n            var azimuth = (hours - 7.5) / 24 + minutes / 60 / 24;\n            sky.uniforms.azimuth = azimuth;\n\n            if (azimuth > 0.5) {\n                sky.uniforms.inclination = 0.48;\n            } else {\n                sky.uniforms.inclination = 0.39;\n            }\n            sun.time.h = hours;\n            sun.time.m = minutes;\n            sun.derivePosition(sky);\n            var luminosity = (-0.5 + Math.max(Math.abs(1.25 - azimuth), Math.abs(0.25 - azimuth))) * 2;\n            _baseballServicesAnimator.Animator.setLuminosity(0.1 + luminosity / 1.4);\n        }\n\n        /**\n         * used by the background layer\n         */\n    }, {\n        key: 'addStaticMeshes',\n        value: function addStaticMeshes() {\n            new _meshField.Field().join(this);\n            new _meshMound.Mound().join(this);\n            new _meshHomeDirt.HomeDirt().join(this);\n            new _meshGrass.Grass().join(this);\n            new _meshGrass.Grass(this, true);\n            new _meshBattersEye.BattersEye().join(this);\n            var sun = new _meshSun.Sun(),\n                sky = new _meshSky.Sky();\n            sun.derivePosition(sky);\n            sky.join(this);\n            sun.join(this);\n\n            this.sky = sky;\n            this.sun = sun;\n\n            new _meshWall.Wall(this, -30);\n            new _meshWall.Wall(this, -15);\n            new _meshWall.Wall(this, 15);\n            new _meshWall.Wall(this, 30);\n\n            new _meshBase.Base(this, 'first');\n            new _meshBase.Base(this, 'second');\n            new _meshBase.Base(this, 'third');\n            new _meshBase.Base(this, 'home');\n        }\n\n        /**\n         * experimental camera bobbing\n         */\n    }, {\n        key: 'breathe',\n        value: function breathe() {\n            var pos = this.camera.position;\n            var x = pos.x,\n                y = pos.y,\n                z = pos.z;\n            var rate = 0.0005 * this.bob || 1;\n            if (y > 0.6) {\n                this.bob = -1;\n            } else if (y < -0.6) {\n                this.bob = 1;\n            }\n            //pos.x += rate;\n            pos.y += rate;\n            pos.z += rate;\n        }\n    }, {\n        key: 'getThree',\n        value: function getThree() {\n            if (this.THREE === Loop.prototype.THREE && typeof window === 'object' && window.THREE) {\n                return this.THREE = window.THREE;\n            }\n            return false;\n        }\n\n        /**\n         * attach to the DOM\n         * @returns {THREE.WebGLRenderer}\n         */\n    }, {\n        key: 'attach',\n        value: function attach() {\n            window.removeEventListener('resize', this.onResize.bind(this), false);\n            window.addEventListener('resize', this.onResize.bind(this), false);\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            element.innerHTML = '';\n            var THREE = this.THREE;\n            var renderer = new THREE.WebGLRenderer({ alpha: true });\n            this.setSize(renderer);\n            //renderer.setClearColor(0xffffff, 0);\n\n            element.appendChild(renderer.domElement);\n\n            this.renderer = renderer;\n            return renderer;\n        }\n\n        /**\n         * higher FOV on lower view widths\n         */\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            this.camera.aspect = this.getAspect();\n            this.camera.fov = Math.max(90 - 30 * (element.offsetWidth / 1200), 55);\n            this.camera.updateProjectionMatrix();\n            this.setSize(this.renderer);\n        }\n    }, {\n        key: 'setSize',\n        value: function setSize(renderer) {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            var width = element.offsetWidth;\n            renderer.setSize(width, HEIGHT);\n        }\n    }, {\n        key: 'getAspect',\n        value: function getAspect() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            return element.offsetWidth / HEIGHT;\n        }\n\n        /**\n         * incrementally pan toward the vector given\n         * @param vector\n         */\n    }, {\n        key: 'panToward',\n        value: function panToward(vector) {\n            var maxIncrement = this.panSpeed;\n            this.forAllLoops(function (loop) {\n                var target = loop._target;\n                target.x = target.x + Math.max(Math.min((vector.x - target.x) / 100, maxIncrement), -maxIncrement);\n                target.y = target.y + Math.max(Math.min((vector.y - target.y) / 100, maxIncrement), -maxIncrement);\n                target.z = target.z + Math.max(Math.min((vector.z - target.z) / 100, maxIncrement), -maxIncrement);\n                loop.camera.lookAt(target);\n            });\n        }\n\n        /**\n         * incrementally move the camera to the vector\n         * @param vector\n         */\n    }, {\n        key: 'moveToward',\n        value: function moveToward(vector) {\n            var maxIncrement = this.moveSpeed;\n            this.forAllLoops(function (loop) {\n                var position = loop.camera.position;\n                position.x += Math.max(Math.min(vector.x - position.x, maxIncrement), -maxIncrement);\n                position.y += Math.max(Math.min(vector.y - position.y, maxIncrement), -maxIncrement);\n                position.z += Math.max(Math.min(vector.z - position.z, maxIncrement), -maxIncrement);\n            });\n        }\n\n        /**\n         * setting a target will cause the camera to pan toward it using the pan method above\n         * @param vector\n         * @param panSpeed\n         */\n    }, {\n        key: 'setLookTarget',\n        value: function setLookTarget(vector, panSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.panSpeed = panSpeed || 0.9;\n                loop.panning = vector !== AHEAD;\n                loop.target = vector;\n            });\n        }\n\n        /**\n         * setting a target will cause the camera to move toward it using the incremental method above\n         * @param vector\n         * @param moveSpeed\n         */\n    }, {\n        key: 'setMoveTarget',\n        value: function setMoveTarget(vector, moveSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.moveSpeed = moveSpeed || 0.7;\n                loop.moveTarget = vector;\n                loop.overwatchMoveTarget = null;\n            });\n        }\n    }, {\n        key: 'setOverwatchMoveTarget',\n        value: function setOverwatchMoveTarget(vector, moveSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.moveSpeed = moveSpeed || 0.7;\n                loop.overwatchMoveTarget = vector;\n                loop.moveTarget = null;\n            });\n        }\n    }, {\n        key: 'resetCamera',\n        value: function resetCamera() {\n            var moveSpeed = 0.5;\n            if (this.camera.position.z !== INITIAL_POSITION.z) {\n                moveSpeed = 2.5;\n            }\n            this.setLookTarget(AHEAD, moveSpeed);\n            this.setMoveTarget(INITIAL_POSITION, moveSpeed / 10);\n        }\n    }, {\n        key: 'moveCamera',\n        value: function moveCamera(x, y, z) {\n            if (typeof x === 'object') {\n                return this.moveCamera(x.x, x.y, x.z);\n            }\n            this.forAllLoops(function (loop) {\n                loop.camera.position.x = x;\n                loop.camera.position.y = y;\n                loop.camera.position.z = z;\n            });\n        }\n\n        /**\n         * execute the function on all loops\n         * @param fn {Function}\n         */\n    }, {\n        key: 'forAllLoops',\n        value: function forAllLoops(fn) {\n            if (this.background) {\n                fn(this.background);\n            }\n            if (this.foreground) {\n                fn(this.foreground);\n            }\n            fn(this);\n        }\n    }, {\n        key: 'test',\n        value: function test() {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.setType('4-seam');\n            //with (ball.mesh.rotation) {x=0,y=0,z=0}; ball.rotation = {x:0.00, y:0.00};\n            ball.animate = function () {\n                ball.rotate();\n            };\n            ball.join(this);\n            // Baseball.service.Animator.loop.test();\n        }\n    }, {\n        key: 'testTrajectory',\n        value: function testTrajectory(data) {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.deriveTrajectory(data || {\n                splay: -35,\n                travelDistance: 135,\n                flyAngle: -15,\n                x: 100,\n                y: 100\n            }, {\n                x: 0, y: 0\n            });\n            ball.join(this);\n        }\n    }]);\n\n    return Loop;\n})();\n\nvar HEIGHT = 700;\nLoop.VERTICAL_CORRECTION = VERTICAL_CORRECTION;\nLoop.INITIAL_CAMERA_DISTANCE = INITIAL_CAMERA_DISTANCE;\nLoop.prototype.THREE = {};\nLoop.prototype.constructors = {\n    Ball: _meshBall.Ball,\n    Mound: _meshMound.Mound,\n    Field: _meshField.Field\n};\n\nexports.Loop = Loop;\n\n},{\"./Shaders/SkyShader\":10,\"./mesh/Ball\":12,\"./mesh/Base\":13,\"./mesh/BattersEye\":14,\"./mesh/Field\":15,\"./mesh/Grass\":16,\"./mesh/HomeDirt\":17,\"./mesh/Mound\":19,\"./mesh/Sky\":20,\"./mesh/Sun\":21,\"./mesh/Wall\":22,\"./scene/lighting\":23,\"baseball/Services/Animator\":24}],10:[function(require,module,exports){\n/**\n * @author zz85 / https://github.com/zz85\n *\n * Based on \"A Practical Analytic Model for Daylight\"\n * aka The Preetham Model, the de facto standard analytic skydome model\n * http://www.cs.utah.edu/~shirley/papers/sunsky/sunsky.pdf\n *\n * First implemented by Simon Wallner\n * http://www.simonwallner.at/projects/atmospheric-scattering\n *\n * Improved by Martin Upitis\n * http://blenderartists.org/forum/showthread.php?245954-preethams-sky-impementation-HDR\n *\n * Three.js integration by zz85 http://twitter.com/blurspline\n */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar loadSkyShader = function loadSkyShader() {\n    THREE.ShaderLib['sky'] = {\n\n        uniforms: {\n            luminance: { type: \"f\", value: 1 },\n            turbidity: { type: \"f\", value: 2 },\n            reileigh: { type: \"f\", value: 1 },\n            mieCoefficient: { type: \"f\", value: 0.005 },\n            mieDirectionalG: { type: \"f\", value: 0.8 },\n            sunPosition: { type: \"v3\", value: new THREE.Vector3() }\n        },\n\n        vertexShader: [\"varying vec3 vWorldPosition;\", \"void main() {\", \"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\", \"vWorldPosition = worldPosition.xyz;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n\n        fragmentShader: [\"uniform sampler2D skySampler;\", \"uniform vec3 sunPosition;\", \"varying vec3 vWorldPosition;\", \"vec3 cameraPos = vec3(0., 0., 0.);\", \"// uniform sampler2D sDiffuse;\", \"// const float turbidity = 10.0; //\", \"// const float reileigh = 2.; //\", \"// const float luminance = 1.0; //\", \"// const float mieCoefficient = 0.005;\", \"// const float mieDirectionalG = 0.8;\", \"uniform float luminance;\", \"uniform float turbidity;\", \"uniform float reileigh;\", \"uniform float mieCoefficient;\", \"uniform float mieDirectionalG;\", \"// constants for atmospheric scattering\", \"const float e = 2.71828182845904523536028747135266249775724709369995957;\", \"const float pi = 3.141592653589793238462643383279502884197169;\", \"const float n = 1.0003; // refractive index of air\", \"const float N = 2.545E25; // number of molecules per unit volume for air at\", \"// 288.15K and 1013mb (sea level -45 celsius)\", \"const float pn = 0.035;\t// depolatization factor for standard air\", \"// wavelength of used primaries, according to preetham\", \"const vec3 lambda = vec3(680E-9, 550E-9, 450E-9);\", \"// mie stuff\", \"// K coefficient for the primaries\", \"const vec3 K = vec3(0.686, 0.678, 0.666);\", \"const float v = 4.0;\", \"// optical length at zenith for molecules\", \"const float rayleighZenithLength = 8.4E3;\", \"const float mieZenithLength = 1.25E3;\", \"const vec3 up = vec3(0.0, 1.0, 0.0);\", \"const float EE = 1000.0;\", \"const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\", \"// 66 arc seconds -> degrees, and the cosine of that\", \"// earth shadow hack\", \"const float cutoffAngle = pi/1.95;\", \"const float steepness = 1.5;\", \"vec3 totalRayleigh(vec3 lambda)\", \"{\", \"return (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn));\", \"}\",\n\n        // see http://blenderartists.org/forum/showthread.php?321110-Shaders-and-Skybox-madness\n        \"// A simplied version of the total Reayleigh scattering to works on browsers that use ANGLE\", \"vec3 simplifiedRayleigh()\", \"{\", \"return 0.0005 / vec3(94, 40, 18);\",\n        // return 0.00054532832366 / (3.0 * 2.545E25 * pow(vec3(680E-9, 550E-9, 450E-9), vec3(4.0)) * 6.245);\n        \"}\", \"float rayleighPhase(float cosTheta)\", \"{\t \", \"return (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));\", \"//\treturn (1.0 / (3.0*pi)) * (1.0 + pow(cosTheta, 2.0));\", \"//\treturn (3.0 / 4.0) * (1.0 + pow(cosTheta, 2.0));\", \"}\", \"vec3 totalMie(vec3 lambda, vec3 K, float T)\", \"{\", \"float c = (0.2 * T ) * 10E-18;\", \"return 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;\", \"}\", \"float hgPhase(float cosTheta, float g)\", \"{\", \"return (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));\", \"}\", \"float sunIntensity(float zenithAngleCos)\", \"{\", \"return EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));\", \"}\", \"// float logLuminance(vec3 c)\", \"// {\", \"// \treturn log(c.r * 0.2126 + c.g * 0.7152 + c.b * 0.0722);\", \"// }\", \"// Filmic ToneMapping http://filmicgames.com/archives/75\", \"float A = 0.15;\", \"float B = 0.50;\", \"float C = 0.10;\", \"float D = 0.20;\", \"float E = 0.02;\", \"float F = 0.30;\", \"float W = 1000.0;\", \"vec3 Uncharted2Tonemap(vec3 x)\", \"{\", \"return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\", \"}\", \"void main() \", \"{\", \"float sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\", \"// luminance =  1.0 ;// vWorldPosition.y / 450000. + 0.5; //sunPosition.y / 450000. * 1. + 0.5;\", \"// gl_FragColor = vec4(sunfade, sunfade, sunfade, 1.0);\", \"float reileighCoefficient = reileigh - (1.0* (1.0-sunfade));\", \"vec3 sunDirection = normalize(sunPosition);\", \"float sunE = sunIntensity(dot(sunDirection, up));\", \"// extinction (absorbtion + out scattering) \", \"// rayleigh coefficients\",\n\n        // \"vec3 betaR = totalRayleigh(lambda) * reileighCoefficient;\",\n        \"vec3 betaR = simplifiedRayleigh() * reileighCoefficient;\", \"// mie coefficients\", \"vec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;\", \"// optical length\", \"// cutoff angle at 90 to avoid singularity in next formula.\", \"float zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\", \"float sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\", \"float sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\", \"// combined extinction factor\t\", \"vec3 Fex = exp(-(betaR * sR + betaM * sM));\", \"// in scattering\", \"float cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);\", \"float rPhase = rayleighPhase(cosTheta*0.5+0.5);\", \"vec3 betaRTheta = betaR * rPhase;\", \"float mPhase = hgPhase(cosTheta, mieDirectionalG);\", \"vec3 betaMTheta = betaM * mPhase;\", \"vec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex),vec3(1.5));\", \"Lin *= mix(vec3(1.0),pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up, sunDirection),5.0),0.0,1.0));\", \"//nightsky\", \"vec3 direction = normalize(vWorldPosition - cameraPos);\", \"float theta = acos(direction.y); // elevation --> y-axis, [-pi/2, pi/2]\", \"float phi = atan(direction.z, direction.x); // azimuth --> x-axis [-pi/2, pi/2]\", \"vec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);\", \"// vec3 L0 = texture2D(skySampler, uv).rgb+0.1 * Fex;\", \"vec3 L0 = vec3(0.1) * Fex;\", \"// composition + solar disc\", \"//if (cosTheta > sunAngularDiameterCos)\", \"float sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\", \"// if (normalize(vWorldPosition - cameraPos).y>0.0)\", \"L0 += (sunE * 19000.0 * Fex)*sundisk;\", \"vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));\", \"vec3 texColor = (Lin+L0);   \", \"texColor *= 0.04 ;\", \"texColor += vec3(0.0,0.001,0.0025)*0.3;\", \"float g_fMaxLuminance = 1.0;\", \"float fLumScaled = 0.1 / luminance;     \", \"float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled); \", \"float ExposureBias = fLumCompressed;\", \"vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);\", \"vec3 color = curr*whiteScale;\", \"vec3 retColor = pow(color,vec3(1.0/(1.2+(1.2*sunfade))));\", \"gl_FragColor.rgb = retColor;\", \"gl_FragColor.a = 1.0;\", \"}\"].join(\"\\n\")\n    };\n\n    THREE.Sky = function () {\n\n        var skyShader = THREE.ShaderLib[\"sky\"];\n        var skyUniforms = THREE.UniformsUtils.clone(skyShader.uniforms);\n\n        var skyMat = new THREE.ShaderMaterial({\n            fragmentShader: skyShader.fragmentShader,\n            vertexShader: skyShader.vertexShader,\n            uniforms: skyUniforms,\n            side: THREE.BackSide\n        });\n\n        var skyGeo = new THREE.SphereBufferGeometry(450000, 32, 15);\n        var skyMesh = new THREE.Mesh(skyGeo, skyMat);\n\n        // Expose variables\n        this.mesh = skyMesh;\n        this.uniforms = skyUniforms;\n    };\n};\n\nexports.loadSkyShader = loadSkyShader;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _Loop = require('../Loop');\n\n/**\n * Each class should adhere to this pattern.\n * When a scene object has been positioned correctly and its trajectory set,\n * it should use ::join to attach itself to the scene.\n *\n * While attached, the animate method will be called on each frame.\n * Typically the animate method can run through the trajectory queue and then\n * detach itself. @see Ball\n *\n * For static meshes the animate method will do nothing, leaving the mesh permanently attached.\n */\n\nvar AbstractMesh = (function () {\n    function AbstractMesh() {\n        _classCallCheck(this, AbstractMesh);\n    }\n\n    /**\n     * since we are using (0, 0, 0) vector for the center of the strike zone, the actual ground level will be offset\n     * downward\n     * @type {number}\n     */\n\n    _createClass(AbstractMesh, [{\n        key: 'attach',\n\n        /**\n         * attach and detach should be used to maintain the correct object list\n         * todo use the built in object list of the scene object\n         */\n        value: function attach() {\n            var objects = this.loop.objects;\n            if (objects.indexOf(this) === -1) {\n                objects.push(this);\n            }\n            this.loop.scene.add(this.mesh);\n        }\n    }, {\n        key: 'detach',\n        value: function detach() {\n            var objects = this.loop.objects;\n            var index = objects.indexOf(this);\n            if (index !== -1) {\n                this.loop.objects.splice(index, 1);\n            }\n            this.loop.scene.remove(this.mesh);\n        }\n    }, {\n        key: 'join',\n        value: function join(loop) {\n            this.loop = loop || this.loop;\n            if (this.loop instanceof _Loop.Loop) {\n                this.attach();\n            }\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return AbstractMesh;\n})();\n\nAbstractMesh.WORLD_BASE_Y = -4;\n\nexports.AbstractMesh = AbstractMesh;\n\n},{\"../Loop\":9}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nvar _Indicator = require('./Indicator');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\n/**\n * on the DOM the pitch zone is 200x200 pixels\n * here we scale the strike zone to 4.2 units (feet)\n * for display purposes. It is only approximately related to actual pitch zone dimensions.\n * @type {number}\n */\nvar SCALE = 2.1 / 100;\n\nvar INDICATOR_DEPTH = -5;\n\nvar Ball = (function (_AbstractMesh) {\n    _inherits(Ball, _AbstractMesh);\n\n    /**\n     *\n     * @param loop\n     * @param trajectory {Array<Vector3>} incremental vectors applied each frame\n     * e.g. for 1 second of flight time there should be 60 incremental vectors\n     */\n\n    function Ball(loop, trajectory) {\n        _classCallCheck(this, Ball);\n\n        _get(Object.getPrototypeOf(Ball.prototype), 'constructor', this).call(this);\n        if (!(loop instanceof _Loop.Loop) && loop instanceof Array) {\n            trajectory = loop;\n        }\n        this.hasIndicator = false;\n        this.trajectory = trajectory ? trajectory : [];\n        this.breakingTrajectory = [];\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n        this.setType('4-seam', 1);\n        this.bounce = 1;\n    }\n\n    _createClass(Ball, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            /** @see threex.sportballs */\n            var baseURL = 'public/';\n            var THREE = window.THREE;\n            var loader = new THREE.TextureLoader();\n            var textureColor = loader.load(baseURL + 'images/BaseballColor.jpg');\n            var textureBump = loader.load(baseURL + 'images/BaseballBump.jpg');\n            var geometry = new THREE.SphereGeometry(0.36, 32, 16); // real scale is 0.12\n            var material = new THREE.MeshPhongMaterial({\n                map: textureColor,\n                bumpMap: textureBump,\n                bumpScale: 0.01\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n\n        /**\n         * Leave an indicator when crossing the home plate front plane,\n         * and rotate while moving (default 1000 RPM)\n         */\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var frame = this.trajectory.shift(),\n                pos = this.mesh.position;\n\n            if (frame) {\n                pos.x += frame.x;\n                pos.y += frame.y * this.bounce;\n                pos.z += frame.z;\n                if (pos.y < _AbstractMesh2.AbstractMesh.WORLD_BASE_Y) {\n                    this.bounce *= -1;\n                }\n                if (frame.x + frame.y + frame.z !== 0) {\n                    this.rotate();\n                }\n            }\n            if (pos.z > INDICATOR_DEPTH && !this.hasIndicator) {\n                this.spawnIndicator();\n            }\n            if (!frame) {\n                this.detach();\n                this.loop.resetCamera();\n            }\n        }\n    }, {\n        key: 'setType',\n        value: function setType(type, handednessScalar) {\n            var rpm = _baseballUtilityHelper.helper.pitchDefinitions[type][4];\n            var rotationAngle = _baseballUtilityHelper.helper.pitchDefinitions[type][3];\n            this.setRotation(rpm, rotationAngle * (handednessScalar || 1));\n        }\n    }, {\n        key: 'rotate',\n        value: function rotate() {\n            var rotation = this.rotation;\n            var meshRotation = this.mesh.rotation;\n            meshRotation.x += rotation.x;\n            meshRotation.y += rotation.y;\n        }\n    }, {\n        key: 'setRotation',\n        value: function setRotation(rpm, rotationAngle) {\n            this.RPM = rpm;\n            this.RPS = this.RPM / 60;\n            var rotationalIncrement = this.RP60thOfASecond = this.RPS / 60;\n\n            // calculate rotational components\n            // +x is CCW along x axis increasing\n            // +y is CW along y axis increasing\n            // +z (unused) is CW along z axis increasing\n\n            // 0   --> x:1 y:0\n            // 45  --> x:+ y:+\n            // 90  --> x:0 y:1\n            // 180 --> x:-1 y:0\n\n            var xComponent = rotationalIncrement * Math.cos(rotationAngle / 180 * Math.PI);\n            var yComponent = rotationalIncrement * Math.sin(rotationAngle / 180 * Math.PI);\n\n            this.rotation = {\n                x: xComponent * 360 * Math.PI / 180,\n                y: yComponent * 360 * Math.PI / 180\n            };\n        }\n    }, {\n        key: 'exportPositionTo',\n        value: function exportPositionTo(mesh) {\n            mesh.position.x = this.mesh.position.x;\n            mesh.position.y = this.mesh.position.y;\n            mesh.position.z = this.mesh.position.z;\n        }\n    }, {\n        key: 'spawnIndicator',\n        value: function spawnIndicator() {\n            if (this.hasIndicator) {\n                return;\n            }\n            this.hasIndicator = true;\n            var indicator = new _Indicator.Indicator();\n            indicator.mesh.position.x = this.mesh.position.x;\n            indicator.mesh.position.y = this.mesh.position.y;\n            indicator.mesh.position.z = this.mesh.position.z;\n            indicator.join(this.loop.background);\n        }\n    }, {\n        key: 'derivePitchingTrajectory',\n        value: function derivePitchingTrajectory(game) {\n            this.setType(game.pitchInFlight.name, game.pitcher.throws === 'right' ? 1 : -1);\n            var top = 200 - game.pitchTarget.y,\n                left = game.pitchTarget.x,\n                breakTop = 200 - game.pitchInFlight.y,\n                breakLeft = game.pitchInFlight.x,\n                flightTime = _baseballServicesMathinator.Mathinator.getFlightTime(game.pitchInFlight.velocity, _baseballUtilityHelper.helper.pitchDefinitions[game.pitchInFlight.name][2]);\n\n            var scale = SCALE;\n            var origin = {\n                x: game.pitcher.throws == 'left' ? 1.5 : -1.5,\n                y: _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 6,\n                z: -60.5 // mound distance\n            };\n            this.mesh.position.x = origin.x;\n            this.mesh.position.y = origin.y;\n            this.mesh.position.z = origin.z;\n\n            var ARC_APPROXIMATION_Y_ADDITIVE = 38; // made up number\n            var terminus = {\n                x: (left - 100) * scale,\n                y: (100 - top + 2 * ARC_APPROXIMATION_Y_ADDITIVE) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: INDICATOR_DEPTH\n            };\n            var breakingTerminus = {\n                x: (breakLeft - 100) * scale,\n                y: (100 - breakTop) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: INDICATOR_DEPTH\n            };\n\n            var lastPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            },\n                lastBreakingPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            };\n\n            var frames = [],\n                breakingFrames = [],\n                frameCount = flightTime * 60 | 0,\n                counter = frameCount * 1.08 | 0,\n                frame = 0;\n\n            var xBreak = breakingTerminus.x - terminus.x,\n                yBreak = breakingTerminus.y - terminus.y;\n            var breakingDistance = Math.sqrt(Math.pow(xBreak, 2) + Math.pow(yBreak, 2));\n            /**\n             * @type {number} 1.0+, an expression of how late the pitch breaks\n             */\n            var breakingLateness = breakingDistance / (2 * ARC_APPROXIMATION_Y_ADDITIVE) / scale,\n                breakingLatenessMomentumExponent = 0.2 + Math.pow(0.45, breakingLateness);\n\n            while (counter--) {\n                var progress = ++frame / frameCount;\n\n                // linear position\n                var position = {\n                    x: origin.x + (terminus.x - origin.x) * progress,\n                    y: origin.y + (terminus.y - origin.y) * progress,\n                    z: origin.z + (terminus.z - origin.z) * progress\n                };\n                // linear breaking position\n                var breakingInfluencePosition = {\n                    x: origin.x + (breakingTerminus.x - origin.x) * progress,\n                    y: origin.y + (breakingTerminus.y - origin.y) * progress,\n                    z: origin.z + (breakingTerminus.z - origin.z) * progress\n                };\n                if (progress > 1) {\n                    momentumScalar = 1 - Math.pow(progress, breakingLateness);\n                } else {\n                    var momentumScalar = Math.pow(1 - progress, breakingLatenessMomentumExponent);\n                }\n                var breakingScalar = 1 - momentumScalar,\n                    scalarSum = momentumScalar + breakingScalar;\n                // adjustment toward breaking ball position\n                var breakingPosition = {\n                    x: (position.x * momentumScalar + breakingInfluencePosition.x * breakingScalar) / scalarSum,\n                    y: (position.y * momentumScalar + breakingInfluencePosition.y * breakingScalar) / scalarSum,\n                    z: (position.z * momentumScalar + breakingInfluencePosition.z * breakingScalar) / scalarSum\n                };\n                var increment = {\n                    x: position.x - lastPosition.x,\n                    y: position.y - lastPosition.y,\n                    z: position.z - lastPosition.z\n                };\n                var breakingIncrement = {\n                    x: breakingPosition.x - lastBreakingPosition.x,\n                    y: breakingPosition.y - lastBreakingPosition.y,\n                    z: breakingPosition.z - lastBreakingPosition.z\n                };\n\n                lastPosition = position;\n                lastBreakingPosition = breakingPosition;\n\n                breakingFrames.push(breakingIncrement);\n                frames.push(increment);\n            }\n\n            var pause = 60;\n            while (pause--) {\n                breakingFrames.push({ x: 0, y: 0, z: 0 });\n                frames.push({ x: 0, y: 0, z: 0 });\n            }\n\n            this.breakingTrajectory = breakingFrames;\n            this.trajectory = frames;\n            return frames;\n        }\n    }, {\n        key: 'deriveTrajectory',\n        value: function deriveTrajectory(result, pitch) {\n            var dragScalarApproximation = {\n                distance: 1,\n                apexHeight: 0.57,\n                airTime: 0.96\n            };\n\n            var flyAngle = result.flyAngle,\n                distance = Math.abs(result.travelDistance),\n                scalar = result.travelDistance < 0 ? -1 : 1,\n                flightScalar = flyAngle < 7 ? -1 : 1,\n                splay = result.splay; // 0 is up the middle\n\n            if (flightScalar < 0 && result.travelDistance > 0) {\n                distance = Math.max(90, distance);\n            }\n\n            flyAngle = 1 + Math.abs(flyAngle); // todo why plus 1?\n            if (flyAngle > 90) flyAngle = 180 - flyAngle;\n\n            // velocity in m/s, I think\n            var velocity = dragScalarApproximation.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * flyAngle / 180));\n            var velocityVerticalComponent = Math.sin(_baseballServicesMathinator.Mathinator.RADIAN * flyAngle) * velocity;\n            // in feet\n            var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * dragScalarApproximation.apexHeight;\n            // in seconds\n            var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * dragScalarApproximation.airTime; // 2x freefall equation\n\n            this.airTime = airTime;\n\n            var scale = SCALE;\n\n            var origin = {\n                x: pitch.x + result.x - 100,\n                y: pitch.y + result.y - 100,\n                z: 0\n            };\n\n            this.mesh.position.x = origin.x * scale;\n            this.mesh.position.y = origin.y * scale;\n            this.mesh.position.z = origin.z;\n\n            var extrema = {\n                x: Math.sin(splay / 180 * Math.PI) * distance,\n                y: apexHeight,\n                z: -Math.cos(splay / 180 * Math.PI) * distance\n            };\n\n            var frames = [],\n                frameCount = airTime * 60 | 0,\n                counter = frameCount,\n                frame = 0;\n\n            var lastHeight = 0;\n\n            while (counter--) {\n                var progress = ++frame / frameCount,\n                    percent = progress * 100;\n\n                // this equation is approximate\n                if (flightScalar < 0) {\n                    var currentDistance = progress * distance;\n                    y = (origin.y * scale + apexHeight * Math.abs(Math.sin(3 * Math.pow(currentDistance, 1.1) / distance * Math.PI / 2))) * ((100 - percent) / 100) + _AbstractMesh2.AbstractMesh.WORLD_BASE_Y * progress;\n                } else {\n                    var y = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 2) * apexHeight;\n                }\n\n                frames.push({\n                    x: extrema.x / frameCount,\n                    y: y - lastHeight,\n                    z: extrema.z / frameCount\n                });\n\n                lastHeight = y;\n            }\n            this.trajectory = frames;\n            return frames;\n        }\n    }]);\n\n    return Ball;\n})(_AbstractMesh2.AbstractMesh);\n\nBall.prototype.DEFAULT_RPM = 1000;\nBall.prototype.RPM = 1000;\nBall.prototype.RPS = 1000 / 60;\nBall.prototype.RP60thOfASecond = 1000 / 60 / 60;\nBall.prototype.rotation = {\n    x: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180, // in radians per 60th of a second\n    y: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180\n};\n\nexports.Ball = Ball;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11,\"./Indicator\":18,\"baseball/Services/Mathinator\":27,\"baseball/Utility/helper\":35}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Base = (function (_AbstractMesh) {\n    _inherits(Base, _AbstractMesh);\n\n    function Base(loop, base) {\n        _classCallCheck(this, Base);\n\n        _get(Object.getPrototypeOf(Base.prototype), 'constructor', this).call(this);\n        this.base = base;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Base, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xFFFFFF\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(3, 0.3, 3, 8, 8, 8), material);\n\n            mesh.rotation.x = -0 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 0 / 180 * Math.PI;\n\n            switch (this.base) {\n                case 'first':\n                    mesh.position.x = 64;\n                    mesh.position.z = -64;\n                    break;\n                case 'second':\n                    mesh.position.x = 0;\n                    mesh.position.z = -121;\n                    break;\n                case 'third':\n                    mesh.position.x = -64;\n                    mesh.position.z = -64;\n                    break;\n                case 'home':\n                    mesh.position.x = 0;\n                    mesh.position.z = 0;\n\n                    mesh.rotation.z = 0;\n            }\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.5;\n            mesh.position.z -= 0;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Base;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Base = Base;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar BattersEye = (function (_AbstractMesh) {\n    _inherits(BattersEye, _AbstractMesh);\n\n    function BattersEye(loop) {\n        _classCallCheck(this, BattersEye);\n\n        _get(Object.getPrototypeOf(BattersEye.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(BattersEye, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(200, 45, 4, 16, 16, 16), material);\n\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= 310;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return BattersEye;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.BattersEye = BattersEye;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Field = (function (_AbstractMesh) {\n    _inherits(Field, _AbstractMesh);\n\n    function Field(loop) {\n        _classCallCheck(this, Field);\n\n        _get(Object.getPrototypeOf(Field.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Field, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(155, 155, 32, 32), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = -102;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Field;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Field = Field;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Grass = (function (_AbstractMesh) {\n    _inherits(Grass, _AbstractMesh);\n\n    function Grass(loop, infield) {\n        _classCallCheck(this, Grass);\n\n        _get(Object.getPrototypeOf(Grass.prototype), 'constructor', this).call(this);\n        this.infield = infield;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Grass, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: this.infield ? 0x70934A : 0x476532\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(this.infield ? 80 : 8000, this.infield ? 80 : 8000, 16, 16), material);\n\n            if (this.infield) {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.2;\n                mesh.position.z = -62;\n            } else {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y - 0.2;\n                mesh.position.z = -570;\n            }\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Grass;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Grass = Grass;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar HomeDirt = (function (_AbstractMesh) {\n    _inherits(HomeDirt, _AbstractMesh);\n\n    function HomeDirt(loop) {\n        _classCallCheck(this, HomeDirt);\n\n        _get(Object.getPrototypeOf(HomeDirt.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(HomeDirt, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(8, 8, 16, 16), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = 0;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return HomeDirt;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.HomeDirt = HomeDirt;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Indicator = (function (_AbstractMesh) {\n    _inherits(Indicator, _AbstractMesh);\n\n    function Indicator(loop) {\n        _classCallCheck(this, Indicator);\n\n        _get(Object.getPrototypeOf(Indicator.prototype), 'constructor', this).call(this);\n        var n = 60;\n        this.trajectory = [];\n        while (n--) {\n            this.trajectory.push(1);\n        }\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Indicator, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var THREE = window.THREE;\n            var geometry = new THREE.CircleGeometry(0.30, 32);\n            var material = new THREE.MeshPhongMaterial({\n                color: 0xFFFFFF\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            this.trajectory.shift();\n\n            if (!this.trajectory.length) {\n                this.detach();\n            }\n        }\n    }]);\n\n    return Indicator;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Indicator = Indicator;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Mound = (function (_AbstractMesh) {\n    _inherits(Mound, _AbstractMesh);\n\n    function Mound(loop) {\n        _classCallCheck(this, Mound);\n\n        _get(Object.getPrototypeOf(Mound.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Mound, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.CircleGeometry(9), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.9;\n            mesh.position.z = -60.5;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Mound;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Mound = Mound;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],20:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Sky = (function (_AbstractMesh) {\n    _inherits(Sky, _AbstractMesh);\n\n    function Sky(loop) {\n        _classCallCheck(this, Sky);\n\n        _get(Object.getPrototypeOf(Sky.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Sky, [{\n        key: 'setUniforms',\n        value: function setUniforms(uniforms) {\n            this.uniforms = uniforms;\n            var sky = this.sky;\n            for (var key in uniforms) {\n                if (uniforms.hasOwnProperty(key)) {\n                    if (!sky.uniforms[key]) {\n                        sky.uniforms[key] = uniforms[key];\n                    }\n                    if (typeof uniforms[key] === 'object') {\n                        sky.uniforms[key].value = uniforms[key].value;\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'getMesh',\n        value: function getMesh() {\n            var uniforms = this.uniforms = {\n                luminance: { type: \"f\", value: 1.00 },\n                turbidity: { type: \"f\", value: 10 },\n                reileigh: { type: \"f\", value: 2.00 },\n                mieCoefficient: { type: \"f\", value: 0.005 },\n                mieDirectionalG: { type: \"f\", value: 0.8 },\n                sunPosition: { type: \"v3\", value: new THREE.Vector3() },\n                inclination: 0.18, // elevation / inclination\n                azimuth: 0.75,\n                sun: false\n            };\n\n            var sky = new THREE.Sky();\n            this.sky = sky;\n            this.mesh = sky.mesh;\n\n            this.setUniforms(uniforms);\n\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Sky;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Sky = Sky;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Sun = (function (_AbstractMesh) {\n    _inherits(Sun, _AbstractMesh);\n\n    function Sun(loop) {\n        _classCallCheck(this, Sun);\n\n        _get(Object.getPrototypeOf(Sun.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n        this.targetTime = {\n            h: 0,\n            m: 0\n        };\n        this.time = {\n            h: 0,\n            m: 0\n        };\n    }\n\n    _createClass(Sun, [{\n        key: 'setTargetTime',\n        value: function setTargetTime(hours, minutes) {\n            this.targetTime.h = hours;\n            this.targetTime.m = minutes;\n        }\n    }, {\n        key: 'getMesh',\n        value: function getMesh() {\n            var sun = new THREE.Mesh(new THREE.SphereGeometry(20000, 16, 8), new THREE.MeshBasicMaterial({ color: 0xffffff, wireframe: true }));\n            sun.position.z = -950000; // initialize away from scene\n            sun.position.y = -100000;\n            sun.position.x = -200000;\n            sun.visible = false;\n\n            this.mesh = sun;\n            return this.mesh;\n        }\n\n        /**\n         * @param sky Sky\n         */\n    }, {\n        key: 'derivePosition',\n        value: function derivePosition(sky) {\n            var distance = 400000;\n            var uniforms = sky.uniforms;\n\n            var theta = Math.PI * (uniforms.inclination - 0.5);\n            var phi = 2 * Math.PI * (uniforms.azimuth - 0.5);\n\n            var mesh = this.mesh;\n\n            mesh.position.x = distance * Math.cos(phi);\n            mesh.position.y = distance * Math.sin(phi) * Math.sin(theta);\n            mesh.position.z = distance * Math.sin(phi) * Math.cos(theta);\n\n            mesh.visible = uniforms.sun;\n\n            sky.uniforms.sunPosition.value.copy(mesh.position);\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            if (this.time.h !== this.targetTime.h || this.time.m !== this.targetTime.m) {\n                this.loop.addMinutes(1);\n                this.time.m += 1;\n                if (this.time.m >= 60) {\n                    this.time.h++;\n                    this.time.m -= 60;\n                    this.time.h %= 24;\n                }\n            }\n        }\n    }]);\n\n    return Sun;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Sun = Sun;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Wall = (function (_AbstractMesh) {\n    _inherits(Wall, _AbstractMesh);\n\n    function Wall(loop, angle) {\n        _classCallCheck(this, Wall);\n\n        _get(Object.getPrototypeOf(Wall.prototype), 'constructor', this).call(this);\n        this.angle = angle;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Wall, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(120, 15 | 0, 4, 16, 16, 16), material);\n\n            var radians = this.angle / 180 * Math.PI;\n            mesh.rotation.y = -radians;\n\n            var hypotenuse = 320;\n            var distance = Math.cos(radians) * hypotenuse;\n            var offset = Math.sin(radians) * hypotenuse;\n\n            mesh.position.x += offset;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= distance;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Wall;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Wall = Wall;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],23:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar lighting = {\n    addTo: function addTo(scene) {\n        var light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1.0);\n        scene.add(light);\n        var sun = new THREE.DirectionalLight(0xffffbb, 0.45);\n        light.position.set(-1, 1, 1);\n        this.light = light;\n        this.sun = sun;\n        scene.add(sun);\n    },\n    setLuminosity: function setLuminosity(level) {\n        this.light.intensity = level;\n        this.sun.intensity = level / 2;\n    }\n};\n\nexports.lighting = lighting;\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/services/_services');\n\nvar _baseballRenderLoop = require('baseball/Render/Loop');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar Animator = function Animator() {\n    this.init();\n    throw new Error('No need to instantiate Animator');\n};\nAnimator.TweenMax = {};\nAnimator.prototype = {\n    identifier: 'Animator',\n    constructor: Animator,\n    /**\n     * console mode disables most animator functions\n     */\n    console: false,\n    TweenMax: {},\n    THREE: {},\n    /**\n     * anything other than webgl will use TweenMax for JS animations\n     */\n    renderingMode: 'webgl',\n    init: function init() {\n        if (Animator.console) return;\n        if (!this.loop && this.renderingMode === 'webgl') {\n            this.beginRender();\n        }\n    },\n    /**\n     * @returns {Loop}\n     */\n    beginRender: function beginRender() {\n        this.loop = new _baseballRenderLoop.Loop('webgl-container');\n        this.background = new _baseballRenderLoop.Loop('webgl-bg-container');\n        this.background.addStaticMeshes();\n\n        this.loop.background = this.background;\n        this.background.foreground = this.loop;\n\n        return this.loop;\n    },\n    /**\n     * @param level {Number} 0 to 1\n     */\n    setLuminosity: function setLuminosity(level) {\n        if (this.console) return;\n        this.loop.lighting.setLuminosity(level);\n        this.background.lighting.setLuminosity(level);\n    },\n    loadTweenMax: function loadTweenMax() {\n        if (this.console || typeof window !== 'object') {\n            Animator.TweenMax = {\n                'set': function set() {},\n                'to': function to() {},\n                'from': function from() {},\n                killAll: function killAll() {}\n            };\n        } else {\n            Animator.TweenMax = window.TweenMax;\n        }\n        return Animator.TweenMax;\n    },\n    TIME_FROM_SET: 2300, //ms\n    TIME_FROM_WINDUP: 3600, //ms\n    HOLD_UP_ALLOWANCE: 0.25, // seconds\n    pitchTarget: null,\n    pitchBreak: null,\n    /**\n     * this is called with $scope context binding\n     * @param callback\n     */\n    updateFlightPath: function updateFlightPath(callback) {\n        if (Animator.console) return;\n\n        if (Animator.renderingMode === 'webgl') {\n            return Animator.renderFlightPath(callback, this);\n        }\n        return Animator.tweenFlightPath(callback, this);\n    },\n    /**\n     * @param callback\n     * @param $scope\n     * animates the pitch's flight path\n     */\n    tweenFlightPath: function tweenFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            top = 200 - game.pitchTarget.y,\n            left = game.pitchTarget.x,\n            breakTop = 200 - game.pitchInFlight.y,\n            breakLeft = game.pitchInFlight.x,\n            $baseballs = $('.baseball'),\n            flightSpeed = 1.3 - 0.6 * (game.pitchInFlight.velocity + 300) / 400,\n            originTop = 50,\n            originLeft = 110 + (game.pitcher.throws == 'left' ? 20 : -20);\n        var pitch = this.pitchTarget = $('.main-area .target .baseball.pitch'),\n            henka = this.pitchBreak = $('.main-area .target .baseball.break'),\n            quarter = flightSpeed / 4;\n\n        var pitchTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 12, 4),\n            targetTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 10, 3);\n\n        var transitions = [pitchTransition(0, 0), pitchTransition(10, 0), pitchTransition(30, 1), pitchTransition(50, 2), targetTransition(100, 3), pitchTransition(100, 3, breakTop, breakLeft)];\n\n        TweenMax.set([pitch, henka], transitions[0]);\n        TweenMax.to([pitch, henka], quarter, transitions[1]);\n        TweenMax.to([pitch, henka], quarter, transitions[2]);\n        TweenMax.to([pitch, henka], quarter, transitions[3]);\n        TweenMax.to(pitch, quarter, transitions[4]);\n        TweenMax.to(henka, quarter, transitions[5]);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback == 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        if (!game.pitchInFlight.x) {\n            $baseballs.addClass('hide');\n        } else {\n            if (game.humanBatting() && Math.random() * 180 > game.batter.skill.offense.eye) {\n                $('.baseball.break').addClass('hide');\n            } else {\n                $('.baseball.break').removeClass('hide');\n            }\n            $('.baseball.pitch').removeClass('hide');\n        }\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\n     * @param callback\n     * @param $scope Angular scope\n     * webgl version of tweenFlightPath\n     */\n    renderFlightPath: function renderFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            flightSpeed = _baseballServices_services.Mathinator.getFlightTime(game.pitchInFlight.velocity, _baseballUtilityHelper.helper.pitchDefinitions[game.pitchInFlight.name][2]);\n\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var ball = new this.loop.constructors.Ball();\n        Animator._ball = ball;\n        ball.derivePitchingTrajectory(game);\n        ball.trajectory = ball.breakingTrajectory;\n        ball.join(this.loop);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback === 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        var $baseballs = $('.baseball');\n        $baseballs.addClass('hide');\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\n     * @param game\n     * @returns {*}\n     * This only animates the flight arc of the ball in play.\n     */\n    animateFieldingTrajectory: function animateFieldingTrajectory(game) {\n        if (Animator.console) return game.swingResult;\n\n        if (this.renderingMode === 'webgl') {\n            Animator.tweenFieldingTrajectory(game, true);\n            return Animator.renderFieldingTrajectory(game);\n        }\n        return Animator.tweenFieldingTrajectory(game);\n    },\n    /**\n     * @param game\n     * @param splayOnly\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\n     * JS/CSS animation\n     */\n    tweenFieldingTrajectory: function tweenFieldingTrajectory(game, splayOnly) {\n        var TweenMax = Animator.loadTweenMax();\n        var ball = $('.splay-indicator-ball');\n        TweenMax.killAll();\n        var result = game.swingResult;\n\n        var linearApproximateDragScalar = {\n            distance: 1,\n            apexHeight: 0.57,\n            airTime: 0.96\n        };\n\n        var angle = result.flyAngle,\n            distance = Math.abs(result.travelDistance),\n            scalar = result.travelDistance < 0 ? -1 : 1;\n\n        _baseballServices_services.Mathinator.memory.bounding = angle < 0;\n        angle = 1 + Math.abs(angle);\n        if (angle > 90) angle = 180 - angle;\n\n        var velocity = linearApproximateDragScalar.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * angle / 180));\n        var velocityVerticalComponent = Math.sin(_baseballServices_services.Mathinator.RADIAN * angle) * velocity;\n        var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * linearApproximateDragScalar.apexHeight;\n        var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * linearApproximateDragScalar.airTime; // 2x freefall equation\n\n        //log('angle', angle, 'vel', velocity, 'apex', apexHeight, 'air', airTime, 'dist', result.travelDistance);\n        var quarter = airTime / 4;\n        var mathinator = new _baseballServices_services.Mathinator();\n        var transitions = [mathinator.transitionalTrajectory(0, quarter, 0, apexHeight, scalar * distance, result.splay), mathinator.transitionalTrajectory(25, quarter, 0), mathinator.transitionalTrajectory(50, quarter, 1), mathinator.transitionalTrajectory(75, quarter, 2), mathinator.transitionalTrajectory(100, quarter, 3)];\n        TweenMax.set(ball, transitions[0]);\n        TweenMax.to(ball, quarter, transitions[1]);\n        TweenMax.to(ball, quarter, transitions[2]);\n        TweenMax.to(ball, quarter, transitions[3]);\n        TweenMax.to(ball, quarter, transitions[4]);\n\n        if (!splayOnly) {\n            ball = $('.indicator.baseball.break').removeClass('hide').show();\n            var time = quarter / 2;\n            transitions = [mathinator.transitionalCatcherPerspectiveTrajectory(0, time, 0, apexHeight, scalar * distance, result.splay, game.pitchInFlight), mathinator.transitionalCatcherPerspectiveTrajectory(12.5, time * 0.75, 0), mathinator.transitionalCatcherPerspectiveTrajectory(25, time * 0.80, 1), mathinator.transitionalCatcherPerspectiveTrajectory(37.5, time * 0.85, 2), mathinator.transitionalCatcherPerspectiveTrajectory(50, time * 0.90, 3), mathinator.transitionalCatcherPerspectiveTrajectory(62.5, time * 0.95, 4), mathinator.transitionalCatcherPerspectiveTrajectory(75, time, 5), mathinator.transitionalCatcherPerspectiveTrajectory(87.5, time, 6), mathinator.transitionalCatcherPerspectiveTrajectory(100, time, 7)];\n            TweenMax.set(ball, transitions[0]);\n            TweenMax.to(ball, time, transitions[1]);\n            TweenMax.to(ball, time, transitions[2]);\n            TweenMax.to(ball, time, transitions[3]);\n            TweenMax.to(ball, time, transitions[4]);\n            TweenMax.to(ball, time, transitions[5]);\n            TweenMax.to(ball, time, transitions[6]);\n            TweenMax.to(ball, time, transitions[7]);\n            TweenMax.to(ball, time, transitions[8]);\n\n            setTimeout(function () {\n                // hack\n                $('.indicator.baseball.break').removeClass('hide').show();\n            }, 50);\n        }\n\n        return game.swingResult;\n    },\n    /**\n     * @param game\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\n     * WebGL version of tweenFieldingTrajectory\n     */\n    renderFieldingTrajectory: function renderFieldingTrajectory(game) {\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var result = game.swingResult;\n\n        var ball = Animator._ball || new this.loop.constructors.Ball();\n        ball.deriveTrajectory(result, game.pitchInFlight);\n        ball.join(this.loop);\n\n        if (result.thrownOut || result.caught || result.bases) {\n            if (Math.random() < 0.15 && ball.airTime > 1.5 || Math.random() < 0.50 && ball.airTime > 2.5) {\n                //var scale = 1;\n                //if (result.splay > 0) {\n                //    scale = -1;\n                //}\n                this.loop.setLookTarget(ball.mesh.position, 0.3);\n                this.loop.setOverwatchMoveTarget(ball.mesh.position, 0.16);\n            } else {\n                this.loop.setLookTarget(ball.mesh.position, 0.5);\n                this.loop.setMoveTarget({ x: 0, y: 6, z: _baseballRenderLoop.Loop.INITIAL_CAMERA_DISTANCE }, 0.05);\n            }\n        } else if (Math.abs(result.splay) < 60) {\n            this.loop.setLookTarget(ball.mesh.position, 0.5);\n            this.loop.setMoveTarget({ x: 0, y: 6, z: _baseballRenderLoop.Loop.INITIAL_CAMERA_DISTANCE }, 0.05);\n        }\n\n        return game.swingResult;\n    }\n};\n\nfor (var fn in Animator.prototype) {\n    if (Animator.prototype.hasOwnProperty(fn)) {\n        Animator[fn] = Animator.prototype[fn];\n    }\n}\n\nexports.Animator = Animator;\n\n},{\"baseball/Render/Loop\":9,\"baseball/Utility/helper\":35,\"baseball/services/_services\":39}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar pitchDefinitions = _baseballUtilityHelper.helper.pitchDefinitions;\n\n/**\n * For Probability!\n * @constructor\n */\nvar Distribution = function Distribution() {};\n\nvar random = Math.random,\n    min = Math.min,\n    max = Math.max,\n    floor = Math.floor,\n    ceil = Math.ceil,\n    abs = Math.abs,\n    pow = Math.pow,\n    sqrt = Math.sqrt;\n\nDistribution.prototype = {\n    identifier: 'Distribution',\n    constructor: Distribution,\n    /**\n     * @param scale {number}\n     * @returns {number}\n     */\n    chance: function chance(scale) {\n        if (!scale) scale = 1;\n        return random() * scale;\n    },\n    /**\n     * @param fielder {Player}\n     * @returns {boolean}\n     */\n    error: function error(fielder) {\n        return (100 - fielder.skill.defense.fielding) * 0.1 + 3.25 > random() * 100;\n    },\n    /**\n     * @param power\n     * @param flyAngle\n     * @param x {number} batting offset horizontal\n     * @param y {number} batting offset vertical\n     * @returns {number}\n     */\n    landingDistance: function landingDistance(power, flyAngle, x, y) {\n        x = min(5, abs(x) | 0);\n        y = min(5, abs(y) | 0);\n        var goodContactBonus = 8 - sqrt(x * x + y * y);\n\n        var scalar = pow(random(), 1 - goodContactBonus * 0.125);\n\n        return (10 + scalar * 320 + power / 300 + random() * power / 75 * 150) * (1 - abs(flyAngle - 30) / 60);\n    },\n    /**\n     * @param count {{strikes: number, balls: number}}\n     * @returns {{x: number, y: number}}\n     */\n    pitchLocation: function pitchLocation(count) {\n        var x, y;\n        if (random() < 0.5) {\n            x = 50 + floor(random() * 90) - floor(random() * 30);\n        } else {\n            x = 150 + floor(random() * 30) - floor(random() * 90);\n        }\n        y = 30 + (170 - floor(sqrt(random() * 28900)));\n\n        var sum = count.strikes + count.balls + 3;\n\n        x = ((3 + count.strikes) * x + count.balls * 100) / sum;\n        y = ((3 + count.strikes) * y + count.balls * 100) / sum;\n\n        return { x: x, y: y };\n    },\n    /**\n     * swing centering basis\n     * @returns {number}\n     */\n    centralizedNumber: function centralizedNumber() {\n        return 100 + floor(random() * 15) - floor(random() * 15);\n    },\n    /**\n     * @param eye {Player.skill.offense.eye}\n     * @param x\n     * @param y\n     * @param umpire {Umpire}\n     */\n    swingLikelihood: function swingLikelihood(eye, x, y, umpire) {\n        var swingLikelihood = (200 - abs(100 - x) - abs(100 - y)) / 2;\n        if (x < 60 || x > 140 || y < 50 || y > 150) {\n            // ball\n            /** 138 based on avg O-Swing of 30% + 8% for fun, decreased by better eye */\n            swingLikelihood = (swingLikelihood + 138 - eye) / 2 - 15 * umpire.count.balls;\n        } else {\n            /** avg Swing rate of 65% - 8% for laughs, increased by better eye */\n            swingLikelihood = (57 + (2 * swingLikelihood + eye) / 3) / 2;\n        }\n        // higher late in the count\n        return swingLikelihood - 35 + 2 * (umpire.count.balls + 8 * umpire.count.strikes);\n    },\n    /**\n     * @param target {number} 0-200\n     * @param control {number} 0-100\n     * @returns {number}\n     */\n    pitchControl: function pitchControl(target, control) {\n        var effect = (50 - random() * 100) / (1 + control / 100);\n        return min(199.9, max(0.1, target + effect));\n    },\n    /**\n     * @param pitch {Game.pitchInFlight}\n     * @param pitcher {Player}\n     * @param x {number}\n     * @param y {number}\n     * @returns {object|{x: number, y: number}}\n     * 0.5 to 1.5 of the pitch's nominal breaking effect X\n     * 0.5 to 1.5 of the pitch's nominal breaking effect Y, magnified for lower Y\n     */\n    breakEffect: function breakEffect(pitch, pitcher, x, y) {\n        var effect = {};\n        effect.x = floor(x + pitch.breakDirection[0] * (0.50 + 0.5 * random() + pitcher.pitching[pitch.name]['break'] / 200));\n        effect.y = floor(y + pitch.breakDirection[1] * ((0.50 + 0.5 * random() + pitcher.pitching[pitch.name]['break'] / 200) / (0.5 + y / 200)));\n        return effect;\n    },\n    /**\n     * Determine the swing target along an axis\n     * @param target {number} 0-200\n     * @param actual {number} 0-200\n     * @param eye {number} 0-100\n     * @returns {number} 0-200\n     */\n    cpuSwing: function cpuSwing(target, actual, eye) {\n        eye = min(eye, 100); // higher eye would overcompensate here\n        return 100 + (target - 100) * (0.5 + random() * eye / 200) - actual;\n    },\n    /**\n     * Determine the swing scalar\n     * @param eye {number} 0-100\n     * @returns {number}\n     */\n    swing: function swing(eye) {\n        return 100 / (eye + 25 + random() * 50);\n    },\n    /**\n     * @param pitch {Object} game.pitchInFlight\n     * @param catcher {Player}\n     * @param thief {Player}\n     * @param base {Number} 1,2,3,4\n     * @param volitional {boolean} whether the runner decided to steal\n     * @returns {boolean}\n     */\n    stealSuccess: function stealSuccess(pitch, catcher, thief, base, volitional) {\n        var rand = random(),\n            rand2 = random();\n\n        if (base == 4) {\n            rand = rand / 100;\n        }\n\n        var smoothedRand2 = (1 + rand2) / 2;\n\n        var pitchBaseSpeedMultiplier = (pitchDefinitions[pitch.name] || ['', '', 0.6])[2];\n\n        return ((volitional | 0) * 35 + thief.skill.offense.eye + (base * -25 + 45)) * rand + 10 + thief.skill.offense.speed * 2 - thief.fatigue > pitchBaseSpeedMultiplier * pitch.velocity * smoothedRand2 + (catcher.skill.defense.catching + catcher.skill.defense.throwing) * rand2;\n    },\n    /**\n     * @param pitch {Object} game.pitchInFlight\n     * @param catcher {Player}\n     * @param thief {Player}\n     * @param base {Number} 1,2,3,4\n     * @returns {boolean}\n     */\n    willSteal: function willSteal(pitch, catcher, thief, base) {\n        if (base == 4) return false;\n        return random() < 0.15 && this.stealSuccess(pitch, catcher, thief, base, false) && random() < 0.5;\n    }\n};\n\nfor (var fn in Distribution.prototype) {\n    if (Distribution.prototype.hasOwnProperty(fn)) {\n        Distribution[fn] = Distribution.prototype[fn];\n    }\n}\n\nDistribution.main = function () {\n    var ump = {\n        count: {\n            balls: 0,\n            strikes: 0\n        }\n    };\n    while (ump.count.balls < 4) {\n        while (ump.count.strikes < 3) {\n            console.log('S', ump.count.strikes, 'B', ump.count.balls);\n            console.log('middle', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 100, 100, ump) | 0;\n            }));\n            console.log('corner', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 50, 50, ump) | 0;\n            }));\n            console.log('ball', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 15, 15, ump) | 0;\n            }));\n            ump.count.strikes++;\n        }\n        ump.count.balls++;\n        ump.count.strikes = 0;\n    }\n};\n\nexports.Distribution = Distribution;\n\n},{\"baseball/Utility/helper\":35}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Iterator = function Iterator() {};\n\nIterator.prototype = {\n    identifier: 'Iterator',\n    constructor: Iterator,\n    each: function each(collection, map) {\n        var keys, i;\n        if (collection instanceof Array) {\n            for (i = 0; i < collection.length; i++) {\n                map(i, collection[i]);\n            }\n        } else {\n            keys = Object.keys(collection);\n            for (i = 0; i < keys.length; i++) {\n                map(keys[i], collection[keys[i]]);\n            }\n        }\n    }\n};\n\nfor (var fn in Iterator.prototype) {\n    if (Iterator.prototype.hasOwnProperty(fn)) {\n        Iterator[fn] = Iterator.prototype[fn];\n    }\n}\n\nexports.Iterator = Iterator;\n\n},{}],27:[function(require,module,exports){\n/**\n * For Math!\n * @constructor\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Mathinator = function Mathinator() {};\n\n/**\n * @param n\n * @returns {number}\n */\nMathinator.square = function (n) {\n    return n * n;\n};\n\nMathinator.prototype = {\n    identifier: 'Mathinator',\n    constructor: Mathinator,\n    /**\n     * CONST\n     */\n    RADIAN: Math.PI / 180,\n    SPLAY_INDICATOR_LEFT: -4,\n    /**\n     * @param offset {{x: number, y: number}}\n     * @param angle {number}\n     * @returns {{x: number, y: number}}\n     */\n    getAngularOffset: function getAngularOffset(offset, angle) {\n        var xScalar = offset.x < 0 ? -1 : 1,\n            yScalar = offset.y < 0 ? -1 : 1;\n        var originalAngle = Math.atan(offset.x / offset.y) / this.RADIAN;\n        var distance = Math.sqrt(offset.x * offset.x + offset.y * offset.y),\n            angledY = yScalar * Math.cos((angle - originalAngle) * this.RADIAN) * distance,\n            angledX = xScalar * Math.sqrt(distance * distance - angledY * angledY);\n        return {\n            x: angledX,\n            y: angledY\n        };\n    },\n    /**\n     * @param a {Array<Number>}\n     * @param b {Array<Number>}\n     * @returns {number}\n     */\n    getPolarDistance: function getPolarDistance(a, b) {\n        var radians = this.RADIAN;\n        return Math.sqrt(a[1] * a[1] + b[1] * b[1] - 2 * a[1] * b[1] * Math.cos(a[0] * radians - b[0] * radians));\n    },\n    /**\n     * @param origin\n     * @param target\n     * @returns {number}\n     * 0 is flat (left-right), positive is clockwise.\n     * We use 125 instead of 180 to account for natural hand-height adjustments\n     * of various swing heights.\n     */\n    battingAngle: function battingAngle(origin, target) {\n        return Math.atan((origin.y - target.y) / (target.x - origin.x)) / Math.PI * 125;\n    },\n    memory: {},\n    /**\n     * @param percent {number} 0-100\n     * @param quarter {number} seconds\n     * @param step {number} 0 and up\n     * @param [givenApexHeight] feet\n     * @param [givenDistance] in feet\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\n     * @returns {{bottom: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\n     */\n    transitionalTrajectory: function transitionalTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle) {\n        if (givenApexHeight) Mathinator.prototype.memory.apexHeight = givenApexHeight;\n        if (givenDistance) Mathinator.prototype.memory.distance = givenDistance;\n        if (givenSplayAngle) Mathinator.prototype.memory.splay = givenSplayAngle;\n        var apexHeight = Mathinator.prototype.memory.apexHeight,\n            distance = Mathinator.prototype.memory.distance,\n            splay = Mathinator.prototype.memory.splay;\n        var bottom, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            quarter *= 4;\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        bottom = Math.cos(splay * radian) * percent / 100 * distance * 95 / 300;\n        left = Math.sin(splay * radian) * percent / 100 * distance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        var apexRatio = Math.sqrt((50 - Math.abs(percent - 50)) / 100) * (1 / 0.7071);\n        if (bounding) {\n            padding = 1;\n            borderWidth = 1;\n        } else {\n            padding = apexRatio * apexHeight / 90 * 15;\n            borderWidth = 2 + apexRatio * 2;\n        }\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n        padding = Math.max(Math.min(padding, 12), 0);\n        return {\n            bottom: bottom,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\n     * @param percent {number} 0-100\n     * @param quarter {number} seconds\n     * @param step {number} 0 and up\n     * @param [givenApexHeight] feet\n     * @param [givenDistance] in feet\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\n     * @param [givenOrigin] Object with x, y -- pitchInFlight\n     * @returns {{top: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\n     */\n    transitionalCatcherPerspectiveTrajectory: function transitionalCatcherPerspectiveTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle, givenOrigin) {\n        var memory = Mathinator.prototype.memory;\n        if (givenApexHeight) memory.apexHeight = givenApexHeight;\n        if (givenDistance) memory.distance = givenDistance;\n        if (givenSplayAngle) memory.splay = givenSplayAngle;\n        if (givenOrigin) memory.origin = givenOrigin;\n        var apexHeight = memory.apexHeight,\n            distance = memory.distance,\n            splay = memory.splay,\n            origin = memory.origin;\n        var top, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        var height = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 1.2) * apexHeight,\n            currentDistance = distance * percent / 100;\n\n        var projection = Math.pow((500 - currentDistance) / 500, 2); // reduction of dimensions due to distance\n\n        top = 200 - origin.y - height * 20 * projection + percent / 100 * (origin.y - 85) * projection;\n        left = origin.x + Math.sin(splay * radian) * (currentDistance * 8) * projection;\n        padding = 12 * projection * projection;\n        borderWidth = Math.max(Math.min(padding / 3, 4), 0);\n\n        top = Math.max(Math.min(top, 500), -10000);\n        left = Math.max(Math.min(left, 10000), -10000);\n        padding = Math.max(Math.min(padding, 24), 1);\n\n        //console.log('height', height|0, apexHeight|0, projection, 'left/pad/border', left|0, padding|0, borderWidth|0, 'top', top);\n\n        return {\n            top: top,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\n     * @param swingResult\n     * @returns {Game.swingResult}\n     */\n    translateSwingResultToStylePosition: function translateSwingResultToStylePosition(swingResult) {\n        // CF HR bottom: 95px, centerline: left: 190px;\n        var bottom, left;\n\n        bottom = Math.cos(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300;\n        left = Math.sin(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n\n        swingResult.bottom = bottom + 'px';\n        swingResult.left = left + 'px';\n        return swingResult;\n    },\n    /**\n     * @param left {number} 0-200\n     * @param top {number} 0-200\n     * @param originLeft {number} 0-200\n     * @param originTop {number} 0-200\n     * @param quarter {number} seconds\n     * @param maxPadding {number} px padding at full size\n     * @param maxBorderWidth {number} px border width at full size\n     * @returns {Function}\n     */\n    pitchTransition: function pitchTransition(top, left, originTop, originLeft, quarter, maxPadding, maxBorderWidth) {\n        /**\n         * @param percent {number} 0-100\n         * @param step {number} 0 and up\n         * @param [breakTop] {number} 0-200 override\n         * @param [breakLeft] {number} 0-200 override\n         * @returns {{top: number, left: number, padding: string, borderWidth: string, transform: string, delay: number, ease: *}}\n         */\n        return function (percent, step, breakTop, breakLeft) {\n            var _top, _left;\n            _top = breakTop || top;\n            _left = breakLeft || left;\n            _top = originTop + Mathinator.square(percent / 100) * (_top - originTop);\n            if (step == 1) {\n                _top -= 2;\n            }\n            if (step == 2) {\n                _top -= 1;\n            }\n            _left = originLeft + Mathinator.square(percent / 100) * (_left - originLeft);\n            var padding = Math.max(Mathinator.square(percent / 100) * maxPadding, 1),\n                borderWidth = Math.max(Mathinator.square(percent / 100) * maxBorderWidth, 1);\n            return {\n                top: _top,\n                left: _left,\n                padding: padding + 'px',\n                borderWidth: borderWidth + 'px',\n                transform: 'translateZ(0)',\n                delay: quarter * step,\n                ease: Linear.easeNone\n            };\n        };\n    },\n    /**\n     * @param distance {number} feet\n     * @param throwing {number} 0-1\n     * @param fielding {number} 0-1\n     * @param intercept {number} approx. -140 to 140\n     * @returns {number} seconds\n     */\n    fielderReturnDelay: function fielderReturnDelay(distance, throwing, fielding, intercept) {\n        return distance / 90 // bip distance (up to 3s+)\n         + 5 * (distance / 310) // worst case time to reach the ball,\n         * Math.min(intercept - 120, 0) / -240 // a good intercept rating will cut the base down to 0\n         + 1 - (0.2 + fielding * 0.8) // gather time (up to 0.8s)\n         + distance / 90 / (0.5 + throwing / 2); // throwing distance (up to 2s)\n    },\n    /**\n     * @param player {Player}\n     * @returns {number} ~2.0\n     */\n    infieldThrowDelay: function infieldThrowDelay(player) {\n        var fielding = player.skill.defense.fielding,\n            throwing = player.skill.defense.throwing;\n        return 3.5 - (fielding + throwing) / 200;\n    },\n    /**\n     * @param speed {number} 0-100\n     * @returns {number} seconds\n     */\n    baseRunningTime: function baseRunningTime(speed) {\n        return 7.0 - speed / 100 * 4.1;\n    },\n    /**\n     * @param x {Number} bat offset\n     * @param y {Number} bat offset\n     * @param angle {Number} batting angle where 0 is horizontal, RHB clockwise increasing\n     * {\n     *   splay: -90 to 90 where 0 is up the middle,\n     *   fly: 0, flat, to 90, vertical pop up\n     * }\n     * @param eye {Number} 0 - 100 skill rating\n     * @returns {{splay: number, fly: number}}\n     */\n    getSplayAndFlyAngle: function getSplayAndFlyAngle(x, y, angle, eye) {\n\n        var splay = -1.5 * x - y * angle / 20;\n        var direction = splay > 0 ? 1 : -1;\n        // additional random splay\n        // todo make it pull only\n        splay += direction * Math.random() * 40 * (100 / (50 + eye));\n\n        return {\n            splay: splay,\n            fly: -3 * y / ((Math.abs(angle) + 25) / 35) // more difficult to hit a pop fly on a angled bat\n        };\n    },\n    /**\n     * @param velocityRating {Number} 0-100\n     * @param velocityScalar {Number} approx 1\n     * @returns {number}\n     */\n    getFlightTime: function getFlightTime(velocityRating, velocityScalar) {\n        return (1.3 - 0.6 * (velocityRating + 300) / 400) / velocityScalar;\n    }\n};\n\nfor (var fn in Mathinator.prototype) {\n    if (Mathinator.prototype.hasOwnProperty(fn)) {\n        Mathinator[fn] = Mathinator.prototype[fn];\n    }\n}\n\nexports.Mathinator = Mathinator;\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":24,\"baseball/Services/Distribution\":25,\"baseball/Services/Iterator\":26,\"baseball/Services/Mathinator\":27}],29:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _TeamJapan = require('./TeamJapan');\n\nvar Provider = (function () {\n    function Provider() {\n        _classCallCheck(this, Provider);\n    }\n\n    _createClass(Provider, [{\n        key: 'assignTeam',\n        value: function assignTeam(game, team, side) {\n            var special = this.teams[team];\n            special.game = game;\n            game.teams[side] = special;\n        }\n    }]);\n\n    return Provider;\n})();\n\nProvider.prototype.teams = {\n    TeamJapan: _TeamJapan.samurai\n};\n\nexports.Provider = Provider;\n\n},{\"./TeamJapan\":30}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballTeamsTrainer = require('baseball/Teams/Trainer');\n\nvar samurai = new _baseballModel_models.Team('no init');\nsamurai.name = 'Japan';\nsamurai.nameJ = '日本';\n\nvar darvish = new _baseballModelPlayer.Player(samurai),\n    johjima = new _baseballModelPlayer.Player(samurai),\n    ogasawara = new _baseballModelPlayer.Player(samurai),\n    nishioka = new _baseballModelPlayer.Player(samurai),\n    kawasaki = new _baseballModelPlayer.Player(samurai),\n    murata = new _baseballModelPlayer.Player(samurai),\n    matsui = new _baseballModelPlayer.Player(samurai),\n    ichiro = new _baseballModelPlayer.Player(samurai),\n    inaba = new _baseballModelPlayer.Player(samurai);\n\nvar matsuzaka = new _baseballModelPlayer.Player(samurai),\n    fukudome = new _baseballModelPlayer.Player(samurai),\n    aoki = new _baseballModelPlayer.Player(samurai),\n    abe = new _baseballModelPlayer.Player(samurai),\n    iwamura = new _baseballModelPlayer.Player(samurai);\n\nvar coach = new _baseballTeamsTrainer.Trainer();\n\ncoach.makePlayer(darvish, 'Yu', 'Darvish', 'ダルビッシュ', '有', 150, { eye: 80, power: 80, speed: 80 }, { catching: 50, fielding: 70, throwing: 100, speed: 80 }, 'right', 'right', 11);\n\ncoach.makePlayer(johjima, 'Kenji', 'Johjima', '城島', '健司', 60, { eye: 90, power: 88, speed: 70 }, { catching: 140, fielding: 95, throwing: 88, speed: 94 }, 'right', 'right', 2);\n\ncoach.makePlayer(ogasawara, 'Michihiro', 'Ogasawara', '小笠原', '道大', 80, { eye: 96, power: 115, speed: 90 }, { catching: 50, fielding: 96, throwing: 85, speed: 70 }, 'left', 'right', 36);\n\ncoach.makePlayer(nishioka, 'Tsuyoshi', 'Nishioka', '西岡', '剛', 80, { eye: 88, power: 75, speed: 92 }, { catching: 90, fielding: 88, throwing: 88, speed: 90 }, 'right', 'right', 7);\n\ncoach.makePlayer(kawasaki, 'Munenori', 'Kawasaki', '川崎', '宗則', 80, { eye: 95, power: 75, speed: 92 }, { catching: 90, fielding: 98, throwing: 90, speed: 110 }, 'left', 'right', 52);\n\ncoach.makePlayer(murata, 'Shuichi', 'Murata', '村田', '修一', 80, { eye: 82, power: 110, speed: 60 }, { catching: 80, fielding: 80, throwing: 90, speed: 90 }, 'right', 'right', 25);\n\ncoach.makePlayer(matsui, 'Hideki', 'Matsui', '秀樹', '松井', 75, { eye: 104, power: 130, speed: 68 }, { catching: 40, fielding: 85, throwing: 70, speed: 60 }, 'left', 'right', 55);\n\ncoach.makePlayer(ichiro, '', 'Ichiro', 'イチロー', '', 115, { eye: 115, power: 48, speed: 99 }, { catching: 80, fielding: 110, throwing: 135, speed: 120 }, 'left', 'right', 51);\n\ncoach.makePlayer(inaba, 'Atsunori', 'Inaba', '稲葉', '篤紀', 80, { eye: 92, power: 95, speed: 75 }, { catching: 50, fielding: 95, throwing: 95, speed: 90 }, 'right', 'right', 41);\n\nsamurai.bench = [darvish, johjima, ogasawara, nishioka, kawasaki, murata, matsui, ichiro, inaba];\n//matsuzaka, fukudome, aoki, abe, iwamura];\nsamurai.manager.makeLineup();\nsamurai.positions = {\n    pitcher: darvish,\n    catcher: johjima,\n\n    first: ogasawara,\n    second: nishioka,\n    short: kawasaki,\n    third: murata,\n\n    left: matsui,\n    center: ichiro,\n    right: inaba\n};\n\nfor (var position in samurai.positions) {\n    if (samurai.positions.hasOwnProperty(position)) {\n        samurai.positions[position].position = position;\n    }\n}\n\nsamurai.lineup = [ichiro, kawasaki, inaba, matsui, ogasawara, johjima, murata, nishioka, darvish];\n\nsamurai.lineup.map(function (player, order) {\n    player.order = order;\n});\n\nexports.samurai = samurai;\n\n},{\"baseball/Model/Player\":5,\"baseball/Model/_models\":8,\"baseball/Teams/Trainer\":31}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar Trainer = (function () {\n    function Trainer() {\n        _classCallCheck(this, Trainer);\n    }\n\n    _createClass(Trainer, [{\n        key: 'makePlayer',\n        value: function makePlayer(player, name, surname, surnameJ, nameJ, pitching, offense, defense, bats, throws, number) {\n            player.hero = true;\n\n            if ('rights' && 0) {\n                surnameJ = '代表';\n                nameJ = '選手';\n                name = 'TEAM';\n                surname = 'JPN';\n            }\n\n            player.name = name + ' ' + surname;\n            player.nameJ = surnameJ + nameJ;\n            player.surname = surname;\n            player.surnameJ = surnameJ;\n\n            player.spaceName(surnameJ, nameJ);\n            player.randomizeSkills(true, true);\n            player.skill.offense = offense;\n            player.skill.defense = defense;\n            player.skill.pitching = pitching;\n            player.bats = bats;\n            player.throws = throws;\n            player.number = number;\n            _baseballServicesIterator.Iterator.each(player.pitching, function (key, value) {\n                player.pitching[key].velocity += pitching / 5 | 0;\n                player.pitching[key]['break'] += pitching / 5 | 0;\n                player.pitching[key].control += pitching / 5 | 0;\n            });\n            player.resetStats(0);\n        }\n    }]);\n\n    return Trainer;\n})();\n\nexports.Trainer = Trainer;\n\n},{\"baseball/Services/Iterator\":26}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nvar Log = function Log() {\n    this.init();\n};\n\nLog.prototype = {\n    game: 'instance of Game',\n    init: function init() {\n        this.stabilized = {\n            pitchRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            },\n            shortRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            }\n        };\n        this.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.shortRecord = {\n            e: [],\n            n: []\n        };\n        this.record = {\n            e: [],\n            n: []\n        };\n    },\n    SINGLE: 'H',\n    DOUBLE: '2B',\n    TRIPLE: '3B',\n    HOMERUN: 'HR',\n    WALK: 'BB',\n    GROUNDOUT: 'GO',\n    FLYOUT: 'FO',\n    LINEOUT: 'LO',\n    RUN: 'R',\n    STRIKEOUT: 'SO',\n    SACRIFICE: 'SAC',\n    REACHED_ON_ERROR: 'ROE',\n    FIELDERS_CHOICE: 'FC',\n    GIDP: '(IDP)',\n    GITP: '(ITP)',\n    STOLEN_BASE: 'SB',\n    CAUGHT_STEALING: 'CS',\n    stabilizeShortRecord: function stabilizeShortRecord() {\n        var rec = this.record.e.slice(0, 6);\n        this.shortRecord.e = rec;\n        this.stabilized.shortRecord.e = rec.concat(['', '', '', '', '', '']).slice(0, 6);\n\n        var rec2 = this.record.n.slice(0, 6);\n        this.shortRecord.n = rec2;\n        this.stabilized.shortRecord.n = rec2.concat(['', '', '', '', '', '']).slice(0, 6);\n    },\n    note: function note(_note, noteJ, only) {\n        //todo fix don't double language when specifying param [only]\n        if (only === 'e') {\n            this.record.e.unshift(_note);\n            this.async(function () {\n                console.log(_note);\n            });\n        } else if (only === 'n') {\n            this.record.n.unshift(noteJ);\n            this.async(function () {\n                console.log(noteJ);\n            });\n        } else {\n            this.record.e.unshift(_note);\n            this.record.n.unshift(noteJ);\n            this.async(function () {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(noteJ);\n                } else {\n                    console.log(_note);\n                }\n            });\n        }\n        this.stabilizeShortRecord();\n    },\n    getBatter: function getBatter(batter) {\n        var order = batter.team.nowBatting;\n        order = ({\n            0: (0, _baseballUtilityText.text)(' 1st'),\n            1: (0, _baseballUtilityText.text)(' 2nd'),\n            2: (0, _baseballUtilityText.text)(' 3rd'),\n            3: (0, _baseballUtilityText.text)(' 4th'),\n            4: (0, _baseballUtilityText.text)(' 5th'),\n            5: (0, _baseballUtilityText.text)(' 6th'),\n            6: (0, _baseballUtilityText.text)(' 7th'),\n            7: (0, _baseballUtilityText.text)(' 8th'),\n            8: (0, _baseballUtilityText.text)(' 9th')\n        })[order];\n        var positions = this.longFormFielder();\n        return (0, _baseballUtilityText.text)('Now batting') + order + _baseballUtilityText.text.comma() + positions[batter.position] + _baseballUtilityText.text.comma() + batter.getUniformNumber() + _baseballUtilityText.text.comma() + batter.getName();\n    },\n    noteBatter: function noteBatter(batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getBatter(batter);\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getBatter(batter);\n        _baseballUtilityText.text.mode = m;\n        this.note(record, recordJ);\n    },\n    getPitchLocationDescription: function getPitchLocationDescription(pitchInFlight, batterIsLefty) {\n        var x = pitchInFlight.x,\n            y = pitchInFlight.y,\n            say = '';\n        var noComma = false,\n            noComma2 = false;\n        var ball = false;\n        if (!batterIsLefty) x = 200 - x;\n        if (x < 50) {\n            say += (0, _baseballUtilityText.text)('way outside');\n            ball = true;\n        } else if (x < 70) {\n            say += (0, _baseballUtilityText.text)('outside');\n        } else if (x < 100) {\n            say += '';\n            noComma = true;\n        } else if (x < 130) {\n            say += '';\n            noComma = true;\n        } else if (x < 150) {\n            say += (0, _baseballUtilityText.text)('inside');\n        } else {\n            say += (0, _baseballUtilityText.text)('way inside');\n            ball = true;\n        }\n        if (say != '') say += _baseballUtilityText.text.comma();\n        if (y < 35) {\n            say += (0, _baseballUtilityText.text)('way low');\n            ball = true;\n        } else if (y < 65) {\n            say += (0, _baseballUtilityText.text)('low');\n        } else if (y < 135) {\n            say += '';\n            noComma2 = true;\n        } else if (y < 165) {\n            say += (0, _baseballUtilityText.text)('high');\n        } else {\n            say += (0, _baseballUtilityText.text)('way high');\n            ball = true;\n        }\n        if (noComma || noComma2) {\n            say = say.split(_baseballUtilityText.text.comma()).join('');\n            if (noComma && noComma2) {\n                say = (0, _baseballUtilityText.text)('down the middle');\n            }\n        }\n        // say = (ball ? 'Ball, ' : 'Strike, ') + say;\n        say = _baseballUtilityText.text.namePitch(pitchInFlight) + _baseballUtilityText.text.comma() + say + _baseballUtilityText.text.stop();\n        return say;\n    },\n    notePitch: function notePitch(pitchInFlight, batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.pop();\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.pop();\n        _baseballUtilityText.text.mode = m;\n    },\n    broadcastCount: function broadcastCount(justOuts) {\n        if (!this.game.umpire) return '';\n        var count = this.game.umpire.count;\n        if (this.lastOuts == 2 && count.outs == 0) {\n            outs = 3 + (0, _baseballUtilityText.text)(' outs');\n        } else {\n            var outs = count.outs + (count.outs == 1 ? (0, _baseballUtilityText.text)(' out') : (0, _baseballUtilityText.text)(' outs'));\n        }\n        this.lastOuts = count.outs;\n        if (justOuts) {\n            return outs + _baseballUtilityText.text.stop();\n        }\n        return count.strikes + '-' + count.balls + ', ' + outs + _baseballUtilityText.text.stop();\n    },\n    broadcastScore: function broadcastScore() {\n        return this.game.teams.away.getName() + ' ' + this.game.tally.away.R + ', ' + this.game.teams.home.getName() + ' ' + this.game.tally.home.R + _baseballUtilityText.text.stop();\n    },\n    broadcastRunners: function broadcastRunners() {\n        var field = this.game.field;\n        var runners = [field.first && (0, _baseballUtilityText.text)('first') || '', field.second && (0, _baseballUtilityText.text)('second') || '', field.third && (0, _baseballUtilityText.text)('third') || ''].filter(function (x) {\n            return x;\n        });\n\n        var runnerCount = 0;\n        runners.map(function (runner) {\n            if (runner) {\n                runnerCount++;\n            }\n        });\n\n        switch (runnerCount) {\n            case 0:\n                return (0, _baseballUtilityText.text)('Bases empty') + _baseballUtilityText.text.stop();\n            case 1:\n                return (0, _baseballUtilityText.text)('Runner on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n            default:\n                return (0, _baseballUtilityText.text)('Runners on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n        }\n    },\n    getSwing: function getSwing(swingResult) {\n        var result = '';\n        if (swingResult.looking) {\n            if (swingResult.strike) {\n                result += (0, _baseballUtilityText.text)('Strike.');\n            } else {\n                result += (0, _baseballUtilityText.text)('Ball.');\n            }\n        } else {\n            if (swingResult.contact) {\n                if (swingResult.foul) {\n                    result += (0, _baseballUtilityText.text)('Fouled off.');\n                } else {\n                    if (swingResult.caught) {\n                        result += (0, _baseballUtilityText.text)('In play.');\n                    } else {\n                        if (swingResult.thrownOut) {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        } else {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        }\n                    }\n                }\n            } else {\n                result += (0, _baseballUtilityText.text)('Swinging strike.');\n            }\n        }\n        var steal = '';\n        if (swingResult.stoleABase) {\n            steal = this.noteStealAttempt(swingResult.stoleABase, true, swingResult.attemptedBase);\n        }\n        if (swingResult.caughtStealing) {\n            steal = this.noteStealAttempt(swingResult.caughtStealing, false, swingResult.attemptedBase);\n        }\n        if (steal) {\n            this.note(steal, steal, _baseballUtilityText.text.mode);\n        }\n        return result + steal;\n    },\n    noteSwing: function noteSwing(swingResult) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getSwing(swingResult);\n        pitchRecord.e[0] += record;\n        stabilized.e[0] += record;\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getSwing(swingResult);\n        pitchRecord.n[0] += recordJ;\n        stabilized.n[0] += recordJ;\n        _baseballUtilityText.text.mode = m;\n        recordJ = stabilized.n[0];\n        record = stabilized.e[0];\n        var giraffe = this;\n        record.indexOf('Previous') !== 0 && this.async(function () {\n            if (record.indexOf('In play') > -1 && record.indexOf('struck out') > -1) {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(recordJ);\n                } else {\n                    console.log(record);\n                }\n            } else {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(giraffe.broadcastCount(), recordJ);\n                } else {\n                    console.log(giraffe.broadcastCount(), record);\n                }\n            }\n        });\n    },\n    async: function async(fn) {\n        if (!this.game.console && !this.game.quickMode) {\n            setTimeout(fn, 100);\n        }\n    },\n    noteStealAttempt: function noteStealAttempt(thief, success, base) {\n        return _baseballUtilityText.text.space() + thief.getName() + _baseballUtilityText.text.comma() + (success ? (0, _baseballUtilityText.text)('stolen base') : (0, _baseballUtilityText.text)('caught stealing')) + _baseballUtilityText.text.space() + '(' + _baseballUtilityText.text.baseShortName(base) + ')' + _baseballUtilityText.text.stop();\n    },\n    noteSubstitution: function noteSubstitution(sub, player) {\n        return this.note(_baseballUtilityText.text.substitution(sub, player, 'e'), _baseballUtilityText.text.substitution(sub, player, 'n'));\n    },\n    getPlateAppearanceResult: function getPlateAppearanceResult(game) {\n        var r = game.swingResult;\n        var record = '';\n        var batter = game.batter.getName();\n        var out = [];\n        if (r.looking) {\n            if (r.strike) {\n                record = batter + (0, _baseballUtilityText.text)(' struck out looking.');\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' walked.');\n            }\n            var steal = '';\n            if (r.stoleABase) {\n                steal = this.noteStealAttempt(r.stoleABase, true, r.attemptedBase);\n            }\n            if (r.caughtStealing) {\n                steal = this.noteStealAttempt(r.caughtStealing, false, r.attemptedBase);\n            }\n            record += steal;\n        } else {\n            if (r.contact) {\n                var fielder = r.fielder,\n                    bases = r.bases,\n                    outBy;\n                if (r.caught) {\n                    if (r.flyAngle < 15) {\n                        outBy = 'line';\n                    } else {\n                        if (['left', 'center', 'right'].indexOf(r.fielder) < 0) {\n                            outBy = 'pop';\n                        } else {\n                            outBy = 'fly';\n                        }\n                    }\n                } else {\n                    if (r.foul) {\n                        // not possible to end PA on foul?\n                    } else {\n                            if (r.error) {\n                                bases = 1;\n                                outBy = 'error';\n                            } else {\n                                if (r.thrownOut) {\n                                    if (Math.random() < 0.5) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'thrown';\n                                    }\n                                } else {\n                                    switch (r.bases) {\n                                        case 1:\n                                        case 2:\n                                        case 3:\n                                            bases = r.bases;\n                                            break;\n                                        case 4:\n                                            bases = 4;\n                                            if (r.splay < -15) {\n                                                fielder = 'left';\n                                            } else if (r.splay < 15) {\n                                                fielder = 'center';\n                                            } else {\n                                                fielder = 'right';\n                                            }\n                                            break;\n                                    }\n                                }\n                                if (r.firstOut) {\n                                    out = out.concat(r.additionalOuts.filter(function (runner) {\n                                        return runner !== 'batter';\n                                    }));\n                                    out.doublePlay = r.doublePlay;\n                                }\n                                if (r.fieldersChoice) {\n                                    out.push(r.fieldersChoice);\n                                    if (r.outs == 3) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'fieldersChoice';\n                                    }\n                                }\n                            }\n                        }\n                }\n                record = _baseballUtilityText.text.contactResult(batter, fielder, bases, outBy, r.outs === 3 ? [] : r.sacrificeAdvances, out);\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' struck out swinging.');\n            }\n        }\n        return record;\n    },\n    notePlateAppearanceResult: function notePlateAppearanceResult(game) {\n        var m = _baseballUtilityText.text.mode,\n            prevJ = (0, _baseballUtilityText.text)('Previous: ', 'n'),\n            prev = (0, _baseballUtilityText.text)('Previous: ', 'e');\n\n        var statement,\n            record = this.record,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n\n        _baseballUtilityText.text.mode = 'e';\n        var result = this.getPlateAppearanceResult(game);\n        record.e.unshift(result);\n        statement = prev + result;\n        pitchRecord.e = [statement];\n        stabilized.e = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = 'n';\n        var resultJ = this.getPlateAppearanceResult(game);\n        record.n.unshift(resultJ);\n        statement = prevJ + resultJ;\n        pitchRecord.n = [statement];\n        stabilized.n = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = m;\n        var giraffe = this;\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(['%c' + resultJ, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            } else {\n                console.log(['%c' + result, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            }\n        });\n    },\n    pointer: 0,\n    stabilized: {\n        pitchRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        },\n        shortRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        }\n    },\n    pitchRecord: {\n        e: [],\n        n: []\n    },\n    shortRecord: {\n        e: [],\n        n: []\n    },\n    record: {\n        e: [],\n        n: []\n    },\n    longFormFielder: function longFormFielder() {\n        return {\n            first: (0, _baseballUtilityText.text)('first baseman'),\n            second: (0, _baseballUtilityText.text)('second baseman'),\n            third: (0, _baseballUtilityText.text)('third baseman'),\n            short: (0, _baseballUtilityText.text)('shortstop'),\n            pitcher: (0, _baseballUtilityText.text)('pitcher'),\n            catcher: (0, _baseballUtilityText.text)('catcher'),\n            left: (0, _baseballUtilityText.text)('left fielder'),\n            center: (0, _baseballUtilityText.text)('center fielder'),\n            right: (0, _baseballUtilityText.text)('right fielder')\n        };\n    }\n};\n\nexports.Log = Log;\n\n},{\"baseball/Utility/text\":36}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballUtilityData = require('baseball/Utility/data');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nexports.data = _baseballUtilityData.data;\nexports.helper = _baseballUtilityHelper.helper;\nexports.Log = _baseballUtilityLog.Log;\nexports.text = _baseballUtilityText.text;\n\n},{\"baseball/Utility/Log\":32,\"baseball/Utility/data\":34,\"baseball/Utility/helper\":35,\"baseball/Utility/text\":36}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar data = {\n    surnames: ['Sato', 'Suzuki', 'Takahashi', 'Tanaka', 'Watanabe', 'Ito', 'Nakamura', 'Kobayashi', 'Yamamoto', 'Kato', 'Yoshida', 'Yamada', 'Sasaki', 'Yamaguchi', 'Matsumoto', 'Inoue', 'Kimura', 'Shimizu', 'Hayashi', 'Saito', 'Saito', 'Yamazaki', 'Nakajima', 'Mori', 'Abe', 'Ikeda', 'Hashimoto', 'Ishikawa', 'Yamashita', 'Ogawa', 'Ishii', 'Hasegawa', 'Goto', 'Okada', 'Kondo', 'Maeda', 'Fujita', 'Endo', 'Aoki', 'Sakamoto', 'Murakami', 'Ota', 'Kaneko', 'Fujii', 'Fukuda', 'Nishimura', 'Miura', 'Takeuchi', 'Nakagawa', 'Okamoto', 'Matsuda', 'Harada', 'Nakano'],\n    surnamesJ: ['佐藤', '鈴木', '高橋', '田中', '渡辺', '伊藤', '中村', '小林', '山本', '加藤', '吉田', '山田', '佐々木', '山口', '松本', '井上', '木村', '清水', '林', '斉藤', '斎藤', '山崎', '中島', '森', '阿部', '池田', '橋本', '石川', '山下', '小川', '石井', '長谷川', '後藤', '岡田', '近藤', '前田', '藤田', '遠藤', '青木', '坂本', '村上', '太田', '金子', '藤井', '福田', '西村', '三浦', '竹内', '中川', '岡本', '松田', '原田', '中野'],\n\n    namesJ: ['匠', 'ヒカル', 'ゆうき', '翔太', '冬馬', '漣', '港区', 'ルイ', '樹', '賢治', '五木', '春', '光一', '宗介', 'こうすけ', '雄太', '大樹', '瑛太',\n    // newer set\n    '宏', '亨', '道夫', '聡', '昭', '茂雄', '勝', '純一', '和夫', '勲', '省三', '隆', '達夫', '正一', '輝夫', '俊夫', '史郎', '勇', '義弘', '良雄', '登', '義明', '正義', '秀夫', '肇', '月', '克己', '正男', '光男', '久', '耕三', '清', '次郎', '正博', '明子', '武', '勉', '晴夫', '裕二', '稔', '障子', '和子', '敦', '茂', '信夫', '恵一', '忠', '高尾', '薫', 'ケン', '健治', '哲夫', '啓二', '光一', '真一', '貞夫', '靖', '武', '雄', '文雄', '久雄', '一朗', '健一', '正明', '五郎', '誠', '昭夫', '誠司', '洋一', '康夫', '誠一', '正美', '則夫', '幸雄', '忠雄', '仁', 'シンジ', '豊', '邦雄', '修', '雅之', '三郎', '英治', '浩二', '栄一', '恒夫', '義郎', '進', '博之', '巌'],\n    names: ['Takumi', 'Hikaru', 'Yuuki', 'Shouta', 'Touma', 'Ren', 'Minato', 'Rui', 'Tatsuki', 'Kenji', 'Itsuki', 'Haru', 'Kouichi', 'Sousuke', 'Kousuke', 'Yuuta', 'Daiki', 'Eita',\n    // newer set\n    'Hiroshi', 'Toru', 'Michio', 'Satoshi', 'Akira', 'Shigeo', 'Masaru', 'Junichi', 'Kazuo', 'Isao', 'Shozo', 'Takashi', 'Tatsuo', 'Shoichi', 'Teruo', 'Toshio', 'Shiro', 'Isamu', 'Yoshihiro', 'Yoshio', 'Noboru', 'Yoshiaki', 'Tadayoshi', 'Hideo', 'Hajime', 'Akari', 'Katsumi', 'Masao', 'Mitsuo', 'Hisashi', 'Kozo', 'Kiyoshi', 'Jiro', 'Masahiro', 'Akiko', 'Takeshi', 'Tsutomu', 'Haruo', 'Yuji', 'Minoru', 'Shoji', 'Kazuko', 'Atsushi', 'Shigeru', 'Shinobu', 'Keiichi', 'Tadashi', 'Takao', 'Kaoru', 'Ken', 'Kenji', 'Tetsuo', 'Keiji', 'Koichi', 'Shinichi', 'Sadao', 'Yasushi', 'Takeshi', 'Yu', 'Fumio', 'Hisao', 'Ichiro', 'Kenichi', 'Masaaki', 'Goro', 'Makoto', 'Akio', 'Seiji', 'Yoichi', 'Yasuo', 'Seiichi', 'Masami', 'Norio', 'Yukio', 'Tadao', 'Hitoshi', 'Shinji', 'Yutaka', 'Kunio', 'Osamu', 'Masayuki', 'Saburo', 'Eiji', 'Koji', 'Eiichi', 'Tsuneo', 'Yoshio', 'Susumu', 'Hiroyuki', 'Iwao'],\n    teamNamesJ: ['横浜', '大阪', '名古屋', '札幌', '神戸', '京都', '福岡', '川崎', '埼玉県', '広島', '仙台', '千葉県', '新潟', '浜松', '静岡', '相模原', '岡山', '熊本', '鹿児島', '船橋', '川口', '姫路', '松山', '宇都宮', '松戸', '西宮', '倉敷', '市川', '福山', '尼崎', '金沢', '長崎', '横須賀', '富山', '高松', '町田', '岐阜', '枚方', '藤沢', '柏', '豊中', '長野県', '豊橋', '一宮', '和歌山', '岡崎', '宮崎', '奈良', '吹田', '高槻', '旭川', 'いわき', '高崎', '所沢', '川越', '秋田', '越谷', '前橋', '那覇', '四日市', '青森', '久留米', '春日井', '盛岡', '明石', '福島', '下関', '長岡', '市原', '函館', '茨城県', '福井', '加古川', '徳島', '水戸', '平塚', '佐世保', '呉', '八戸', '佐賀', '寝屋川', '富士', '春日部', '茅ヶ崎', '松本', '厚木', '大和', '上尾', '宝塚', '筑波', '沼津', '熊谷', '伊勢崎', '岸和田', '鳥取', '小田原', '鈴鹿', '松江', '日立'],\n    teamNames: ['Yokohama', 'Osaka', 'Nagoya', 'Sapporo', 'Kobe', 'Kyoto', 'Fukuoka', 'Kawasaki', 'Saitama', 'Hiroshima', 'Sendai', 'Chiba', 'Niigata', 'Hamamatsu', 'Shizuoka', 'Sagamihara', 'Okayama', 'Kumamoto', 'Kagoshima', 'Funabashi', 'Kawaguchi', 'Himeji', 'Matsuyama', 'Utsunomiya', 'Matsudo', 'Nishinomiya', 'Kurashiki', 'Ichikawa', 'Fukuyama', 'Amagasaki', 'Kanazawa', 'Nagasaki', 'Yokosuka', 'Toyama', 'Takamatsu', 'Machida', 'Gifu', 'Hirakata', 'Fujisawa', 'Kashiwa', 'Toyonaka', 'Nagano', 'Toyohashi', 'Ichinomiya', 'Wakayama', 'Okazaki', 'Miyazaki', 'Nara', 'Suita', 'Takatsuki', 'Asahikawa', 'Iwaki', 'Takasaki', 'Tokorozawa', 'Kawagoe', 'Akita', 'Koshigaya', 'Maebashi', 'Naha', 'Yokkaichi', 'Aomori', 'Kurume', 'Kasugai', 'Morioka', 'Akashi', 'Fukushima', 'Shimonoseki', 'Nagaoka', 'Ichihara', 'Hakodate', 'Ibaraki', 'Fukui', 'Kakogawa', 'Tokushima', 'Mito', 'Hiratsuka', 'Sasebo', 'Kure', 'Hachinohe', 'Saga', 'Neyagawa', 'Fuji', 'Kasukabe', 'Chigasaki', 'Matsumoto', 'Atsugi', 'Yamato', 'Ageo', 'Takarazuka', 'Tsukuba', 'Numazu', 'Kumagaya', 'Isesaki', 'Kishiwada', 'Tottori', 'Odawara', 'Suzuka', 'Matsue', 'Hitachi']\n};\n\nexports.data = data;\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar helper = {\n    /**\n     * rotation angle from 0 to 360 where 180 is a fastball's backspin and 90 is a slider's, 0 for curveball\n     * in the direction (CW for righty), CCW for lefty.\n     *\n     * x movement, y movement, speed ratio, rotation angle, RPM from RHP perspective where left is smaller X\n     */\n    pitchDefinitions: {\n        // fastball, kinda\n        '4-seam': [0, 0, 1, 180, 1000],\n        '2-seam': [20, -20, 0.90, -45, 1200],\n        'cutter': [-25, -20, 0.95, 75, 1200],\n        'sinker': [15, -30, 0.95, -45, 1500],\n\n        // breaking ball\n        'slider': [-50, -35, 0.88, 80, 2000],\n        'fork': [0, -70, 0.87, 20, 500],\n        'curve': [0, -110, 0.82, 10, 2500],\n\n        // change-up\n        'change': [0, -10, 0.86, -15, 1000]\n    },\n    selectRandomPitch: function selectRandomPitch() {\n        return ['4-seam', '2-seam', 'cutter', 'sinker', 'slider', 'fork', 'curve', 'change'][Math.floor(Math.random() * 8)];\n    }\n};\n\nexports.helper = helper;\n\n},{}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar text = function text(phrase, override) {\n    if (!text.mode) text.mode = 'e';\n    var string = ({\n        n: {\n            empty: '-',\n            ' 1st': '1番',\n            ' 2nd': '2番',\n            ' 3rd': '3番',\n            ' 4th': '4番',\n            ' 5th': '5番',\n            ' 6th': '6番',\n            ' 7th': '7番',\n            ' 8th': '8番',\n            ' 9th': '9番',\n            'Now batting': '次のバッター',\n            'way outside': '相当外角',\n            'outside': '外角',\n            'inside': '内角',\n            'way inside': '相当内角',\n            'way low': '相当低め',\n            'low': '低め',\n            'high': '高め',\n            'way high': '相当高め',\n            'down the middle': '真ん中',\n            'first baseman': 'ファースト',\n            'second baseman': 'セカンド',\n            'third baseman': 'サード',\n            'shortstop': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left fielder': 'レフト',\n            'center fielder': 'センター',\n            'right fielder': 'ライト',\n            'Strike.': 'ストライク。',\n            'Ball.': 'ボール。',\n            'Fouled off.': 'ファウル。',\n            'In play.': 'インプレー。',\n            'Swinging strike.': '空振り。',\n            ' outs': 'アウト',\n            ' out': 'アウト',\n            '4-seam': 'ストレート',\n            '2-seam': 'シュート',\n            'slider': 'スライダー',\n            'fork': 'フォーク',\n            'cutter': 'カット',\n            'sinker': 'シンカー',\n            'curve': 'カーブ',\n            'change': 'チェンジ',\n            ' struck out looking.': '、見逃し三振。',\n            ' walked.': '、フォアボール。',\n            ' struck out swinging.': '、空振り三振。',\n            'Previous: ': '前：',\n            'looks like: ': '予想',\n            'breaking ball': '変化球',\n            'fastball': 'ストレート',\n            'Batting, ': '打球',\n            'Catching, pitch selection': '捕球選択',\n            'Season': '記録',\n            'Game': '今試合',\n            'Pitch': '球',\n            'Control': '制球',\n            'Velocity': '速度',\n            'Break': '変化',\n            'At Bat': 'バッター',\n            'On Deck': '次バッター',\n            'Eye': '目',\n            'Power': '力',\n            'Speed': '速',\n            'Up to Bat': '打席',\n            'Fielding': '守備',\n            'Pitching': '投球',\n            'BA': '打率',\n            'OBP': '出塁',\n            'SLG': '長打',\n            'PA': '打席',\n            'H/2B/3B/HR': '安／二／三／本',\n            'H': '安',\n            '2B': '二',\n            '3B': '三',\n            'HR': '本塁打',\n            'RBI': '打点',\n            'R': '得点',\n            'BB': '四球',\n            'SO': '三振',\n\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'Runner on': 'ランナー',\n            'Runners on': 'ランナー',\n            'Bases empty': 'ランナーなし',\n            'base': '塁',\n\n            'stolen base': '盗塁成功',\n            'caught stealing': '盗塁失敗',\n\n            'Steal': '盗塁',\n            'Opportunistic': '自由',\n            'Hold': '止まれ',\n\n            'Select Language:': '言語',\n            'Run Fast Simulation': 'シミュレーションを試合終了まで行う',\n            'Play Ball!': 'プレーボール',\n            'Spectate the CPU': 'CPU観戦',\n            'Play from the 7th': '７回からプレーする',\n\n            'Throws/Bats': ' ',\n            'LHP': '左投',\n            'RHP': '右投',\n            'LHB': '左打',\n            'RHB': '右打',\n            'L': '左投',\n            'R ': '右投',\n            ' L ': '左打',\n            ' R ': '右打',\n            '#': '背番号',\n\n            'Opponent connected': '相手選手見参',\n            'Click Here': 'ここにクリック',\n\n            'Amateur Baseball Club': '野球愛好会',\n            'Amateur Baseball Team': '愛好球団',\n            'College Team': '大学球団',\n            'Industrial League Team': '社会人球団',\n            'Training Squad': '練習軍',\n            'Team Japan': '日本代表',\n\n            'Substituted': '交代',\n\n            'Batter Ready': '打撃準備'\n        },\n        e: {\n            empty: '-',\n            'Season': 'Season',\n            Fielding: 'F%',\n            Pitching: 'P',\n            Eye: 'EYE',\n            Power: 'POW',\n            Speed: 'SPD'\n        }\n    })[override ? override : text.mode][phrase];\n    return string ? string : phrase;\n};\n\ntext.substitution = function (sub, player, mode) {\n    var originalMode = text.mode;\n    mode = mode || text.mode;\n    var order = ({\n        0: text(' 1st', mode),\n        1: text(' 2nd', mode),\n        2: text(' 3rd', mode),\n        3: text(' 4th', mode),\n        4: text(' 5th', mode),\n        5: text(' 6th', mode),\n        6: text(' 7th', mode),\n        7: text(' 8th', mode),\n        8: text(' 9th', mode)\n    })[player.order];\n    var position = text.fielderShortName(player.position, mode);\n\n    if (mode === 'n') {\n        text.mode = 'n';\n        var output = sub.getName() + text.comma() + player.getName() + 'の交代' + text.comma() + order + '(' + position + ')';\n    } else {\n        text.mode = 'e';\n        output = sub.getName() + ' replaces ' + player.getName() + ' at ' + position + ', batting' + order;\n    }\n    text.mode = originalMode;\n    return output;\n};\n\ntext.getBattersEye = function (game) {\n    var eye = {},\n        breaking = Math.abs(game.pitchInFlight.breakDirection[0]) + Math.abs(game.pitchInFlight.breakDirection[1]) > 40;\n    eye.e = text('looks like: ', 'e') + breaking ? text('breaking ball', 'e') : text('fastball', 'e');\n    eye.n = text('looks like: ', 'n') + breaking ? text('breaking ball', 'n') : text('fastball', 'n');\n    return eye;\n};\n\ntext.baseShortName = function (base) {\n    if (text.mode == 'n') {\n        return ({\n            '1st': '一',\n            '2nd': '二',\n            '3rd': '三',\n            'home': '本',\n            'Home': '本',\n\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[base];\n    }\n    return base;\n};\n\ntext.fielderShortName = function (fielder, override) {\n    var mode = override || text.mode;\n    if (mode === 'n') {\n        return ({\n            'first': '一',\n            'second': '二',\n            'third': '三',\n            'short': '遊',\n            'pitcher': '投',\n            'catcher': '捕',\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[fielder];\n    }\n    return fielder;\n};\n\ntext.slash = function () {\n    if (text.mode == 'n') {\n        return '・';\n    }\n    return '/';\n};\n\ntext.fielderLongName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'short': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left': 'レフト',\n            'center': 'センター',\n            'right': 'ライト'\n        })[fielder];\n    }\n    return ({\n        first: text('first baseman'),\n        second: text('second baseman'),\n        third: text('third baseman'),\n        short: text('shortstop'),\n        pitcher: text('pitcher'),\n        catcher: text('catcher'),\n        left: text('left fielder'),\n        center: text('center fielder'),\n        right: text('right fielder')\n    })[fielder];\n};\n\ntext.comma = function () {\n    return ({ n: '、', e: ', ' })[text.mode];\n};\ntext.space = function () {\n    return ({ n: '', e: ' ' })[text.mode];\n};\ntext.stop = function () {\n    return ({ n: '。', e: '. ' })[text.mode];\n};\n\ntext.namePitch = function (pitch) {\n    if (text.mode == 'e') {\n        return pitch.name.charAt(0).toUpperCase() + pitch.name.slice(1);\n    }\n    if (text.mode == 'n') {\n        return text(pitch.name);\n    }\n};\n\ntext.contactResult = function (batter, fielder, bases, outBy, sacrificeAdvances, out) {\n    var statement = '';\n    var infield = ['left', 'center', 'right'].indexOf(fielder) < 0;\n    var doublePlay = out.doublePlay;\n    if (text.mode == 'e') {\n        statement += batter;\n        if (outBy) {\n            switch (outBy) {\n                case 'fieldersChoice':\n                    play = out.length === 2 ? 'double play ' : '';\n                    statement += ' reached on a fielder\\'s choice ' + play + 'by ' + text.fielderShortName(fielder);\n                    break;\n                case 'line':\n                    statement += ' lined out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'fly':\n                    statement += ' flew out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'error':\n                    statement += ' reached on error by ' + text.fielderShortName(fielder);\n                    break;\n                case 'pop':\n                    statement += ' popped out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'ground':\n                    var play = doublePlay ? 'into a double play by' : 'out to';\n                    statement += ' grounded ' + play + ' ' + text.fielderShortName(fielder);\n                    break;\n                case 'thrown':\n                    play = doublePlay ? ' on a double play' : '';\n                    statement += ' was thrown out by ' + text.fielderShortName(fielder) + play;\n                    break;\n            }\n            if (out.length) {\n                var plural = out.length > 1;\n                var runner = plural ? 'Runners' : 'Runner';\n                var is = plural ? 'are' : 'is';\n                statement += '. ' + runner + ' from ' + text(out.join(text.comma())) + ' ' + is + ' out';\n            }\n        } else {\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += ' reached on an infield hit to ' + text.fielderShortName(fielder);\n                    } else {\n                        statement += ' reached on a single to ' + text.fielderShortName(fielder);\n                    }\n                    break;\n                case 2:\n                    statement += ' doubled past ' + text.fielderShortName(fielder);\n                    break;\n                case 3:\n                    statement += ' tripled past ' + text.fielderShortName(fielder);\n                    break;\n                case 4:\n                    statement += ' homered to ' + text.fielderShortName(fielder);\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += text.stop() + 'Runner on third scores';\n                } else {\n                    statement += text.stop() + 'Runner on ' + base + ' advances';\n                }\n            });\n        }\n        statement += text.stop();\n    }\n    if (text.mode == 'n') {\n        var stop = text.stop();\n        statement += batter + 'は';\n        if (outBy) {\n            var fielderLong = text.fielderLongName(fielder);\n            fielder = text.fielderShortName(fielder);\n            switch (outBy) {\n                case 'fieldersChoice':\n                    statement += '野選(' + fielder + ')で出塁';\n                    break;\n                case 'line':\n                    statement += fielder + '直';\n                    break;\n                case 'fly':\n                    statement += fielder + '飛';\n                    break;\n                case 'error':\n                    statement += 'エラー(' + fielder + ')で出塁';\n                    break;\n                case 'pop':\n                    statement += 'ポップフライで' + fielder + '飛';\n                    break;\n                case 'ground':\n                    statement += fielderLong + 'ゴロに封殺';\n                    break;\n                case 'thrown':\n                    statement += fielder + 'ゴロ';\n                    break;\n            }\n            if (out.length) {\n                statement += '。' + out.map(function (runner) {\n                    return text(runner);\n                }).join(text.comma()) + 'ランナーはアウト';\n            }\n            if (doublePlay) {\n                statement += '。ゲッツー';\n            }\n        } else {\n            fielder = text.fielderShortName(fielder);\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += '内野安打' + '(' + fielder + ')' + 'で出塁';\n                    } else {\n                        statement += '安打(' + fielder + ')' + 'で出塁';\n                    }\n                    break;\n                case 2:\n                    statement += '二塁打（' + fielder + '）で出塁';\n                    break;\n                case 3:\n                    statement += '三塁打（' + fielder + '）で出塁';\n                    break;\n                case 4:\n                    statement += '本塁打（' + fielder + '）';\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += stop + 'サードランナーホームイン';\n                } else {\n                    statement += stop + text(base) + 'ランナー進塁';\n                }\n            });\n        }\n        statement += stop;\n    }\n    return statement;\n};\n\nexports.text = text;\n\n},{}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballNamespace = require('baseball/namespace');\n\nif (typeof window == 'object') {\n    window.Baseball = _baseballNamespace.Baseball;\n}\n\nexports.Baseball = _baseballNamespace.Baseball;\n\n},{\"baseball/namespace\":38}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballTeamsProvider = require('baseball/Teams/Provider');\n\nvar Baseball = {};\n\nBaseball.model = {};\nBaseball.model.Game = Baseball.Game = _baseballModelGame.Game;\nBaseball.model.Player = Baseball.Player = _baseballModelPlayer.Player;\nBaseball.model.Team = Baseball.Team = _baseballModelTeam.Team;\n\nBaseball.service = {};\nBaseball.service.Animator = _baseballServices_services.Animator;\nBaseball.service.Distribution = _baseballServices_services.Distribution;\nBaseball.service.Iterator = _baseballServices_services.Iterator;\nBaseball.service.Mathinator = _baseballServices_services.Mathinator;\n\nBaseball.util = {};\nBaseball.util.text = _baseballUtility_utils.text;\nBaseball.util.Log = _baseballUtility_utils.Log;\n\nBaseball.teams = {};\nBaseball.teams.Provider = _baseballTeamsProvider.Provider;\n\nexports.Baseball = Baseball;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":28,\"baseball/Teams/Provider\":29,\"baseball/Utility/_utils\":33}],39:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":24,\"baseball/Services/Distribution\":25,\"baseball/Services/Iterator\":26,\"baseball/Services/Mathinator\":27}]},{},[37]);\n","IndexController = function($scope, socket) {\n    var text = Baseball.util.text;\n    var Game = Baseball.Game;\n    var Animator = Baseball.service.Animator;\n\n    window.s = $scope;\n    $scope.t = text;\n\n    $scope.mode = function(setMode) {\n        if (setMode) {\n            text.mode = setMode;\n            if (localStorage) {\n                localStorage.__$yakyuuaikoukai_text_mode = setMode;\n            }\n        }\n        return text.mode;\n    };\n\n    if (localStorage) {\n        var storedMode = localStorage.__$yakyuuaikoukai_text_mode;\n        if (storedMode === 'e' || storedMode === 'n') {\n            $scope.mode(storedMode);\n        }\n    }\n\n    $scope.teamJapan = function() {\n        var provider = new Baseball.teams.Provider;\n        provider.assignTeam($scope.y, 'TeamJapan', 'away');\n        var game = $scope.y;\n        if (game.half === 'top') {\n            game.batter = game.teams.away.lineup[game.batter.order];\n            game.deck = game.teams.away.lineup[(game.batter.order + 1) % 9];\n            game.hole = game.teams.away.lineup[(game.batter.order + 2) % 9];\n        } else {\n            game.pitcher = game.teams.away.positions.pitcher;\n        }\n    };\n\n    $scope.sim = function() {$scope.proceedToGame(1, 1);};\n    $scope.seventh = function() {$scope.proceedToGame(7);};\n    $scope.playball = function() {$scope.proceedToGame();};\n    $scope.spectate = function() {$scope.proceedToGame(0,1);};\n\n    $scope.proceedToGame = function(quickMode, spectateCpu) {\n        $scope.y = new Game();\n        var game = $scope.y;\n        game.humanControl = spectateCpu ? 'none' : 'home';\n        game.quickMode = !!quickMode && quickMode !== 7;\n        var field = window.location.hash ? window.location.hash.slice(1) : game.teams.home.name + Math.ceil(Math.random()*47);\n        if (typeof io !== 'undefined') {\n            socket.game = game;\n            $scope.socket = io(/*window.location.hostname*/'http://georgefu.info' + ':64321', {\n                reconnection: false\n            });\n            $scope.socketService = socket;\n            socket.socket = $scope.socket;\n            socket.start(field);\n        }\n        window.location.hash = '#' + field;\n        s2.y = game;\n        bindMethods();\n        $('.blocking').remove();\n        if (game.humanControl == 'none' && game.quickMode) {\n            var n = 0;\n            Animator.console = true;\n            game.console = true;\n            do {\n                n++;\n                game.simulateInput(function(callback) {\n                    typeof callback == 'function' && callback();\n                });\n            } while (game.stage != 'end' && n < 500);\n            Animator.console = game.console = false;\n            log('sim ended');\n            game.debugOut();\n        } else if (game.humanControl == 'none') {\n            var scalar = game.quickMode ? 0.05 : 1;\n            var auto = setInterval(function() {\n                if (game.stage == 'end') {\n                    clearInterval(auto);\n                }\n                game.simulatePitchAndSwing(function(callback) {\n                    game.quickMode ? void 0 : $scope.$apply();\n                    $scope.updateFlightPath(callback);\n                });\n            }, scalar*(game.field.hasRunnersOn() ? Animator.TIME_FROM_SET + 2000 : Animator.TIME_FROM_WINDUP + 2000));\n        } else if (quickMode === 7 && spectateCpu === undefined) {\n            Animator.console = game.quickMode = game.console = true;\n            do {\n                game.simulateInput(function(callback) {\n                    typeof callback == 'function' && callback();\n                });\n            } while (game.inning < 7);\n            log('sim halted in 7th');\n            // todo debug 7th inning excess callbacks\n            game.debugOut();\n            Animator.console = game.quickMode = game.console = false;\n            game.stage = 'pitch';\n            game.half = 'top';\n            game.humanControl = 'home';\n        }\n        if (game.humanControl == 'away') {\n            game.simulateInput(function(callback) {\n                $scope.updateFlightPath(callback);\n            });\n        }\n        if (game.humanControl == 'home') {\n            $scope.showMessage = true;\n        }\n        if (!quickMode || quickMode === 7) {\n            Animator.loop.setTargetTimeOfDay(game.startTime.h, game.startTime.m);\n        }\n    };\n\n    var bindMethods = function() {\n        var game = $scope.y;\n        $scope.holdUpTimeouts = [];\n        $scope.expandScoreboard = false;\n        $scope.updateFlightPath = Animator.updateFlightPath.bind($scope);\n\n        // avoid scope cycles, any other easy way?\n        var bat = $('.target .swing.stance-indicator');\n        var showBat = function(event) {\n            if (game.humanBatting()) {\n                var offset = $('.target').offset();\n                var relativeOffset = {\n                    x : event.pageX - offset.left,\n                    y : 200 - (event.pageY - offset.top)\n                };\n                var angle = game.setBatAngle(relativeOffset.x, relativeOffset.y);\n                bat.css({\n                    top: 200-relativeOffset.y + \"px\",\n                    left: relativeOffset.x + \"px\",\n                    transform: \"rotate(\" + angle + \"deg) rotateY(\"+(game.batter.bats == \"left\" ? 0 : -0)+\"deg)\"\n                });\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\n                    bat.hide();\n                } else {\n                    bat.show();\n                }\n            }\n        };\n        var glove = $('.target .glove.stance-indicator');\n        var showGlove = function(event) {\n            if (game.humanPitching()) {\n                var offset = $('.target').offset();\n                var relativeOffset = {\n                    x : event.pageX - offset.left,\n                    y : 200 - (event.pageY - offset.top)\n                };\n                glove.css({\n                    top: 200-relativeOffset.y + \"px\",\n                    left: relativeOffset.x + \"px\"\n                });\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\n                    glove.hide();\n                } else {\n                    glove.show();\n                }\n            }\n        };\n\n        $scope.generateTeam = function(heroRate) {\n            $scope.y.teams.away = new Baseball.model.Team($scope.y, heroRate);\n        };\n        $scope.clickLineup = function(player) {\n            if (player.team.sub) {\n                var sub = player.team.sub;\n                player.team.sub = null;\n                return sub.substitute(player);\n            }\n            player.team.expanded = (player.team.expanded == player ? null : player);\n        };\n        $scope.selectSubstitute = function(player) {\n            if (game.humanControl === 'home' && player.team !== game.teams.home) return;\n            if (game.humanControl === 'away' && player.team !== game.teams.away) return;\n            player.team.sub = (player.team.sub === player ? null : player);\n        };\n\n        $scope.selectPitch = function(pitchName) {\n            if (game.stage == 'pitch') {\n                game.pitchInFlight = $.extend({}, game.pitcher.pitching[pitchName]);\n                game.pitchInFlight.name = pitchName;\n                game.swingResult.looking = true;\n            }\n        };\n        $scope.allowInput = true;\n        $scope.holdUp = function() {\n            $('.input-area').click();\n            $scope.$apply();\n        };\n        game.startOpponentPitching = function(callback) {\n            $scope.updateFlightPath(callback);\n        };\n        $scope.indicate = function($event) {\n            if (!$scope.allowInput) {\n                return;\n            }\n            if (game.humanPitching()) {\n                $scope.allowInput = false;\n                game.pitcher.windingUp = false;\n            }\n            if (game.pitcher.windingUp) {\n                return;\n            }\n            var offset = $('.target').offset();\n            var relativeOffset = {\n                x : $event.pageX - offset.left,\n                y : 200 - ($event.pageY - offset.top)\n            };\n            clearTimeout($scope.lastTimeout);\n            while ($scope.holdUpTimeouts.length) {\n                clearTimeout($scope.holdUpTimeouts.shift());\n            }\n            $scope.showMessage = false;\n            game.receiveInput(relativeOffset.x, relativeOffset.y, function(callback) {\n                $scope.updateFlightPath(callback);\n            });\n        };\n        $scope.abbreviatePosition = function(position) {\n            if (text.mode == 'e') {\n                return {\n                    pitcher : 'P',\n                    catcher : 'C',\n                    first : '1B',\n                    second : '2B',\n                    short : 'SS',\n                    third : '3B',\n                    left : 'LF',\n                    center : 'CF',\n                    right : 'RF'\n                }[position];\n            }\n            return text.fielderShortName(position);\n        };\n        $scope.$watch('y.humanBatting()', function() {\n            if ($scope.y.humanBatting()) {\n                $('.input-area').mousemove(showBat);\n            } else {\n                $('.input-area').unbind('mousemove', showBat);\n                bat.hide();\n            }\n        });\n        $scope.$watch('y.humanPitching()', function() {\n            if ($scope.y.humanPitching()) {\n                $('.input-area').mousemove(showGlove);\n            } else {\n                $('.input-area').unbind('mousemove', showGlove);\n                glove.hide();\n            }\n        });\n        var aside = {\n            left: $('aside.image-panel.left'),\n            right: $('aside.image-panel.right')\n        };\n        //$scope.$watch('y.playResult', function() {\n        //    aside.left.hide();\n        //    aside.right.hide();\n        //    aside.left.fadeIn(1000, function() {\n        //        aside.left.fadeOut(1000);\n        //        aside.right.fadeIn(1000, function() {\n        //            aside.right.fadeOut(1000);\n        //        })\n        //    });\n        //    $scope.imagePanel = {\n        //        left: 'url(./public/images/' + $scope.y.playResult.batter + '.png)',\n        //        right: 'url(./public/images/' + $scope.y.playResult.fielder + '.png)'\n        //    };\n        //});\n    };\n\n\n};","var SocketService = function() {\n    var Service = function() {};\n    var game, socket, NO_OPERATION = function() {},\n        animator = Baseball.service.Animator;\n    Service.prototype = {\n        socket : {},\n        game : {},\n        connected : false,\n        start : function(key) {\n            game = this.game;\n            socket = this.socket;\n            game.opponentService = this;\n            this.connected = socket.connected;\n            this.on();\n            socket.emit('register', key);\n            socket.on('connect_failed reconnect_failed', function() {\n                console.log('connection unavailable');\n            });\n        },\n        on : function() {\n            var giraffe = this;\n            socket.on('register', this.register);\n            socket.on('connect reconnect', function() {\n                giraffe.connected = true;\n            });\n            socket.on('disconnect', function() {\n                giraffe.connected = false;\n            });\n            socket.on('pitch', function(pitch) {\n                //console.log('receive', 'pitch', pitch);\n                game.thePitch(0, 0, NO_OPERATION, pitch);\n                var scope = window.s;\n                animator.updateFlightPath.bind(scope)();\n            });\n            socket.on('swing', function(swing) {\n                //console.log('receive', 'swing', swing);\n                game.theSwing(0, 0, NO_OPERATION, swing);\n                var scope = window.s;\n                animator.updateFlightPath.bind(scope)(function() {\n                    if (swing.contact) {\n                        animator.animateFieldingTrajectory(game);\n                    }\n                });\n            });\n            socket.on('partner_disconnect', function() {\n                console.log('The opponent has disconnected');\n                var scope = window.s;\n                game.opponentConnected = false;\n                game.batter.ready = false;\n                if (game.stage === 'pitch' && game.humanBatting()) {\n                    game.onBatterReady = function() {\n                        game.autoPitch(function(callback) {\n                            scope.updateFlightPath(callback);\n                        });\n                    };\n                    game.batterReady();\n                }\n                if (game.stage === 'swing' && game.humanPitching()) {\n                    game.autoSwing(-20, 0, function(fn) {\n                        fn();\n                    });\n                }\n                scope.$digest();\n            });\n            socket.on('partner_connect', function() {\n                game.opponentConnected = true;\n                var scope = window.s;\n                scope.$digest();\n            });\n            socket.on('opponent_taking_field', function() {\n                console.log('A challenger has appeared! Sending game data.');\n                socket.emit('game_data', game.toData());\n            });\n            socket.on('game_data', function(data) {\n                game.fromData(data);\n                var scope = window.s;\n                scope.$apply();\n            });\n            socket.on('field_in_use', function() {\n                game.opponentConnected = false;\n            });\n        },\n        off : function() {\n            socket.on('register', NO_OPERATION);\n        },\n        register: function(data) {\n            console.log(data);\n            if (data === 'away') {\n                game.humanControl = 'away';\n            }\n            socket.on('register', NO_OPERATION);\n        },\n        emitPitch : function(pitch) {\n            //console.log('emit', 'pitch', pitch);\n            socket.emit('pitch', pitch);\n        },\n        emitSwing : function(swing) {\n            //console.log('emit', 'swing', swing);\n            socket.emit('swing', swing);\n        },\n        swing : function() {\n\n        },\n        pitch : function() {\n\n        }\n    };\n    return new Service;\n};","BattersDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/batters.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","BatteryDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/battery.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","FieldDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/field.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","RatingBlockDirective = function() {\n    return {\n        scope: {\n            rating: '='\n        },\n        transclude: true,\n        templateUrl: 'public/html/views/directives/ratingBlock.html?cache='+cacheKey,\n        link: function(scope) {\n        }\n    };\n};","ScoreboardDirective = function() {\n    return {\n        scope: {\n            game: '=',\n            text: '='\n        },\n        templateUrl: 'public/html/views/directives/scoreboard.html?cache='+cacheKey,\n        link: function(scope) {\n            window.s2 = scope;\n            scope.t = scope.text;\n            scope.y = scope.game;\n        }\n    };\n};","var app = angular.module('YakyuuAikoukai', ['directives'])\n    .service('socket', SocketService)\n    .controller('IndexController', ['$scope', 'socket', IndexController]);\n\napp.config(function($interpolateProvider) {\n    $interpolateProvider.startSymbol('{{');\n    $interpolateProvider.endSymbol('}}');\n});\n\ncacheKey = Math.floor(Math.random()*1500);\n\nangular.module('directives', [])\n    .directive('scoreboard', ScoreboardDirective)\n    .directive('batters', BattersDirective)\n    .directive('battery', BatteryDirective)\n    .directive('field', FieldDirective)\n    .directive('ratingBlock', RatingBlockDirective);"],"sourceRoot":"/source/"}