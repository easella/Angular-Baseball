{"version":3,"sources":["bundle.js","IndexController.js","SocketService.js","battersData.js","batteryData.js","field.js","ratingBlock.js","scoreboard.js","application.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_baseballUtilityLog","AtBat","text","this","infield","indexOf","INFIELD_HIT_INDICATOR","replace","split","RBI_INDICATOR","rbi","log","Log","beneficial","WALK","SINGLE","HOMERUN","DOUBLE","TRIPLE","SACRIFICE","REACHED_ON_ERROR","STOLEN_BASE","RUN","constructor","identifier","baseball/Utility/Log",2,"_baseballModelPlayer","_baseballServices_services","Field","game","init","first","second","third","hasRunnersOn","Player","determineSwingContactResult","swing","fatigue","x","y","eye","batter","skill","offense","angles","Mathinator","getSplayAndFlyAngle","angle","splayAngle","splay","flyAngle","fly","power","bonus","landingDistance","Distribution","Math","abs","foul","fielder","findFielder","min","max","travelDistance","sacrificeAdvances","half","teams","home","positions","away","error","fieldingEase","defense","fielding","throwingEase","throwing","fielderTravel","getPolarDistance","interceptRating","speed","stats","E","caught","PO","umpire","count","outs","sacrificeThrowInTime","fielderReturnDelay","getBaseRunningTime","push","bases","thrownOut","fieldingReturnDelay","fieldingDelay","outfielder","left","center","right","baseRunningTime","random","fieldersChoice","fielders","team","force","forcePlaySituation","additionalOuts","throwingDelay","infieldThrowDelay","catcher","doublePlay","firstOut","swingResult","Animator","console","_ball","hasIndicator","animateFieldingTrajectory","getLeadRunner","horizontalVelocity","cos","PI","fielderLateralReachDegrees","fielderArcPosition","pitcher","short","b","fieldingTest","distance","data","fielderCandidates","fielderSelectionTest","aggregateFieldingTest","tally","distances","false","selections","returnFielder","minDistance","giraffe","Iterator","each","position","spot","thisDistance","baseball/Model/Player","baseball/Services/_services",3,"_baseballModelField","_baseballModelTeam","_baseballModelUmpire","_baseballUtility_utils","Game","m","gamesIntoSeason","humanControl","quickMode","debug","reset","startTime","h","timeOfDay","mode","floor","field","Team","helper","name","pickName","Umpire","humanPitching","stage","autoPitchSelect","loop","setTimeOfDay","passMinutes","minutes","time","parseInt","setTargetTimeOfDay","getInning","inning","toUpperCase","humanBatting","end","R","getName","pitching","W","L","note","simulateInput","callback","pitchTarget","autoPitch","autoSwing","simulatePitchAndSwing","setTimeout","TIME_FROM_SET","TIME_FROM_WINDUP","receiveInput","thePitch","theSwing","pitchNames","keys","pitchName","pitch","pitchInFlight","windingUp","$","addClass","windup","css","pitchLocation","resetCamera","animate","width","removeClass","deceptiveX","deceptiveY","convergence","convergenceSum","balls","strikes","centralizedNumber","cpuSwing","swingProbability","swingLikelihood","opponentConnected","waitingCallback","awaitPitch","opponentService","emitSwing","awaitSwing","emitPitch","inFlight","override","breakDirection","pitchDefinitions","slice","battersEye","getBattersEye","control","pitchControl","breakEffect","notePitch","result","setBatAngle","recalculation","getAngularOffset","precision","looking","contact","strike","sqrt","pow","stealAttempt","RUNNER_GO","RUNNERS_DISCRETION","thief","base","validToSteal","discretion","willSteal","attemptSteal","noteSwing","makeCall","emit","startOpponentPitching","origin","bats","battingAngle","debugOut","filter","map","JSON","stringify","hitters","lineup","concat","atBats","getAtBats","ab","LO","FO","GO","GIDP","SO","BB","SAC","FC","CS","SB","table","scoreboard","toData","players","deck","hole","nameJ","says","player","serialize","pitchRecord","record","fromData","playerJson","index","playerData","parse","side","resetStats","stabilizeShortRecord","velocity","break","playResult","showPlayResultPanels","batterOutcomes","atBat","pop","fielderOutcomes","pitchSelect",4,5,6,7,8,9,"resetTally","H","baseball/Model/Field","baseball/Model/Team","baseball/Model/Umpire","baseball/Utility/_utils","Manager","makeLineup","jerseyNumber","selectForSkill","bench","number","order","pool","skillset","requiredThrowingHandedness","selection","rating","skills","cursor","property","shift","_baseballModel_models","hero","averaging","randomizeSkills","surnameKey","surnames","nameKey","names","jSurname","surnamesJ","jGivenName","namesJ","spaceName","surname","surnameJ","atBatObjects","substitute","substituted","bullpen","splice","noteSubstitution","IP","ER","GS","arguments","undefined","randBetween","total","isNaN","pa","paRemaining","bb","so","sb","cs","doubles","triples","hr","hbp","sac","chances","pitches","K","getK9","getERA","ERA","HR","WHIP","getWHIP","batting","getBA","getBABIP","ba","getOBP","obp","getSLG","getSlash","slash","join","slg","2b","3b","A","K9","item","recordRBI","recordInfieldHit","success","stealSuccess","stoleABase","caughtStealing","attemptedBase","defensiveAverage","_this","allPitches","randValue","isPitching","catching","slider","fork","cutter","sinker","curve","change","reduce","prev","current","getSurname","getUniformNumber","getOrder","toString","baseball/Model/_models","_baseballModelManager","heroRate","RUNNER_HOLD","manager","j","teamNameIndex","teamNames","teamNamesJ","nowBatting","expanded","baseball/Model/Manager","playBall","batterRunner","noteBatter","runScores","CAUGHT_STEALING","changeSides","advanceRunners","LINEOUT","FLYOUT","newBatter","runner","FIELDERS_CHOICE","reachBase","GROUNDOUT","hitByPitch","STRIKEOUT","isWalk","canAdvance","arm","notePlateAppearanceResult","lastBatter","_baseballModelAtBat","_baseballModelGame","baseball/Model/AtBat","baseball/Model/Game","_meshBall","_meshMound","_meshBase","_meshField","_meshGrass","_meshHomeDirt","_meshBattersEye","_meshWall","_meshSky","_meshSun","_sceneLighting","_ShadersSkyShader","_baseballServicesAnimator","VERTICAL_CORRECTION","INITIAL_CAMERA_DISTANCE","THREE","AHEAD","Vector3","INITIAL_POSITION","Loop","elementClass","loadSkyShader","main","window","requestAnimationFrame","bind","panToward","omt","overwatchMoveTarget","moveToward","moveTarget","z","objects","renderer","render","scene","camera","getThree","Scene","fog","FogExp2","attach","lighting","addTo","PerspectiveCamera","getAspect","_target","addition","hours","background","sun","setTargetTime","sky","azimuth","uniforms","inclination","derivePosition","luminosity","setLuminosity","Mound","HomeDirt","Grass","BattersEye","Sun","Sky","Wall","Base","pos","rate","bob","removeEventListener","onResize","addEventListener","element","document","getElementsByClassName","innerHTML","WebGLRenderer","alpha","setSize","appendChild","domElement","aspect","fov","offsetWidth","updateProjectionMatrix","HEIGHT","vector","maxIncrement","panSpeed","forAllLoops","lookAt","moveSpeed","panning","setLookTarget","setMoveTarget","moveCamera","fn","foreground","ball","Ball","setType","rotate","deriveTrajectory","constructors","./Shaders/SkyShader","./mesh/Ball","./mesh/Base","./mesh/BattersEye","./mesh/Field","./mesh/Grass","./mesh/HomeDirt","./mesh/Mound","./mesh/Sky","./mesh/Sun","./mesh/Wall","./scene/lighting","baseball/Services/Animator",10,"ShaderLib","luminance","type","turbidity","reileigh","mieCoefficient","mieDirectionalG","sunPosition","vertexShader","fragmentShader","skyShader","skyUniforms","UniformsUtils","clone","skyMat","ShaderMaterial","BackSide","skyGeo","SphereBufferGeometry","skyMesh","Mesh","mesh",11,"_Loop","AbstractMesh","add","remove","WORLD_BASE_Y","../Loop",12,"_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_get","_x","_x2","_x3","_again","object","receiver","desc","parent","getter","Function","getOwnPropertyDescriptor","get","getPrototypeOf","_AbstractMesh2","_baseballServicesMathinator","_Indicator","_baseballUtilityHelper","SCALE","INDICATOR_DEPTH","_AbstractMesh","trajectory","Array","breakingTrajectory","getMesh","bounce","baseURL","loader","TextureLoader","textureColor","load","textureBump","geometry","SphereGeometry","material","MeshPhongMaterial","bumpMap","bumpScale","frame","spawnIndicator","detach","handednessScalar","rpm","rotationAngle","setRotation","rotation","meshRotation","RPM","RPS","rotationalIncrement","RP60thOfASecond","xComponent","yComponent","sin","indicator","Indicator","top","breakTop","breakLeft","flightTime","getFlightTime","scale","ARC_APPROXIMATION_Y_ADDITIVE","terminus","breakingTerminus","lastPosition","lastBreakingPosition","frames","breakingFrames","frameCount","counter","xBreak","yBreak","breakingDistance","breakingLateness","breakingLatenessMomentumExponent","progress","breakingInfluencePosition","momentumScalar","breakingScalar","scalarSum","breakingPosition","increment","breakingIncrement","pause","dragScalarApproximation","apexHeight","airTime","flightScalar","velocityVerticalComponent","RADIAN","extrema","lastHeight","percent","currentDistance","DEFAULT_RPM","./AbstractMesh","./Indicator","baseball/Services/Mathinator","baseball/Utility/helper",13,"MeshLambertMaterial","color","BoxGeometry",14,15,"PlaneGeometry",16,17,18,"CircleGeometry",19,20,"hasOwnProperty","setUniforms",21,"targetTime","MeshBasicMaterial","wireframe","visible","theta","phi","copy","addMinutes",22,"radians","hypotenuse","offset",23,"light","HemisphereLight","DirectionalLight","set","level","intensity",24,"_baseballRenderLoop","TweenMax","renderingMode","beginRender","addStaticMeshes","loadTweenMax","to","from","killAll","HOLD_UP_ALLOWANCE","pitchBreak","updateFlightPath","renderFlightPath","tweenFlightPath","$scope","$baseballs","flightSpeed","originTop","originLeft","henka","quarter","pitchTransition","targetTransition","transitions","lastTimeout","allowInput","$apply","holdUpTimeouts","holdUp","derivePitchingTrajectory","tweenFieldingTrajectory","renderFieldingTrajectory","splayOnly","linearApproximateDragScalar","scalar","memory","bounding","mathinator","transitionalTrajectory","show","transitionalCatcherPerspectiveTrajectory","setOverwatchMoveTarget","baseball/Render/Loop","baseball/services/_services",25,"ceil","chance","goodContactBonus","sum","effect","actual","volitional","rand","rand2","smoothedRand2","pitchBaseSpeedMultiplier","ump",26,"collection",27,"square","SPLAY_INDICATOR_LEFT","xScalar","yScalar","originalAngle","atan","angledY","angledX","step","givenApexHeight","givenDistance","givenSplayAngle","bottom","padding","borderWidth","radian","apexRatio","delay","ease","Power4","easeOut","Linear","easeNone","givenOrigin","height","projection","translateSwingResultToStylePosition","maxPadding","maxBorderWidth","_top","_left","transform","intercept","direction","velocityRating","velocityScalar",28,"_baseballServicesDistribution","_baseballServicesIterator","baseball/Services/Distribution","baseball/Services/Iterator",29,"_TeamJapan","Provider","special","TeamJapan","samurai","./TeamJapan",30,"_baseballTeamsTrainer","darvish","johjima","ogasawara","nishioka","kawasaki","murata","matsui","ichiro","inaba","coach","Trainer","makePlayer","baseball/Teams/Trainer",31,"throws",32,"_baseballUtilityText","stabilized","shortRecord","GITP","rec","rec2","_note","noteJ","only","unshift","async","getBatter","longFormFielder","comma","recordJ","getPitchLocationDescription","batterIsLefty","say","noComma","noComma2","namePitch","stop","broadcastCount","justOuts","lastOuts","broadcastScore","broadcastRunners","runners","runnerCount","getSwing","steal","noteStealAttempt","space","baseShortName","sub","substitution","getPlateAppearanceResult","out","outBy","contactResult","statement","prevJ","resultJ","pointer","baseball/Utility/text",33,"_baseballUtilityData","baseball/Utility/data",34,35,"4-seam","2-seam","selectRandomPitch",36,"phrase","string","empty"," 1st"," 2nd"," 3rd"," 4th"," 5th"," 6th"," 7th"," 8th"," 9th","Now batting","way outside","outside","inside","way inside","way low","low","high","way high","down the middle","first baseman","second baseman","third baseman","shortstop","left fielder","center fielder","right fielder","Strike.","Ball.","Fouled off.","In play.","Swinging strike."," outs"," out"," struck out looking."," walked."," struck out swinging.","Previous: ","looks like: ","breaking ball","fastball","Batting, ","Catching, pitch selection","Season","Pitch","Control","Velocity","Break","At Bat","On Deck","Eye","Power","Speed","Up to Bat","Fielding","Pitching","BA","OBP","SLG","PA","H/2B/3B/HR","2B","3B","RBI","Runner on","Runners on","Bases empty","stolen base","caught stealing","Steal","Opportunistic","Hold","Select Language:","Run Fast Simulation","Play Ball!","Spectate the CPU","Play from the 7th","Throws/Bats","LHP","RHP","LHB","RHB","R "," L "," R ","#","Opponent connected","Click Here","Amateur Baseball Club","Amateur Baseball Team","College Team","Industrial League Team","Training Squad","Team Japan","Substituted","originalMode","fielderShortName","output","breaking","1st","2nd","3rd","Home","fielderLongName","charAt","play","plural","is","fielderLong",37,"_baseballNamespace","Baseball","baseball/namespace",38,"_baseballTeamsProvider","model","service","util","baseball/Teams/Provider",39,"IndexController","socket","setMode","localStorage","__$yakyuuaikoukai_text_mode","storedMode","teamJapan","provider","assignTeam","sim","proceedToGame","seventh","playball","spectate","spectateCpu","location","hash","io","reconnection","socketService","start","s2","bindMethods","auto","setInterval","clearInterval","showMessage","expandScoreboard","bat","showBat","event","relativeOffset","pageX","pageY","hide","glove","showGlove","generateTeam","clickLineup","selectSubstitute","selectPitch","extend","click","indicate","$event","clearTimeout","abbreviatePosition","$watch","mousemove","unbind","SocketService","Service","NO_OPERATION","animator","connected","on","register","scope","$digest","off","BattersDirective","templateUrl","cacheKey","transclude","BatteryDirective","FieldDirective","RatingBlockDirective","link","ScoreboardDirective","app","angular","controller","config","$interpolateProvider","startSymbol","endSymbol","directive"],"mappings":"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","file":"application.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar AtBat = (function () {\n    function AtBat(text) {\n        _classCallCheck(this, AtBat);\n\n        this.infield = text.indexOf(AtBat.prototype.INFIELD_HIT_INDICATOR) > -1 ? AtBat.prototype.INFIELD_HIT_INDICATOR : '';\n        text = text.replace(AtBat.prototype.INFIELD_HIT_INDICATOR, '');\n        this.text = text.split(AtBat.prototype.RBI_INDICATOR)[0];\n        this.rbi = text.split(this.text)[1] + '';\n\n        var log = new _baseballUtilityLog.Log();\n\n        var beneficial = [log.WALK, log.SINGLE, log.HOMERUN, log.DOUBLE, log.TRIPLE, log.SACRIFICE, log.REACHED_ON_ERROR, log.STOLEN_BASE, log.RUN];\n        if (beneficial.indexOf(this.text) > -1) {\n            this.beneficial = true;\n        }\n    }\n\n    _createClass(AtBat, [{\n        key: 'toString',\n        value: function toString() {\n            return '' + this.infield + this.text + this.rbi;\n        }\n    }]);\n\n    return AtBat;\n})();\n\nAtBat.prototype.constructor = AtBat;\nAtBat.prototype.identifier = 'AtBat';\nAtBat.prototype.INFIELD_HIT_INDICATOR = '';\nAtBat.prototype.RBI_INDICATOR = '+';\n\nexports.AtBat = AtBat;\n\n},{\"baseball/Utility/Log\":32}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\n/**\n * The baseball field tracks the ball's movement, fielders, and what runners are on\n * @param game\n * @constructor\n */\nvar Field = function Field(game) {\n    this.init(game);\n};\n\nField.prototype = {\n    constructor: Field,\n    init: function init(game) {\n        this.game = game;\n        this.first = null;\n        this.second = null;\n        this.third = null;\n    },\n    /**\n     * @returns {boolean}\n     */\n    hasRunnersOn: function hasRunnersOn() {\n        return this.first instanceof _baseballModelPlayer.Player || this.second instanceof _baseballModelPlayer.Player || this.third instanceof _baseballModelPlayer.Player;\n    },\n    /**\n     * @param swing\n     * @returns {object}\n     */\n    determineSwingContactResult: function determineSwingContactResult(swing) {\n\n        if (this.first) this.first.fatigue += 4;\n        if (this.second) this.second.fatigue += 4;\n        if (this.third) this.third.fatigue += 4;\n\n        var x = swing.x,\n            y = swing.y;\n        var eye = this.game.batter.skill.offense.eye;\n        /**\n         * The initial splay angle is 90 degrees for hitting up the middle and 0\n         * for a hard foul left, 180 is a foul right. Depending on the angle of the bat,\n         * a y-axis displacement which would otherwise pop or ground the ball can instead\n         * increase the left/right effect.\n         */\n        var angles = _baseballServices_services.Mathinator.getSplayAndFlyAngle(x, y, swing.angle, eye);\n        var splayAngle = angles.splay;\n\n        var flyAngle = angles.fly;\n        var power = this.game.batter.skill.offense.power + (this.game.batter.eye.bonus || 0) / 5;\n        var landingDistance = _baseballServices_services.Distribution.landingDistance(power, flyAngle, x, y);\n        if (flyAngle < 0 && landingDistance > 95) {\n            landingDistance = (landingDistance - 95) / 4 + 95;\n        }\n        var game = this.game;\n\n        if (Math.abs(splayAngle) > 50) swing.foul = true;\n        swing.fielder = this.findFielder(splayAngle, landingDistance, power, flyAngle);\n        if (['first', 'second', 'short', 'third'].indexOf(swing.fielder) > -1) {\n            landingDistance = Math.min(landingDistance, 110); // stopped by infielder\n        } else {\n                landingDistance = Math.max(landingDistance, 150); // rolled past infielder\n            }\n        swing.travelDistance = landingDistance;\n        swing.flyAngle = flyAngle;\n        /**\n         * the splay for the result is adjusted to 0 being up the middle and negatives being left field\n         * @type {number}\n         */\n        swing.splay = splayAngle;\n        swing.sacrificeAdvances = [];\n\n        if (swing.fielder) {\n            var fielder = game.half == 'top' ? game.teams.home.positions[swing.fielder] : game.teams.away.positions[swing.fielder];\n            fielder.fatigue += 4;\n            swing.error = false;\n            var fieldingEase = fielder.skill.defense.fielding / 100,\n                throwingEase = fielder.skill.defense.throwing / 100;\n            //reach the batted ball?\n            swing.fielderTravel = this.getPolarDistance(this.positions[swing.fielder], [splayAngle + 90, landingDistance]);\n            var interceptRating = fielder.skill.defense.speed * 1.8 + flyAngle * 2.4 - swing.fielderTravel * 1.55 - 15;\n            if (interceptRating > 0 && flyAngle > 4) {\n                //caught cleanly?\n                if (_baseballServices_services.Distribution.error(fielder)) {\n                    //error\n                    fieldingEase *= 0.5;\n                    swing.error = true;\n                    fielder.stats.fielding.E++;\n                    swing.caught = false;\n                } else {\n                    fielder.stats.fielding.PO++;\n                    swing.caught = true;\n                    if (game.umpire.count.outs < 2) {\n                        var sacrificeThrowInTime = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, 100);\n                        // todo ran into outfield assist\n                        if (this.first && sacrificeThrowInTime > this.first.getBaseRunningTime() + 4.5) {\n                            swing.sacrificeAdvances.push('first');\n                        }\n                        if (this.second && sacrificeThrowInTime > this.second.getBaseRunningTime()) {\n                            swing.sacrificeAdvances.push('second');\n                        }\n                        if (this.third && sacrificeThrowInTime > this.third.getBaseRunningTime() - 0.5) {\n                            swing.sacrificeAdvances.push('third');\n                        }\n                    }\n                }\n            } else {\n                swing.caught = false;\n            }\n\n            if (!swing.caught) {\n                swing.bases = 0;\n                swing.thrownOut = false; // default value\n                var fieldingReturnDelay = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, interceptRating);\n                swing.fieldingDelay = fieldingReturnDelay;\n                swing.outfielder = ({ 'left': 1, 'center': 1, 'right': 1 })[swing.fielder] == 1;\n                var speed = game.batter.skill.offense.speed,\n                    baseRunningTime = _baseballServices_services.Mathinator.baseRunningTime(speed);\n\n                if (swing.outfielder) {\n                    swing.bases = 1;\n                    baseRunningTime *= 1.05;\n                    fieldingReturnDelay -= baseRunningTime;\n\n                    while ((fieldingReturnDelay > baseRunningTime && Math.random() < 0.25 + speed / 200 || Math.random() < 0.04 + speed / 650) && swing.bases < 3) {\n                        baseRunningTime *= 0.95;\n                        swing.bases++;\n                        fieldingReturnDelay -= baseRunningTime;\n                    }\n                } else {\n                    var first = this.first,\n                        second = this.second,\n                        third = this.third;\n                    swing.fieldersChoice = null;\n                    swing.bases = fieldingReturnDelay >= baseRunningTime + 1 ? 1 : 0;\n                    if (first && fieldingReturnDelay < first.getBaseRunningTime()) swing.fieldersChoice = 'first';\n                    if (first && second && fieldingReturnDelay < second.getBaseRunningTime() + 0.6) swing.fieldersChoice = 'second';\n                    if (third && fieldingReturnDelay < third.getBaseRunningTime()) swing.fieldersChoice = 'third';\n                    // double play\n                    var outs = game.umpire.count.outs;\n                    if (swing.fieldersChoice) {\n                        outs++;\n                        swing.bases = 1;\n                        var fielders = fielder.team.positions;\n                        var force = this.forcePlaySituation();\n                        if (force) {\n                            var additionalOuts = [];\n                            var throwingDelay = fieldingReturnDelay;\n                            if (third && force === 'third' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher) + throwingDelay < second.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher);\n                                fielders.catcher.fatigue += 4;\n                                additionalOuts.push('second');\n                                outs++;\n                                force = 'second';\n                            }\n                            if (second && force === 'second' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third) + throwingDelay < first.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third);\n                                fielders.third.fatigue += 4;\n                                additionalOuts.push('first');\n                                outs++;\n                                force = 'first';\n                            }\n                            if (first && force === 'first' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second) + throwingDelay < game.batter.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second);\n                                fielders.second.fatigue += 4;\n                                additionalOuts.push('batter');\n                                swing.bases = 0;\n                                // todo (or shortstop)\n                                outs++;\n                            }\n                            if (outs - game.umpire.count.outs === 2) {\n                                swing.doublePlay = true;\n                            }\n                            if (additionalOuts.length) {\n                                swing.additionalOuts = additionalOuts;\n                                swing.firstOut = swing.fieldersChoice;\n                                if (additionalOuts.indexOf('batter') > -1) {\n                                    delete swing.fieldersChoice;\n                                }\n                            }\n                        }\n                        //console.log('DP?', !!this.forcePlaySituation(), 'throwingDelay', throwingDelay,\n                        //    'fielding delay', fieldingReturnDelay, 'runner', game.batter.getBaseRunningTime());\n                        //if (typeof additionalOuts !== 'undefined' && additionalOuts.length) {\n                        //    console.log('omg dp', additionalOuts);\n                        //}\n                    } else {\n                            delete swing.additionalOuts;\n                            delete swing.firstOut;\n                            delete swing.doublePlay;\n                            delete swing.fieldersChoice;\n                        }\n                }\n                swing.thrownOut = swing.bases == 0;\n                if (swing.thrownOut) {\n                    fielder.stats.fielding.PO++; // todo A to PO\n                    swing.thrownOut = true;\n                    swing.error = false;\n                }\n            }\n        } else {\n            if (Math.abs(splayAngle) < 45 && landingDistance > 300) {\n                swing.bases = 4;\n            } else {\n                swing.foul = true;\n                swing.caught = false;\n            }\n        }\n        this.game.swingResult = swing;\n        if (!_baseballServices_services.Animator.console) {\n            _baseballServices_services.Animator._ball.hasIndicator = true;\n            _baseballServices_services.Animator.animateFieldingTrajectory(this.game);\n        }\n    },\n    forcePlaySituation: function forcePlaySituation() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        return first && second && third && 'third' || first && second && 'second' || first && 'first';\n    },\n    /**\n     * @returns {Player}\n     * the best steal candidate.\n     */\n    getLeadRunner: function getLeadRunner() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        if (third && first && !second) return first;\n        return third || second || first;\n    },\n    //printRunnerNames : function() {\n    //    return [this.first ? this.first.getName() : '', this.second ? this.second.getName() : '', this.third ? this.third.getname() : ''];\n    //},\n    /**\n     * @param splayAngle {Number} 0 to 180, apparently\n     * @param landingDistance {Number} in feet, up to 310 or so\n     * @param power {Number} 0-100\n     * @param flyAngle {Number} roughly -15 to 90\n     * @returns {string|boolean}\n     */\n    findFielder: function findFielder(splayAngle, landingDistance, power, flyAngle) {\n        var angle = splayAngle; // 0 is up the middle, clockwise increasing\n\n        var fielder;\n\n        if (Math.abs(angle) > 50) return false; // foul\n        if (landingDistance < 10 && landingDistance > -20) {\n            return 'catcher';\n        } else if (landingDistance >= 10 && landingDistance < 45 && Math.abs(angle) < 5) {\n            return 'pitcher';\n        }\n\n        var infield = landingDistance < 145 - Math.abs(angle) / 90 * 50;\n        if (flyAngle < 7) {\n            // 7 degrees straight would fly over the infielder, but add some for arc\n            var horizontalVelocity = Math.cos(flyAngle / 180 * Math.PI) * (85 + power / 100 * 10); // mph toward infielder\n            if (flyAngle < 0) horizontalVelocity *= 0.5; // velocity loss on bounce\n            var fielderLateralReachDegrees = 1 + 22.5 * (100 - horizontalVelocity) / 100; // up to 90/4 = 22.5\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n            var fielderArcPosition = this.positions[fielder][0] - 90;\n            // a good infielder can field a hard hit grounder even with a high terminal distance\n            infield = Math.abs(angle - fielderArcPosition) < fielderLateralReachDegrees;\n        }\n\n        // ball in the air to infielder\n        if (infield && landingDistance > 15) {\n            if (angle < -20) {\n                fielder = 'third';\n            } else if (angle < 5) {\n                fielder = 'short';\n            } else if (angle < 30) {\n                fielder = 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                fielder = 'first';\n            }\n        } else if (landingDistance < 310) {\n            // past the infield or fly ball to outfielder\n            if (angle < -15) {\n                fielder = 'left';\n            } else if (angle < 16) {\n                fielder = 'center';\n            } else {\n                fielder = 'right';\n            }\n        } else {\n            fielder = false;\n        }\n        return fielder;\n    },\n    positions: {\n        pitcher: [90, 66],\n        catcher: [0, 0],\n        first: [90 + 45 - 7, 98],\n        second: [90 + 12.5, 130],\n        short: [90 - 12.5, 130],\n        third: [90 - 45 + 7, 98],\n        left: [45 + 14, 280],\n        center: [90, 280],\n        right: [135 - 14, 280]\n    },\n    getPolarDistance: function getPolarDistance(a, b) {\n        return _baseballServices_services.Mathinator.getPolarDistance(a, b);\n    },\n    fieldingTest: function fieldingTest() {\n        var angle = Math.random() * 90 + 45;\n        var distance = Math.random() * 320;\n        var fielder = this.findFielder(angle, distance);\n        var data = {};\n        if (fielder) {\n            var fielderCandidates = this.fielderSelectionTest(angle, distance, true);\n            data.fielder = fielderCandidates[1];\n            data[fielderCandidates[0]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[0]][0], this.positions[fielderCandidates[0]][1]]);\n            data[fielderCandidates[1]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[1]][0], this.positions[fielderCandidates[1]][1]]);\n            return data;\n        }\n    },\n    aggregateFieldingTest: function aggregateFieldingTest() {\n        var fielders = {\n            pitcher: { tally: 0, distances: [] },\n            catcher: { tally: 0, distances: [] },\n            first: { tally: 0, distances: [] },\n            second: { tally: 0, distances: [] },\n            short: { tally: 0, distances: [] },\n            third: { tally: 0, distances: [] },\n            left: { tally: 0, distances: [] },\n            center: { tally: 0, distances: [] },\n            right: { tally: 0, distances: [] },\n            'false': { tally: 0, distances: [] }\n        };\n        var selections = [];\n        for (var i = 0; i < 1000; i++) {\n            var angle = Math.random() * 90 + 45;\n            var distance = Math.random() * 320;\n            var fielder = this.findFielder(angle, distance);\n            fielders[fielder].tally++;\n            if (fielder) {\n                fielders[fielder].distances.push(this.getPolarDistance([angle, distance], [this.positions[fielder][0], this.positions[fielder][1]]));\n            }\n            selections.push([angle, distance]);\n            selections.push(this.fielderSelectionTest(angle, distance, true));\n        }\n        return [fielders, selections];\n    },\n    fielderSelectionTest: function fielderSelectionTest(angle, distance, returnFielder) {\n        var distances = [];\n        var minDistance = 300;\n        var giraffe = this;\n        var fielder = false;\n        Iterator.each(this.positions, function (position, spot) {\n            var thisDistance = giraffe.getPolarDistance([angle, distance], spot);\n            distances[thisDistance] = position;\n            if (minDistance > thisDistance) {\n                minDistance = thisDistance;\n                fielder = position;\n            }\n        });\n        return returnFielder ? [fielder, this.findFielder(angle, distance)] : distances;\n    }\n};\n\nexports.Field = Field;\n\n},{\"baseball/Model/Player\":5,\"baseball/Services/_services\":28}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Game = function Game(m) {\n    this.init(m);\n};\n\nGame.prototype = {\n    constructor: Game,\n    gamesIntoSeason: 0,\n    humanControl: 'home', //home, away, both, none\n    console: false,\n    quickMode: true,\n    debug: [],\n    pitcher: {}, // Player&\n    batter: {}, // Player&\n    init: function init(m) {\n        this.reset();\n        this.startTime = {\n            h: Math.random() * 8 + 10 | 0,\n            m: Math.random() * 60 | 0\n        };\n        this.timeOfDay = {\n            h: this.startTime.h,\n            m: this.startTime.m\n        };\n        if (m) _baseballUtility_utils.text.mode = m;\n        this.gamesIntoSeason = 5 + Math.floor(Math.random() * 133);\n        this.field = new _baseballModelField.Field(this);\n        this.teams.away = new _baseballModelTeam.Team(this);\n        this.teams.home = new _baseballModelTeam.Team(this);\n        this.log = new _baseballUtilityLog.Log();\n        this.log.game = this;\n        this.debug = [];\n        this.helper = _baseballUtility_utils.helper;\n        while (this.teams.away.name == this.teams.home.name) {\n            this.teams.away.pickName();\n        }\n        this.umpire = new _baseballModelUmpire.Umpire(this);\n        if (this.humanPitching()) {\n            this.stage = 'pitch';\n        }\n        this.autoPitchSelect();\n        _baseballServices_services.Animator.init();\n        if (!_baseballServices_services.Animator.console) _baseballServices_services.Animator.loop.setTimeOfDay(0, 0);\n    },\n    passMinutes: function passMinutes(minutes) {\n        var time = this.timeOfDay;\n        time.m = parseInt(time.m);\n        time.m += parseInt(minutes);\n        while (time.m >= 60) {\n            time.m = parseInt(time.m) - 60;\n            time.h = (parseInt(time.h) + 1) % 24;\n        }\n        if (!_baseballServices_services.Animator.console) _baseballServices_services.Animator.loop.setTargetTimeOfDay(time.h, time.m);\n    },\n    getInning: function getInning() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.inning + (this.half == 'top' ? 'オモテ' : 'ウラ') : this.half.toUpperCase() + ' ' + this.inning;\n    },\n    humanBatting: function humanBatting() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'away';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'home';\n        }\n    },\n    humanPitching: function humanPitching() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'home';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'away';\n        }\n    },\n    end: function end() {\n        this.stage = 'end';\n        var e, n;\n        e = this.tally.home.R > this.tally.away.R ? 'Home team wins!' : this.tally.home.R == this.tally.away.R ? 'You tied. Yes, you can do that.' : 'Visitors win!';\n        n = this.tally.home.R > this.tally.away.R ? this.teams.home.getName() + 'の勝利' : this.tally.home.R == this.tally.away.R ? '引き分け' : this.teams.away.getName() + 'の勝利';\n        if (this.tally.home.R > this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.W++;\n            this.teams.away.positions.pitcher.stats.pitching.L++;\n        } else if (this.tally.home.R < this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.L++;\n            this.teams.away.positions.pitcher.stats.pitching.W++;\n        }\n        this.log.note(e, n);\n        this.log.note('Reload to play again', 'リロるは次の試合へ');\n    },\n    stage: 'pitch', //pitch, swing\n    simulateInput: function simulateInput(callback) {\n        var stage = this.stage,\n            pitchTarget = this.pitchTarget;\n        if (stage == 'end') {\n            return;\n        }\n        if (stage == 'pitch') {\n            this.autoPitch(callback);\n        } else if (stage == 'swing') {\n            if (typeof pitchTarget != 'object') {\n                this.pitchTarget = { x: 100, y: 100 };\n            }\n            this.autoSwing(this.pitchTarget.x, this.pitchTarget.y, callback);\n        }\n    },\n    simulatePitchAndSwing: function simulatePitchAndSwing(callback) {\n        if (this.stage == 'end') {\n            return;\n        }\n        this.autoPitch(callback);\n        var giraffe = this;\n        setTimeout(function () {\n            if (typeof giraffe.pitchTarget != 'object') {\n                giraffe.pitchTarget = { x: 100, y: 100 };\n            }\n            giraffe.autoSwing(giraffe.pitchTarget.x, giraffe.pitchTarget.y, function (callback) {\n                callback();\n            });\n        }, giraffe.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET + 2500 : _baseballServices_services.Animator.TIME_FROM_WINDUP + 2500);\n    },\n    /**\n     * generically receive click input and decide what to do\n     * @param x\n     * @param y\n     * @param callback\n     */\n    receiveInput: function receiveInput(x, y, callback) {\n        if (this.humanControl == 'none') {\n            return;\n        }\n        if (this.stage == 'end') {\n            return;\n        }\n        if (this.stage == 'pitch' && this.humanPitching()) {\n            this.thePitch(x, y, callback);\n        } else if (this.stage == 'swing' && this.humanBatting()) {\n            this.theSwing(x, y, callback);\n        }\n    },\n    autoPitchSelect: function autoPitchSelect() {\n        var pitchNames = Object.keys(this.pitcher.pitching);\n        var pitchName = pitchNames[Math.random() * pitchNames.length | 0];\n        var pitch = this.pitcher.pitching[pitchName];\n        pitch.name = pitchName;\n        this.pitchInFlight = pitch;\n    },\n    autoPitch: function autoPitch(callback) {\n        var pitcher = this.pitcher,\n            giraffe = this;\n        if (this.stage == 'pitch') {\n            this.autoPitchSelect();\n            pitcher.windingUp = true;\n            if (!this.console) {\n                $('.baseball').addClass('hide');\n                var windup = $('.windup');\n                windup.css('width', '100%');\n            }\n            var count = this.umpire.count;\n            var pitch = _baseballServices_services.Distribution.pitchLocation(count),\n                x = pitch.x,\n                y = pitch.y;\n            if (this.quickMode) {\n                this.thePitch(x, y, callback);\n            } else {\n                if (!_baseballServices_services.Animator.console) {\n                    _baseballServices_services.Animator.loop.resetCamera();\n                }\n                windup.animate({ width: 0 }, this.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET : _baseballServices_services.Animator.TIME_FROM_WINDUP, function () {\n                    !giraffe.console && $('.baseball.pitch').removeClass('hide');\n                    giraffe.thePitch(x, y, callback);\n                    pitcher.windingUp = false;\n                });\n            }\n        }\n    },\n    autoSwing: function autoSwing(deceptiveX, deceptiveY, callback) {\n        var giraffe = this;\n        var bonus = this.batter.eye.bonus || 0,\n            eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus,\n            convergence,\n            convergenceSum;\n\n        var x = _baseballServices_services.Distribution.centralizedNumber(),\n            y = _baseballServices_services.Distribution.centralizedNumber();\n\n        if (100 * Math.random() < eye) {\n            // identified the break\n            deceptiveX = this.pitchInFlight.x;\n            deceptiveY = this.pitchInFlight.y;\n        }\n\n        if (100 * Math.random() < eye) {\n            // identified the location\n            convergence = eye / 25;\n            convergenceSum = 1 + convergence;\n        } else {\n            convergence = eye / 100;\n            convergenceSum = 1 + convergence;\n        }\n\n        x = (deceptiveX * convergence + x) / convergenceSum;\n        y = (deceptiveY * convergence + y) / convergenceSum;\n\n        this.swingResult.x = _baseballServices_services.Distribution.cpuSwing(x, this.pitchInFlight.x, eye);\n        this.swingResult.y = _baseballServices_services.Distribution.cpuSwing(y, this.pitchInFlight.y, eye * 0.75);\n\n        var swingProbability = _baseballServices_services.Distribution.swingLikelihood(eye, x, y, this.umpire);\n        if (swingProbability < 100 * Math.random()) {\n            x = -20;\n        }\n\n        callback(function () {\n            giraffe.theSwing(x, y);\n        });\n    },\n    opponentConnected: false,\n    waitingCallback: function waitingCallback() {},\n    awaitPitch: function awaitPitch(callback, swingResult) {\n        var giraffe = this;\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitSwing(swingResult);\n        } else {\n            setTimeout(function () {\n                giraffe.autoPitch(callback);\n            }, 5200);\n        }\n    },\n    awaitSwing: function awaitSwing(x, y, callback, pitchInFlight, pitchTarget) {\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitPitch({\n                inFlight: pitchInFlight,\n                target: pitchTarget\n            });\n        } else {\n            this.autoSwing(x, y, callback);\n        }\n    },\n    thePitch: function thePitch(x, y, callback, override) {\n        var pitch = this.pitchInFlight;\n        if (this.stage == 'pitch') {\n            if (override) {\n                this.pitchInFlight = override.inFlight;\n                this.pitchTarget = override.target;\n                callback = this.waitingCallback;\n            } else {\n                this.pitcher.fatigue++;\n                this.pitchTarget.x = x;\n                this.pitchTarget.y = y;\n\n                pitch.breakDirection = this.helper.pitchDefinitions[pitch.name].slice(0, 2);\n                this.battersEye = _baseballUtility_utils.text.getBattersEye(this);\n\n                var control = Math.floor(pitch.control - this.pitcher.fatigue / 2);\n                this.pitchTarget.x = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.x, control);\n                this.pitchTarget.y = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.y, control);\n\n                if (this.pitcher.throws == 'right') pitch.breakDirection[0] *= -1;\n\n                var breakEffect = _baseballServices_services.Distribution.breakEffect(pitch, this.pitcher, this.pitchTarget.x, this.pitchTarget.y);\n\n                pitch.x = breakEffect.x;\n                pitch.y = breakEffect.y;\n            }\n\n            this.log.notePitch(pitch, this.batter);\n\n            this.stage = 'swing';\n            if (this.humanControl != 'none' && (this.humanControl == 'both' || this.humanBatting())) {\n                callback();\n            } else {\n                this.awaitSwing(x, y, callback, pitch, this.pitchTarget);\n            }\n        }\n    },\n    battersEye: {\n        e: '',\n        n: ''\n    },\n    theSwing: function theSwing(x, y, callback, override) {\n        var pitch = this.pitchInFlight;\n        if (this.stage == 'swing') {\n            if (override) {\n                var result = this.swingResult = override;\n                callback = this.waitingCallback;\n            } else {\n                this.swingResult = result = {};\n                var bonus = this.batter.eye.bonus || 0,\n                    eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus;\n\n                if (x >= 0 && x <= 200) {\n                    this.batter.fatigue++;\n\n                    result.x = x - pitch.x;\n                    result.y = y - pitch.y;\n                    result.angle = this.setBatAngle();\n\n                    var recalculation = _baseballServices_services.Mathinator.getAngularOffset(result, result.angle);\n                    var precision = _baseballServices_services.Distribution.swing(eye);\n\n                    result.x = recalculation.x * precision;\n                    result.y = -5 + recalculation.y * precision;\n\n                    //log(recalculation.y, precision);\n\n                    result.looking = false;\n                    if (Math.abs(result.x) < 60 && Math.abs(result.y) < 35) {\n                        result.contact = true;\n                        this.field.determineSwingContactResult(result);\n                        // log(result.flyAngle, Math.floor(result.x), Math.floor(result.y));\n                        this.debug.push(result);\n                    } else {\n                        result.contact = false;\n                    }\n                } else {\n                    result.strike = pitch.x > 50 && pitch.x < 150 && pitch.y > 35 && pitch.y < 165;\n                    this.batter.eye.bonus = Math.max(0, eye - Math.sqrt(Math.pow(this.batter.eye.x - pitch.x, 2) + Math.pow(this.batter.eye.y - pitch.y, 2)) * 1.5);\n                    result.contact = false;\n                    result.looking = true;\n                    this.batter.eye.x = pitch.x;\n                    this.batter.eye.y = pitch.y;\n                }\n            }\n\n            // stealing bases\n            var field = this.field;\n            var team = this.batter.team;\n            if ((team.stealAttempt === _baseballModelTeam.Team.RUNNER_GO || team.stealAttempt === _baseballModelTeam.Team.RUNNERS_DISCRETION) && !this.opponentConnected) {\n                var thief = field.getLeadRunner();\n                if (thief instanceof _baseballModelPlayer.Player) {\n                    switch (thief) {\n                        case field.first:\n                            var base = 2;\n                            break;\n                        case field.second:\n                            base = 3;\n                            break;\n                        case field.third:\n                            base = 4;\n                    }\n                    var validToSteal = true;\n                    if (result.looking) {\n                        var count = this.umpire.count;\n                        if (count.strikes >= 2 && result.strike && count.outs >= 2) validToSteal = false;\n                        if (count.balls >= 3 && !result.strike && field.first) validToSteal = false;\n                    }\n                    if (result.foul || result.caught) {\n                        validToSteal = false;\n                    }\n                    var discretion = team.stealAttempt === 'go' || _baseballServices_services.Distribution.willSteal(pitch, this.pitcher.team.positions.catcher, thief, base);\n                    if (discretion && validToSteal) {\n                        thief.attemptSteal(this, base);\n                    }\n                    team.stealAttempt = _baseballModelTeam.Team.RUNNERS_DISCRETION;\n                }\n            }\n\n            this.log.noteSwing(result);\n            this.stage = 'pitch';\n\n            var half = this.half;\n            this.umpire.makeCall();\n            emit = false;\n            if (half != this.half) {\n                callback = this.startOpponentPitching;\n                var emit = !override;\n            }\n\n            if (typeof callback == 'function') {\n                if (this.humanControl != 'none' && (this.humanControl == 'both' || this.teams[this.humanControl] == this.pitcher.team)) {\n                    callback();\n                    if (emit) {\n                        if (this.opponentService && this.opponentConnected) {\n                            this.opponentService.emitSwing(result);\n                        }\n                    }\n                } else {\n                    this.awaitPitch(callback, result);\n                }\n            }\n        }\n    },\n    setBatAngle: function setBatAngle(x, y) {\n        var giraffe = this,\n            pitchInFlight = this.pitchInFlight,\n            swingResult = this.swingResult;\n        var origin = {\n            x: giraffe.batter.bats == 'right' ? -10 : 210,\n            y: 199\n        };\n        var swing = {\n            x: x ? x : pitchInFlight.x + swingResult.x,\n            y: y ? y : pitchInFlight.y + swingResult.y\n        };\n        return _baseballServices_services.Mathinator.battingAngle(origin, swing);\n    },\n    debugOut: function debugOut() {\n        log('slugging', this.debug.filter(function (a) {\n            return a.bases == 1;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 2;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 3;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 4;\n        }).length);\n        log('grounders', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < 0;\n        }).length, 'thrown out', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < 0 && a.thrownOut;\n        }).length);\n        log('flies/liners', this.debug.filter(function (a) {\n            return !a.foul && a.flyAngle > 0;\n        }).length, 'caught', this.debug.filter(function (a) {\n            return a.caught && a.flyAngle > 0;\n        }).length);\n\n        var PO = {};\n        this.debug.map(function (a) {\n            if (!a.fielder) return;\n            if (!PO[a.fielder]) {\n                PO[a.fielder] = 0;\n            }\n            if (!a.bases && a.fielder) {\n                PO[a.fielder]++;\n            }\n        });\n        log('fielding outs', JSON.stringify(PO));\n\n        var hitters = this.teams.away.lineup.concat(this.teams.home.lineup);\n        var atBats = [];\n        hitters.map(function (a) {\n            atBats = atBats.concat(a.getAtBats().map(function (ab) {\n                return ab.text;\n            }));\n        });\n\n        var LO = atBats.filter(function (ab) {\n            return ab == 'LO';\n        }).length;\n        var FO = atBats.filter(function (ab) {\n            return ab == 'FO';\n        }).length;\n        var GO = atBats.filter(function (ab) {\n            return ab == 'GO';\n        }).length;\n        var GIDP = atBats.filter(function (ab) {\n            return ab == '(IDP)';\n        }).length;\n        var SO = atBats.filter(function (ab) {\n            return ab == 'SO';\n        }).length;\n        var BB = atBats.filter(function (ab) {\n            return ab == 'BB';\n        }).length;\n        var SAC = atBats.filter(function (ab) {\n            return ab == 'SAC';\n        }).length;\n        var FC = atBats.filter(function (ab) {\n            return ab == 'FC';\n        }).length;\n        var CS = atBats.filter(function (ab) {\n            return ab == 'CS';\n        }).length;\n        var SB = atBats.filter(function (ab) {\n            return ab == 'SB';\n        }).length;\n\n        log('line outs', LO, 'fly outs', FO, 'groundouts', GO, 'strikeouts', SO, 'sacrifices', SAC, 'FC', FC, 'gidp', GIDP, 'CS', CS, 'total', LO + FO + GO + SO + SAC + FC + GIDP + CS);\n\n        log('BB', BB, 'SB', SB);\n        log('fouls', this.debug.filter(function (a) {\n            return a.foul;\n        }).length);\n        log('fatigue, home vs away');\n        var teams = this.teams;\n        var fatigue = { home: {}, away: {} };\n        _baseballServices_services.Iterator.each(this.teams.home.positions, function (key) {\n            var position = key;\n            fatigue.home[position] = teams.home.positions[position].fatigue;\n            fatigue.away[position] = teams.away.positions[position].fatigue;\n        });\n        console.table(fatigue);\n        console.table(this.scoreboard);\n        console.table(this.tally);\n    },\n    toData: function toData() {\n        var data = {};\n        data.half = this.half;\n        data.inning = this.inning;\n        data.tally = this.tally;\n        var giraffe = this;\n        var players = this.teams.away.lineup.concat(this.teams.home.lineup);\n        // note: bench not included\n        data.field = {\n            first: players.indexOf(this.field.first),\n            second: players.indexOf(this.field.second),\n            third: players.indexOf(this.field.third)\n        };\n        data.batter = players.indexOf(this.batter);\n        data.deck = players.indexOf(this.deck);\n        data.hole = players.indexOf(this.hole);\n        data.teams = {\n            home: {\n                name: giraffe.teams.home.name,\n                nameJ: giraffe.teams.home.nameJ\n            },\n            away: {\n                name: giraffe.teams.away.name,\n                nameJ: giraffe.teams.away.nameJ\n            }\n        };\n        data.umpire = {\n            says: giraffe.umpire.says,\n            count: {\n                strikes: giraffe.umpire.count.strikes,\n                balls: giraffe.umpire.count.balls,\n                outs: giraffe.umpire.count.outs\n            }\n        };\n        data.players = players.map(function (player) {\n            return player.serialize();\n        });\n        data.log = {\n            pitchRecord: giraffe.log.pitchRecord,\n            record: giraffe.log.record\n        };\n        data.gamesIntoSeason = this.gamesIntoSeason;\n        return data;\n    },\n    fromData: function fromData(data) {\n        this.half = data.half;\n        this.inning = data.inning;\n        this.tally = data.tally;\n        var giraffe = this;\n        var players = data.players.map(function (playerJson, index) {\n            var playerData = JSON.parse(playerJson);\n            if (index > 8) {\n                var side = 'home';\n                index = index - 9;\n            } else {\n                side = 'away';\n            }\n            var player = giraffe.teams[side].positions[playerData.position];\n            player.fromData(playerData);\n            giraffe.teams[side].lineup[index] = player;\n            player.resetStats(data.gamesIntoSeason);\n            return player;\n        });\n        this.field.first = players[data.field.first];\n        this.field.second = players[data.field.second];\n        this.field.third = players[data.field.third];\n        this.batter = players[data.batter];\n        this.deck = players[data.deck];\n        this.hole = players[data.hole];\n        this.umpire.says = data.umpire.says;\n        this.umpire.count = data.umpire.count;\n        this.teams.away.name = data.teams.away.name;\n        this.teams.away.nameJ = data.teams.away.nameJ;\n        this.teams.home.name = data.teams.home.name;\n        this.teams.home.nameJ = data.teams.home.nameJ;\n        this.log.pitchRecord = data.log.pitchRecord;\n        this.log.record = data.log.record;\n        this.log.stabilizeShortRecord();\n        this.gamesIntoSeason = data.gamesIntoSeason;\n        return this;\n    },\n    startOpponentPitching: null, // late function\n    pitchTarget: { x: 100, y: 100 },\n    pitchInFlight: {\n        x: 100,\n        y: 100,\n        breakDirection: [0, 0],\n        name: 'slider',\n        velocity: 50,\n        'break': 50,\n        control: 50\n    },\n    swingResult: {\n        x: 100, //difference to pitch location\n        y: 100, //difference to pitch location\n        strike: false,\n        foul: false,\n        caught: false,\n        contact: false,\n        looking: true,\n        bases: 0,\n        fielder: 'short',\n        outs: 0\n    },\n    playResult: {\n        batter: '',\n        fielder: ''\n    },\n    showPlayResultPanels: function showPlayResultPanels(batter) {\n        var batterOutcomes = {};\n        var atBat = batter.atBats.slice(0).pop();\n        var fielderOutcomes = {};\n        var n = function n() {\n            var n = Math.floor(Math.random() * 3);\n            return n ? n : '';\n        };\n        this.playResult = {\n            batter: 'B_placeholder' + n() || batterOutcomes[atBat] || 'batter/' + atBat,\n            fielder: 'F_placeholder' + n() || fielderOutcomes[atBat] || 'fielder/' + atBat\n        };\n    },\n    pitchSelect: function pitchSelect() {},\n    field: null,\n    teams: {\n        away: null,\n        home: null\n    },\n    log: null,\n    half: 'top',\n    inning: 1,\n    scoreboard: {\n        away: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        },\n        home: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        }\n    },\n    reset: function reset() {\n        this.scoreboard = {\n            away: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0,\n                5: 0,\n                6: 0,\n                7: 0,\n                8: 0,\n                9: 0\n            },\n            home: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0,\n                5: 0,\n                6: 0,\n                7: 0,\n                8: 0,\n                9: 0\n            }\n        };\n        this.resetTally();\n    },\n    resetTally: function resetTally() {\n        this.tally = {\n            away: {\n                H: 0,\n                R: 0,\n                E: 0\n            },\n            home: {\n                H: 0,\n                R: 0,\n                E: 0\n            }\n        };\n    },\n    tally: {\n        away: {\n            H: 0,\n            R: 0,\n            E: 0\n        },\n        home: {\n            H: 0,\n            R: 0,\n            E: 0\n        }\n    }\n};\n\nexports.Game = Game;\n\n},{\"baseball/Model/Field\":2,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":28,\"baseball/Utility/Log\":32,\"baseball/Utility/_utils\":33}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Manager = function Manager(team) {\n    this.init(team);\n};\n\nManager.prototype = {\n    constructor: Manager,\n    init: function init(team) {\n        this.team = team;\n    },\n    makeLineup: function makeLineup() {\n        var jerseyNumber = 1;\n        this.team.positions.pitcher = this.selectForSkill(this.team.bench, ['pitching']);\n        this.team.positions.pitcher.position = 'pitcher';\n        if (!this.team.positions.pitcher.number) {\n            this.team.positions.pitcher.number = jerseyNumber++;\n        }\n        this.team.positions.catcher = this.selectForSkill(this.team.bench, ['defense', 'catching'], 'right');\n        this.team.positions.catcher.position = 'catcher';\n        if (!this.team.positions.catcher.number) {\n            this.team.positions.catcher.number = jerseyNumber++;\n        }\n        _baseballServices_services.Iterator.each(this.team.bench, function (key, player) {\n            if (!player.number) {\n                player.number = jerseyNumber++;\n            }\n        });\n        this.team.positions.short = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.short.position = 'short';\n        this.team.positions.second = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.second.position = 'second';\n        this.team.positions.third = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.third.position = 'third';\n        this.team.positions.center = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.center.position = 'center';\n        this.team.positions.left = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.left.position = 'left';\n        this.team.positions.right = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.right.position = 'right';\n        this.team.positions.first = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'left');\n        this.team.positions.first.position = 'first';\n\n        this.team.lineup[3] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[3].order = 3;\n        this.team.lineup[2] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[2].order = 2;\n        this.team.lineup[4] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[4].order = 4;\n        this.team.lineup[0] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[0].order = 0;\n        this.team.lineup[1] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[1].order = 1;\n        this.team.lineup[5] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[5].order = 5;\n        this.team.lineup[6] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[6].order = 6;\n        this.team.lineup[7] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[7].order = 7;\n        this.team.lineup[8] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[8].order = 8;\n    },\n    selectForSkill: function selectForSkill(pool, skillset, requiredThrowingHandedness) {\n        if (this.team.bench.length || pool == this.team.positions) {\n            var selection = this.team.bench[0];\n            var rating = 0;\n            var index = 0;\n            _baseballServices_services.Iterator.each(pool, function (key, player) {\n                var skills = skillset.slice();\n                var cursor = player.skill;\n                var property = skills.shift();\n                while (property) {\n                    cursor = cursor[property];\n                    property = skills.shift();\n                }\n                if (!(player.order + 1) && cursor >= rating && (!requiredThrowingHandedness || player.throws == requiredThrowingHandedness)) {\n                    rating = cursor;\n                    selection = player;\n                    index = key;\n                }\n            });\n            if (pool == this.team.bench) {\n                delete this.team.bench[index];\n                this.team.bench = this.team.bench.filter(function (player) {\n                    return player instanceof selection.constructor;\n                });\n            }\n            return selection;\n        }\n        return 'no players available';\n    }\n};\n\nexports.Manager = Manager;\n\n},{\"baseball/Services/_services\":28}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar Player = function Player(team, hero) {\n    this.init(team, hero);\n    this.resetStats(this.team.game && this.team.game.gamesIntoSeason || 0);\n};\n\nPlayer.prototype = {\n    constructor: Player,\n    init: function init(team, hero) {\n        this.throws = Math.random() > 0.86 ? 'left' : 'right';\n        this.bats = Math.random() > 0.75 ? 'left' : 'right';\n        this.team = team;\n        this.skill = {};\n        this.eye = {\n            x: 100,\n            y: 100\n        };\n        this.pitching = { averaging: [] };\n        this.number = 0;\n        this.randomizeSkills(hero || Math.random() > 0.9);\n        var surnameKey = Math.floor(Math.random() * _baseballUtility_utils.data.surnames.length),\n            nameKey = Math.floor(Math.random() * _baseballUtility_utils.data.names.length);\n\n        this.name = _baseballUtility_utils.data.surnames[surnameKey] + ' ' + _baseballUtility_utils.data.names[nameKey];\n        var jSurname = _baseballUtility_utils.data.surnamesJ[surnameKey],\n            jGivenName = _baseballUtility_utils.data.namesJ[nameKey];\n        this.spaceName(jSurname, jGivenName);\n        this.surname = _baseballUtility_utils.data.surnames[surnameKey];\n        this.surnameJ = _baseballUtility_utils.data.surnamesJ[surnameKey];\n        this.atBats = [];\n    },\n    spaceName: function spaceName(jSurname, jGivenName) {\n        if (jSurname.length == 1 && jGivenName.length <= 2) jSurname += '・';\n        if (jGivenName.length == 1 && jSurname.indexOf('・') < 0 && jSurname.length <= 2) jSurname += '・';\n        this.nameJ = jSurname + jGivenName;\n        this.surnameJ = jSurname;\n    },\n    serialize: function serialize() {\n        var team = this.team;\n        delete this.team;\n        var data = JSON.stringify(this);\n        this.team = team;\n        return data;\n    },\n    fromData: function fromData(data) {\n        var giraffe = this;\n        _baseballServices_services.Iterator.each(data, function (key, value) {\n            giraffe[key] = value;\n        });\n        delete this.atBatObjects;\n        this.getAtBats();\n    },\n    substitute: function substitute(player) {\n        if (player.team !== this.team) return false;\n        var order = player.order,\n            position = player.position;\n        player.team.substituted.push(player);\n        player.team.positions[position] = this;\n        player.team.lineup[order] = this;\n\n        this.position = position;\n        this.order = order;\n\n        var game = this.team.game;\n        if (game.pitcher === player) game.pitcher = this;\n        if (game.batter === player) game.batter = this;\n        if (game.deck === player) game.deck = this;\n        if (game.hole === player) game.hole = this;\n\n        var field = game.field;\n        if (field.first === player) field.first = this;\n        if (field.second === player) field.second = this;\n        if (field.third === player) field.third = this;\n\n        var bench = this.team.bench,\n            bullpen = this.team.bullpen;\n        if (bench.indexOf(this) > -1) {\n            bench.splice(bench.indexOf(this), 1);\n        }\n        if (bullpen.indexOf(this) > -1) {\n            bullpen.splice(bullpen.indexOf(this), 1);\n        }\n        game.log.noteSubstitution(this, player);\n    },\n    resetStats: function resetStats() {\n        var gamesIntoSeason = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n        var offense = this.skill.offense;\n        var defense = this.skill.defense;\n        var randBetween = function randBetween(a, b, skill) {\n            var total = 0,\n                count = 0;\n            skill += '';\n            if (!skill) skill = '';\n            _baseballServices_services.Iterator.each(skill.split(' '), function (key, value) {\n                var skill = value;\n                if (offense[skill]) skill = offense[skill];\n                if (defense[skill]) skill = defense[skill];\n                if (isNaN(skill)) skill = 50;\n                total += skill;\n                count++;\n            });\n\n            skill = Math.sqrt(0.05 + Math.random() * 0.95) * (total / (count * 0.97));\n            return Math.floor(skill / 100 * (b - a) + a);\n        };\n        var IP, ER, GS, W, L;\n        if (this.skill.pitching > 65) {\n            IP = (this.skill.pitching - 65) * gamesIntoSeason / 20;\n            ER = IP / 9 * randBetween(800, 215, this.skill.pitching) / 100;\n            if (IP > gamesIntoSeason) {\n                //starter\n                GS = Math.floor(gamesIntoSeason / 5);\n                W = randBetween(GS * 0.1, GS * 0.8, this.skill.pitching / 1.20);\n                L = randBetween(GS - W, 0, this.skill.pitching / 3);\n            } else {\n                //reliever\n                GS = Math.floor(gamesIntoSeason / 40);\n                W = randBetween(0, GS * 0.6, this.skill.pitching);\n                L = randBetween(GS - W, 0, this.skill.pitching);\n            }\n        }\n        var pa = randBetween(gamesIntoSeason * 3, gamesIntoSeason * 5, 'speed eye');\n        var paRemaining = pa;\n        var bb = Math.floor(randBetween(0, 18, 'power eye') * paRemaining / 100);\n        paRemaining -= bb;\n        var ab = paRemaining;\n        var so = Math.floor(randBetween(25, 2, 'eye') * paRemaining / 100);\n        paRemaining -= so;\n        var h = Math.floor(randBetween(185, 372, 'eye power speed') * paRemaining / 1000);\n        paRemaining -= h;\n        var sb = randBetween(0, (h + bb) / 6, 'speed') | 0;\n        var cs = randBetween(sb, 0, 'speed eye') | 0;\n\n        var doubles = randBetween(0, h / 4, 'power speed');\n        var triples = randBetween(0, h / 12, 'speed');\n        var hr = Math.max(0, randBetween(-h / 20, h / 5, 'power eye'));\n        var r = randBetween(h / 8, (h + bb) / 3, 'speed') + hr;\n        var rbi = randBetween(h / 8, h / 2, 'power eye') + hr;\n        var hbp = randBetween(0, gamesIntoSeason / 25);\n        var sac = randBetween(0, gamesIntoSeason / 5, 'eye');\n\n        var chances = randBetween(gamesIntoSeason * 5, pa - bb - so - hr, 'fielding');\n        var E = randBetween(chances / 10, 0, 'fielding');\n        var PO = chances - E;\n\n        this.stats = {\n            pitching: {\n                pitches: 0, // in game\n                GS: GS,\n                W: W,\n                L: L,\n                strikes: 0, // in game\n                K: 0, // in game\n                getK9: function getK9() {\n                    return this.K / (this.IP[0] / 9);\n                },\n                getERA: function getERA() {\n                    return 9 * this.ER / Math.max(1 / 3, this.IP[0] + this.IP[1] / 3);\n                },\n                ERA: null,\n                ER: ER,\n                H: 0, // in game\n                HR: 0, // in game\n                BB: 0, // in game\n                IP: [IP, 0],\n                WHIP: 0,\n                getWHIP: function getWHIP() {\n                    return (this.H + this.BB) / (this.IP[0] ? this.IP[0] : 1);\n                }\n            },\n            batting: {\n                getBA: function getBA() {\n                    return this.h / Math.max(1, this.ab);\n                },\n                getBABIP: function getBABIP() {\n                    return (this.h - this.hr) / (this.ab - this.so - this.hr + this.sac);\n                },\n                ba: null,\n                getOBP: function getOBP() {\n                    return (this.h + this.bb + this.hbp) / (this.ab + this.bb + this.hbp + this.sac);\n                },\n                obp: null,\n                getSLG: function getSLG() {\n                    return (this.h - this['2b'] - this['3b'] - this.hr + 2 * this['2b'] + 3 * this['3b'] + 4 * this.hr) / this.ab;\n                },\n                getSlash: function getSlash() {\n                    this.slash = this.slash || [this.getBA(), this.getOBP(), this.getSLG()].map(function (x) {\n                        if (x < 1) return (x + '0000').slice(1, 5);\n                        return (x + '0000').slice(0, 5);\n                    }).join('/');\n                    return this.slash;\n                },\n                slg: null,\n                pa: pa,\n                ab: ab,\n                so: so,\n                bb: bb,\n                h: h,\n                '2b': doubles,\n                '3b': triples,\n                hr: hr,\n                r: r,\n                rbi: rbi,\n                hbp: hbp,\n                sac: sac,\n                sb: sb,\n                cs: cs\n            },\n            fielding: {\n                E: E,\n                PO: PO, // should depend on position\n                A: Math.floor(Math.random() * 5) + 1 // ehh should depend on position\n            }\n        };\n        this.stats.pitching.ERA = this.stats.pitching.getERA();\n        this.stats.pitching.K9 = this.stats.pitching.getK9();\n        this.stats.pitching.WHIP = this.stats.pitching.getWHIP();\n        this.stats.batting.ba = this.stats.batting.getBA();\n    },\n    atBatObjects: [],\n    getAtBats: function getAtBats() {\n        if (this.atBats.length > this.atBatObjects.length) {\n            this.atBatObjects = this.atBats.map(function (item) {\n                return new _baseballModel_models.AtBat(item);\n            });\n        }\n        return this.atBatObjects;\n    },\n    recordRBI: function recordRBI() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.RBI_INDICATOR;\n    },\n    recordInfieldHit: function recordInfieldHit() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.INFIELD_HIT_INDICATOR;\n    },\n    getBaseRunningTime: function getBaseRunningTime() {\n        return _baseballServices_services.Mathinator.baseRunningTime(this.skill.offense.speed);\n    },\n    attemptSteal: function attemptSteal(game, base) {\n        var pitch = game.pitchInFlight;\n        var success = _baseballServices_services.Distribution.stealSuccess(pitch, game.pitcher.team.positions.catcher, this, base, this.team.stealAttempt === _baseballModel_models.Team.RUNNERS_DISCRETION);\n        if (success) {\n            game.swingResult.stoleABase = this;\n            game.swingResult.caughtStealing = null;\n        } else {\n            game.swingResult.stoleABase = null;\n            game.swingResult.caughtStealing = this;\n        }\n        switch (base) {\n            case 1:\n                base = '1st';\n                break;\n            case 2:\n                base = '2nd';\n                break;\n            case 3:\n                base = '3rd';\n                break;\n            case 4:\n                base = 'Home';\n        }\n        game.swingResult.attemptedBase = base;\n        return this;\n    },\n    defensiveAverage: function defensiveAverage() {\n        var _this = this.skill.defense;\n        return (_this.speed + _this.fielding + _this.throwing) / 3;\n    },\n    randomizeSkills: function randomizeSkills(hero, allPitches) {\n        this.hero = hero;\n        var giraffe = this;\n        var randValue = function randValue(isPitching) {\n            var value = Math.floor(Math.pow(Math.random(), 0.75) * 80 + Math.random() * 20);\n            if (hero) {\n                value += Math.floor((100 - value) * Math.max(Math.random(), isPitching ? 0 : 0.65));\n            }\n            if (isPitching) giraffe.pitching.averaging.push(value);\n            return value;\n        };\n        this.skill.offense = {\n            eye: randValue(),\n            power: randValue(),\n            speed: randValue()\n        };\n        this.skill.defense = {\n            catching: randValue(),\n            fielding: randValue(),\n            speed: randValue(),\n            throwing: randValue()\n        };\n        this.pitching.averaging = [];\n        this.pitching['4-seam'] = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        this.pitching.slider = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        if (Math.random() < 0.17 || allPitches) {\n            // can pitch!\n            if (Math.random() > 0.6 || allPitches) {\n                this.pitching['2-seam'] = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.18 || allPitches) {\n                this.pitching.fork = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() > 0.77 || allPitches) {\n                this.pitching.cutter = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.21 || allPitches) {\n                this.pitching.sinker = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.4 || allPitches) {\n                this.pitching.curve = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.9 || allPitches) {\n                this.pitching.change = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n        }\n        this.skill.pitching = Math.floor(this.pitching.averaging.reduce(function (prev, current) {\n            return prev + current;\n        }) / this.pitching.averaging.length + this.pitching.averaging.length * 3);\n        delete this.pitching.averaging;\n    },\n    getSurname: function getSurname() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.surnameJ : this.surname;\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    getUniformNumber: function getUniformNumber() {\n        return (0, _baseballUtility_utils.text)('#') + this.number;\n    },\n    getOrder: function getOrder() {\n        return (0, _baseballUtility_utils.text)([' 1st', ' 2nd', ' 3rd', ' 4th', ' 5th', ' 6th', '7th', ' 8th', ' 9th'][this.order]);\n    },\n    /**\n     * to ease comparison in Angular (?)\n     */\n    toString: function toString() {\n        return this.name + ' #' + this.number;\n    },\n    eye: {},\n    fatigue: 0,\n    name: '',\n    number: 0,\n    position: '',\n    atBats: []\n};\n\nexports.Player = Player;\n\n},{\"baseball/Model/_models\":8,\"baseball/Services/_services\":28,\"baseball/Utility/_utils\":33}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar Team = function Team(game, heroRate) {\n    this.init(game, heroRate);\n};\n\nTeam.RUNNERS_DISCRETION = 'runnersDiscretion';\nTeam.RUNNER_GO = 'go';\nTeam.RUNNER_HOLD = 'hold';\n\nTeam.prototype = {\n    constructor: Team,\n    init: function init(game, heroRate) {\n        heroRate = heroRate || 0.10;\n        this.substituted = [];\n        this.pickName();\n        this.lineup = [];\n        this.bench = [];\n        this.bullpen = [];\n        this.positions = {\n            pitcher: null,\n            catcher: null,\n            first: null,\n            second: null,\n            short: null,\n            third: null,\n            left: null,\n            center: null,\n            right: null\n        };\n        this.manager = new _baseballModelManager.Manager(this);\n        if (game !== 'no init') {\n            this.game = game;\n            for (var j = 0; j < 20; j++) {\n                this.bench.push(new _baseballModelPlayer.Player(this, Math.random() < heroRate));\n            }\n            if (this.bench.length == 20) {\n                this.manager.makeLineup();\n            }\n        }\n    },\n    pickName: function pickName() {\n        var teamNameIndex = Math.floor(Math.random() * _baseballUtility_utils.data.teamNames.length);\n        this.name = _baseballUtility_utils.data.teamNames[teamNameIndex];\n        this.nameJ = _baseballUtility_utils.data.teamNamesJ[teamNameIndex];\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    stealAttempt: Team.RUNNERS_DISCRETION,\n    lineup: [],\n    positions: {},\n    manager: null,\n    bench: [],\n    bullpen: [],\n    nowBatting: 0,\n    expanded: 'Player&'\n};\n\nexports.Team = Team;\n\n},{\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":33}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar Umpire = function Umpire(game) {\n    this.init(game);\n};\n\nUmpire.prototype = {\n    constructor: Umpire,\n    init: function init(game) {\n        this.game = game;\n        this.playBall();\n    },\n    count: {\n        strikes: 0,\n        balls: 0,\n        outs: 0\n    },\n    playBall: function playBall() {\n        var game = this.game;\n        game.half = 'top';\n        game.inning = 1;\n        game.batter = game.teams.away.lineup[0];\n        game.batterRunner = game.teams.away.lineup[0];\n        game.deck = game.teams.away.lineup[1];\n        game.hole = game.teams.away.lineup[2];\n        game.pitcher = game.teams.home.positions.pitcher;\n        var n = '一回のオモテ、' + game.teams.away.getName() + 'の攻撃対' + game.teams.home.getName() + '、ピッチャーは' + game.teams.home.positions.pitcher.getName() + '。',\n            e = 'Top 1, ' + game.teams.away.name + ' offense vs. ' + game.teams.home.positions.pitcher.name + ' starting for ' + game.teams.home.name;\n        game.log.note(e, n);\n        game.log.noteBatter(game.batter);\n    },\n    makeCall: function makeCall() {\n        this.says = '';\n        var game = this.game;\n        var result = game.swingResult;\n        var pitcher = game.pitcher;\n        var batter = game.batter;\n        var field = game.field;\n\n        if (game.swingResult.fielder) {\n            var fielder = game.teams[game.half == 'top' ? 'home' : 'away'].positions[result.fielder];\n        } else {\n            fielder = null;\n        }\n\n        game.batterRunner = game.batter;\n\n        if (result.stoleABase) {\n            var thief = result.stoleABase;\n            thief.atBats.push(_baseballUtility_utils.Log.prototype.STOLEN_BASE);\n            switch (thief) {\n                case field.first:\n                    field.second = thief;\n                    field.first = null;\n                    break;\n                case field.second:\n                    field.third = thief;\n                    field.second = null;\n                    break;\n                case field.third:\n                    field.third = null;\n                    thief.stats.batting.r++;\n                    thief.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    this.runScores();\n            }\n            thief.stats.batting.sb++;\n        }\n        if (result.caughtStealing) {\n            game.teams[game.half == 'top' ? 'home' : 'away'].positions['catcher'].stats.fielding.PO++;\n            this.count.outs++;\n            thief = result.caughtStealing;\n            thief.stats.batting.cs++;\n            thief.atBats.push(_baseballUtility_utils.Log.prototype.CAUGHT_STEALING);\n            switch (thief) {\n                case field.first:\n                    field.first = null;\n                    break;\n                case field.second:\n                    field.second = null;\n                    break;\n                case field.third:\n                    field.third = null;\n            }\n            if (this.count.outs >= 3) {\n                this.says = 'Three outs, change.';\n                this.count.outs = this.count.balls = this.count.strikes = 0;\n                pitcher.stats.pitching.IP[0]++;\n                pitcher.stats.pitching.IP[1] = 0;\n                return this.changeSides();\n            }\n        }\n\n        pitcher.stats.pitching.pitches++;\n        if (result.looking) {\n            if (result.strike) {\n                this.count.strikes++;\n                pitcher.stats.pitching.strikes++;\n            } else {\n                this.count.balls++;\n            }\n        } else {\n            pitcher.stats.pitching.strikes++;\n            if (result.contact) {\n                game.passMinutes(1);\n                if (result.caught) {\n                    batter.stats.batting.pa++;\n                    pitcher.stats.pitching.IP[1]++;\n                    if (result.sacrificeAdvances.length && this.count.outs < 2) {\n                        batter.stats.batting.sac++;\n                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SACRIFICE);\n                        this.advanceRunners(false, null, result.sacrificeAdvances);\n                    } else {\n                        batter.stats.batting.ab++;\n                        if (result.flyAngle < 15) {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.LINEOUT);\n                        } else {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FLYOUT);\n                        }\n                    }\n                    this.count.outs++;\n                    fielder.stats.fielding.PO++;\n                    this.newBatter();\n                } else {\n                    if (result.foul) {\n                        this.count.strikes++;\n                        if (this.count.strikes > 2) this.count.strikes = 2;\n                    } else {\n                        batter.stats.batting.pa++;\n                        batter.stats.batting.ab++;\n                        if (result.firstOut) {\n                            game.field[result.firstOut] = null;\n                            result.additionalOuts.map(function (runner) {\n                                if (runner !== 'batter') {\n                                    game.field[runner] = null;\n                                }\n                            });\n                            this.count.outs += result.additionalOuts.length;\n                        }\n                        if (result.fieldersChoice && this.count.outs < 2) {\n                            result.bases = 0;\n                            this.count.outs++;\n                            fielder.stats.fielding.PO++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FIELDERS_CHOICE);\n                            this.advanceRunners(false, result.fieldersChoice);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            this.reachBase();\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        } else if (result.fieldersChoice) {\n                            result.bases = 0;\n                            result.thrownOut = true;\n                        }\n                        if (result.thrownOut) {\n                            this.count.outs++;\n                            fielder.stats.fielding.PO++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            if (this.count.outs < 3) {\n                                this.advanceRunners(false);\n                            }\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        }\n                        if (result.hitByPitch) {\n                            batter.stats.batting.ab--;\n                        }\n                        if (result.bases) {\n                            if (!result.error) {\n                                game.tally[game.half == 'top' ? 'away' : 'home'][_baseballUtility_utils.Log.prototype.SINGLE]++;\n                                pitcher.stats.pitching.H++;\n                            } else {\n                                if (result.bases > 0) {\n                                    game.tally[game.half == 'top' ? 'home' : 'away'].E++;\n                                    fielder.stats.fielding.E++;\n                                }\n                            }\n                            var bases = result.bases;\n                            switch (bases) {\n                                case 0:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                                    break;\n                                case 1:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                    } else {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SINGLE);\n                                        batter.stats.batting.h++;\n                                    }\n                                    break;\n                                case 2:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.DOUBLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['2b']++;\n                                    break;\n                                case 3:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.TRIPLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['3b']++;\n                                    break;\n                                case 4:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.HOMERUN);\n                                    pitcher.stats.pitching.HR++;\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting.hr++;\n                                    break;\n                            }\n                            if (bases > 0 && bases < 4 && !result.error) {\n                                if (['left', 'right', 'center'].indexOf(result.fielder) == -1) {\n                                    batter.recordInfieldHit();\n                                }\n                            }\n                            if (bases >= 1) {\n                                this.advanceRunners();\n                                this.reachBase();\n                                bases -= 1;\n                            }\n                            while (bases > 0) {\n                                bases -= 1;\n                                this.advanceRunners();\n                            }\n                            this.newBatter();\n                        }\n                    }\n                }\n            } else {\n                this.count.strikes++;\n            }\n        }\n\n        this.says = this.count.balls + ' and ' + this.count.strikes;\n\n        result.outs = this.count.outs;\n\n        if (this.count.strikes > 2) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.ab++;\n            batter.stats.batting.so++;\n            pitcher.stats.pitching.K++;\n            this.count.outs++;\n            pitcher.stats.pitching.IP[1]++;\n            this.count.balls = this.count.strikes = 0;\n            this.says = 'Strike three. Batter out.';\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.STRIKEOUT);\n            this.newBatter();\n        }\n        if (this.count.balls > 3) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.bb++;\n            pitcher.stats.pitching.BB++;\n            this.says = 'Ball four.';\n            this.count.balls = this.count.strikes = 0;\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.WALK);\n            this.advanceRunners(true).reachBase().newBatter();\n        }\n        if (this.count.outs > 2) {\n            this.says = 'Three outs, change.';\n            this.count.outs = this.count.balls = this.count.strikes = 0;\n            pitcher.stats.pitching.IP[0]++;\n            pitcher.stats.pitching.IP[1] = 0;\n            this.changeSides();\n        }\n    },\n    reachBase: function reachBase() {\n        var game = this.game;\n        game.field.first = game.batter;\n        game.field.first.fatigue += 2;\n        return this;\n    },\n    advanceRunners: function advanceRunners(isWalk, fieldersChoice, sacrificeAdvances) {\n        isWalk = !!isWalk;\n        var game = this.game;\n        var first = game.field.first,\n            second = game.field.second,\n            third = game.field.third,\n            swing = game.swingResult;\n\n        if (isWalk) {\n            if (first) {\n                if (second) {\n                    if (third) {\n                        //bases loaded\n                        game.batter.recordRBI();\n                        game.batter.stats.batting.rbi++;\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        third.stats.batting.r++;\n                        game.pitcher.stats.pitching.ER++;\n                        this.runScores();\n                        game.field.third = second;\n                        game.field.second = first;\n                        first = null;\n                    } else {\n                        // 1st and second\n                        game.field.third = second;\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                } else {\n                    if (third) {\n                        // first and third\n                        game.field.second = first;\n                        game.field.first = null;\n                    } else {\n                        // first only\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                }\n            } else {\n                // no one on first\n            }\n        } else {\n                if (fieldersChoice) {\n                    game.field[fieldersChoice] = null;\n                    first = game.field.first;\n                    second = game.field.second;\n                    third = game.field.third;\n                }\n                var canAdvance = function canAdvance() {\n                    return true;\n                };\n                if (sacrificeAdvances) {\n                    canAdvance = function (position) {\n                        switch (position) {\n                            case 'first':\n                                return sacrificeAdvances.indexOf('first') > -1 && !game.field.second;\n                            case 'second':\n                                return sacrificeAdvances.indexOf('second') > -1 && !game.field.third;\n                            case 'third':\n                                return sacrificeAdvances.indexOf('third') > -1;\n                        }\n                    };\n                }\n                var arm = 0;\n                if (swing.fielder) {\n                    var fielder = game.pitcher.team.positions[swing.fielder];\n                    if (['left', 'center', 'right'].indexOf(fielder.position) > -1) {\n                        arm = fielder.skill.defense.throwing;\n                    } else {\n                        arm = fielder.skill.defense.throwing + 120; // very rare extra bases on infield BIP\n                    }\n                }\n                if (third && canAdvance('third')) {\n                    // run scored\n                    this.runScores();\n                    if (game.batter != third) {\n                        game.batter.recordRBI();\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    }\n                    game.batter.stats.batting.rbi++;\n                    third.stats.batting.r++;\n                    game.pitcher.stats.pitching.ER++;\n                    game.field.third = null;\n                }\n                if (second && canAdvance('second')) {\n                    game.field.third = second;\n                    game.field.second = null;\n                    if (second != game.batter && !sacrificeAdvances && Math.random() * (second.skill.offense.speed + 120) > arm + 50) {\n\n                        this.runScores();\n                        if (game.batter != second) {\n                            game.batter.recordRBI();\n                            second.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        }\n                        game.field.third = null;\n                    }\n                }\n                if (first && canAdvance('first')) {\n                    game.field.second = first;\n                    game.field.first = null;\n                    if (first != game.batter && !game.field.third && !sacrificeAdvances && Math.random() * (first.skill.offense.speed + 120) > arm + 60) {\n\n                        game.field.third = first;\n                        game.field.second = null;\n                    }\n                }\n            }\n        return this;\n    },\n    runScores: function runScores() {\n        var game = this.game;\n        game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n        game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n    },\n    newBatter: function newBatter() {\n        var game = this.game;\n        game.passMinutes(2);\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.count.balls = this.count.strikes = 0;\n        game.log.notePlateAppearanceResult(game);\n        var team = game.half == 'bottom' ? game.teams.home : game.teams.away;\n        game.lastBatter = game.batter;\n        game.batter = team.lineup[(team.nowBatting + 1) % 9];\n        game.deck = team.lineup[(team.nowBatting + 2) % 9];\n        game.hole = team.lineup[(team.nowBatting + 3) % 9];\n        team.nowBatting = (team.nowBatting + 1) % 9;\n        if (this.count.outs < 3) {\n            game.log.noteBatter(game.batter);\n        }\n        game.showPlayResultPanels(game.lastBatter);\n    },\n    changeSides: function changeSides() {\n        var game = this.game;\n        game.passMinutes(5);\n        game.swingResult = {};\n        game.swingResult.looking = true; // hide bat\n        game.pitchInFlight.x = null; // hide ball\n        game.pitchInFlight.y = null; // hide ball\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        var offense, defense;\n        game.field.first = null;\n        game.field.second = null;\n        game.field.third = null;\n        if (game.half == 'top') {\n            if (game.inning == 9 && game.tally.home.R > game.tally.away.R) {\n                return game.end();\n            }\n            game.half = 'bottom';\n        } else {\n            if (game.inning + 1 > 9) {\n                return game.end();\n            }\n            game.inning++;\n            game.half = 'top';\n        }\n        offense = game.half == 'top' ? 'away' : 'home';\n        defense = game.half == 'top' ? 'home' : 'away';\n        var n = game.inning + '回の' + (game.half == 'top' ? 'オモテ' : 'ウラ') + '、' + game.teams[game.half == 'top' ? 'away' : 'home'].getName() + 'の攻撃。',\n            e = (game.half == 'top' ? 'Top' : 'Bottom') + ' ' + game.inning;\n        game.log.note(e, n);\n        var team = game.teams[offense];\n        game.batter = team.lineup[team.nowBatting];\n        game.batterRunner = game.batter;\n        game.deck = team.lineup[(team.nowBatting + 1) % 9];\n        game.hole = team.lineup[(team.nowBatting + 2) % 9];\n\n        game.pitcher = game.teams[defense].positions.pitcher;\n        game.log.noteBatter(game.batter);\n        game.autoPitchSelect();\n        game.field.defense = team.positions;\n    },\n    says: 'Play ball!',\n    game: null\n};\n\nexports.Umpire = Umpire;\n\n},{\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":33}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nexports.AtBat = _baseballModelAtBat.AtBat;\nexports.Field = _baseballModelField.Field;\nexports.Game = _baseballModelGame.Game;\nexports.Manager = _baseballModelManager.Manager;\nexports.Player = _baseballModelPlayer.Player;\nexports.Team = _baseballModelTeam.Team;\nexports.Umpire = _baseballModelUmpire.Umpire;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _meshBall = require('./mesh/Ball');\n\nvar _meshMound = require('./mesh/Mound');\n\nvar _meshBase = require('./mesh/Base');\n\nvar _meshField = require('./mesh/Field');\n\nvar _meshGrass = require('./mesh/Grass');\n\nvar _meshHomeDirt = require('./mesh/HomeDirt');\n\nvar _meshBattersEye = require('./mesh/BattersEye');\n\nvar _meshWall = require('./mesh/Wall');\n\nvar _meshSky = require('./mesh/Sky');\n\nvar _meshSun = require('./mesh/Sun');\n\nvar _sceneLighting = require('./scene/lighting');\n\nvar _ShadersSkyShader = require('./Shaders/SkyShader');\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\n/**\n * the constants should be tuned so that the camera coincides with the DOM's strike zone overlay\n * @type {number}\n */\nvar VERTICAL_CORRECTION = -0.2;\nvar INITIAL_CAMERA_DISTANCE = 8;\n\nif (typeof THREE !== 'undefined') {\n    var AHEAD = new THREE.Vector3(0, VERTICAL_CORRECTION, -60.5);\n    var INITIAL_POSITION = new THREE.Vector3(0, VERTICAL_CORRECTION, INITIAL_CAMERA_DISTANCE);\n}\n\n/**\n * manager for the rendering loop\n */\n\nvar Loop = (function () {\n    function Loop(elementClass) {\n        _classCallCheck(this, Loop);\n\n        (0, _ShadersSkyShader.loadSkyShader)();\n        this.elementClass = elementClass;\n        this.main();\n        window.loop = this;\n        this.timeOfDay = {\n            h: 0,\n            m: 0\n        };\n    }\n\n    /**\n     * individual objects<AbstractMesh> can attach and detach to the manager to be rendered\n     */\n\n    _createClass(Loop, [{\n        key: 'loop',\n        value: function loop() {\n            requestAnimationFrame(this.loop.bind(this));\n            this.panToward(this.target);\n            var omt = this.overwatchMoveTarget;\n            this.moveToward(this.moveTarget || {\n                x: omt.x,\n                y: omt.y + 12,\n                z: omt.z\n            });\n            this.objects.map(function (i) {\n                return i.animate();\n            });\n            //this.breathe();\n            this.renderer.render(this.scene, this.camera);\n        }\n\n        /**\n         * initialize lights, camera, action\n         */\n    }, {\n        key: 'main',\n        value: function main() {\n            this.objects = [];\n            if (this.getThree()) {\n\n                var THREE = this.THREE;\n\n                var scene = this.scene = new THREE.Scene();\n                scene.fog = new THREE.FogExp2(0x624E46, 0.002);\n                this.attach();\n                this.lighting = _sceneLighting.lighting;\n                _sceneLighting.lighting.addTo(scene);\n                var camera = this.camera = new THREE.PerspectiveCamera(60, this.getAspect(), 0.1, 1000000);\n\n                this.target = new THREE.Vector3(0, 0, -60.5);\n                this._target = new THREE.Vector3(0, 0, -60.5);\n                this.moveTarget = camera.position;\n\n                this.resetCamera();\n                this.loop();\n            }\n        }\n\n        /**\n         * @param addition\n         */\n    }, {\n        key: 'addMinutes',\n        value: function addMinutes(addition) {\n            var hours = this.timeOfDay.h,\n                minutes = this.timeOfDay.m;\n            minutes += addition;\n            while (minutes >= 60) {\n                minutes -= 60;\n                hours += 1;\n                hours %= 24;\n            }\n            this.setTimeOfDay(hours, minutes);\n        }\n\n        /**\n         * @param hours\n         * @param minutes\n         * gradual transition\n         */\n    }, {\n        key: 'setTargetTimeOfDay',\n        value: function setTargetTimeOfDay(hours, minutes) {\n            if (this.background) {\n                var sun = this.background.sun;\n            } else {\n                sun = this.sun;\n            }\n            sun.setTargetTime(hours, minutes);\n        }\n\n        /**\n         * @param hours {Number} 0-24\n         * @param minutes {Number} 0-60\n         * instant transition\n         */\n    }, {\n        key: 'setTimeOfDay',\n        value: function setTimeOfDay(hours, minutes) {\n            this.timeOfDay = {\n                h: hours,\n                m: minutes\n            };\n            if (this.background) {\n                var sky = this.background.sky,\n                    sun = this.background.sun;\n            } else {\n                sky = this.sky;\n                sun = this.sun;\n            }\n            if (hours < 7.5) {\n                hours += 24;\n            }\n            var azimuth = (hours - 7.5) / 24 + minutes / 60 / 24;\n            sky.uniforms.azimuth = azimuth;\n\n            if (azimuth > 0.5) {\n                sky.uniforms.inclination = 0.48;\n            } else {\n                sky.uniforms.inclination = 0.39;\n            }\n            sun.time.h = hours;\n            sun.time.m = minutes;\n            sun.derivePosition(sky);\n            var luminosity = (-0.5 + Math.max(Math.abs(1.25 - azimuth), Math.abs(0.25 - azimuth))) * 2;\n            _baseballServicesAnimator.Animator.setLuminosity(0.1 + luminosity / 1.4);\n        }\n\n        /**\n         * used by the background layer\n         */\n    }, {\n        key: 'addStaticMeshes',\n        value: function addStaticMeshes() {\n            new _meshField.Field().join(this);\n            new _meshMound.Mound().join(this);\n            new _meshHomeDirt.HomeDirt().join(this);\n            new _meshGrass.Grass().join(this);\n            new _meshGrass.Grass(this, true);\n            new _meshBattersEye.BattersEye().join(this);\n            var sun = new _meshSun.Sun(),\n                sky = new _meshSky.Sky();\n            sun.derivePosition(sky);\n            sky.join(this);\n            sun.join(this);\n\n            this.sky = sky;\n            this.sun = sun;\n\n            new _meshWall.Wall(this, -30);\n            new _meshWall.Wall(this, -15);\n            new _meshWall.Wall(this, 15);\n            new _meshWall.Wall(this, 30);\n\n            new _meshBase.Base(this, 'first');\n            new _meshBase.Base(this, 'second');\n            new _meshBase.Base(this, 'third');\n            new _meshBase.Base(this, 'home');\n        }\n\n        /**\n         * experimental camera bobbing\n         */\n    }, {\n        key: 'breathe',\n        value: function breathe() {\n            var pos = this.camera.position;\n            var x = pos.x,\n                y = pos.y,\n                z = pos.z;\n            var rate = 0.0005 * this.bob || 1;\n            if (y > 0.6) {\n                this.bob = -1;\n            } else if (y < -0.6) {\n                this.bob = 1;\n            }\n            //pos.x += rate;\n            pos.y += rate;\n            pos.z += rate;\n        }\n    }, {\n        key: 'getThree',\n        value: function getThree() {\n            if (this.THREE === Loop.prototype.THREE && typeof window === 'object' && window.THREE) {\n                return this.THREE = window.THREE;\n            }\n            return false;\n        }\n\n        /**\n         * attach to the DOM\n         * @returns {THREE.WebGLRenderer}\n         */\n    }, {\n        key: 'attach',\n        value: function attach() {\n            window.removeEventListener('resize', this.onResize.bind(this), false);\n            window.addEventListener('resize', this.onResize.bind(this), false);\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            element.innerHTML = '';\n            var THREE = this.THREE;\n            var renderer = new THREE.WebGLRenderer({ alpha: true });\n            this.setSize(renderer);\n            //renderer.setClearColor(0xffffff, 0);\n\n            element.appendChild(renderer.domElement);\n\n            this.renderer = renderer;\n            return renderer;\n        }\n\n        /**\n         * higher FOV on lower view widths\n         */\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            this.camera.aspect = this.getAspect();\n            this.camera.fov = Math.max(90 - 30 * (element.offsetWidth / 1200), 55);\n            this.camera.updateProjectionMatrix();\n            this.setSize(this.renderer);\n        }\n    }, {\n        key: 'setSize',\n        value: function setSize(renderer) {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            var width = element.offsetWidth;\n            renderer.setSize(width, HEIGHT);\n        }\n    }, {\n        key: 'getAspect',\n        value: function getAspect() {\n            var element = document.getElementsByClassName(this.elementClass)[0];\n            return element.offsetWidth / HEIGHT;\n        }\n\n        /**\n         * incrementally pan toward the vector given\n         * @param vector\n         */\n    }, {\n        key: 'panToward',\n        value: function panToward(vector) {\n            var maxIncrement = this.panSpeed;\n            this.forAllLoops(function (loop) {\n                var target = loop._target;\n                target.x = target.x + Math.max(Math.min((vector.x - target.x) / 100, maxIncrement), -maxIncrement);\n                target.y = target.y + Math.max(Math.min((vector.y - target.y) / 100, maxIncrement), -maxIncrement);\n                target.z = target.z + Math.max(Math.min((vector.z - target.z) / 100, maxIncrement), -maxIncrement);\n                loop.camera.lookAt(target);\n            });\n        }\n\n        /**\n         * incrementally move the camera to the vector\n         * @param vector\n         */\n    }, {\n        key: 'moveToward',\n        value: function moveToward(vector) {\n            var maxIncrement = this.moveSpeed;\n            this.forAllLoops(function (loop) {\n                var position = loop.camera.position;\n                position.x += Math.max(Math.min(vector.x - position.x, maxIncrement), -maxIncrement);\n                position.y += Math.max(Math.min(vector.y - position.y, maxIncrement), -maxIncrement);\n                position.z += Math.max(Math.min(vector.z - position.z, maxIncrement), -maxIncrement);\n            });\n        }\n\n        /**\n         * setting a target will cause the camera to pan toward it using the pan method above\n         * @param vector\n         * @param panSpeed\n         */\n    }, {\n        key: 'setLookTarget',\n        value: function setLookTarget(vector, panSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.panSpeed = panSpeed || 0.9;\n                loop.panning = vector !== AHEAD;\n                loop.target = vector;\n            });\n        }\n\n        /**\n         * setting a target will cause the camera to move toward it using the incremental method above\n         * @param vector\n         * @param moveSpeed\n         */\n    }, {\n        key: 'setMoveTarget',\n        value: function setMoveTarget(vector, moveSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.moveSpeed = moveSpeed || 0.7;\n                loop.moveTarget = vector;\n                loop.overwatchMoveTarget = null;\n            });\n        }\n    }, {\n        key: 'setOverwatchMoveTarget',\n        value: function setOverwatchMoveTarget(vector, moveSpeed) {\n            this.forAllLoops(function (loop) {\n                loop.moveSpeed = moveSpeed || 0.7;\n                loop.overwatchMoveTarget = vector;\n                loop.moveTarget = null;\n            });\n        }\n    }, {\n        key: 'resetCamera',\n        value: function resetCamera() {\n            var moveSpeed = 0.5;\n            if (this.camera.position.z !== INITIAL_POSITION.z) {\n                moveSpeed = 2.5;\n            }\n            this.setLookTarget(AHEAD, moveSpeed);\n            this.setMoveTarget(INITIAL_POSITION, moveSpeed / 10);\n        }\n    }, {\n        key: 'moveCamera',\n        value: function moveCamera(x, y, z) {\n            if (typeof x === 'object') {\n                return this.moveCamera(x.x, x.y, x.z);\n            }\n            this.forAllLoops(function (loop) {\n                loop.camera.position.x = x;\n                loop.camera.position.y = y;\n                loop.camera.position.z = z;\n            });\n        }\n\n        /**\n         * execute the function on all loops\n         * @param fn {Function}\n         */\n    }, {\n        key: 'forAllLoops',\n        value: function forAllLoops(fn) {\n            if (this.background) {\n                fn(this.background);\n            }\n            if (this.foreground) {\n                fn(this.foreground);\n            }\n            fn(this);\n        }\n    }, {\n        key: 'test',\n        value: function test() {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.setType('4-seam');\n            //with (ball.mesh.rotation) {x=0,y=0,z=0}; ball.rotation = {x:0.00, y:0.00};\n            ball.animate = function () {\n                ball.rotate();\n            };\n            ball.join(this);\n            // Baseball.service.Animator.loop.test();\n        }\n    }, {\n        key: 'testTrajectory',\n        value: function testTrajectory(data) {\n            var ball = new _meshBall.Ball();\n            window.Ball = _meshBall.Ball;\n            window.ball = ball;\n            ball.deriveTrajectory(data || {\n                splay: -35,\n                travelDistance: 135,\n                flyAngle: -15,\n                x: 100,\n                y: 100\n            }, {\n                x: 0, y: 0\n            });\n            ball.join(this);\n        }\n    }]);\n\n    return Loop;\n})();\n\nvar HEIGHT = 700;\nLoop.VERTICAL_CORRECTION = VERTICAL_CORRECTION;\nLoop.INITIAL_CAMERA_DISTANCE = INITIAL_CAMERA_DISTANCE;\nLoop.prototype.THREE = {};\nLoop.prototype.constructors = {\n    Ball: _meshBall.Ball,\n    Mound: _meshMound.Mound,\n    Field: _meshField.Field\n};\n\nexports.Loop = Loop;\n\n},{\"./Shaders/SkyShader\":10,\"./mesh/Ball\":12,\"./mesh/Base\":13,\"./mesh/BattersEye\":14,\"./mesh/Field\":15,\"./mesh/Grass\":16,\"./mesh/HomeDirt\":17,\"./mesh/Mound\":19,\"./mesh/Sky\":20,\"./mesh/Sun\":21,\"./mesh/Wall\":22,\"./scene/lighting\":23,\"baseball/Services/Animator\":24}],10:[function(require,module,exports){\n/**\n * @author zz85 / https://github.com/zz85\n *\n * Based on \"A Practical Analytic Model for Daylight\"\n * aka The Preetham Model, the de facto standard analytic skydome model\n * http://www.cs.utah.edu/~shirley/papers/sunsky/sunsky.pdf\n *\n * First implemented by Simon Wallner\n * http://www.simonwallner.at/projects/atmospheric-scattering\n *\n * Improved by Martin Upitis\n * http://blenderartists.org/forum/showthread.php?245954-preethams-sky-impementation-HDR\n *\n * Three.js integration by zz85 http://twitter.com/blurspline\n */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar loadSkyShader = function loadSkyShader() {\n    THREE.ShaderLib['sky'] = {\n\n        uniforms: {\n            luminance: { type: \"f\", value: 1 },\n            turbidity: { type: \"f\", value: 2 },\n            reileigh: { type: \"f\", value: 1 },\n            mieCoefficient: { type: \"f\", value: 0.005 },\n            mieDirectionalG: { type: \"f\", value: 0.8 },\n            sunPosition: { type: \"v3\", value: new THREE.Vector3() }\n        },\n\n        vertexShader: [\"varying vec3 vWorldPosition;\", \"void main() {\", \"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\", \"vWorldPosition = worldPosition.xyz;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n\n        fragmentShader: [\"uniform sampler2D skySampler;\", \"uniform vec3 sunPosition;\", \"varying vec3 vWorldPosition;\", \"vec3 cameraPos = vec3(0., 0., 0.);\", \"// uniform sampler2D sDiffuse;\", \"// const float turbidity = 10.0; //\", \"// const float reileigh = 2.; //\", \"// const float luminance = 1.0; //\", \"// const float mieCoefficient = 0.005;\", \"// const float mieDirectionalG = 0.8;\", \"uniform float luminance;\", \"uniform float turbidity;\", \"uniform float reileigh;\", \"uniform float mieCoefficient;\", \"uniform float mieDirectionalG;\", \"// constants for atmospheric scattering\", \"const float e = 2.71828182845904523536028747135266249775724709369995957;\", \"const float pi = 3.141592653589793238462643383279502884197169;\", \"const float n = 1.0003; // refractive index of air\", \"const float N = 2.545E25; // number of molecules per unit volume for air at\", \"// 288.15K and 1013mb (sea level -45 celsius)\", \"const float pn = 0.035;\t// depolatization factor for standard air\", \"// wavelength of used primaries, according to preetham\", \"const vec3 lambda = vec3(680E-9, 550E-9, 450E-9);\", \"// mie stuff\", \"// K coefficient for the primaries\", \"const vec3 K = vec3(0.686, 0.678, 0.666);\", \"const float v = 4.0;\", \"// optical length at zenith for molecules\", \"const float rayleighZenithLength = 8.4E3;\", \"const float mieZenithLength = 1.25E3;\", \"const vec3 up = vec3(0.0, 1.0, 0.0);\", \"const float EE = 1000.0;\", \"const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\", \"// 66 arc seconds -> degrees, and the cosine of that\", \"// earth shadow hack\", \"const float cutoffAngle = pi/1.95;\", \"const float steepness = 1.5;\", \"vec3 totalRayleigh(vec3 lambda)\", \"{\", \"return (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn));\", \"}\",\n\n        // see http://blenderartists.org/forum/showthread.php?321110-Shaders-and-Skybox-madness\n        \"// A simplied version of the total Reayleigh scattering to works on browsers that use ANGLE\", \"vec3 simplifiedRayleigh()\", \"{\", \"return 0.0005 / vec3(94, 40, 18);\",\n        // return 0.00054532832366 / (3.0 * 2.545E25 * pow(vec3(680E-9, 550E-9, 450E-9), vec3(4.0)) * 6.245);\n        \"}\", \"float rayleighPhase(float cosTheta)\", \"{\t \", \"return (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));\", \"//\treturn (1.0 / (3.0*pi)) * (1.0 + pow(cosTheta, 2.0));\", \"//\treturn (3.0 / 4.0) * (1.0 + pow(cosTheta, 2.0));\", \"}\", \"vec3 totalMie(vec3 lambda, vec3 K, float T)\", \"{\", \"float c = (0.2 * T ) * 10E-18;\", \"return 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;\", \"}\", \"float hgPhase(float cosTheta, float g)\", \"{\", \"return (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));\", \"}\", \"float sunIntensity(float zenithAngleCos)\", \"{\", \"return EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));\", \"}\", \"// float logLuminance(vec3 c)\", \"// {\", \"// \treturn log(c.r * 0.2126 + c.g * 0.7152 + c.b * 0.0722);\", \"// }\", \"// Filmic ToneMapping http://filmicgames.com/archives/75\", \"float A = 0.15;\", \"float B = 0.50;\", \"float C = 0.10;\", \"float D = 0.20;\", \"float E = 0.02;\", \"float F = 0.30;\", \"float W = 1000.0;\", \"vec3 Uncharted2Tonemap(vec3 x)\", \"{\", \"return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\", \"}\", \"void main() \", \"{\", \"float sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\", \"// luminance =  1.0 ;// vWorldPosition.y / 450000. + 0.5; //sunPosition.y / 450000. * 1. + 0.5;\", \"// gl_FragColor = vec4(sunfade, sunfade, sunfade, 1.0);\", \"float reileighCoefficient = reileigh - (1.0* (1.0-sunfade));\", \"vec3 sunDirection = normalize(sunPosition);\", \"float sunE = sunIntensity(dot(sunDirection, up));\", \"// extinction (absorbtion + out scattering) \", \"// rayleigh coefficients\",\n\n        // \"vec3 betaR = totalRayleigh(lambda) * reileighCoefficient;\",\n        \"vec3 betaR = simplifiedRayleigh() * reileighCoefficient;\", \"// mie coefficients\", \"vec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;\", \"// optical length\", \"// cutoff angle at 90 to avoid singularity in next formula.\", \"float zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\", \"float sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\", \"float sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\", \"// combined extinction factor\t\", \"vec3 Fex = exp(-(betaR * sR + betaM * sM));\", \"// in scattering\", \"float cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);\", \"float rPhase = rayleighPhase(cosTheta*0.5+0.5);\", \"vec3 betaRTheta = betaR * rPhase;\", \"float mPhase = hgPhase(cosTheta, mieDirectionalG);\", \"vec3 betaMTheta = betaM * mPhase;\", \"vec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex),vec3(1.5));\", \"Lin *= mix(vec3(1.0),pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up, sunDirection),5.0),0.0,1.0));\", \"//nightsky\", \"vec3 direction = normalize(vWorldPosition - cameraPos);\", \"float theta = acos(direction.y); // elevation --> y-axis, [-pi/2, pi/2]\", \"float phi = atan(direction.z, direction.x); // azimuth --> x-axis [-pi/2, pi/2]\", \"vec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);\", \"// vec3 L0 = texture2D(skySampler, uv).rgb+0.1 * Fex;\", \"vec3 L0 = vec3(0.1) * Fex;\", \"// composition + solar disc\", \"//if (cosTheta > sunAngularDiameterCos)\", \"float sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\", \"// if (normalize(vWorldPosition - cameraPos).y>0.0)\", \"L0 += (sunE * 19000.0 * Fex)*sundisk;\", \"vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));\", \"vec3 texColor = (Lin+L0);   \", \"texColor *= 0.04 ;\", \"texColor += vec3(0.0,0.001,0.0025)*0.3;\", \"float g_fMaxLuminance = 1.0;\", \"float fLumScaled = 0.1 / luminance;     \", \"float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled); \", \"float ExposureBias = fLumCompressed;\", \"vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);\", \"vec3 color = curr*whiteScale;\", \"vec3 retColor = pow(color,vec3(1.0/(1.2+(1.2*sunfade))));\", \"gl_FragColor.rgb = retColor;\", \"gl_FragColor.a = 1.0;\", \"}\"].join(\"\\n\")\n    };\n\n    THREE.Sky = function () {\n\n        var skyShader = THREE.ShaderLib[\"sky\"];\n        var skyUniforms = THREE.UniformsUtils.clone(skyShader.uniforms);\n\n        var skyMat = new THREE.ShaderMaterial({\n            fragmentShader: skyShader.fragmentShader,\n            vertexShader: skyShader.vertexShader,\n            uniforms: skyUniforms,\n            side: THREE.BackSide\n        });\n\n        var skyGeo = new THREE.SphereBufferGeometry(450000, 32, 15);\n        var skyMesh = new THREE.Mesh(skyGeo, skyMat);\n\n        // Expose variables\n        this.mesh = skyMesh;\n        this.uniforms = skyUniforms;\n    };\n};\n\nexports.loadSkyShader = loadSkyShader;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _Loop = require('../Loop');\n\n/**\n * Each class should adhere to this pattern.\n * When a scene object has been positioned correctly and its trajectory set,\n * it should use ::join to attach itself to the scene.\n *\n * While attached, the animate method will be called on each frame.\n * Typically the animate method can run through the trajectory queue and then\n * detach itself. @see Ball\n *\n * For static meshes the animate method will do nothing, leaving the mesh permanently attached.\n */\n\nvar AbstractMesh = (function () {\n    function AbstractMesh() {\n        _classCallCheck(this, AbstractMesh);\n    }\n\n    /**\n     * since we are using (0, 0, 0) vector for the center of the strike zone, the actual ground level will be offset\n     * downward\n     * @type {number}\n     */\n\n    _createClass(AbstractMesh, [{\n        key: 'attach',\n\n        /**\n         * attach and detach should be used to maintain the correct object list\n         * todo use the built in object list of the scene object\n         */\n        value: function attach() {\n            var objects = this.loop.objects;\n            if (objects.indexOf(this) === -1) {\n                objects.push(this);\n            }\n            this.loop.scene.add(this.mesh);\n        }\n    }, {\n        key: 'detach',\n        value: function detach() {\n            var objects = this.loop.objects;\n            var index = objects.indexOf(this);\n            if (index !== -1) {\n                this.loop.objects.splice(index, 1);\n            }\n            this.loop.scene.remove(this.mesh);\n        }\n    }, {\n        key: 'join',\n        value: function join(loop) {\n            this.loop = loop || this.loop;\n            if (this.loop instanceof _Loop.Loop) {\n                this.attach();\n            }\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return AbstractMesh;\n})();\n\nAbstractMesh.WORLD_BASE_Y = -4;\n\nexports.AbstractMesh = AbstractMesh;\n\n},{\"../Loop\":9}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nvar _Indicator = require('./Indicator');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\n/**\n * on the DOM the pitch zone is 200x200 pixels\n * here we scale the strike zone to 4.2 units (feet)\n * for display purposes. It is only approximately related to actual pitch zone dimensions.\n * @type {number}\n */\nvar SCALE = 2.1 / 100;\n\nvar INDICATOR_DEPTH = -5;\n\nvar Ball = (function (_AbstractMesh) {\n    _inherits(Ball, _AbstractMesh);\n\n    /**\n     *\n     * @param loop\n     * @param trajectory {Array<Vector3>} incremental vectors applied each frame\n     * e.g. for 1 second of flight time there should be 60 incremental vectors\n     */\n\n    function Ball(loop, trajectory) {\n        _classCallCheck(this, Ball);\n\n        _get(Object.getPrototypeOf(Ball.prototype), 'constructor', this).call(this);\n        if (!(loop instanceof _Loop.Loop) && loop instanceof Array) {\n            trajectory = loop;\n        }\n        this.hasIndicator = false;\n        this.trajectory = trajectory ? trajectory : [];\n        this.breakingTrajectory = [];\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n        this.setType('4-seam', 1);\n        this.bounce = 1;\n    }\n\n    _createClass(Ball, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            /** @see threex.sportballs */\n            var baseURL = 'public/';\n            var THREE = window.THREE;\n            var loader = new THREE.TextureLoader();\n            var textureColor = loader.load(baseURL + 'images/BaseballColor.jpg');\n            var textureBump = loader.load(baseURL + 'images/BaseballBump.jpg');\n            var geometry = new THREE.SphereGeometry(0.36, 32, 16); // real scale is 0.12\n            var material = new THREE.MeshPhongMaterial({\n                map: textureColor,\n                bumpMap: textureBump,\n                bumpScale: 0.01\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n\n        /**\n         * Leave an indicator when crossing the home plate front plane,\n         * and rotate while moving (default 1000 RPM)\n         */\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var frame = this.trajectory.shift(),\n                pos = this.mesh.position;\n\n            if (frame) {\n                pos.x += frame.x;\n                pos.y += frame.y * this.bounce;\n                pos.z += frame.z;\n                if (pos.y < _AbstractMesh2.AbstractMesh.WORLD_BASE_Y) {\n                    this.bounce *= -1;\n                }\n                if (frame.x + frame.y + frame.z !== 0) {\n                    this.rotate();\n                }\n            }\n            if (pos.z > INDICATOR_DEPTH && !this.hasIndicator) {\n                this.spawnIndicator();\n            }\n            if (!frame) {\n                this.detach();\n                this.loop.resetCamera();\n            }\n        }\n    }, {\n        key: 'setType',\n        value: function setType(type, handednessScalar) {\n            var rpm = _baseballUtilityHelper.helper.pitchDefinitions[type][4];\n            var rotationAngle = _baseballUtilityHelper.helper.pitchDefinitions[type][3];\n            this.setRotation(rpm, rotationAngle * (handednessScalar || 1));\n        }\n    }, {\n        key: 'rotate',\n        value: function rotate() {\n            var rotation = this.rotation;\n            var meshRotation = this.mesh.rotation;\n            meshRotation.x += rotation.x;\n            meshRotation.y += rotation.y;\n        }\n    }, {\n        key: 'setRotation',\n        value: function setRotation(rpm, rotationAngle) {\n            this.RPM = rpm;\n            this.RPS = this.RPM / 60;\n            var rotationalIncrement = this.RP60thOfASecond = this.RPS / 60;\n\n            // calculate rotational components\n            // +x is CCW along x axis increasing\n            // +y is CW along y axis increasing\n            // +z (unused) is CW along z axis increasing\n\n            // 0   --> x:1 y:0\n            // 45  --> x:+ y:+\n            // 90  --> x:0 y:1\n            // 180 --> x:-1 y:0\n\n            var xComponent = rotationalIncrement * Math.cos(rotationAngle / 180 * Math.PI);\n            var yComponent = rotationalIncrement * Math.sin(rotationAngle / 180 * Math.PI);\n\n            this.rotation = {\n                x: xComponent * 360 * Math.PI / 180,\n                y: yComponent * 360 * Math.PI / 180\n            };\n        }\n    }, {\n        key: 'exportPositionTo',\n        value: function exportPositionTo(mesh) {\n            mesh.position.x = this.mesh.position.x;\n            mesh.position.y = this.mesh.position.y;\n            mesh.position.z = this.mesh.position.z;\n        }\n    }, {\n        key: 'spawnIndicator',\n        value: function spawnIndicator() {\n            if (this.hasIndicator) {\n                return;\n            }\n            this.hasIndicator = true;\n            var indicator = new _Indicator.Indicator();\n            indicator.mesh.position.x = this.mesh.position.x;\n            indicator.mesh.position.y = this.mesh.position.y;\n            indicator.mesh.position.z = this.mesh.position.z;\n            indicator.join(this.loop.background);\n        }\n    }, {\n        key: 'derivePitchingTrajectory',\n        value: function derivePitchingTrajectory(game) {\n            this.setType(game.pitchInFlight.name, game.pitcher.throws === 'right' ? 1 : -1);\n            var top = 200 - game.pitchTarget.y,\n                left = game.pitchTarget.x,\n                breakTop = 200 - game.pitchInFlight.y,\n                breakLeft = game.pitchInFlight.x,\n                flightTime = _baseballServicesMathinator.Mathinator.getFlightTime(game.pitchInFlight.velocity, _baseballUtilityHelper.helper.pitchDefinitions[game.pitchInFlight.name][2]);\n\n            var scale = SCALE;\n            var origin = {\n                x: game.pitcher.throws == 'left' ? 1.5 : -1.5,\n                y: _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 6,\n                z: -60.5 // mound distance\n            };\n            this.mesh.position.x = origin.x;\n            this.mesh.position.y = origin.y;\n            this.mesh.position.z = origin.z;\n\n            var ARC_APPROXIMATION_Y_ADDITIVE = 38; // made up number\n            var terminus = {\n                x: (left - 100) * scale,\n                y: (100 - top + 2 * ARC_APPROXIMATION_Y_ADDITIVE) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: INDICATOR_DEPTH\n            };\n            var breakingTerminus = {\n                x: (breakLeft - 100) * scale,\n                y: (100 - breakTop) * scale + _Loop.Loop.VERTICAL_CORRECTION,\n                z: INDICATOR_DEPTH\n            };\n\n            var lastPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            },\n                lastBreakingPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            };\n\n            var frames = [],\n                breakingFrames = [],\n                frameCount = flightTime * 60 | 0,\n                counter = frameCount * 1.08 | 0,\n                frame = 0;\n\n            var xBreak = breakingTerminus.x - terminus.x,\n                yBreak = breakingTerminus.y - terminus.y;\n            var breakingDistance = Math.sqrt(Math.pow(xBreak, 2) + Math.pow(yBreak, 2));\n            /**\n             * @type {number} 1.0+, an expression of how late the pitch breaks\n             */\n            var breakingLateness = breakingDistance / (2 * ARC_APPROXIMATION_Y_ADDITIVE) / scale,\n                breakingLatenessMomentumExponent = 0.2 + Math.pow(0.45, breakingLateness);\n\n            while (counter--) {\n                var progress = ++frame / frameCount;\n\n                // linear position\n                var position = {\n                    x: origin.x + (terminus.x - origin.x) * progress,\n                    y: origin.y + (terminus.y - origin.y) * progress,\n                    z: origin.z + (terminus.z - origin.z) * progress\n                };\n                // linear breaking position\n                var breakingInfluencePosition = {\n                    x: origin.x + (breakingTerminus.x - origin.x) * progress,\n                    y: origin.y + (breakingTerminus.y - origin.y) * progress,\n                    z: origin.z + (breakingTerminus.z - origin.z) * progress\n                };\n                if (progress > 1) {\n                    momentumScalar = 1 - Math.pow(progress, breakingLateness);\n                } else {\n                    var momentumScalar = Math.pow(1 - progress, breakingLatenessMomentumExponent);\n                }\n                var breakingScalar = 1 - momentumScalar,\n                    scalarSum = momentumScalar + breakingScalar;\n                // adjustment toward breaking ball position\n                var breakingPosition = {\n                    x: (position.x * momentumScalar + breakingInfluencePosition.x * breakingScalar) / scalarSum,\n                    y: (position.y * momentumScalar + breakingInfluencePosition.y * breakingScalar) / scalarSum,\n                    z: (position.z * momentumScalar + breakingInfluencePosition.z * breakingScalar) / scalarSum\n                };\n                var increment = {\n                    x: position.x - lastPosition.x,\n                    y: position.y - lastPosition.y,\n                    z: position.z - lastPosition.z\n                };\n                var breakingIncrement = {\n                    x: breakingPosition.x - lastBreakingPosition.x,\n                    y: breakingPosition.y - lastBreakingPosition.y,\n                    z: breakingPosition.z - lastBreakingPosition.z\n                };\n\n                lastPosition = position;\n                lastBreakingPosition = breakingPosition;\n\n                breakingFrames.push(breakingIncrement);\n                frames.push(increment);\n            }\n\n            var pause = 60;\n            while (pause--) {\n                breakingFrames.push({ x: 0, y: 0, z: 0 });\n                frames.push({ x: 0, y: 0, z: 0 });\n            }\n\n            this.breakingTrajectory = breakingFrames;\n            this.trajectory = frames;\n            return frames;\n        }\n    }, {\n        key: 'deriveTrajectory',\n        value: function deriveTrajectory(result, pitch) {\n            var dragScalarApproximation = {\n                distance: 1,\n                apexHeight: 0.57,\n                airTime: 0.96\n            };\n\n            var flyAngle = result.flyAngle,\n                distance = Math.abs(result.travelDistance),\n                scalar = result.travelDistance < 0 ? -1 : 1,\n                flightScalar = flyAngle < 7 ? -1 : 1,\n                splay = result.splay; // 0 is up the middle\n\n            if (flightScalar < 0 && result.travelDistance > 0) {\n                distance = Math.max(90, distance);\n            }\n\n            flyAngle = 1 + Math.abs(flyAngle); // todo why plus 1?\n            if (flyAngle > 90) flyAngle = 180 - flyAngle;\n\n            // velocity in m/s, I think\n            var velocity = dragScalarApproximation.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * flyAngle / 180));\n            var velocityVerticalComponent = Math.sin(_baseballServicesMathinator.Mathinator.RADIAN * flyAngle) * velocity;\n            // in feet\n            var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * dragScalarApproximation.apexHeight;\n            // in seconds\n            var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * dragScalarApproximation.airTime; // 2x freefall equation\n\n            this.airTime = airTime;\n\n            var scale = SCALE;\n\n            var origin = {\n                x: pitch.x + result.x - 100,\n                y: pitch.y + result.y - 100,\n                z: 0\n            };\n\n            this.mesh.position.x = origin.x * scale;\n            this.mesh.position.y = origin.y * scale;\n            this.mesh.position.z = origin.z;\n\n            var extrema = {\n                x: Math.sin(splay / 180 * Math.PI) * distance,\n                y: apexHeight,\n                z: -Math.cos(splay / 180 * Math.PI) * distance\n            };\n\n            var frames = [],\n                frameCount = airTime * 60 | 0,\n                counter = frameCount,\n                frame = 0;\n\n            var lastHeight = 0;\n\n            while (counter--) {\n                var progress = ++frame / frameCount,\n                    percent = progress * 100;\n\n                // this equation is approximate\n                if (flightScalar < 0) {\n                    var currentDistance = progress * distance;\n                    y = (origin.y * scale + apexHeight * Math.abs(Math.sin(3 * Math.pow(currentDistance, 1.1) / distance * Math.PI / 2))) * ((100 - percent) / 100) + _AbstractMesh2.AbstractMesh.WORLD_BASE_Y * progress;\n                } else {\n                    var y = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 2) * apexHeight;\n                }\n\n                frames.push({\n                    x: extrema.x / frameCount,\n                    y: y - lastHeight,\n                    z: extrema.z / frameCount\n                });\n\n                lastHeight = y;\n            }\n            this.trajectory = frames;\n            return frames;\n        }\n    }]);\n\n    return Ball;\n})(_AbstractMesh2.AbstractMesh);\n\nBall.prototype.DEFAULT_RPM = 1000;\nBall.prototype.RPM = 1000;\nBall.prototype.RPS = 1000 / 60;\nBall.prototype.RP60thOfASecond = 1000 / 60 / 60;\nBall.prototype.rotation = {\n    x: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180, // in radians per 60th of a second\n    y: Ball.prototype.RP60thOfASecond * 360 * Math.PI / 180\n};\n\nexports.Ball = Ball;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11,\"./Indicator\":18,\"baseball/Services/Mathinator\":27,\"baseball/Utility/helper\":35}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Base = (function (_AbstractMesh) {\n    _inherits(Base, _AbstractMesh);\n\n    function Base(loop, base) {\n        _classCallCheck(this, Base);\n\n        _get(Object.getPrototypeOf(Base.prototype), 'constructor', this).call(this);\n        this.base = base;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Base, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xFFFFFF\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(3, 0.3, 3, 8, 8, 8), material);\n\n            mesh.rotation.x = -0 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 0 / 180 * Math.PI;\n\n            switch (this.base) {\n                case 'first':\n                    mesh.position.x = 64;\n                    mesh.position.z = -64;\n                    break;\n                case 'second':\n                    mesh.position.x = 0;\n                    mesh.position.z = -121;\n                    break;\n                case 'third':\n                    mesh.position.x = -64;\n                    mesh.position.z = -64;\n                    break;\n                case 'home':\n                    mesh.position.x = 0;\n                    mesh.position.z = 0;\n\n                    mesh.rotation.z = 0;\n            }\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.5;\n            mesh.position.z -= 0;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Base;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Base = Base;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar BattersEye = (function (_AbstractMesh) {\n    _inherits(BattersEye, _AbstractMesh);\n\n    function BattersEye(loop) {\n        _classCallCheck(this, BattersEye);\n\n        _get(Object.getPrototypeOf(BattersEye.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(BattersEye, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(200, 45, 4, 16, 16, 16), material);\n\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= 310;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return BattersEye;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.BattersEye = BattersEye;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Field = (function (_AbstractMesh) {\n    _inherits(Field, _AbstractMesh);\n\n    function Field(loop) {\n        _classCallCheck(this, Field);\n\n        _get(Object.getPrototypeOf(Field.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Field, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(155, 155, 32, 32), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = -102;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Field;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Field = Field;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Grass = (function (_AbstractMesh) {\n    _inherits(Grass, _AbstractMesh);\n\n    function Grass(loop, infield) {\n        _classCallCheck(this, Grass);\n\n        _get(Object.getPrototypeOf(Grass.prototype), 'constructor', this).call(this);\n        this.infield = infield;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Grass, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: this.infield ? 0x70934A : 0x476532\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(this.infield ? 80 : 8000, this.infield ? 80 : 8000, 16, 16), material);\n\n            if (this.infield) {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.2;\n                mesh.position.z = -62;\n            } else {\n                mesh.rotation.x = -90 / 180 * Math.PI;\n                mesh.rotation.y = 0;\n                mesh.rotation.z = 45 / 180 * Math.PI;\n\n                mesh.position.x = 0;\n                mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y - 0.2;\n                mesh.position.z = -570;\n            }\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Grass;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Grass = Grass;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar HomeDirt = (function (_AbstractMesh) {\n    _inherits(HomeDirt, _AbstractMesh);\n\n    function HomeDirt(loop) {\n        _classCallCheck(this, HomeDirt);\n\n        _get(Object.getPrototypeOf(HomeDirt.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(HomeDirt, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.PlaneGeometry(8, 8, 16, 16), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y;\n            mesh.position.z = 0;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return HomeDirt;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.HomeDirt = HomeDirt;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Indicator = (function (_AbstractMesh) {\n    _inherits(Indicator, _AbstractMesh);\n\n    function Indicator(loop) {\n        _classCallCheck(this, Indicator);\n\n        _get(Object.getPrototypeOf(Indicator.prototype), 'constructor', this).call(this);\n        var n = 60;\n        this.trajectory = [];\n        while (n--) {\n            this.trajectory.push(1);\n        }\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Indicator, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var THREE = window.THREE;\n            var geometry = new THREE.CircleGeometry(0.30, 32);\n            var material = new THREE.MeshPhongMaterial({\n                color: 0xFFFFFF\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            this.trajectory.shift();\n\n            if (!this.trajectory.length) {\n                this.detach();\n            }\n        }\n    }]);\n\n    return Indicator;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Indicator = Indicator;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Mound = (function (_AbstractMesh) {\n    _inherits(Mound, _AbstractMesh);\n\n    function Mound(loop) {\n        _classCallCheck(this, Mound);\n\n        _get(Object.getPrototypeOf(Mound.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Mound, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0xDCB096\n            });\n\n            var mesh = new THREE.Mesh(new THREE.CircleGeometry(9), material);\n\n            mesh.rotation.x = -90 / 180 * Math.PI;\n            mesh.rotation.y = 0;\n            mesh.rotation.z = 45 / 180 * Math.PI;\n\n            mesh.position.x = 0;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0.9;\n            mesh.position.z = -60.5;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Mound;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Mound = Mound;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],20:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Sky = (function (_AbstractMesh) {\n    _inherits(Sky, _AbstractMesh);\n\n    function Sky(loop) {\n        _classCallCheck(this, Sky);\n\n        _get(Object.getPrototypeOf(Sky.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Sky, [{\n        key: 'setUniforms',\n        value: function setUniforms(uniforms) {\n            this.uniforms = uniforms;\n            var sky = this.sky;\n            for (var key in uniforms) {\n                if (uniforms.hasOwnProperty(key)) {\n                    if (!sky.uniforms[key]) {\n                        sky.uniforms[key] = uniforms[key];\n                    }\n                    if (typeof uniforms[key] === 'object') {\n                        sky.uniforms[key].value = uniforms[key].value;\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'getMesh',\n        value: function getMesh() {\n            var uniforms = this.uniforms = {\n                luminance: { type: \"f\", value: 1.00 },\n                turbidity: { type: \"f\", value: 10 },\n                reileigh: { type: \"f\", value: 2.00 },\n                mieCoefficient: { type: \"f\", value: 0.005 },\n                mieDirectionalG: { type: \"f\", value: 0.8 },\n                sunPosition: { type: \"v3\", value: new THREE.Vector3() },\n                inclination: 0.18, // elevation / inclination\n                azimuth: 0.75,\n                sun: false\n            };\n\n            var sky = new THREE.Sky();\n            this.sky = sky;\n            this.mesh = sky.mesh;\n\n            this.setUniforms(uniforms);\n\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Sky;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Sky = Sky;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Sun = (function (_AbstractMesh) {\n    _inherits(Sun, _AbstractMesh);\n\n    function Sun(loop) {\n        _classCallCheck(this, Sun);\n\n        _get(Object.getPrototypeOf(Sun.prototype), 'constructor', this).call(this);\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n        this.targetTime = {\n            h: 0,\n            m: 0\n        };\n        this.time = {\n            h: 0,\n            m: 0\n        };\n    }\n\n    _createClass(Sun, [{\n        key: 'setTargetTime',\n        value: function setTargetTime(hours, minutes) {\n            this.targetTime.h = hours;\n            this.targetTime.m = minutes;\n        }\n    }, {\n        key: 'getMesh',\n        value: function getMesh() {\n            var sun = new THREE.Mesh(new THREE.SphereGeometry(20000, 16, 8), new THREE.MeshBasicMaterial({ color: 0xffffff, wireframe: true }));\n            sun.position.z = -950000; // initialize away from scene\n            sun.position.y = -100000;\n            sun.position.x = -200000;\n            sun.visible = false;\n\n            this.mesh = sun;\n            return this.mesh;\n        }\n\n        /**\n         * @param sky Sky\n         */\n    }, {\n        key: 'derivePosition',\n        value: function derivePosition(sky) {\n            var distance = 400000;\n            var uniforms = sky.uniforms;\n\n            var theta = Math.PI * (uniforms.inclination - 0.5);\n            var phi = 2 * Math.PI * (uniforms.azimuth - 0.5);\n\n            var mesh = this.mesh;\n\n            mesh.position.x = distance * Math.cos(phi);\n            mesh.position.y = distance * Math.sin(phi) * Math.sin(theta);\n            mesh.position.z = distance * Math.sin(phi) * Math.cos(theta);\n\n            mesh.visible = uniforms.sun;\n\n            sky.uniforms.sunPosition.value.copy(mesh.position);\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            if (this.time.h !== this.targetTime.h || this.time.m !== this.targetTime.m) {\n                this.loop.addMinutes(1);\n                this.time.m += 1;\n                if (this.time.m >= 60) {\n                    this.time.h++;\n                    this.time.m -= 60;\n                    this.time.h %= 24;\n                }\n            }\n        }\n    }]);\n\n    return Sun;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Sun = Sun;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar Wall = (function (_AbstractMesh) {\n    _inherits(Wall, _AbstractMesh);\n\n    function Wall(loop, angle) {\n        _classCallCheck(this, Wall);\n\n        _get(Object.getPrototypeOf(Wall.prototype), 'constructor', this).call(this);\n        this.angle = angle;\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join(loop);\n        }\n    }\n\n    _createClass(Wall, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            var material = new THREE.MeshLambertMaterial({\n                color: 0x3F4045\n            });\n\n            var mesh = new THREE.Mesh(new THREE.BoxGeometry(120, 15 | 0, 4, 16, 16, 16), material);\n\n            var radians = this.angle / 180 * Math.PI;\n            mesh.rotation.y = -radians;\n\n            var hypotenuse = 320;\n            var distance = Math.cos(radians) * hypotenuse;\n            var offset = Math.sin(radians) * hypotenuse;\n\n            mesh.position.x += offset;\n            mesh.position.y = _AbstractMesh2.AbstractMesh.WORLD_BASE_Y + 0;\n            mesh.position.z -= distance;\n\n            this.mesh = mesh;\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return Wall;\n})(_AbstractMesh2.AbstractMesh);\n\nexports.Wall = Wall;\n\n},{\"../Loop\":9,\"./AbstractMesh\":11}],23:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar lighting = {\n    addTo: function addTo(scene) {\n        var light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1.0);\n        scene.add(light);\n        var sun = new THREE.DirectionalLight(0xffffbb, 0.45);\n        light.position.set(-1, 1, 1);\n        this.light = light;\n        this.sun = sun;\n        scene.add(sun);\n    },\n    setLuminosity: function setLuminosity(level) {\n        this.light.intensity = level;\n        this.sun.intensity = level / 2;\n    }\n};\n\nexports.lighting = lighting;\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/services/_services');\n\nvar _baseballRenderLoop = require('baseball/Render/Loop');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar Animator = function Animator() {\n    this.init();\n    throw new Error('No need to instantiate Animator');\n};\nAnimator.TweenMax = {};\nAnimator.prototype = {\n    identifier: 'Animator',\n    constructor: Animator,\n    /**\n     * console mode disables most animator functions\n     */\n    console: false,\n    TweenMax: {},\n    THREE: {},\n    /**\n     * anything other than webgl will use TweenMax for JS animations\n     */\n    renderingMode: 'webgl',\n    init: function init() {\n        if (Animator.console) return;\n        if (!this.loop && this.renderingMode === 'webgl') {\n            this.beginRender();\n        }\n    },\n    /**\n     * @returns {Loop}\n     */\n    beginRender: function beginRender() {\n        this.loop = new _baseballRenderLoop.Loop('webgl-container');\n        this.background = new _baseballRenderLoop.Loop('webgl-bg-container');\n        this.background.addStaticMeshes();\n\n        this.loop.background = this.background;\n        this.background.foreground = this.loop;\n\n        return this.loop;\n    },\n    /**\n     * @param level {Number} 0 to 1\n     */\n    setLuminosity: function setLuminosity(level) {\n        if (this.console) return;\n        this.loop.lighting.setLuminosity(level);\n        this.background.lighting.setLuminosity(level);\n    },\n    loadTweenMax: function loadTweenMax() {\n        if (this.console || typeof window !== 'object') {\n            Animator.TweenMax = {\n                'set': function set() {},\n                'to': function to() {},\n                'from': function from() {},\n                killAll: function killAll() {}\n            };\n        } else {\n            Animator.TweenMax = window.TweenMax;\n        }\n        return Animator.TweenMax;\n    },\n    TIME_FROM_SET: 2300, //ms\n    TIME_FROM_WINDUP: 3600, //ms\n    HOLD_UP_ALLOWANCE: 0.25, // seconds\n    pitchTarget: null,\n    pitchBreak: null,\n    /**\n     * this is called with $scope context binding\n     * @param callback\n     */\n    updateFlightPath: function updateFlightPath(callback) {\n        if (Animator.console) return;\n\n        if (Animator.renderingMode === 'webgl') {\n            return Animator.renderFlightPath(callback, this);\n        }\n        return Animator.tweenFlightPath(callback, this);\n    },\n    /**\n     * @param callback\n     * @param $scope\n     * animates the pitch's flight path\n     */\n    tweenFlightPath: function tweenFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            top = 200 - game.pitchTarget.y,\n            left = game.pitchTarget.x,\n            breakTop = 200 - game.pitchInFlight.y,\n            breakLeft = game.pitchInFlight.x,\n            $baseballs = $('.baseball'),\n            flightSpeed = 1.3 - 0.6 * (game.pitchInFlight.velocity + 300) / 400,\n            originTop = 50,\n            originLeft = 110 + (game.pitcher.throws == 'left' ? 20 : -20);\n        var pitch = this.pitchTarget = $('.main-area .target .baseball.pitch'),\n            henka = this.pitchBreak = $('.main-area .target .baseball.break'),\n            quarter = flightSpeed / 4;\n\n        var pitchTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 12, 4),\n            targetTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 10, 3);\n\n        var transitions = [pitchTransition(0, 0), pitchTransition(10, 0), pitchTransition(30, 1), pitchTransition(50, 2), targetTransition(100, 3), pitchTransition(100, 3, breakTop, breakLeft)];\n\n        TweenMax.set([pitch, henka], transitions[0]);\n        TweenMax.to([pitch, henka], quarter, transitions[1]);\n        TweenMax.to([pitch, henka], quarter, transitions[2]);\n        TweenMax.to([pitch, henka], quarter, transitions[3]);\n        TweenMax.to(pitch, quarter, transitions[4]);\n        TweenMax.to(henka, quarter, transitions[5]);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback == 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        if (!game.pitchInFlight.x) {\n            $baseballs.addClass('hide');\n        } else {\n            if (game.humanBatting() && Math.random() * 180 > game.batter.skill.offense.eye) {\n                $('.baseball.break').addClass('hide');\n            } else {\n                $('.baseball.break').removeClass('hide');\n            }\n            $('.baseball.pitch').removeClass('hide');\n        }\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\n     * @param callback\n     * @param $scope Angular scope\n     * webgl version of tweenFlightPath\n     */\n    renderFlightPath: function renderFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            flightSpeed = _baseballServices_services.Mathinator.getFlightTime(game.pitchInFlight.velocity, _baseballUtilityHelper.helper.pitchDefinitions[game.pitchInFlight.name][2]);\n\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var ball = new this.loop.constructors.Ball();\n        Animator._ball = ball;\n        ball.derivePitchingTrajectory(game);\n        ball.trajectory = ball.breakingTrajectory;\n        ball.join(this.loop);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback === 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        var $baseballs = $('.baseball');\n        $baseballs.addClass('hide');\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    /**\n     * @param game\n     * @returns {*}\n     * This only animates the flight arc of the ball in play.\n     */\n    animateFieldingTrajectory: function animateFieldingTrajectory(game) {\n        if (Animator.console) return game.swingResult;\n\n        if (this.renderingMode === 'webgl') {\n            Animator.tweenFieldingTrajectory(game, true);\n            return Animator.renderFieldingTrajectory(game);\n        }\n        return Animator.tweenFieldingTrajectory(game);\n    },\n    /**\n     * @param game\n     * @param splayOnly\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\n     * JS/CSS animation\n     */\n    tweenFieldingTrajectory: function tweenFieldingTrajectory(game, splayOnly) {\n        var TweenMax = Animator.loadTweenMax();\n        var ball = $('.splay-indicator-ball');\n        TweenMax.killAll();\n        var result = game.swingResult;\n\n        var linearApproximateDragScalar = {\n            distance: 1,\n            apexHeight: 0.57,\n            airTime: 0.96\n        };\n\n        var angle = result.flyAngle,\n            distance = Math.abs(result.travelDistance),\n            scalar = result.travelDistance < 0 ? -1 : 1;\n\n        _baseballServices_services.Mathinator.memory.bounding = angle < 0;\n        angle = 1 + Math.abs(angle);\n        if (angle > 90) angle = 180 - angle;\n\n        var velocity = linearApproximateDragScalar.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * angle / 180));\n        var velocityVerticalComponent = Math.sin(_baseballServices_services.Mathinator.RADIAN * angle) * velocity;\n        var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * linearApproximateDragScalar.apexHeight;\n        var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * linearApproximateDragScalar.airTime; // 2x freefall equation\n\n        //log('angle', angle, 'vel', velocity, 'apex', apexHeight, 'air', airTime, 'dist', result.travelDistance);\n        var quarter = airTime / 4;\n        var mathinator = new _baseballServices_services.Mathinator();\n        var transitions = [mathinator.transitionalTrajectory(0, quarter, 0, apexHeight, scalar * distance, result.splay), mathinator.transitionalTrajectory(25, quarter, 0), mathinator.transitionalTrajectory(50, quarter, 1), mathinator.transitionalTrajectory(75, quarter, 2), mathinator.transitionalTrajectory(100, quarter, 3)];\n        TweenMax.set(ball, transitions[0]);\n        TweenMax.to(ball, quarter, transitions[1]);\n        TweenMax.to(ball, quarter, transitions[2]);\n        TweenMax.to(ball, quarter, transitions[3]);\n        TweenMax.to(ball, quarter, transitions[4]);\n\n        if (!splayOnly) {\n            ball = $('.indicator.baseball.break').removeClass('hide').show();\n            var time = quarter / 2;\n            transitions = [mathinator.transitionalCatcherPerspectiveTrajectory(0, time, 0, apexHeight, scalar * distance, result.splay, game.pitchInFlight), mathinator.transitionalCatcherPerspectiveTrajectory(12.5, time * 0.75, 0), mathinator.transitionalCatcherPerspectiveTrajectory(25, time * 0.80, 1), mathinator.transitionalCatcherPerspectiveTrajectory(37.5, time * 0.85, 2), mathinator.transitionalCatcherPerspectiveTrajectory(50, time * 0.90, 3), mathinator.transitionalCatcherPerspectiveTrajectory(62.5, time * 0.95, 4), mathinator.transitionalCatcherPerspectiveTrajectory(75, time, 5), mathinator.transitionalCatcherPerspectiveTrajectory(87.5, time, 6), mathinator.transitionalCatcherPerspectiveTrajectory(100, time, 7)];\n            TweenMax.set(ball, transitions[0]);\n            TweenMax.to(ball, time, transitions[1]);\n            TweenMax.to(ball, time, transitions[2]);\n            TweenMax.to(ball, time, transitions[3]);\n            TweenMax.to(ball, time, transitions[4]);\n            TweenMax.to(ball, time, transitions[5]);\n            TweenMax.to(ball, time, transitions[6]);\n            TweenMax.to(ball, time, transitions[7]);\n            TweenMax.to(ball, time, transitions[8]);\n\n            setTimeout(function () {\n                // hack\n                $('.indicator.baseball.break').removeClass('hide').show();\n            }, 50);\n        }\n\n        return game.swingResult;\n    },\n    /**\n     * @param game\n     * @returns {Game.swingResult|*|swingResult|Field.game.swingResult}\n     * WebGL version of tweenFieldingTrajectory\n     */\n    renderFieldingTrajectory: function renderFieldingTrajectory(game) {\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var result = game.swingResult;\n\n        var ball = Animator._ball || new this.loop.constructors.Ball();\n        ball.deriveTrajectory(result, game.pitchInFlight);\n        ball.join(this.loop);\n\n        if (result.thrownOut || result.caught || result.bases) {\n            if (Math.random() < 0.15 && ball.airTime > 1.5 || Math.random() < 0.50 && ball.airTime > 2.5) {\n                //var scale = 1;\n                //if (result.splay > 0) {\n                //    scale = -1;\n                //}\n                this.loop.setLookTarget(ball.mesh.position, 0.3);\n                this.loop.setOverwatchMoveTarget(ball.mesh.position, 0.16);\n            } else {\n                this.loop.setLookTarget(ball.mesh.position, 0.5);\n                this.loop.setMoveTarget({ x: 0, y: 6, z: _baseballRenderLoop.Loop.INITIAL_CAMERA_DISTANCE }, 0.05);\n            }\n        } else if (Math.abs(result.splay) < 60) {\n            this.loop.setLookTarget(ball.mesh.position, 0.5);\n            this.loop.setMoveTarget({ x: 0, y: 6, z: _baseballRenderLoop.Loop.INITIAL_CAMERA_DISTANCE }, 0.05);\n        }\n\n        return game.swingResult;\n    }\n};\n\nfor (var fn in Animator.prototype) {\n    if (Animator.prototype.hasOwnProperty(fn)) {\n        Animator[fn] = Animator.prototype[fn];\n    }\n}\n\nexports.Animator = Animator;\n\n},{\"baseball/Render/Loop\":9,\"baseball/Utility/helper\":35,\"baseball/services/_services\":39}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar pitchDefinitions = _baseballUtilityHelper.helper.pitchDefinitions;\n\n/**\n * For Probability!\n * @constructor\n */\nvar Distribution = function Distribution() {};\n\nvar random = Math.random,\n    min = Math.min,\n    max = Math.max,\n    floor = Math.floor,\n    ceil = Math.ceil,\n    abs = Math.abs,\n    pow = Math.pow,\n    sqrt = Math.sqrt;\n\nDistribution.prototype = {\n    identifier: 'Distribution',\n    constructor: Distribution,\n    /**\n     * @param scale {number}\n     * @returns {number}\n     */\n    chance: function chance(scale) {\n        if (!scale) scale = 1;\n        return random() * scale;\n    },\n    /**\n     * @param fielder {Player}\n     * @returns {boolean}\n     */\n    error: function error(fielder) {\n        return (100 - fielder.skill.defense.fielding) * 0.1 + 3.25 > random() * 100;\n    },\n    /**\n     * @param power\n     * @param flyAngle\n     * @param x {number} batting offset horizontal\n     * @param y {number} batting offset vertical\n     * @returns {number}\n     */\n    landingDistance: function landingDistance(power, flyAngle, x, y) {\n        x = min(5, abs(x) | 0);\n        y = min(5, abs(y) | 0);\n        var goodContactBonus = 8 - sqrt(x * x + y * y);\n\n        var scalar = pow(random(), 1 - goodContactBonus * 0.125);\n\n        return (10 + scalar * 320 + power / 300 + random() * power / 75 * 150) * (1 - abs(flyAngle - 30) / 60);\n    },\n    /**\n     * @param count {{strikes: number, balls: number}}\n     * @returns {{x: number, y: number}}\n     */\n    pitchLocation: function pitchLocation(count) {\n        var x, y;\n        if (random() < 0.5) {\n            x = 50 + floor(random() * 90) - floor(random() * 30);\n        } else {\n            x = 150 + floor(random() * 30) - floor(random() * 90);\n        }\n        y = 30 + (170 - floor(sqrt(random() * 28900)));\n\n        var sum = count.strikes + count.balls + 3;\n\n        x = ((3 + count.strikes) * x + count.balls * 100) / sum;\n        y = ((3 + count.strikes) * y + count.balls * 100) / sum;\n\n        return { x: x, y: y };\n    },\n    /**\n     * swing centering basis\n     * @returns {number}\n     */\n    centralizedNumber: function centralizedNumber() {\n        return 100 + floor(random() * 15) - floor(random() * 15);\n    },\n    /**\n     * @param eye {Player.skill.offense.eye}\n     * @param x\n     * @param y\n     * @param umpire {Umpire}\n     */\n    swingLikelihood: function swingLikelihood(eye, x, y, umpire) {\n        var swingLikelihood = (200 - abs(100 - x) - abs(100 - y)) / 2;\n        if (x < 60 || x > 140 || y < 50 || y > 150) {\n            // ball\n            /** 138 based on avg O-Swing of 30% + 8% for fun, decreased by better eye */\n            swingLikelihood = (swingLikelihood + 138 - eye) / 2 - 15 * umpire.count.balls;\n        } else {\n            /** avg Swing rate of 65% - 8% for laughs, increased by better eye */\n            swingLikelihood = (57 + (2 * swingLikelihood + eye) / 3) / 2;\n        }\n        // higher late in the count\n        return swingLikelihood - 35 + 2 * (umpire.count.balls + 8 * umpire.count.strikes);\n    },\n    /**\n     * @param target {number} 0-200\n     * @param control {number} 0-100\n     * @returns {number}\n     */\n    pitchControl: function pitchControl(target, control) {\n        var effect = (50 - random() * 100) / (1 + control / 100);\n        return min(199.9, max(0.1, target + effect));\n    },\n    /**\n     * @param pitch {Game.pitchInFlight}\n     * @param pitcher {Player}\n     * @param x {number}\n     * @param y {number}\n     * @returns {object|{x: number, y: number}}\n     * 0.5 to 1.5 of the pitch's nominal breaking effect X\n     * 0.5 to 1.5 of the pitch's nominal breaking effect Y, magnified for lower Y\n     */\n    breakEffect: function breakEffect(pitch, pitcher, x, y) {\n        var effect = {};\n        effect.x = floor(x + pitch.breakDirection[0] * (0.50 + 0.5 * random() + pitcher.pitching[pitch.name]['break'] / 200));\n        effect.y = floor(y + pitch.breakDirection[1] * ((0.50 + 0.5 * random() + pitcher.pitching[pitch.name]['break'] / 200) / (0.5 + y / 200)));\n        return effect;\n    },\n    /**\n     * Determine the swing target along an axis\n     * @param target {number} 0-200\n     * @param actual {number} 0-200\n     * @param eye {number} 0-100\n     * @returns {number} 0-200\n     */\n    cpuSwing: function cpuSwing(target, actual, eye) {\n        eye = min(eye, 100); // higher eye would overcompensate here\n        return 100 + (target - 100) * (0.5 + random() * eye / 200) - actual;\n    },\n    /**\n     * Determine the swing scalar\n     * @param eye {number} 0-100\n     * @returns {number}\n     */\n    swing: function swing(eye) {\n        return 100 / (eye + 25 + random() * 50);\n    },\n    /**\n     * @param pitch {Object} game.pitchInFlight\n     * @param catcher {Player}\n     * @param thief {Player}\n     * @param base {Number} 1,2,3,4\n     * @param volitional {boolean} whether the runner decided to steal\n     * @returns {boolean}\n     */\n    stealSuccess: function stealSuccess(pitch, catcher, thief, base, volitional) {\n        var rand = random(),\n            rand2 = random();\n\n        if (base == 4) {\n            rand = rand / 100;\n        }\n\n        var smoothedRand2 = (1 + rand2) / 2;\n\n        var pitchBaseSpeedMultiplier = (pitchDefinitions[pitch.name] || ['', '', 0.6])[2];\n\n        return ((volitional | 0) * 35 + thief.skill.offense.eye + (base * -25 + 45)) * rand + 10 + thief.skill.offense.speed * 2 - thief.fatigue > pitchBaseSpeedMultiplier * pitch.velocity * smoothedRand2 + (catcher.skill.defense.catching + catcher.skill.defense.throwing) * rand2;\n    },\n    /**\n     * @param pitch {Object} game.pitchInFlight\n     * @param catcher {Player}\n     * @param thief {Player}\n     * @param base {Number} 1,2,3,4\n     * @returns {boolean}\n     */\n    willSteal: function willSteal(pitch, catcher, thief, base) {\n        if (base == 4) return false;\n        return random() < 0.15 && this.stealSuccess(pitch, catcher, thief, base, false) && random() < 0.5;\n    }\n};\n\nfor (var fn in Distribution.prototype) {\n    if (Distribution.prototype.hasOwnProperty(fn)) {\n        Distribution[fn] = Distribution.prototype[fn];\n    }\n}\n\nDistribution.main = function () {\n    var ump = {\n        count: {\n            balls: 0,\n            strikes: 0\n        }\n    };\n    while (ump.count.balls < 4) {\n        while (ump.count.strikes < 3) {\n            console.log('S', ump.count.strikes, 'B', ump.count.balls);\n            console.log('middle', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 100, 100, ump) | 0;\n            }));\n            console.log('corner', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 50, 50, ump) | 0;\n            }));\n            console.log('ball', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 15, 15, ump) | 0;\n            }));\n            ump.count.strikes++;\n        }\n        ump.count.balls++;\n        ump.count.strikes = 0;\n    }\n};\n\nexports.Distribution = Distribution;\n\n},{\"baseball/Utility/helper\":35}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Iterator = function Iterator() {};\n\nIterator.prototype = {\n    identifier: 'Iterator',\n    constructor: Iterator,\n    each: function each(collection, map) {\n        var keys, i;\n        if (collection instanceof Array) {\n            for (i = 0; i < collection.length; i++) {\n                map(i, collection[i]);\n            }\n        } else {\n            keys = Object.keys(collection);\n            for (i = 0; i < keys.length; i++) {\n                map(keys[i], collection[keys[i]]);\n            }\n        }\n    }\n};\n\nfor (var fn in Iterator.prototype) {\n    if (Iterator.prototype.hasOwnProperty(fn)) {\n        Iterator[fn] = Iterator.prototype[fn];\n    }\n}\n\nexports.Iterator = Iterator;\n\n},{}],27:[function(require,module,exports){\n/**\n * For Math!\n * @constructor\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Mathinator = function Mathinator() {};\n\n/**\n * @param n\n * @returns {number}\n */\nMathinator.square = function (n) {\n    return n * n;\n};\n\nMathinator.prototype = {\n    identifier: 'Mathinator',\n    constructor: Mathinator,\n    /**\n     * CONST\n     */\n    RADIAN: Math.PI / 180,\n    SPLAY_INDICATOR_LEFT: -4,\n    /**\n     * @param offset {{x: number, y: number}}\n     * @param angle {number}\n     * @returns {{x: number, y: number}}\n     */\n    getAngularOffset: function getAngularOffset(offset, angle) {\n        var xScalar = offset.x < 0 ? -1 : 1,\n            yScalar = offset.y < 0 ? -1 : 1;\n        var originalAngle = Math.atan(offset.x / offset.y) / this.RADIAN;\n        var distance = Math.sqrt(offset.x * offset.x + offset.y * offset.y),\n            angledY = yScalar * Math.cos((angle - originalAngle) * this.RADIAN) * distance,\n            angledX = xScalar * Math.sqrt(distance * distance - angledY * angledY);\n        return {\n            x: angledX,\n            y: angledY\n        };\n    },\n    /**\n     * @param a {Array<Number>}\n     * @param b {Array<Number>}\n     * @returns {number}\n     */\n    getPolarDistance: function getPolarDistance(a, b) {\n        var radians = this.RADIAN;\n        return Math.sqrt(a[1] * a[1] + b[1] * b[1] - 2 * a[1] * b[1] * Math.cos(a[0] * radians - b[0] * radians));\n    },\n    /**\n     * @param origin\n     * @param target\n     * @returns {number}\n     * 0 is flat (left-right), positive is clockwise.\n     * We use 125 instead of 180 to account for natural hand-height adjustments\n     * of various swing heights.\n     */\n    battingAngle: function battingAngle(origin, target) {\n        return Math.atan((origin.y - target.y) / (target.x - origin.x)) / Math.PI * 125;\n    },\n    memory: {},\n    /**\n     * @param percent {number} 0-100\n     * @param quarter {number} seconds\n     * @param step {number} 0 and up\n     * @param [givenApexHeight] feet\n     * @param [givenDistance] in feet\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\n     * @returns {{bottom: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\n     */\n    transitionalTrajectory: function transitionalTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle) {\n        if (givenApexHeight) Mathinator.prototype.memory.apexHeight = givenApexHeight;\n        if (givenDistance) Mathinator.prototype.memory.distance = givenDistance;\n        if (givenSplayAngle) Mathinator.prototype.memory.splay = givenSplayAngle;\n        var apexHeight = Mathinator.prototype.memory.apexHeight,\n            distance = Mathinator.prototype.memory.distance,\n            splay = Mathinator.prototype.memory.splay;\n        var bottom, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            quarter *= 4;\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        bottom = Math.cos(splay * radian) * percent / 100 * distance * 95 / 300;\n        left = Math.sin(splay * radian) * percent / 100 * distance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        var apexRatio = Math.sqrt((50 - Math.abs(percent - 50)) / 100) * (1 / 0.7071);\n        if (bounding) {\n            padding = 1;\n            borderWidth = 1;\n        } else {\n            padding = apexRatio * apexHeight / 90 * 15;\n            borderWidth = 2 + apexRatio * 2;\n        }\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n        padding = Math.max(Math.min(padding, 12), 0);\n        return {\n            bottom: bottom,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\n     * @param percent {number} 0-100\n     * @param quarter {number} seconds\n     * @param step {number} 0 and up\n     * @param [givenApexHeight] feet\n     * @param [givenDistance] in feet\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\n     * @param [givenOrigin] Object with x, y -- pitchInFlight\n     * @returns {{top: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\n     */\n    transitionalCatcherPerspectiveTrajectory: function transitionalCatcherPerspectiveTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle, givenOrigin) {\n        var memory = Mathinator.prototype.memory;\n        if (givenApexHeight) memory.apexHeight = givenApexHeight;\n        if (givenDistance) memory.distance = givenDistance;\n        if (givenSplayAngle) memory.splay = givenSplayAngle;\n        if (givenOrigin) memory.origin = givenOrigin;\n        var apexHeight = memory.apexHeight,\n            distance = memory.distance,\n            splay = memory.splay,\n            origin = memory.origin;\n        var top, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        var height = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 1.2) * apexHeight,\n            currentDistance = distance * percent / 100;\n\n        var projection = Math.pow((500 - currentDistance) / 500, 2); // reduction of dimensions due to distance\n\n        top = 200 - origin.y - height * 20 * projection + percent / 100 * (origin.y - 85) * projection;\n        left = origin.x + Math.sin(splay * radian) * (currentDistance * 8) * projection;\n        padding = 12 * projection * projection;\n        borderWidth = Math.max(Math.min(padding / 3, 4), 0);\n\n        top = Math.max(Math.min(top, 500), -10000);\n        left = Math.max(Math.min(left, 10000), -10000);\n        padding = Math.max(Math.min(padding, 24), 1);\n\n        //console.log('height', height|0, apexHeight|0, projection, 'left/pad/border', left|0, padding|0, borderWidth|0, 'top', top);\n\n        return {\n            top: top,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\n     * @param swingResult\n     * @returns {Game.swingResult}\n     */\n    translateSwingResultToStylePosition: function translateSwingResultToStylePosition(swingResult) {\n        // CF HR bottom: 95px, centerline: left: 190px;\n        var bottom, left;\n\n        bottom = Math.cos(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300;\n        left = Math.sin(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n\n        swingResult.bottom = bottom + 'px';\n        swingResult.left = left + 'px';\n        return swingResult;\n    },\n    /**\n     * @param left {number} 0-200\n     * @param top {number} 0-200\n     * @param originLeft {number} 0-200\n     * @param originTop {number} 0-200\n     * @param quarter {number} seconds\n     * @param maxPadding {number} px padding at full size\n     * @param maxBorderWidth {number} px border width at full size\n     * @returns {Function}\n     */\n    pitchTransition: function pitchTransition(top, left, originTop, originLeft, quarter, maxPadding, maxBorderWidth) {\n        /**\n         * @param percent {number} 0-100\n         * @param step {number} 0 and up\n         * @param [breakTop] {number} 0-200 override\n         * @param [breakLeft] {number} 0-200 override\n         * @returns {{top: number, left: number, padding: string, borderWidth: string, transform: string, delay: number, ease: *}}\n         */\n        return function (percent, step, breakTop, breakLeft) {\n            var _top, _left;\n            _top = breakTop || top;\n            _left = breakLeft || left;\n            _top = originTop + Mathinator.square(percent / 100) * (_top - originTop);\n            if (step == 1) {\n                _top -= 2;\n            }\n            if (step == 2) {\n                _top -= 1;\n            }\n            _left = originLeft + Mathinator.square(percent / 100) * (_left - originLeft);\n            var padding = Math.max(Mathinator.square(percent / 100) * maxPadding, 1),\n                borderWidth = Math.max(Mathinator.square(percent / 100) * maxBorderWidth, 1);\n            return {\n                top: _top,\n                left: _left,\n                padding: padding + 'px',\n                borderWidth: borderWidth + 'px',\n                transform: 'translateZ(0)',\n                delay: quarter * step,\n                ease: Linear.easeNone\n            };\n        };\n    },\n    /**\n     * @param distance {number} feet\n     * @param throwing {number} 0-1\n     * @param fielding {number} 0-1\n     * @param intercept {number} approx. -140 to 140\n     * @returns {number} seconds\n     */\n    fielderReturnDelay: function fielderReturnDelay(distance, throwing, fielding, intercept) {\n        return distance / 90 // bip distance (up to 3s+)\n         + 5 * (distance / 310) // worst case time to reach the ball,\n         * Math.min(intercept - 120, 0) / -240 // a good intercept rating will cut the base down to 0\n         + 1 - (0.2 + fielding * 0.8) // gather time (up to 0.8s)\n         + distance / 90 / (0.5 + throwing / 2); // throwing distance (up to 2s)\n    },\n    /**\n     * @param player {Player}\n     * @returns {number} ~2.0\n     */\n    infieldThrowDelay: function infieldThrowDelay(player) {\n        var fielding = player.skill.defense.fielding,\n            throwing = player.skill.defense.throwing;\n        return 3.5 - (fielding + throwing) / 200;\n    },\n    /**\n     * @param speed {number} 0-100\n     * @returns {number} seconds\n     */\n    baseRunningTime: function baseRunningTime(speed) {\n        return 7.0 - speed / 100 * 4.1;\n    },\n    /**\n     * @param x {Number} bat offset\n     * @param y {Number} bat offset\n     * @param angle {Number} batting angle where 0 is horizontal, RHB clockwise increasing\n     * {\n     *   splay: -90 to 90 where 0 is up the middle,\n     *   fly: 0, flat, to 90, vertical pop up\n     * }\n     * @param eye {Number} 0 - 100 skill rating\n     * @returns {{splay: number, fly: number}}\n     */\n    getSplayAndFlyAngle: function getSplayAndFlyAngle(x, y, angle, eye) {\n\n        var splay = -1.5 * x - y * angle / 20;\n        var direction = splay > 0 ? 1 : -1;\n        // additional random splay\n        // todo make it pull only\n        splay += direction * Math.random() * 40 * (100 / (50 + eye));\n\n        return {\n            splay: splay,\n            fly: -3 * y / ((Math.abs(angle) + 25) / 35) // more difficult to hit a pop fly on a angled bat\n        };\n    },\n    /**\n     * @param velocityRating {Number} 0-100\n     * @param velocityScalar {Number} approx 1\n     * @returns {number}\n     */\n    getFlightTime: function getFlightTime(velocityRating, velocityScalar) {\n        return (1.3 - 0.6 * (velocityRating + 300) / 400) / velocityScalar;\n    }\n};\n\nfor (var fn in Mathinator.prototype) {\n    if (Mathinator.prototype.hasOwnProperty(fn)) {\n        Mathinator[fn] = Mathinator.prototype[fn];\n    }\n}\n\nexports.Mathinator = Mathinator;\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":24,\"baseball/Services/Distribution\":25,\"baseball/Services/Iterator\":26,\"baseball/Services/Mathinator\":27}],29:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _TeamJapan = require('./TeamJapan');\n\nvar Provider = (function () {\n    function Provider() {\n        _classCallCheck(this, Provider);\n    }\n\n    _createClass(Provider, [{\n        key: 'assignTeam',\n        value: function assignTeam(game, team, side) {\n            var special = this.teams[team];\n            special.game = game;\n            game.teams[side] = special;\n        }\n    }]);\n\n    return Provider;\n})();\n\nProvider.prototype.teams = {\n    TeamJapan: _TeamJapan.samurai\n};\n\nexports.Provider = Provider;\n\n},{\"./TeamJapan\":30}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballTeamsTrainer = require('baseball/Teams/Trainer');\n\nvar samurai = new _baseballModel_models.Team('no init');\nsamurai.name = 'Japan';\nsamurai.nameJ = '日本';\n\nvar darvish = new _baseballModelPlayer.Player(samurai),\n    johjima = new _baseballModelPlayer.Player(samurai),\n    ogasawara = new _baseballModelPlayer.Player(samurai),\n    nishioka = new _baseballModelPlayer.Player(samurai),\n    kawasaki = new _baseballModelPlayer.Player(samurai),\n    murata = new _baseballModelPlayer.Player(samurai),\n    matsui = new _baseballModelPlayer.Player(samurai),\n    ichiro = new _baseballModelPlayer.Player(samurai),\n    inaba = new _baseballModelPlayer.Player(samurai);\n\nvar matsuzaka = new _baseballModelPlayer.Player(samurai),\n    fukudome = new _baseballModelPlayer.Player(samurai),\n    aoki = new _baseballModelPlayer.Player(samurai),\n    abe = new _baseballModelPlayer.Player(samurai),\n    iwamura = new _baseballModelPlayer.Player(samurai);\n\nvar coach = new _baseballTeamsTrainer.Trainer();\n\ncoach.makePlayer(darvish, 'Yu', 'Darvish', 'ダルビッシュ', '有', 150, { eye: 80, power: 80, speed: 80 }, { catching: 50, fielding: 70, throwing: 100, speed: 80 }, 'right', 'right', 11);\n\ncoach.makePlayer(johjima, 'Kenji', 'Johjima', '城島', '健司', 60, { eye: 90, power: 88, speed: 70 }, { catching: 140, fielding: 95, throwing: 88, speed: 94 }, 'right', 'right', 2);\n\ncoach.makePlayer(ogasawara, 'Michihiro', 'Ogasawara', '小笠原', '道大', 80, { eye: 96, power: 115, speed: 90 }, { catching: 50, fielding: 96, throwing: 85, speed: 70 }, 'left', 'right', 36);\n\ncoach.makePlayer(nishioka, 'Tsuyoshi', 'Nishioka', '西岡', '剛', 80, { eye: 88, power: 75, speed: 92 }, { catching: 90, fielding: 88, throwing: 88, speed: 90 }, 'right', 'right', 7);\n\ncoach.makePlayer(kawasaki, 'Munenori', 'Kawasaki', '川崎', '宗則', 80, { eye: 95, power: 75, speed: 92 }, { catching: 90, fielding: 98, throwing: 90, speed: 110 }, 'left', 'right', 52);\n\ncoach.makePlayer(murata, 'Shuichi', 'Murata', '村田', '修一', 80, { eye: 82, power: 110, speed: 60 }, { catching: 80, fielding: 80, throwing: 90, speed: 90 }, 'right', 'right', 25);\n\ncoach.makePlayer(matsui, 'Hideki', 'Matsui', '秀樹', '松井', 75, { eye: 104, power: 130, speed: 68 }, { catching: 40, fielding: 85, throwing: 70, speed: 60 }, 'left', 'right', 55);\n\ncoach.makePlayer(ichiro, '', 'Ichiro', 'イチロー', '', 115, { eye: 115, power: 48, speed: 99 }, { catching: 80, fielding: 110, throwing: 135, speed: 120 }, 'left', 'right', 51);\n\ncoach.makePlayer(inaba, 'Atsunori', 'Inaba', '稲葉', '篤紀', 80, { eye: 92, power: 95, speed: 75 }, { catching: 50, fielding: 95, throwing: 95, speed: 90 }, 'right', 'right', 41);\n\nsamurai.bench = [darvish, johjima, ogasawara, nishioka, kawasaki, murata, matsui, ichiro, inaba];\n//matsuzaka, fukudome, aoki, abe, iwamura];\nsamurai.manager.makeLineup();\nsamurai.positions = {\n    pitcher: darvish,\n    catcher: johjima,\n\n    first: ogasawara,\n    second: nishioka,\n    short: kawasaki,\n    third: murata,\n\n    left: matsui,\n    center: ichiro,\n    right: inaba\n};\n\nfor (var position in samurai.positions) {\n    if (samurai.positions.hasOwnProperty(position)) {\n        samurai.positions[position].position = position;\n    }\n}\n\nsamurai.lineup = [ichiro, kawasaki, inaba, matsui, ogasawara, johjima, murata, nishioka, darvish];\n\nsamurai.lineup.map(function (player, order) {\n    player.order = order;\n});\n\nexports.samurai = samurai;\n\n},{\"baseball/Model/Player\":5,\"baseball/Model/_models\":8,\"baseball/Teams/Trainer\":31}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar Trainer = (function () {\n    function Trainer() {\n        _classCallCheck(this, Trainer);\n    }\n\n    _createClass(Trainer, [{\n        key: 'makePlayer',\n        value: function makePlayer(player, name, surname, surnameJ, nameJ, pitching, offense, defense, bats, throws, number) {\n            player.hero = true;\n\n            if ('rights' && 0) {\n                surnameJ = '代表';\n                nameJ = '選手';\n                name = 'TEAM';\n                surname = 'JPN';\n            }\n\n            player.name = name + ' ' + surname;\n            player.nameJ = surnameJ + nameJ;\n            player.surname = surname;\n            player.surnameJ = surnameJ;\n\n            player.spaceName(surnameJ, nameJ);\n            player.randomizeSkills(true, true);\n            player.skill.offense = offense;\n            player.skill.defense = defense;\n            player.skill.pitching = pitching;\n            player.bats = bats;\n            player.throws = throws;\n            player.number = number;\n            _baseballServicesIterator.Iterator.each(player.pitching, function (key, value) {\n                player.pitching[key].velocity += pitching / 5 | 0;\n                player.pitching[key]['break'] += pitching / 5 | 0;\n                player.pitching[key].control += pitching / 5 | 0;\n            });\n            player.resetStats(0);\n        }\n    }]);\n\n    return Trainer;\n})();\n\nexports.Trainer = Trainer;\n\n},{\"baseball/Services/Iterator\":26}],32:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nvar Log = function Log() {\n    this.init();\n};\n\nLog.prototype = {\n    game: 'instance of Game',\n    init: function init() {\n        this.stabilized = {\n            pitchRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            },\n            shortRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            }\n        };\n        this.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.shortRecord = {\n            e: [],\n            n: []\n        };\n        this.record = {\n            e: [],\n            n: []\n        };\n    },\n    SINGLE: 'H',\n    DOUBLE: '2B',\n    TRIPLE: '3B',\n    HOMERUN: 'HR',\n    WALK: 'BB',\n    GROUNDOUT: 'GO',\n    FLYOUT: 'FO',\n    LINEOUT: 'LO',\n    RUN: 'R',\n    STRIKEOUT: 'SO',\n    SACRIFICE: 'SAC',\n    REACHED_ON_ERROR: 'ROE',\n    FIELDERS_CHOICE: 'FC',\n    GIDP: '(IDP)',\n    GITP: '(ITP)',\n    STOLEN_BASE: 'SB',\n    CAUGHT_STEALING: 'CS',\n    stabilizeShortRecord: function stabilizeShortRecord() {\n        var rec = this.record.e.slice(0, 6);\n        this.shortRecord.e = rec;\n        this.stabilized.shortRecord.e = rec.concat(['', '', '', '', '', '']).slice(0, 6);\n\n        var rec2 = this.record.n.slice(0, 6);\n        this.shortRecord.n = rec2;\n        this.stabilized.shortRecord.n = rec2.concat(['', '', '', '', '', '']).slice(0, 6);\n    },\n    note: function note(_note, noteJ, only) {\n        //todo fix don't double language when specifying param [only]\n        if (only === 'e') {\n            this.record.e.unshift(_note);\n            this.async(function () {\n                console.log(_note);\n            });\n        } else if (only === 'n') {\n            this.record.n.unshift(noteJ);\n            this.async(function () {\n                console.log(noteJ);\n            });\n        } else {\n            this.record.e.unshift(_note);\n            this.record.n.unshift(noteJ);\n            this.async(function () {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(noteJ);\n                } else {\n                    console.log(_note);\n                }\n            });\n        }\n        this.stabilizeShortRecord();\n    },\n    getBatter: function getBatter(batter) {\n        var order = batter.team.nowBatting;\n        order = ({\n            0: (0, _baseballUtilityText.text)(' 1st'),\n            1: (0, _baseballUtilityText.text)(' 2nd'),\n            2: (0, _baseballUtilityText.text)(' 3rd'),\n            3: (0, _baseballUtilityText.text)(' 4th'),\n            4: (0, _baseballUtilityText.text)(' 5th'),\n            5: (0, _baseballUtilityText.text)(' 6th'),\n            6: (0, _baseballUtilityText.text)(' 7th'),\n            7: (0, _baseballUtilityText.text)(' 8th'),\n            8: (0, _baseballUtilityText.text)(' 9th')\n        })[order];\n        var positions = this.longFormFielder();\n        return (0, _baseballUtilityText.text)('Now batting') + order + _baseballUtilityText.text.comma() + positions[batter.position] + _baseballUtilityText.text.comma() + batter.getUniformNumber() + _baseballUtilityText.text.comma() + batter.getName();\n    },\n    noteBatter: function noteBatter(batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getBatter(batter);\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getBatter(batter);\n        _baseballUtilityText.text.mode = m;\n        this.note(record, recordJ);\n    },\n    getPitchLocationDescription: function getPitchLocationDescription(pitchInFlight, batterIsLefty) {\n        var x = pitchInFlight.x,\n            y = pitchInFlight.y,\n            say = '';\n        var noComma = false,\n            noComma2 = false;\n        var ball = false;\n        if (!batterIsLefty) x = 200 - x;\n        if (x < 50) {\n            say += (0, _baseballUtilityText.text)('way outside');\n            ball = true;\n        } else if (x < 70) {\n            say += (0, _baseballUtilityText.text)('outside');\n        } else if (x < 100) {\n            say += '';\n            noComma = true;\n        } else if (x < 130) {\n            say += '';\n            noComma = true;\n        } else if (x < 150) {\n            say += (0, _baseballUtilityText.text)('inside');\n        } else {\n            say += (0, _baseballUtilityText.text)('way inside');\n            ball = true;\n        }\n        if (say != '') say += _baseballUtilityText.text.comma();\n        if (y < 35) {\n            say += (0, _baseballUtilityText.text)('way low');\n            ball = true;\n        } else if (y < 65) {\n            say += (0, _baseballUtilityText.text)('low');\n        } else if (y < 135) {\n            say += '';\n            noComma2 = true;\n        } else if (y < 165) {\n            say += (0, _baseballUtilityText.text)('high');\n        } else {\n            say += (0, _baseballUtilityText.text)('way high');\n            ball = true;\n        }\n        if (noComma || noComma2) {\n            say = say.split(_baseballUtilityText.text.comma()).join('');\n            if (noComma && noComma2) {\n                say = (0, _baseballUtilityText.text)('down the middle');\n            }\n        }\n        // say = (ball ? 'Ball, ' : 'Strike, ') + say;\n        say = _baseballUtilityText.text.namePitch(pitchInFlight) + _baseballUtilityText.text.comma() + say + _baseballUtilityText.text.stop();\n        return say;\n    },\n    notePitch: function notePitch(pitchInFlight, batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.pop();\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.pop();\n        _baseballUtilityText.text.mode = m;\n    },\n    broadcastCount: function broadcastCount(justOuts) {\n        if (!this.game.umpire) return '';\n        var count = this.game.umpire.count;\n        if (this.lastOuts == 2 && count.outs == 0) {\n            outs = 3 + (0, _baseballUtilityText.text)(' outs');\n        } else {\n            var outs = count.outs + (count.outs == 1 ? (0, _baseballUtilityText.text)(' out') : (0, _baseballUtilityText.text)(' outs'));\n        }\n        this.lastOuts = count.outs;\n        if (justOuts) {\n            return outs + _baseballUtilityText.text.stop();\n        }\n        return count.strikes + '-' + count.balls + ', ' + outs + _baseballUtilityText.text.stop();\n    },\n    broadcastScore: function broadcastScore() {\n        return this.game.teams.away.getName() + ' ' + this.game.tally.away.R + ', ' + this.game.teams.home.getName() + ' ' + this.game.tally.home.R + _baseballUtilityText.text.stop();\n    },\n    broadcastRunners: function broadcastRunners() {\n        var field = this.game.field;\n        var runners = [field.first && (0, _baseballUtilityText.text)('first') || '', field.second && (0, _baseballUtilityText.text)('second') || '', field.third && (0, _baseballUtilityText.text)('third') || ''].filter(function (x) {\n            return x;\n        });\n\n        var runnerCount = 0;\n        runners.map(function (runner) {\n            if (runner) {\n                runnerCount++;\n            }\n        });\n\n        switch (runnerCount) {\n            case 0:\n                return (0, _baseballUtilityText.text)('Bases empty') + _baseballUtilityText.text.stop();\n            case 1:\n                return (0, _baseballUtilityText.text)('Runner on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n            default:\n                return (0, _baseballUtilityText.text)('Runners on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n        }\n    },\n    getSwing: function getSwing(swingResult) {\n        var result = '';\n        if (swingResult.looking) {\n            if (swingResult.strike) {\n                result += (0, _baseballUtilityText.text)('Strike.');\n            } else {\n                result += (0, _baseballUtilityText.text)('Ball.');\n            }\n        } else {\n            if (swingResult.contact) {\n                if (swingResult.foul) {\n                    result += (0, _baseballUtilityText.text)('Fouled off.');\n                } else {\n                    if (swingResult.caught) {\n                        result += (0, _baseballUtilityText.text)('In play.');\n                    } else {\n                        if (swingResult.thrownOut) {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        } else {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        }\n                    }\n                }\n            } else {\n                result += (0, _baseballUtilityText.text)('Swinging strike.');\n            }\n        }\n        var steal = '';\n        if (swingResult.stoleABase) {\n            steal = this.noteStealAttempt(swingResult.stoleABase, true, swingResult.attemptedBase);\n        }\n        if (swingResult.caughtStealing) {\n            steal = this.noteStealAttempt(swingResult.caughtStealing, false, swingResult.attemptedBase);\n        }\n        if (steal) {\n            this.note(steal, steal, _baseballUtilityText.text.mode);\n        }\n        return result + steal;\n    },\n    noteSwing: function noteSwing(swingResult) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getSwing(swingResult);\n        pitchRecord.e[0] += record;\n        stabilized.e[0] += record;\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getSwing(swingResult);\n        pitchRecord.n[0] += recordJ;\n        stabilized.n[0] += recordJ;\n        _baseballUtilityText.text.mode = m;\n        recordJ = stabilized.n[0];\n        record = stabilized.e[0];\n        var giraffe = this;\n        record.indexOf('Previous') !== 0 && this.async(function () {\n            if (record.indexOf('In play') > -1 && record.indexOf('struck out') > -1) {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(recordJ);\n                } else {\n                    console.log(record);\n                }\n            } else {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(giraffe.broadcastCount(), recordJ);\n                } else {\n                    console.log(giraffe.broadcastCount(), record);\n                }\n            }\n        });\n    },\n    async: function async(fn) {\n        if (!this.game.console && !this.game.quickMode) {\n            setTimeout(fn, 100);\n        }\n    },\n    noteStealAttempt: function noteStealAttempt(thief, success, base) {\n        return _baseballUtilityText.text.space() + thief.getName() + _baseballUtilityText.text.comma() + (success ? (0, _baseballUtilityText.text)('stolen base') : (0, _baseballUtilityText.text)('caught stealing')) + _baseballUtilityText.text.space() + '(' + _baseballUtilityText.text.baseShortName(base) + ')' + _baseballUtilityText.text.stop();\n    },\n    noteSubstitution: function noteSubstitution(sub, player) {\n        return this.note(_baseballUtilityText.text.substitution(sub, player, 'e'), _baseballUtilityText.text.substitution(sub, player, 'n'));\n    },\n    getPlateAppearanceResult: function getPlateAppearanceResult(game) {\n        var r = game.swingResult;\n        var record = '';\n        var batter = game.batter.getName();\n        var out = [];\n        if (r.looking) {\n            if (r.strike) {\n                record = batter + (0, _baseballUtilityText.text)(' struck out looking.');\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' walked.');\n            }\n            var steal = '';\n            if (r.stoleABase) {\n                steal = this.noteStealAttempt(r.stoleABase, true, r.attemptedBase);\n            }\n            if (r.caughtStealing) {\n                steal = this.noteStealAttempt(r.caughtStealing, false, r.attemptedBase);\n            }\n            record += steal;\n        } else {\n            if (r.contact) {\n                var fielder = r.fielder,\n                    bases = r.bases,\n                    outBy;\n                if (r.caught) {\n                    if (r.flyAngle < 15) {\n                        outBy = 'line';\n                    } else {\n                        if (['left', 'center', 'right'].indexOf(r.fielder) < 0) {\n                            outBy = 'pop';\n                        } else {\n                            outBy = 'fly';\n                        }\n                    }\n                } else {\n                    if (r.foul) {\n                        // not possible to end PA on foul?\n                    } else {\n                            if (r.error) {\n                                bases = 1;\n                                outBy = 'error';\n                            } else {\n                                if (r.thrownOut) {\n                                    if (Math.random() < 0.5) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'thrown';\n                                    }\n                                } else {\n                                    switch (r.bases) {\n                                        case 1:\n                                        case 2:\n                                        case 3:\n                                            bases = r.bases;\n                                            break;\n                                        case 4:\n                                            bases = 4;\n                                            if (r.splay < -15) {\n                                                fielder = 'left';\n                                            } else if (r.splay < 15) {\n                                                fielder = 'center';\n                                            } else {\n                                                fielder = 'right';\n                                            }\n                                            break;\n                                    }\n                                }\n                                if (r.firstOut) {\n                                    out = out.concat(r.additionalOuts.filter(function (runner) {\n                                        return runner !== 'batter';\n                                    }));\n                                    out.doublePlay = r.doublePlay;\n                                }\n                                if (r.fieldersChoice) {\n                                    out.push(r.fieldersChoice);\n                                    if (r.outs == 3) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'fieldersChoice';\n                                    }\n                                }\n                            }\n                        }\n                }\n                record = _baseballUtilityText.text.contactResult(batter, fielder, bases, outBy, r.outs === 3 ? [] : r.sacrificeAdvances, out);\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' struck out swinging.');\n            }\n        }\n        return record;\n    },\n    notePlateAppearanceResult: function notePlateAppearanceResult(game) {\n        var m = _baseballUtilityText.text.mode,\n            prevJ = (0, _baseballUtilityText.text)('Previous: ', 'n'),\n            prev = (0, _baseballUtilityText.text)('Previous: ', 'e');\n\n        var statement,\n            record = this.record,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n\n        _baseballUtilityText.text.mode = 'e';\n        var result = this.getPlateAppearanceResult(game);\n        record.e.unshift(result);\n        statement = prev + result;\n        pitchRecord.e = [statement];\n        stabilized.e = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = 'n';\n        var resultJ = this.getPlateAppearanceResult(game);\n        record.n.unshift(resultJ);\n        statement = prevJ + resultJ;\n        pitchRecord.n = [statement];\n        stabilized.n = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = m;\n        var giraffe = this;\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(['%c' + resultJ, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            } else {\n                console.log(['%c' + result, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            }\n        });\n    },\n    pointer: 0,\n    stabilized: {\n        pitchRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        },\n        shortRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        }\n    },\n    pitchRecord: {\n        e: [],\n        n: []\n    },\n    shortRecord: {\n        e: [],\n        n: []\n    },\n    record: {\n        e: [],\n        n: []\n    },\n    longFormFielder: function longFormFielder() {\n        return {\n            first: (0, _baseballUtilityText.text)('first baseman'),\n            second: (0, _baseballUtilityText.text)('second baseman'),\n            third: (0, _baseballUtilityText.text)('third baseman'),\n            short: (0, _baseballUtilityText.text)('shortstop'),\n            pitcher: (0, _baseballUtilityText.text)('pitcher'),\n            catcher: (0, _baseballUtilityText.text)('catcher'),\n            left: (0, _baseballUtilityText.text)('left fielder'),\n            center: (0, _baseballUtilityText.text)('center fielder'),\n            right: (0, _baseballUtilityText.text)('right fielder')\n        };\n    }\n};\n\nexports.Log = Log;\n\n},{\"baseball/Utility/text\":36}],33:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballUtilityData = require('baseball/Utility/data');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nexports.data = _baseballUtilityData.data;\nexports.helper = _baseballUtilityHelper.helper;\nexports.Log = _baseballUtilityLog.Log;\nexports.text = _baseballUtilityText.text;\n\n},{\"baseball/Utility/Log\":32,\"baseball/Utility/data\":34,\"baseball/Utility/helper\":35,\"baseball/Utility/text\":36}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar data = {\n    surnames: ['Sato', 'Suzuki', 'Takahashi', 'Tanaka', 'Watanabe', 'Ito', 'Nakamura', 'Kobayashi', 'Yamamoto', 'Kato', 'Yoshida', 'Yamada', 'Sasaki', 'Yamaguchi', 'Matsumoto', 'Inoue', 'Kimura', 'Shimizu', 'Hayashi', 'Saito', 'Saito', 'Yamazaki', 'Nakajima', 'Mori', 'Abe', 'Ikeda', 'Hashimoto', 'Ishikawa', 'Yamashita', 'Ogawa', 'Ishii', 'Hasegawa', 'Goto', 'Okada', 'Kondo', 'Maeda', 'Fujita', 'Endo', 'Aoki', 'Sakamoto', 'Murakami', 'Ota', 'Kaneko', 'Fujii', 'Fukuda', 'Nishimura', 'Miura', 'Takeuchi', 'Nakagawa', 'Okamoto', 'Matsuda', 'Harada', 'Nakano'],\n    surnamesJ: ['佐藤', '鈴木', '高橋', '田中', '渡辺', '伊藤', '中村', '小林', '山本', '加藤', '吉田', '山田', '佐々木', '山口', '松本', '井上', '木村', '清水', '林', '斉藤', '斎藤', '山崎', '中島', '森', '阿部', '池田', '橋本', '石川', '山下', '小川', '石井', '長谷川', '後藤', '岡田', '近藤', '前田', '藤田', '遠藤', '青木', '坂本', '村上', '太田', '金子', '藤井', '福田', '西村', '三浦', '竹内', '中川', '岡本', '松田', '原田', '中野'],\n\n    namesJ: ['匠', 'ヒカル', 'ゆうき', '翔太', '冬馬', '漣', '港区', 'ルイ', '樹', '賢治', '五木', '春', '光一', '宗介', 'こうすけ', '雄太', '大樹', '瑛太',\n    // newer set\n    '宏', '亨', '道夫', '聡', '昭', '茂雄', '勝', '純一', '和夫', '勲', '省三', '隆', '達夫', '正一', '輝夫', '俊夫', '史郎', '勇', '義弘', '良雄', '登', '義明', '正義', '秀夫', '肇', '月', '克己', '正男', '光男', '久', '耕三', '清', '次郎', '正博', '明子', '武', '勉', '晴夫', '裕二', '稔', '障子', '和子', '敦', '茂', '信夫', '恵一', '忠', '高尾', '薫', 'ケン', '健治', '哲夫', '啓二', '光一', '真一', '貞夫', '靖', '武', '雄', '文雄', '久雄', '一朗', '健一', '正明', '五郎', '誠', '昭夫', '誠司', '洋一', '康夫', '誠一', '正美', '則夫', '幸雄', '忠雄', '仁', 'シンジ', '豊', '邦雄', '修', '雅之', '三郎', '英治', '浩二', '栄一', '恒夫', '義郎', '進', '博之', '巌'],\n    names: ['Takumi', 'Hikaru', 'Yuuki', 'Shouta', 'Touma', 'Ren', 'Minato', 'Rui', 'Tatsuki', 'Kenji', 'Itsuki', 'Haru', 'Kouichi', 'Sousuke', 'Kousuke', 'Yuuta', 'Daiki', 'Eita',\n    // newer set\n    'Hiroshi', 'Toru', 'Michio', 'Satoshi', 'Akira', 'Shigeo', 'Masaru', 'Junichi', 'Kazuo', 'Isao', 'Shozo', 'Takashi', 'Tatsuo', 'Shoichi', 'Teruo', 'Toshio', 'Shiro', 'Isamu', 'Yoshihiro', 'Yoshio', 'Noboru', 'Yoshiaki', 'Tadayoshi', 'Hideo', 'Hajime', 'Akari', 'Katsumi', 'Masao', 'Mitsuo', 'Hisashi', 'Kozo', 'Kiyoshi', 'Jiro', 'Masahiro', 'Akiko', 'Takeshi', 'Tsutomu', 'Haruo', 'Yuji', 'Minoru', 'Shoji', 'Kazuko', 'Atsushi', 'Shigeru', 'Shinobu', 'Keiichi', 'Tadashi', 'Takao', 'Kaoru', 'Ken', 'Kenji', 'Tetsuo', 'Keiji', 'Koichi', 'Shinichi', 'Sadao', 'Yasushi', 'Takeshi', 'Yu', 'Fumio', 'Hisao', 'Ichiro', 'Kenichi', 'Masaaki', 'Goro', 'Makoto', 'Akio', 'Seiji', 'Yoichi', 'Yasuo', 'Seiichi', 'Masami', 'Norio', 'Yukio', 'Tadao', 'Hitoshi', 'Shinji', 'Yutaka', 'Kunio', 'Osamu', 'Masayuki', 'Saburo', 'Eiji', 'Koji', 'Eiichi', 'Tsuneo', 'Yoshio', 'Susumu', 'Hiroyuki', 'Iwao'],\n    teamNamesJ: ['横浜', '大阪', '名古屋', '札幌', '神戸', '京都', '福岡', '川崎', '埼玉県', '広島', '仙台', '千葉県', '新潟', '浜松', '静岡', '相模原', '岡山', '熊本', '鹿児島', '船橋', '川口', '姫路', '松山', '宇都宮', '松戸', '西宮', '倉敷', '市川', '福山', '尼崎', '金沢', '長崎', '横須賀', '富山', '高松', '町田', '岐阜', '枚方', '藤沢', '柏', '豊中', '長野県', '豊橋', '一宮', '和歌山', '岡崎', '宮崎', '奈良', '吹田', '高槻', '旭川', 'いわき', '高崎', '所沢', '川越', '秋田', '越谷', '前橋', '那覇', '四日市', '青森', '久留米', '春日井', '盛岡', '明石', '福島', '下関', '長岡', '市原', '函館', '茨城県', '福井', '加古川', '徳島', '水戸', '平塚', '佐世保', '呉', '八戸', '佐賀', '寝屋川', '富士', '春日部', '茅ヶ崎', '松本', '厚木', '大和', '上尾', '宝塚', '筑波', '沼津', '熊谷', '伊勢崎', '岸和田', '鳥取', '小田原', '鈴鹿', '松江', '日立'],\n    teamNames: ['Yokohama', 'Osaka', 'Nagoya', 'Sapporo', 'Kobe', 'Kyoto', 'Fukuoka', 'Kawasaki', 'Saitama', 'Hiroshima', 'Sendai', 'Chiba', 'Niigata', 'Hamamatsu', 'Shizuoka', 'Sagamihara', 'Okayama', 'Kumamoto', 'Kagoshima', 'Funabashi', 'Kawaguchi', 'Himeji', 'Matsuyama', 'Utsunomiya', 'Matsudo', 'Nishinomiya', 'Kurashiki', 'Ichikawa', 'Fukuyama', 'Amagasaki', 'Kanazawa', 'Nagasaki', 'Yokosuka', 'Toyama', 'Takamatsu', 'Machida', 'Gifu', 'Hirakata', 'Fujisawa', 'Kashiwa', 'Toyonaka', 'Nagano', 'Toyohashi', 'Ichinomiya', 'Wakayama', 'Okazaki', 'Miyazaki', 'Nara', 'Suita', 'Takatsuki', 'Asahikawa', 'Iwaki', 'Takasaki', 'Tokorozawa', 'Kawagoe', 'Akita', 'Koshigaya', 'Maebashi', 'Naha', 'Yokkaichi', 'Aomori', 'Kurume', 'Kasugai', 'Morioka', 'Akashi', 'Fukushima', 'Shimonoseki', 'Nagaoka', 'Ichihara', 'Hakodate', 'Ibaraki', 'Fukui', 'Kakogawa', 'Tokushima', 'Mito', 'Hiratsuka', 'Sasebo', 'Kure', 'Hachinohe', 'Saga', 'Neyagawa', 'Fuji', 'Kasukabe', 'Chigasaki', 'Matsumoto', 'Atsugi', 'Yamato', 'Ageo', 'Takarazuka', 'Tsukuba', 'Numazu', 'Kumagaya', 'Isesaki', 'Kishiwada', 'Tottori', 'Odawara', 'Suzuka', 'Matsue', 'Hitachi']\n};\n\nexports.data = data;\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar helper = {\n    /**\n     * rotation angle from 0 to 360 where 180 is a fastball's backspin and 90 is a slider's, 0 for curveball\n     * in the direction (CW for righty), CCW for lefty.\n     *\n     * x movement, y movement, speed ratio, rotation angle, RPM from RHP perspective where left is smaller X\n     */\n    pitchDefinitions: {\n        // fastball, kinda\n        '4-seam': [0, 0, 1, 180, 1000],\n        '2-seam': [20, -20, 0.90, -45, 1200],\n        'cutter': [-25, -20, 0.95, 75, 1200],\n        'sinker': [15, -30, 0.95, -45, 1500],\n\n        // breaking ball\n        'slider': [-50, -35, 0.88, 80, 2000],\n        'fork': [0, -70, 0.87, 20, 500],\n        'curve': [0, -110, 0.82, 10, 2500],\n\n        // change-up\n        'change': [0, -10, 0.86, -15, 1000]\n    },\n    selectRandomPitch: function selectRandomPitch() {\n        return ['4-seam', '2-seam', 'cutter', 'sinker', 'slider', 'fork', 'curve', 'change'][Math.floor(Math.random() * 8)];\n    }\n};\n\nexports.helper = helper;\n\n},{}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar text = function text(phrase, override) {\n    if (!text.mode) text.mode = 'n';\n    var string = ({\n        n: {\n            empty: '-',\n            ' 1st': '1番',\n            ' 2nd': '2番',\n            ' 3rd': '3番',\n            ' 4th': '4番',\n            ' 5th': '5番',\n            ' 6th': '6番',\n            ' 7th': '7番',\n            ' 8th': '8番',\n            ' 9th': '9番',\n            'Now batting': '次のバッター',\n            'way outside': '相当外角',\n            'outside': '外角',\n            'inside': '内角',\n            'way inside': '相当内角',\n            'way low': '相当低め',\n            'low': '低め',\n            'high': '高め',\n            'way high': '相当高め',\n            'down the middle': '真ん中',\n            'first baseman': 'ファースト',\n            'second baseman': 'セカンド',\n            'third baseman': 'サード',\n            'shortstop': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left fielder': 'レフト',\n            'center fielder': 'センター',\n            'right fielder': 'ライト',\n            'Strike.': 'ストライク。',\n            'Ball.': 'ボール。',\n            'Fouled off.': 'ファウル。',\n            'In play.': 'インプレー。',\n            'Swinging strike.': '空振り。',\n            ' outs': 'アウト',\n            ' out': 'アウト',\n            '4-seam': 'ストレート',\n            '2-seam': 'シュート',\n            'slider': 'スライダー',\n            'fork': 'フォーク',\n            'cutter': 'カット',\n            'sinker': 'シンカー',\n            'curve': 'カーブ',\n            'change': 'チェンジ',\n            ' struck out looking.': '、見逃し三振。',\n            ' walked.': '、フォアボール。',\n            ' struck out swinging.': '、空振り三振。',\n            'Previous: ': '前：',\n            'looks like: ': '予想',\n            'breaking ball': '変化球',\n            'fastball': 'ストレート',\n            'Batting, ': '打球',\n            'Catching, pitch selection': '捕球選択',\n            'Season': '記録',\n            'Game': '今試合',\n            'Pitch': '球',\n            'Control': '制球',\n            'Velocity': '速度',\n            'Break': '変化',\n            'At Bat': 'バッター',\n            'On Deck': '次バッター',\n            'Eye': '目',\n            'Power': '力',\n            'Speed': '速',\n            'Up to Bat': '打席',\n            'Fielding': '守備',\n            'Pitching': '投球',\n            'BA': '打率',\n            'OBP': '出塁',\n            'SLG': '長打',\n            'PA': '打席',\n            'H/2B/3B/HR': '安／二／三／本',\n            'H': '安',\n            '2B': '二',\n            '3B': '三',\n            'HR': '本塁打',\n            'RBI': '打点',\n            'R': '得点',\n            'BB': '四球',\n            'SO': '三振',\n\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'Runner on': 'ランナー',\n            'Runners on': 'ランナー',\n            'Bases empty': 'ランナーなし',\n            'base': '塁',\n\n            'stolen base': '盗塁成功',\n            'caught stealing': '盗塁失敗',\n\n            'Steal': '盗塁',\n            'Opportunistic': '自由',\n            'Hold': '止まれ',\n\n            'Select Language:': '言語',\n            'Run Fast Simulation': 'シミュレーションを試合終了まで行う',\n            'Play Ball!': 'プレーボール',\n            'Spectate the CPU': 'CPU観戦',\n            'Play from the 7th': '７回からプレーする',\n\n            'Throws/Bats': ' ',\n            'LHP': '左投',\n            'RHP': '右投',\n            'LHB': '左打',\n            'RHB': '右打',\n            'L': '左投',\n            'R ': '右投',\n            ' L ': '左打',\n            ' R ': '右打',\n            '#': '背番号',\n\n            'Opponent connected': '相手選手見参',\n            'Click Here': 'ここにクリック',\n\n            'Amateur Baseball Club': '野球愛好会',\n            'Amateur Baseball Team': '愛好球団',\n            'College Team': '大学球団',\n            'Industrial League Team': '社会人球団',\n            'Training Squad': '練習軍',\n            'Team Japan': '日本代表',\n\n            'Substituted': '交代'\n        },\n        e: {\n            empty: '-',\n            'Season': 'Season'\n        }\n    })[override ? override : text.mode][phrase];\n    return string ? string : phrase;\n};\n\ntext.substitution = function (sub, player, mode) {\n    var originalMode = text.mode;\n    mode = mode || text.mode;\n    var order = ({\n        0: text(' 1st', mode),\n        1: text(' 2nd', mode),\n        2: text(' 3rd', mode),\n        3: text(' 4th', mode),\n        4: text(' 5th', mode),\n        5: text(' 6th', mode),\n        6: text(' 7th', mode),\n        7: text(' 8th', mode),\n        8: text(' 9th', mode)\n    })[player.order];\n    var position = text.fielderShortName(player.position, mode);\n\n    if (mode === 'n') {\n        text.mode = 'n';\n        var output = sub.getName() + text.comma() + player.getName() + 'の交代' + text.comma() + order + '(' + position + ')';\n    } else {\n        text.mode = 'e';\n        output = sub.getName() + ' replaces ' + player.getName() + ' at ' + position + ', batting' + order;\n    }\n    text.mode = originalMode;\n    return output;\n};\n\ntext.getBattersEye = function (game) {\n    var eye = {},\n        breaking = Math.abs(game.pitchInFlight.breakDirection[0]) + Math.abs(game.pitchInFlight.breakDirection[1]) > 40;\n    eye.e = text('looks like: ', 'e') + breaking ? text('breaking ball', 'e') : text('fastball', 'e');\n    eye.n = text('looks like: ', 'n') + breaking ? text('breaking ball', 'n') : text('fastball', 'n');\n    return eye;\n};\n\ntext.baseShortName = function (base) {\n    if (text.mode == 'n') {\n        return ({\n            '1st': '一',\n            '2nd': '二',\n            '3rd': '三',\n            'home': '本',\n            'Home': '本',\n\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[base];\n    }\n    return base;\n};\n\ntext.fielderShortName = function (fielder, override) {\n    var mode = override || text.mode;\n    if (mode === 'n') {\n        return ({\n            'first': '一',\n            'second': '二',\n            'third': '三',\n            'short': '遊',\n            'pitcher': '投',\n            'catcher': '捕',\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[fielder];\n    }\n    return fielder;\n};\n\ntext.slash = function () {\n    if (text.mode == 'n') {\n        return '・';\n    }\n    return '/';\n};\n\ntext.fielderLongName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'short': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left': 'レフト',\n            'center': 'センター',\n            'right': 'ライト'\n        })[fielder];\n    }\n    return ({\n        first: text('first baseman'),\n        second: text('second baseman'),\n        third: text('third baseman'),\n        short: text('shortstop'),\n        pitcher: text('pitcher'),\n        catcher: text('catcher'),\n        left: text('left fielder'),\n        center: text('center fielder'),\n        right: text('right fielder')\n    })[fielder];\n};\n\ntext.comma = function () {\n    return ({ n: '、', e: ', ' })[text.mode];\n};\ntext.space = function () {\n    return ({ n: '', e: ' ' })[text.mode];\n};\ntext.stop = function () {\n    return ({ n: '。', e: '. ' })[text.mode];\n};\n\ntext.namePitch = function (pitch) {\n    if (text.mode == 'e') {\n        return pitch.name.charAt(0).toUpperCase() + pitch.name.slice(1);\n    }\n    if (text.mode == 'n') {\n        return text(pitch.name);\n    }\n};\n\ntext.contactResult = function (batter, fielder, bases, outBy, sacrificeAdvances, out) {\n    var statement = '';\n    var infield = ['left', 'center', 'right'].indexOf(fielder) < 0;\n    var doublePlay = out.doublePlay;\n    if (text.mode == 'e') {\n        statement += batter;\n        if (outBy) {\n            switch (outBy) {\n                case 'fieldersChoice':\n                    play = out.length === 2 ? 'double play ' : '';\n                    statement += ' reached on a fielder\\'s choice ' + play + 'by ' + text.fielderShortName(fielder);\n                    break;\n                case 'line':\n                    statement += ' lined out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'fly':\n                    statement += ' flew out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'error':\n                    statement += ' reached on error by ' + text.fielderShortName(fielder);\n                    break;\n                case 'pop':\n                    statement += ' popped out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'ground':\n                    var play = doublePlay ? 'into a double play by' : 'out to';\n                    statement += ' grounded ' + play + ' ' + text.fielderShortName(fielder);\n                    break;\n                case 'thrown':\n                    play = doublePlay ? ' on a double play' : '';\n                    statement += ' was thrown out by ' + text.fielderShortName(fielder) + play;\n                    break;\n            }\n            if (out.length) {\n                var plural = out.length > 1;\n                var runner = plural ? 'Runners' : 'Runner';\n                var is = plural ? 'are' : 'is';\n                statement += '. ' + runner + ' from ' + text(out.join(text.comma())) + ' ' + is + ' out';\n            }\n        } else {\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += ' reached on an infield hit to ' + text.fielderShortName(fielder);\n                    } else {\n                        statement += ' reached on a single to ' + text.fielderShortName(fielder);\n                    }\n                    break;\n                case 2:\n                    statement += ' doubled past ' + text.fielderShortName(fielder);\n                    break;\n                case 3:\n                    statement += ' tripled past ' + text.fielderShortName(fielder);\n                    break;\n                case 4:\n                    statement += ' homered to ' + text.fielderShortName(fielder);\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += text.stop() + 'Runner on third scores';\n                } else {\n                    statement += text.stop() + 'Runner on ' + base + ' advances';\n                }\n            });\n        }\n        statement += text.stop();\n    }\n    if (text.mode == 'n') {\n        var stop = text.stop();\n        statement += batter + 'は';\n        if (outBy) {\n            var fielderLong = text.fielderLongName(fielder);\n            fielder = text.fielderShortName(fielder);\n            switch (outBy) {\n                case 'fieldersChoice':\n                    statement += '野選(' + fielder + ')で出塁';\n                    break;\n                case 'line':\n                    statement += fielder + '直';\n                    break;\n                case 'fly':\n                    statement += fielder + '飛';\n                    break;\n                case 'error':\n                    statement += 'エラー(' + fielder + ')で出塁';\n                    break;\n                case 'pop':\n                    statement += 'ポップフライで' + fielder + '飛';\n                    break;\n                case 'ground':\n                    statement += fielderLong + 'ゴロに封殺';\n                    break;\n                case 'thrown':\n                    statement += fielder + 'ゴロ';\n                    break;\n            }\n            if (out.length) {\n                statement += '。' + out.map(function (runner) {\n                    return text(runner);\n                }).join(text.comma()) + 'ランナーはアウト';\n            }\n            if (doublePlay) {\n                statement += '。ゲッツー';\n            }\n        } else {\n            fielder = text.fielderShortName(fielder);\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += '内野安打' + '(' + fielder + ')' + 'で出塁';\n                    } else {\n                        statement += '安打(' + fielder + ')' + 'で出塁';\n                    }\n                    break;\n                case 2:\n                    statement += '二塁打（' + fielder + '）で出塁';\n                    break;\n                case 3:\n                    statement += '三塁打（' + fielder + '）で出塁';\n                    break;\n                case 4:\n                    statement += '本塁打（' + fielder + '）';\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += stop + 'サードランナーホームイン';\n                } else {\n                    statement += stop + text(base) + 'ランナー進塁';\n                }\n            });\n        }\n        statement += stop;\n    }\n    return statement;\n};\n\nexports.text = text;\n\n},{}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballNamespace = require('baseball/namespace');\n\nif (typeof window == 'object') {\n    window.Baseball = _baseballNamespace.Baseball;\n}\n\nexports.Baseball = _baseballNamespace.Baseball;\n\n},{\"baseball/namespace\":38}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballTeamsProvider = require('baseball/Teams/Provider');\n\nvar Baseball = {};\n\nBaseball.model = {};\nBaseball.model.Game = Baseball.Game = _baseballModelGame.Game;\nBaseball.model.Player = Baseball.Player = _baseballModelPlayer.Player;\nBaseball.model.Team = Baseball.Team = _baseballModelTeam.Team;\n\nBaseball.service = {};\nBaseball.service.Animator = _baseballServices_services.Animator;\nBaseball.service.Distribution = _baseballServices_services.Distribution;\nBaseball.service.Iterator = _baseballServices_services.Iterator;\nBaseball.service.Mathinator = _baseballServices_services.Mathinator;\n\nBaseball.util = {};\nBaseball.util.text = _baseballUtility_utils.text;\nBaseball.util.Log = _baseballUtility_utils.Log;\n\nBaseball.teams = {};\nBaseball.teams.Provider = _baseballTeamsProvider.Provider;\n\nexports.Baseball = Baseball;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":28,\"baseball/Teams/Provider\":29,\"baseball/Utility/_utils\":33}],39:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":24,\"baseball/Services/Distribution\":25,\"baseball/Services/Iterator\":26,\"baseball/Services/Mathinator\":27}]},{},[37]);\n","IndexController = function($scope, socket) {\n    var text = Baseball.util.text;\n    var Game = Baseball.Game;\n    var Animator = Baseball.service.Animator;\n\n    window.s = $scope;\n    $scope.t = text;\n\n    $scope.mode = function(setMode) {\n        if (setMode) {\n            text.mode = setMode;\n            if (localStorage) {\n                localStorage.__$yakyuuaikoukai_text_mode = setMode;\n            }\n        }\n        return text.mode;\n    };\n\n    if (localStorage) {\n        var storedMode = localStorage.__$yakyuuaikoukai_text_mode;\n        if (storedMode === 'e' || storedMode === 'n') {\n            $scope.mode(storedMode);\n        }\n    }\n\n    $scope.teamJapan = function() {\n        var provider = new Baseball.teams.Provider;\n        provider.assignTeam($scope.y, 'TeamJapan', 'away');\n        var game = $scope.y;\n        if (game.half === 'top') {\n            game.batter = game.teams.away.lineup[game.batter.order];\n            game.deck = game.teams.away.lineup[(game.batter.order + 1) % 9];\n            game.hole = game.teams.away.lineup[(game.batter.order + 2) % 9];\n        } else {\n            game.pitcher = game.teams.away.positions.pitcher;\n        }\n    };\n\n    $scope.sim = function() {$scope.proceedToGame(1, 1);};\n    $scope.seventh = function() {$scope.proceedToGame(7);};\n    $scope.playball = function() {$scope.proceedToGame();};\n    $scope.spectate = function() {$scope.proceedToGame(0,1);};\n\n    $scope.proceedToGame = function(quickMode, spectateCpu) {\n        $scope.y = new Game();\n        var game = $scope.y;\n        game.humanControl = spectateCpu ? 'none' : 'home';\n        game.quickMode = !!quickMode && quickMode !== 7;\n        var field = window.location.hash ? window.location.hash.slice(1) : game.teams.home.name + Math.ceil(Math.random()*47);\n        if (typeof io !== 'undefined') {\n            socket.game = game;\n            $scope.socket = io(/*window.location.hostname*/'http://georgefu.info' + ':64321', {\n                reconnection: false\n            });\n            $scope.socketService = socket;\n            socket.socket = $scope.socket;\n            socket.start(field);\n        }\n        window.location.hash = '#' + field;\n        s2.y = game;\n        bindMethods();\n        $('.blocking').remove();\n        if (game.humanControl == 'none' && game.quickMode) {\n            var n = 0;\n            Animator.console = true;\n            game.console = true;\n            do {\n                n++;\n                game.simulateInput(function(callback) {\n                    typeof callback == 'function' && callback();\n                });\n            } while (game.stage != 'end' && n < 500);\n            Animator.console = game.console = false;\n            log('sim ended');\n            game.debugOut();\n        } else if (game.humanControl == 'none') {\n            var scalar = game.quickMode ? 0.05 : 1;\n            var auto = setInterval(function() {\n                if (game.stage == 'end') {\n                    clearInterval(auto);\n                }\n                game.simulatePitchAndSwing(function(callback) {\n                    game.quickMode ? void 0 : $scope.$apply();\n                    $scope.updateFlightPath(callback);\n                });\n            }, scalar*(game.field.hasRunnersOn() ? Animator.TIME_FROM_SET + 2000 : Animator.TIME_FROM_WINDUP + 2000));\n        } else if (quickMode === 7 && spectateCpu === undefined) {\n            Animator.console = game.quickMode = game.console = true;\n            do {\n                game.simulateInput(function(callback) {\n                    typeof callback == 'function' && callback();\n                });\n            } while (game.inning < 7);\n            log('sim halted in 7th');\n            // todo debug 7th inning excess callbacks\n            game.debugOut();\n            Animator.console = game.quickMode = game.console = false;\n            game.stage = 'pitch';\n            game.half = 'top';\n            game.humanControl = 'home';\n        }\n        if (game.humanControl == 'away') {\n            game.simulateInput(function(callback) {\n                $scope.updateFlightPath(callback);\n            });\n        }\n        if (game.humanControl == 'home') {\n            $scope.showMessage = true;\n        }\n        if (!quickMode || quickMode === 7) {\n            Animator.loop.setTargetTimeOfDay(game.startTime.h, game.startTime.m);\n        }\n    };\n\n    var bindMethods = function() {\n        var game = $scope.y;\n        $scope.holdUpTimeouts = [];\n        $scope.expandScoreboard = false;\n        $scope.updateFlightPath = Animator.updateFlightPath.bind($scope);\n\n        // avoid scope cycles, any other easy way?\n        var bat = $('.target .swing.stance-indicator');\n        var showBat = function(event) {\n            if (game.humanBatting()) {\n                var offset = $('.target').offset();\n                var relativeOffset = {\n                    x : event.pageX - offset.left,\n                    y : 200 - (event.pageY - offset.top)\n                };\n                var angle = game.setBatAngle(relativeOffset.x, relativeOffset.y);\n                bat.css({\n                    top: 200-relativeOffset.y + \"px\",\n                    left: relativeOffset.x + \"px\",\n                    transform: \"rotate(\" + angle + \"deg) rotateY(\"+(game.batter.bats == \"left\" ? 0 : -0)+\"deg)\"\n                });\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\n                    bat.hide();\n                } else {\n                    bat.show();\n                }\n            }\n        };\n        var glove = $('.target .glove.stance-indicator');\n        var showGlove = function(event) {\n            if (game.humanPitching()) {\n                var offset = $('.target').offset();\n                var relativeOffset = {\n                    x : event.pageX - offset.left,\n                    y : 200 - (event.pageY - offset.top)\n                };\n                glove.css({\n                    top: 200-relativeOffset.y + \"px\",\n                    left: relativeOffset.x + \"px\"\n                });\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\n                    glove.hide();\n                } else {\n                    glove.show();\n                }\n            }\n        };\n\n        $scope.generateTeam = function(heroRate) {\n            $scope.y.teams.away = new Baseball.model.Team($scope.y, heroRate);\n        };\n        $scope.clickLineup = function(player) {\n            if (player.team.sub) {\n                var sub = player.team.sub;\n                player.team.sub = null;\n                return sub.substitute(player);\n            }\n            player.team.expanded = (player.team.expanded == player ? null : player);\n        };\n        $scope.selectSubstitute = function(player) {\n            if (game.humanControl === 'home' && player.team !== game.teams.home) return;\n            if (game.humanControl === 'away' && player.team !== game.teams.away) return;\n            player.team.sub = (player.team.sub === player ? null : player);\n        };\n\n        $scope.selectPitch = function(pitchName) {\n            if (game.stage == 'pitch') {\n                game.pitchInFlight = $.extend({}, game.pitcher.pitching[pitchName]);\n                game.pitchInFlight.name = pitchName;\n                game.swingResult.looking = true;\n            }\n        };\n        $scope.allowInput = true;\n        $scope.holdUp = function() {\n            $('.input-area').click();\n            $scope.$apply();\n        };\n        game.startOpponentPitching = function(callback) {\n            $scope.updateFlightPath(callback);\n        };\n        $scope.indicate = function($event) {\n            if (!$scope.allowInput) {\n                return;\n            }\n            if (game.pitcher.windingUp) {\n                return;\n            }\n            if (game.humanPitching()) $scope.allowInput = false;\n            var offset = $('.target').offset();\n            var relativeOffset = {\n                x : $event.pageX - offset.left,\n                y : 200 - ($event.pageY - offset.top)\n            };\n            clearTimeout($scope.lastTimeout);\n            while ($scope.holdUpTimeouts.length) {\n                clearTimeout($scope.holdUpTimeouts.shift());\n            }\n            $scope.showMessage = false;\n            game.receiveInput(relativeOffset.x, relativeOffset.y, function(callback) {\n                $scope.updateFlightPath(callback);\n            });\n        };\n        $scope.abbreviatePosition = function(position) {\n            if (text.mode == 'e') {\n                return {\n                    pitcher : 'P',\n                    catcher : 'C',\n                    first : '1B',\n                    second : '2B',\n                    short : 'SS',\n                    third : '3B',\n                    left : 'LF',\n                    center : 'CF',\n                    right : 'RF'\n                }[position];\n            }\n            return text.fielderShortName(position);\n        };\n        $scope.$watch('y.humanBatting()', function() {\n            if ($scope.y.humanBatting()) {\n                $('.input-area').mousemove(showBat);\n            } else {\n                $('.input-area').unbind('mousemove', showBat);\n                bat.hide();\n            }\n        });\n        $scope.$watch('y.humanPitching()', function() {\n            if ($scope.y.humanPitching()) {\n                $('.input-area').mousemove(showGlove);\n            } else {\n                $('.input-area').unbind('mousemove', showGlove);\n                glove.hide();\n            }\n        });\n        var aside = {\n            left: $('aside.image-panel.left'),\n            right: $('aside.image-panel.right')\n        };\n        //$scope.$watch('y.playResult', function() {\n        //    aside.left.hide();\n        //    aside.right.hide();\n        //    aside.left.fadeIn(1000, function() {\n        //        aside.left.fadeOut(1000);\n        //        aside.right.fadeIn(1000, function() {\n        //            aside.right.fadeOut(1000);\n        //        })\n        //    });\n        //    $scope.imagePanel = {\n        //        left: 'url(./public/images/' + $scope.y.playResult.batter + '.png)',\n        //        right: 'url(./public/images/' + $scope.y.playResult.fielder + '.png)'\n        //    };\n        //});\n    };\n\n\n};","var SocketService = function() {\n    var Service = function() {};\n    var game, socket, NO_OPERATION = function() {},\n        animator = Baseball.service.Animator;\n    Service.prototype = {\n        socket : {},\n        game : {},\n        connected : false,\n        start : function(key) {\n            game = this.game;\n            socket = this.socket;\n            game.opponentService = this;\n            this.connected = socket.connected;\n            this.on();\n            socket.emit('register', key);\n            socket.on('connect_failed reconnect_failed', function() {\n                console.log('connection unavailable');\n            });\n        },\n        on : function() {\n            var giraffe = this;\n            socket.on('register', this.register);\n            socket.on('connect reconnect', function() {\n                giraffe.connected = true;\n            });\n            socket.on('disconnect', function() {\n                giraffe.connected = false;\n            });\n            socket.on('pitch', function(pitch) {\n                //console.log('receive', 'pitch', pitch);\n                game.thePitch(0, 0, NO_OPERATION, pitch);\n                var scope = window.s;\n                animator.updateFlightPath.bind(scope)();\n            });\n            socket.on('swing', function(swing) {\n                //console.log('receive', 'swing', swing);\n                game.theSwing(0, 0, NO_OPERATION, swing);\n                var scope = window.s;\n                animator.updateFlightPath.bind(scope)(function() {\n                    if (swing.contact) {\n                        animator.animateFieldingTrajectory(game);\n                    }\n                });\n            });\n            socket.on('partner_disconnect', function() {\n                console.log('The opponent has disconnected');\n                game.opponentConnected = false;\n                var scope = window.s;\n                scope.$digest();\n            });\n            socket.on('partner_connect', function() {\n                game.opponentConnected = true;\n                var scope = window.s;\n                scope.$digest();\n            });\n            socket.on('opponent_taking_field', function() {\n                console.log('A challenger has appeared! Sending game data.');\n                socket.emit('game_data', game.toData());\n            });\n            socket.on('game_data', function(data) {\n                game.fromData(data);\n                var scope = window.s;\n                scope.$apply();\n            });\n            socket.on('field_in_use', function() {\n                game.opponentConnected = false;\n            });\n        },\n        off : function() {\n            socket.on('register', NO_OPERATION);\n        },\n        register: function(data) {\n            console.log(data);\n            if (data === 'away') {\n                game.humanControl = 'away';\n            }\n            socket.on('register', NO_OPERATION);\n        },\n        emitPitch : function(pitch) {\n            //console.log('emit', 'pitch', pitch);\n            socket.emit('pitch', pitch);\n        },\n        emitSwing : function(swing) {\n            //console.log('emit', 'swing', swing);\n            socket.emit('swing', swing);\n        },\n        swing : function() {\n\n        },\n        pitch : function() {\n\n        }\n    };\n    return new Service;\n};","BattersDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/batters.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","BatteryDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/battery.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","FieldDirective = function() {\n    return {\n        //scope: {\n        //    game: '=',\n        //    text: '='\n        //},\n        templateUrl: 'public/html/views/directives/field.html?cache='+cacheKey,\n        transclude : true,\n        //link: function(scope) {\n        //    scope.t = scope.text;\n        //    scope.y = scope.game;\n        //}\n    };\n};","RatingBlockDirective = function() {\n    return {\n        scope: {\n            rating: '='\n        },\n        transclude: true,\n        templateUrl: 'public/html/views/directives/ratingBlock.html?cache='+cacheKey,\n        link: function(scope) {\n        }\n    };\n};","ScoreboardDirective = function() {\n    return {\n        scope: {\n            game: '=',\n            text: '='\n        },\n        templateUrl: 'public/html/views/directives/scoreboard.html?cache='+cacheKey,\n        link: function(scope) {\n            window.s2 = scope;\n            scope.t = scope.text;\n            scope.y = scope.game;\n        }\n    };\n};","var app = angular.module('YakyuuAikoukai', ['directives'])\n    .service('socket', SocketService)\n    .controller('IndexController', ['$scope', 'socket', IndexController]);\n\napp.config(function($interpolateProvider) {\n    $interpolateProvider.startSymbol('{{');\n    $interpolateProvider.endSymbol('}}');\n});\n\ncacheKey = Math.floor(Math.random()*1500);\n\nangular.module('directives', [])\n    .directive('scoreboard', ScoreboardDirective)\n    .directive('batters', BattersDirective)\n    .directive('battery', BatteryDirective)\n    .directive('field', FieldDirective)\n    .directive('ratingBlock', RatingBlockDirective);"],"sourceRoot":"/source/"}