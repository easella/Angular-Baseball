{"version":3,"sources":["bundle.js","IndexController.js","SocketService.js","battersData.js","batteryData.js","field.js","ratingBlock.js","scoreboard.js","application.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_baseballUtilityLog","AtBat","text","this","infield","indexOf","INFIELD_HIT_INDICATOR","replace","split","RBI_INDICATOR","rbi","log","Log","beneficial","WALK","SINGLE","HOMERUN","DOUBLE","TRIPLE","SACRIFICE","REACHED_ON_ERROR","constructor","identifier","baseball/Utility/Log",2,"_baseballModelPlayer","_baseballServices_services","Field","game","init","first","second","third","hasRunnersOn","Player","determineSwingContactResult","swing","x","y","angles","Mathinator","getSplayAndFlyAngle","angle","eye","batter","skill","offense","splayAngle","splay","Math","random","flyAngle","fly","power","bonus","landingDistance","Distribution","abs","foul","fielder","findFielder","travelDistance","sacrificeAdvances","half","teams","home","positions","away","fatigue","error","fieldingEase","defense","fielding","throwingEase","throwing","fielderTravel","getPolarDistance","interceptRating","speed","caught","umpire","count","outs","sacrificeThrowInTime","fielderReturnDelay","getBaseRunningTime","push","bases","thrownOut","fieldingReturnDelay","fieldingDelay","outfielder","left","center","right","baseRunningTime","fieldersChoice","fielders","team","force","forcePlaySituation","additionalOuts","throwingDelay","infieldThrowDelay","catcher","doublePlay","firstOut","swingResult","Animator","console","animateFieldingTrajectory","pitcher","short","b","fieldingTest","distance","data","fielderCandidates","fielderSelectionTest","aggregateFieldingTest","tally","distances","false","selections","returnFielder","minDistance","giraffe","Iterator","each","position","spot","thisDistance","baseball/Model/Player","baseball/Services/_services",3,"_baseballModelField","_baseballModelTeam","_baseballModelUmpire","_baseballUtility_utils","Game","m","gamesIntoSeason","humanControl","quickMode","debug","startTime","h","slice","timeOfDay","mode","floor","field","Team","helper","name","pickName","Umpire","humanPitching","stage","autoPitchSelect","passMinutes","minutes","parseInt","getInning","inning","toUpperCase","humanBatting","end","R","getName","stats","pitching","W","L","note","simulateInput","callback","pitchTarget","autoPitch","autoSwing","simulatePitchAndSwing","setTimeout","TIME_FROM_SET","TIME_FROM_WINDUP","receiveInput","thePitch","theSwing","pitchNames","keys","pitchName","pitch","pitchInFlight","windingUp","$","addClass","windup","css","pitchLocation","animate","width","removeClass","deceptiveX","deceptiveY","convergence","convergenceSum","balls","strikes","centralizedNumber","cpuSwing","swingProbability","swingLikelihood","opponentConnected","waitingCallback","awaitPitch","opponentService","emitSwing","awaitSwing","emitPitch","inFlight","override","breakDirection","pitchDefinitions","battersEye","getBattersEye","control","pitchControl","breakEffect","notePitch","setBatAngle","recalculation","getAngularOffset","precision","looking","contact","strike","max","sqrt","pow","noteSwing","result","makeCall","emit","startOpponentPitching","origin","bats","battingAngle","debugOut","filter","PO","map","hitters","lineup","concat","atBats","getAtBats","ab","LO","FO","GO","GIDP","SO","BB","SAC","FC","table","scoreboard","toData","players","deck","hole","nameJ","says","player","serialize","pitchRecord","record","fromData","playerJson","index","playerData","JSON","parse","side","resetStats","stabilizeShortRecord","velocity","break","playResult","showPlayResultPanels","batterOutcomes","atBat","pop","fielderOutcomes","pitchSelect",4,5,6,7,8,9,"resetTally","H","E","baseball/Model/Field","baseball/Model/Team","baseball/Model/Umpire","baseball/Utility/_utils","Manager","makeLineup","jerseyNumber","selectForSkill","bench","number","order","pool","skillset","requiredThrowingHandedness","selection","rating","skills","cursor","property","shift","_baseballModel_models","hero","averaging","randomizeSkills","surnameKey","surnames","nameKey","names","jSurname","surnamesJ","jGivenName","namesJ","spaceName","surname","surnameJ","stringify","atBatObjects","IP","ER","GS","arguments","undefined","randBetween","total","isNaN","pa","paRemaining","bb","so","doubles","triples","hr","hbp","sac","chances","pitches","K","getK9","getERA","ERA","HR","WHIP","getWHIP","batting","getBA","getBABIP","ba","getOBP","obp","getSLG","slg","2b","3b","A","K9","item","recordRBI","recordInfieldHit","allPitches","randValue","isPitching","catching","slider","fork","cutter","sinker","curve","change","reduce","prev","current","getSurname","getUniformNumber","getOrder","baseball/Model/_models","_baseballModelManager","bullpen","manager","j","teamNameIndex","teamNames","teamNamesJ","nowBatting","expanded","baseball/Model/Manager","playBall","batterRunner","noteBatter","advanceRunners","LINEOUT","FLYOUT","newBatter","runner","FIELDERS_CHOICE","reachBase","GROUNDOUT","hitByPitch","STRIKEOUT","changeSides","isWalk","RUN","canAdvance","notePlateAppearanceResult","lastBatter","_baseballModelAtBat","_baseballModelGame","baseball/Model/AtBat","baseball/Model/Game","_meshBall","_sceneLighting","VERTICAL_CORRECTION","Loop","main","requestAnimationFrame","loop","bind","objects","renderer","render","scene","camera","getThree","THREE","Scene","PerspectiveCamera","getAspect","attach","lighting","addTo","z","window","removeEventListener","onResize","addEventListener","element","document","getElementsByClassName","innerHTML","WebGLRenderer","alpha","setSize","appendChild","domElement","aspect","updateProjectionMatrix","d","ball","Ball","deriveTrajectory","join","HEIGHT","offsetWidth","constructors","./mesh/Ball","./scene/lighting",10,"_Loop","AbstractMesh","add","mesh","splice","remove","../Loop",11,"_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_get","_x","_x2","_x3","_again","object","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_AbstractMesh2","_baseballServicesMathinator","_AbstractMesh","trajectory","rpm","Array","breakingTrajectory","getMesh","setRotation","DEFAULT_RPM","baseURL","loader","TextureLoader","textureColor","load","textureBump","geometry","SphereGeometry","material","MeshPhongMaterial","bumpMap","bumpScale","Mesh","frame","pos","rotate","detach","rotation","RPM","RPS","RP60thOfASecond","PI","top","breakTop","breakLeft","flightTime","getFlightTime","scale","terminus","breakingTerminus","lastPosition","lastBreakingPosition","frames","breakingFrames","frameCount","counter","progress","breakingPosition","increment","breakingIncrement","pause","dragScalarApproximation","apexHeight","airTime","sin","velocityVerticalComponent","RADIAN","extrema","cos","lastHeight","percent","./AbstractMesh","baseball/Services/Mathinator",12,"light","HemisphereLight",13,"_baseballRenderLoop","TweenMax","beginRender","loadTweenMax","set","to","from","killAll","HOLD_UP_ALLOWANCE","pitchBreak","renderingMode","updateFlightPath","renderFlightPath","tweenFlightPath","$scope","$baseballs","flightSpeed","originTop","originLeft","henka","quarter","pitchTransition","targetTransition","transitions","lastTimeout","allowInput","$apply","holdUpTimeouts","holdUp","_ball","derivePitchingTrajectory","tweenFieldingTrajectory","renderFieldingTrajectory","splayOnly","linearApproximateDragScalar","scalar","memory","bounding","mathinator","transitionalTrajectory","show","time","transitionalCatcherPerspectiveTrajectory","fn","hasOwnProperty","baseball/Render/Loop","baseball/services/_services",14,"chance","effect","min","actual","ump",15,"collection",16,"square","SPLAY_INDICATOR_LEFT","offset","xScalar","yScalar","originalAngle","atan","angledY","angledX","radians","step","givenApexHeight","givenDistance","givenSplayAngle","bottom","padding","borderWidth","radian","apexRatio","delay","ease","Power4","easeOut","Linear","easeNone","givenOrigin","height","currentDistance","projection","translateSwingResultToStylePosition","maxPadding","maxBorderWidth","_top","_left","transform","intercept","velocityRating",17,"_baseballServicesAnimator","_baseballServicesDistribution","_baseballServicesIterator","baseball/Services/Animator","baseball/Services/Distribution","baseball/Services/Iterator",18,"_TeamJapan","Provider","special","TeamJapan","samurai","./TeamJapan",19,"_baseballTeamsTrainer","darvish","johjima","ogasawara","nishioka","kawasaki","murata","matsui","ichiro","inaba","matsuzaka","fukudome","aoki","abe","iwamura","coach","Trainer","makePlayer","baseball/Teams/Trainer",20,"throws",21,"_baseballUtilityText","stabilized","shortRecord","GITP","rec","rec2","_note","noteJ","unshift","async","getBatter",0,"longFormFielder","comma","recordJ","getPitchLocationDescription","batterIsLefty","say","noComma","noComma2","namePitch","stop","broadcastCount","justOuts","lastOuts","broadcastScore","broadcastRunners","runners","runnerCount","getSwing","getPlateAppearanceResult","out","outBy","contactResult","statement","prevJ","resultJ","pointer","baseball/Utility/text",22,"_baseballUtilityData","_baseballUtilityHelper","baseball/Utility/data","baseball/Utility/helper",23,24,"4-seam","2-seam","selectRandomPitch",25,"phrase","string","empty"," 1st"," 2nd"," 3rd"," 4th"," 5th"," 6th"," 7th"," 8th"," 9th","Now batting","way outside","outside","inside","way inside","way low","low","high","way high","down the middle","first baseman","second baseman","third baseman","shortstop","left fielder","center fielder","right fielder","Strike.","Ball.","Fouled off.","In play.","Swinging strike."," outs"," out"," struck out looking."," walked."," struck out swinging.","Previous: ","looks like: ","breaking ball","fastball","Batting, ","Catching, pitch selection","Season","Pitch","Control","Velocity","Break","At Bat","On Deck","Eye :","Power :","Speed :","Up to Bat","Fielding","BA","OBP","SLG","PA","H/2B/3B/HR","2B","3B","RBI","Runner on","Runners on","Bases empty","base","Select Language:","Run Fast Simulation","Play Ball!","Spectate the CPU","Play from the 7th","Throws/Bats","LHP","RHP","LHB","RHB","R "," L "," R ","#","Opponent connected","Click Here","Play against Team Japan","breaking","fielderShortName","slash","fielderLongName","charAt","play","plural","is","fielderLong",26,"_baseballNamespace","Baseball","baseball/namespace",27,"_baseballTeamsProvider","model","service","util","baseball/Teams/Provider",28,"IndexController","socket","setMode","teamJapan","provider","assignTeam","proceedToGame","spectateCpu","location","hash","ceil","io","hostname","socketService","start","s2","bindMethods","auto","setInterval","clearInterval","showMessage","interval","expandScoreboard","bat","showBat","event","relativeOffset","pageX","pageY","hide","glove","showGlove","selectPitch","extend","click","indicate","$event","clearTimeout","abbreviatePosition","$watch","mousemove","unbind","SocketService","Service","NO_OPERATION","animator","connected","on","register","scope","$digest","off","BattersDirective","templateUrl","cacheKey","transclude","BatteryDirective","FieldDirective","RatingBlockDirective","link","ScoreboardDirective","app","angular","controller","config","$interpolateProvider","startSymbol","endSymbol","directive"],"mappings":"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","file":"application.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar AtBat = (function () {\n    function AtBat(text) {\n        _classCallCheck(this, AtBat);\n\n        this.infield = text.indexOf(AtBat.prototype.INFIELD_HIT_INDICATOR) > -1 ? AtBat.prototype.INFIELD_HIT_INDICATOR : '';\n        text = text.replace(AtBat.prototype.INFIELD_HIT_INDICATOR, '');\n        this.text = text.split(AtBat.prototype.RBI_INDICATOR)[0];\n        this.rbi = text.split(this.text)[1] + '';\n\n        var log = new _baseballUtilityLog.Log();\n\n        var beneficial = [log.WALK, log.SINGLE, log.HOMERUN, log.DOUBLE, log.TRIPLE, log.SACRIFICE, log.REACHED_ON_ERROR];\n        if (beneficial.indexOf(this.text) > -1) {\n            this.beneficial = true;\n        }\n    }\n\n    _createClass(AtBat, [{\n        key: 'toString',\n        value: function toString() {\n            return '' + this.infield + this.text + this.rbi;\n        }\n    }]);\n\n    return AtBat;\n})();\n\nAtBat.prototype.constructor = AtBat;\nAtBat.prototype.identifier = 'AtBat';\nAtBat.prototype.INFIELD_HIT_INDICATOR = '';\nAtBat.prototype.RBI_INDICATOR = '+';\n\nexports.AtBat = AtBat;\n\n},{\"baseball/Utility/Log\":21}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\n/**\r\n * The baseball field tracks the ball's movement, fielders, and what runners are on\r\n * @param game\r\n * @constructor\r\n */\nvar Field = function Field(game) {\n    this.init(game);\n};\n\nField.prototype = {\n    constructor: Field,\n    init: function init(game) {\n        this.game = game;\n        this.first = null;\n        this.second = null;\n        this.third = null;\n    },\n    /**\r\n     * @returns {boolean}\r\n     */\n    hasRunnersOn: function hasRunnersOn() {\n        return this.first instanceof _baseballModelPlayer.Player || this.second instanceof _baseballModelPlayer.Player || this.third instanceof _baseballModelPlayer.Player;\n    },\n    /**\r\n     * @param swing\r\n     * @returns {object}\r\n     */\n    determineSwingContactResult: function determineSwingContactResult(swing) {\n        var x = swing.x,\n            y = swing.y;\n        /**\r\n         * The initial splay angle is 90 degrees for hitting up the middle and 0\r\n         * for a hard foul left, 180 is a foul right. Depending on the angle of the bat,\r\n         * a y-axis displacement which would otherwise pop or ground the ball can instead\r\n         * increase the left/right effect.\r\n         */\n        var angles = _baseballServices_services.Mathinator.getSplayAndFlyAngle(x, y, swing.angle);\n        var eye = this.game.batter.skill.offense.eye;\n        var splayAngle = angles.splay + (Math.random() - 0.5) * 90 * (200 / (200 + eye));\n        var flyAngle = angles.fly;\n        var power = this.game.batter.skill.offense.power + (this.game.batter.eye.bonus || 0) / 5;\n        var landingDistance = _baseballServices_services.Distribution.landingDistance(power, flyAngle);\n        if (flyAngle < 0 && landingDistance > 95) {\n            landingDistance = (landingDistance - 95) / 4 + 95;\n        }\n        var game = this.game;\n\n        if (Math.abs(90 - splayAngle) > 50) swing.foul = true;\n        swing.fielder = this.findFielder(splayAngle, landingDistance);\n        swing.travelDistance = landingDistance;\n        swing.flyAngle = flyAngle;\n        /**\r\n         * the splay for the result is adjusted to 0 being up the middle and negatives being left field\r\n         * @type {number}\r\n         */\n        swing.splay = splayAngle - 90;\n        swing.sacrificeAdvances = [];\n\n        if (swing.fielder) {\n            var fielder = game.half == 'top' ? game.teams.home.positions[swing.fielder] : game.teams.away.positions[swing.fielder];\n            fielder.fatigue += 4;\n            swing.error = false;\n            var fieldingEase = fielder.skill.defense.fielding / 100,\n                throwingEase = fielder.skill.defense.throwing / 100;\n            //reach the batted ball?\n            swing.fielderTravel = this.getPolarDistance(this.positions[swing.fielder], [splayAngle, landingDistance]);\n            var interceptRating = fielder.skill.defense.speed * 1.5 + flyAngle * 2.2 - swing.fielderTravel * 1.65 - 20;\n            if (interceptRating > 0 && flyAngle > 0) {\n                //caught cleanly?\n                if (_baseballServices_services.Distribution.error(fielder)) {\n                    //error\n                    fieldingEase *= 0.5;\n                    swing.error = true;\n                    swing.caught = false;\n                } else {\n                    swing.caught = true;\n                    if (game.umpire.count.outs < 2) {\n                        var sacrificeThrowInTime = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, 100);\n                        // todo ran into outfield assist\n                        if (this.first && sacrificeThrowInTime > this.first.getBaseRunningTime() + 4.5) {\n                            swing.sacrificeAdvances.push('first');\n                        }\n                        if (this.second && sacrificeThrowInTime > this.second.getBaseRunningTime()) {\n                            swing.sacrificeAdvances.push('second');\n                        }\n                        if (this.third && sacrificeThrowInTime > this.third.getBaseRunningTime() - 0.5) {\n                            swing.sacrificeAdvances.push('third');\n                        }\n                    }\n                }\n            } else {\n                swing.caught = false;\n            }\n\n            if (!swing.caught) {\n                swing.bases = 0;\n                swing.thrownOut = false; // default value\n                var fieldingReturnDelay = _baseballServices_services.Mathinator.fielderReturnDelay(swing.travelDistance, throwingEase, fieldingEase, interceptRating);\n                swing.fieldingDelay = fieldingReturnDelay;\n                swing.outfielder = ({ 'left': 1, 'center': 1, 'right': 1 })[swing.fielder] == 1;\n                var speed = game.batter.skill.offense.speed,\n                    baseRunningTime = _baseballServices_services.Mathinator.baseRunningTime(speed);\n\n                if (swing.outfielder) {\n                    swing.bases = 1;\n                    baseRunningTime *= 0.95;\n                    fieldingReturnDelay -= baseRunningTime;\n                    eye = game.batter.skill.offense.eye / 400;\n\n                    while (fieldingReturnDelay > baseRunningTime && swing.bases < 3 && Math.random() < 0.25 + eye) {\n                        baseRunningTime *= 0.95;\n                        swing.bases++;\n                        fieldingReturnDelay -= baseRunningTime;\n                    }\n                } else {\n                    var first = this.first,\n                        second = this.second,\n                        third = this.third;\n                    swing.fieldersChoice = null;\n                    swing.bases = fieldingReturnDelay >= baseRunningTime + 1 ? 1 : 0;\n                    if (first && fieldingReturnDelay < first.getBaseRunningTime()) swing.fieldersChoice = 'first';\n                    if (first && second && fieldingReturnDelay < second.getBaseRunningTime() + 0.6) swing.fieldersChoice = 'second';\n                    if (third && fieldingReturnDelay < third.getBaseRunningTime()) swing.fieldersChoice = 'third';\n                    // double play\n                    var outs = game.umpire.count.outs;\n                    if (swing.fieldersChoice) {\n                        outs++;\n                        swing.bases = 1;\n                        var fielders = fielder.team.positions;\n                        var force = this.forcePlaySituation();\n                        if (force) {\n                            var additionalOuts = [];\n                            var throwingDelay = fieldingReturnDelay;\n                            if (third && force === 'third' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher) + throwingDelay < second.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.catcher);\n                                fielders.catcher.fatigue += 4;\n                                additionalOuts.push('second');\n                                outs++;\n                                force = 'second';\n                            }\n                            if (second && force === 'second' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third) + throwingDelay < first.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.third);\n                                fielders.third.fatigue += 4;\n                                additionalOuts.push('first');\n                                outs++;\n                                force = 'first';\n                            }\n                            if (first && force === 'first' && _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second) + throwingDelay < game.batter.getBaseRunningTime() && outs < 3) {\n                                throwingDelay += _baseballServices_services.Mathinator.infieldThrowDelay(fielders.second);\n                                fielders.second.fatigue += 4;\n                                additionalOuts.push('batter');\n                                swing.bases = 0;\n                                // todo (or shortstop)\n                                outs++;\n                            }\n                            if (outs - game.umpire.count.outs === 2) {\n                                swing.doublePlay = true;\n                            }\n                            if (additionalOuts.length) {\n                                swing.additionalOuts = additionalOuts;\n                                swing.firstOut = swing.fieldersChoice;\n                                if (additionalOuts.indexOf('batter') > -1) {\n                                    delete swing.fieldersChoice;\n                                }\n                            }\n                        }\n                        //console.log('DP?', !!this.forcePlaySituation(), 'throwingDelay', throwingDelay,\n                        //    'fielding delay', fieldingReturnDelay, 'runner', game.batter.getBaseRunningTime());\n                        //if (typeof additionalOuts !== 'undefined' && additionalOuts.length) {\n                        //    console.log('omg dp', additionalOuts);\n                        //}\n                    } else {\n                            delete swing.additionalOuts;\n                            delete swing.firstOut;\n                            delete swing.doublePlay;\n                            delete swing.fieldersChoice;\n                        }\n                }\n                swing.thrownOut = swing.bases == 0;\n                if (swing.thrownOut) {\n                    swing.thrownOut = true;\n                    swing.error = false;\n                }\n            }\n        } else {\n            if (Math.abs(90 - splayAngle) < 45 && landingDistance > 300) {\n                swing.bases = 4;\n            } else {\n                swing.foul = true;\n                swing.caught = false;\n            }\n        }\n        this.game.swingResult = swing;\n        if (!_baseballServices_services.Animator.console) {\n            _baseballServices_services.Animator.animateFieldingTrajectory(this.game);\n        }\n    },\n    forcePlaySituation: function forcePlaySituation() {\n        var first = this.first,\n            second = this.second,\n            third = this.third;\n        return first && second && third && 'third' || first && second && 'second' || first && 'first';\n    },\n    //printRunnerNames : function() {\n    //    return [this.first ? this.first.getName() : '', this.second ? this.second.getName() : '', this.third ? this.third.getname() : ''];\n    //},\n    /**\r\n     * @param splayAngle\r\n     * @param landingDistance\r\n     * @returns {string|boolean}\r\n     */\n    findFielder: function findFielder(splayAngle, landingDistance) {\n        var angle = splayAngle - 90; // 0 is up the middle, clockwise increasing\n        if (Math.abs(angle) > 50) return false; // foul\n        if (landingDistance < 10 && landingDistance > -20) {\n            return 'catcher';\n        } else if (landingDistance >= 10 && landingDistance < 55 && Math.abs(angle) < 5) {\n            return 'pitcher';\n        }\n        if (landingDistance > 20 && landingDistance < 145 - Math.abs(angle) / 90 * 50) {\n            if (angle < -20) {\n                return 'third';\n            } else if (angle < 5) {\n                return 'short';\n            } else if (angle < 30) {\n                return 'second';\n            } else {\n                // first has reduced arc to receive the throw\n                return 'first';\n            }\n        } else if (landingDistance < 310) {\n            if (angle < -15) {\n                return 'left';\n            } else if (angle < 16) {\n                return 'center';\n            } else {\n                return 'right';\n            }\n        } else {\n            return false;\n        }\n    },\n    positions: {\n        pitcher: [90, 66],\n        catcher: [0, 0],\n        first: [90 + 45 - 7, 98],\n        second: [90 + 12.5, 130],\n        short: [90 - 12.5, 130],\n        third: [90 - 45 + 7, 98],\n        left: [45 + 14, 280],\n        center: [90, 280],\n        right: [135 - 14, 280]\n    },\n    getPolarDistance: function getPolarDistance(a, b) {\n        return _baseballServices_services.Mathinator.getPolarDistance(a, b);\n    },\n    fieldingTest: function fieldingTest() {\n        var angle = Math.random() * 90 + 45;\n        var distance = Math.random() * 320;\n        var fielder = this.findFielder(angle, distance);\n        var data = {};\n        if (fielder) {\n            var fielderCandidates = this.fielderSelectionTest(angle, distance, true);\n            data.fielder = fielderCandidates[1];\n            data[fielderCandidates[0]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[0]][0], this.positions[fielderCandidates[0]][1]]);\n            data[fielderCandidates[1]] = this.getPolarDistance([angle, distance], [this.positions[fielderCandidates[1]][0], this.positions[fielderCandidates[1]][1]]);\n            return data;\n        }\n    },\n    aggregateFieldingTest: function aggregateFieldingTest() {\n        var fielders = {\n            pitcher: { tally: 0, distances: [] },\n            catcher: { tally: 0, distances: [] },\n            first: { tally: 0, distances: [] },\n            second: { tally: 0, distances: [] },\n            short: { tally: 0, distances: [] },\n            third: { tally: 0, distances: [] },\n            left: { tally: 0, distances: [] },\n            center: { tally: 0, distances: [] },\n            right: { tally: 0, distances: [] },\n            'false': { tally: 0, distances: [] }\n        };\n        var selections = [];\n        for (var i = 0; i < 1000; i++) {\n            var angle = Math.random() * 90 + 45;\n            var distance = Math.random() * 320;\n            var fielder = this.findFielder(angle, distance);\n            fielders[fielder].tally++;\n            if (fielder) {\n                fielders[fielder].distances.push(this.getPolarDistance([angle, distance], [this.positions[fielder][0], this.positions[fielder][1]]));\n            }\n            selections.push([angle, distance]);\n            selections.push(this.fielderSelectionTest(angle, distance, true));\n        }\n        return [fielders, selections];\n    },\n    fielderSelectionTest: function fielderSelectionTest(angle, distance, returnFielder) {\n        var distances = [];\n        var minDistance = 300;\n        var giraffe = this;\n        var fielder = false;\n        Iterator.each(this.positions, function (position, spot) {\n            var thisDistance = giraffe.getPolarDistance([angle, distance], spot);\n            distances[thisDistance] = position;\n            if (minDistance > thisDistance) {\n                minDistance = thisDistance;\n                fielder = position;\n            }\n        });\n        return returnFielder ? [fielder, this.findFielder(angle, distance)] : distances;\n    }\n};\n\nexports.Field = Field;\n\n},{\"baseball/Model/Player\":5,\"baseball/Services/_services\":17}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Game = function Game(m) {\n    this.init(m);\n};\n\nGame.prototype = {\n    constructor: Game,\n    gamesIntoSeason: 0,\n    humanControl: 'home', //home, away, both, none\n    console: false,\n    quickMode: true,\n    debug: [],\n    pitcher: {}, // Player&\n    batter: {}, // Player&\n    init: function init(m) {\n        this.startTime = {\n            h: ('00' + (Math.random() * 8 + 10 | 0)).slice(-2),\n            m: ('00' + (Math.random() * 60 | 0)).slice(-2)\n        };\n        this.timeOfDay = {\n            h: this.startTime.h,\n            m: this.startTime.m\n        };\n        if (m) _baseballUtility_utils.text.mode = m;\n        this.gamesIntoSeason = 1 + Math.floor(Math.random() * 142);\n        this.field = new _baseballModelField.Field(this);\n        this.teams.away = new _baseballModelTeam.Team(this);\n        this.teams.home = new _baseballModelTeam.Team(this);\n        this.log = new _baseballUtilityLog.Log();\n        this.log.game = this;\n        this.debug = [];\n        this.helper = _baseballUtility_utils.helper;\n        while (this.teams.away.name == this.teams.home.name) {\n            this.teams.away.pickName();\n        }\n        this.umpire = new _baseballModelUmpire.Umpire(this);\n        if (this.humanPitching()) {\n            this.stage = 'pitch';\n        }\n        this.autoPitchSelect();\n    },\n    passMinutes: function passMinutes(minutes) {\n        this.timeOfDay.m = ('00' + (parseInt(this.timeOfDay.m) + parseInt(minutes))).slice(-2);\n        if (parseInt(this.timeOfDay.m) >= 60) {\n            this.timeOfDay.m = ('00' + parseInt(this.timeOfDay.m) % 60).slice(-2);\n            this.timeOfDay.h = ('00' + (parseInt(this.timeOfDay.h) + 1) % 24).slice(-2);\n        }\n    },\n    getInning: function getInning() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.inning + (this.half == 'top' ? 'オモテ' : 'ウラ') : this.half.toUpperCase() + ' ' + this.inning;\n    },\n    humanBatting: function humanBatting() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'away';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'home';\n        }\n    },\n    humanPitching: function humanPitching() {\n        var humanControl = this.humanControl;\n        if (humanControl == 'none') return false;\n        switch (this.half) {\n            case 'top':\n                return humanControl == 'both' || humanControl == 'home';\n            case 'bottom':\n                return humanControl == 'both' || humanControl == 'away';\n        }\n    },\n    end: function end() {\n        this.stage = 'end';\n        var e, n;\n        e = this.tally.home.R > this.tally.away.R ? 'Home team wins!' : this.tally.home.R == this.tally.away.R ? 'You tied. Yes, you can do that.' : 'Visitors win!';\n        n = this.tally.home.R > this.tally.away.R ? this.teams.home.getName() + 'の勝利' : this.tally.home.R == this.tally.away.R ? '引き分け' : this.teams.away.getName() + 'の勝利';\n        if (this.tally.home.R > this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.W++;\n            this.teams.away.positions.pitcher.stats.pitching.L++;\n        } else if (this.tally.home.R < this.tally.away.R) {\n            this.teams.home.positions.pitcher.stats.pitching.L++;\n            this.teams.away.positions.pitcher.stats.pitching.W++;\n        }\n        this.log.note(e, n);\n        this.log.note('Reload to play again', 'リロるは次の試合へ');\n    },\n    stage: 'pitch', //pitch, swing\n    simulateInput: function simulateInput(callback) {\n        var stage = this.stage,\n            pitchTarget = this.pitchTarget;\n        if (stage == 'end') {\n            return;\n        }\n        if (stage == 'pitch') {\n            this.autoPitch(callback);\n        } else if (stage == 'swing') {\n            if (typeof pitchTarget != 'object') {\n                this.pitchTarget = { x: 100, y: 100 };\n            }\n            this.autoSwing(this.pitchTarget.x, this.pitchTarget.y, callback);\n        }\n    },\n    simulatePitchAndSwing: function simulatePitchAndSwing(callback) {\n        if (this.stage == 'end') {\n            return;\n        }\n        this.autoPitch(callback);\n        var giraffe = this;\n        setTimeout(function () {\n            if (typeof giraffe.pitchTarget != 'object') {\n                giraffe.pitchTarget = { x: 100, y: 100 };\n            }\n            giraffe.autoSwing(giraffe.pitchTarget.x, giraffe.pitchTarget.y, function (callback) {\n                callback();\n            });\n        }, giraffe.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET + 1200 : _baseballServices_services.Animator.TIME_FROM_WINDUP + 1200);\n    },\n    /**\r\n     * generically receive click input and decide what to do\r\n     * @param x\r\n     * @param y\r\n     * @param callback\r\n     */\n    receiveInput: function receiveInput(x, y, callback) {\n        if (this.humanControl == 'none') {\n            return;\n        }\n        if (this.stage == 'end') {\n            return;\n        }\n        if (this.stage == 'pitch' && this.humanPitching()) {\n            this.thePitch(x, y, callback);\n        } else if (this.stage == 'swing' && this.humanBatting()) {\n            this.theSwing(x, y, callback);\n        }\n    },\n    autoPitchSelect: function autoPitchSelect() {\n        var pitchNames = Object.keys(this.pitcher.pitching);\n        var pitchName = pitchNames[Math.random() * pitchNames.length | 0];\n        var pitch = this.pitcher.pitching[pitchName];\n        pitch.name = pitchName;\n        this.pitchInFlight = pitch;\n    },\n    autoPitch: function autoPitch(callback) {\n        var pitcher = this.pitcher,\n            giraffe = this;\n        if (this.stage == 'pitch') {\n            this.autoPitchSelect();\n            pitcher.windingUp = true;\n            if (!this.console) {\n                $('.baseball').addClass('hide');\n                var windup = $('.windup');\n                windup.css('width', '100%');\n            }\n            var pitch = _baseballServices_services.Distribution.pitchLocation(),\n                x = pitch.x,\n                y = pitch.y;\n            if (this.quickMode) {\n                this.thePitch(x, y, callback);\n            } else {\n                windup.animate({ width: 0 }, this.field.hasRunnersOn() ? _baseballServices_services.Animator.TIME_FROM_SET : _baseballServices_services.Animator.TIME_FROM_WINDUP, function () {\n                    !giraffe.console && $('.baseball.pitch').removeClass('hide');\n                    giraffe.thePitch(x, y, callback);\n                    pitcher.windingUp = false;\n                });\n            }\n        }\n    },\n    autoSwing: function autoSwing(deceptiveX, deceptiveY, callback) {\n        var giraffe = this;\n        var bonus = this.batter.eye.bonus || 0,\n            eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus,\n            convergence,\n            convergenceSum;\n\n        var x = _baseballServices_services.Distribution.centralizedNumber(),\n            y = _baseballServices_services.Distribution.centralizedNumber();\n\n        if (100 * Math.random() < eye) {\n            // identified the break\n            deceptiveX = this.pitchInFlight.x;\n            deceptiveY = this.pitchInFlight.y;\n        }\n\n        if (100 * Math.random() < eye) {\n            // identified the location\n            convergence = 1.35 * 4.2 * eye / 100;\n            convergenceSum = 1 + convergence;\n        } else {\n            convergence = 1.35 * 0.5 * eye / 100;\n            convergenceSum = 1 + convergence;\n        }\n\n        x = (deceptiveX * convergence + x) / convergenceSum;\n        y = (deceptiveY * convergence + y) / convergenceSum;\n\n        this.swingResult.x = _baseballServices_services.Distribution.cpuSwing(x, this.pitchInFlight.x, eye);\n        this.swingResult.y = _baseballServices_services.Distribution.cpuSwing(y, this.pitchInFlight.y, eye * 0.75);\n\n        var swingProbability = _baseballServices_services.Distribution.swingLikelihood(eye, x, y, this.umpire);\n        if (swingProbability < 100 * Math.random()) {\n            x = -20;\n        }\n\n        callback(function () {\n            giraffe.theSwing(x, y);\n        });\n    },\n    opponentConnected: false,\n    waitingCallback: function waitingCallback() {},\n    awaitPitch: function awaitPitch(callback, swingResult) {\n        var giraffe = this;\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitSwing(swingResult);\n        } else {\n            setTimeout(function () {\n                giraffe.autoPitch(callback);\n            }, 4000);\n        }\n    },\n    awaitSwing: function awaitSwing(x, y, callback, pitchInFlight, pitchTarget) {\n        if (this.opponentConnected) {\n            this.waitingCallback = callback;\n            this.opponentService.emitPitch({\n                inFlight: pitchInFlight,\n                target: pitchTarget\n            });\n        } else {\n            this.autoSwing(x, y, callback);\n        }\n    },\n    thePitch: function thePitch(x, y, callback, override) {\n        if (this.stage == 'pitch') {\n            if (override) {\n                this.pitchInFlight = override.inFlight;\n                this.pitchTarget = override.target;\n                callback = this.waitingCallback;\n            } else {\n                this.pitcher.fatigue++;\n                this.pitchTarget.x = x;\n                this.pitchTarget.y = y;\n\n                this.pitchInFlight.breakDirection = this.helper.pitchDefinitions[this.pitchInFlight.name].slice(0, 2);\n                this.battersEye = _baseballUtility_utils.text.getBattersEye(this);\n\n                var control = Math.floor(this.pitchInFlight.control - this.pitcher.fatigue / 2);\n                this.pitchTarget.x = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.x, control);\n                this.pitchTarget.y = _baseballServices_services.Distribution.pitchControl(this.pitchTarget.y, control);\n\n                if (this.pitcher.throws == 'right') this.pitchInFlight.breakDirection[0] *= -1;\n\n                var breakEffect = _baseballServices_services.Distribution.breakEffect(this.pitchInFlight, this.pitcher, this.pitchTarget.x, this.pitchTarget.y);\n\n                this.pitchInFlight.x = breakEffect.x;\n                this.pitchInFlight.y = breakEffect.y;\n            }\n            this.log.notePitch(this.pitchInFlight, this.batter);\n\n            this.stage = 'swing';\n            if (this.humanControl != 'none' && (this.humanControl == 'both' || this.humanBatting())) {\n                callback();\n            } else {\n                this.awaitSwing(x, y, callback, this.pitchInFlight, this.pitchTarget);\n            }\n        }\n    },\n    battersEye: {\n        e: '',\n        n: ''\n    },\n    theSwing: function theSwing(x, y, callback, override) {\n        if (this.stage == 'swing') {\n            if (override) {\n                this.swingResult = override;\n                callback = this.waitingCallback;\n            } else {\n                this.swingResult = {};\n                var bonus = this.batter.eye.bonus || 0,\n                    eye = this.batter.skill.offense.eye + 6 * (this.umpire.count.balls + this.umpire.count.strikes) + bonus;\n\n                if (x >= 0 && x <= 200) {\n                    this.batter.fatigue++;\n\n                    this.swingResult.x = x - this.pitchInFlight.x;\n                    this.swingResult.y = y - this.pitchInFlight.y;\n                    this.swingResult.angle = this.setBatAngle();\n\n                    var recalculation = _baseballServices_services.Mathinator.getAngularOffset(this.swingResult, this.swingResult.angle);\n                    var precision = _baseballServices_services.Distribution.swing(eye);\n\n                    this.swingResult.x = recalculation.x * precision;\n                    this.swingResult.y = -5 + recalculation.y * precision;\n\n                    //log(recalculation.y, precision);\n\n                    this.swingResult.looking = false;\n                    if (Math.abs(this.swingResult.x) < 60 && Math.abs(this.swingResult.y) < 35) {\n                        this.swingResult.contact = true;\n                        this.field.determineSwingContactResult(this.swingResult);\n                        // log(this.swingResult.flyAngle, Math.floor(this.swingResult.x), Math.floor(this.swingResult.y));\n                        this.debug.push(this.swingResult);\n                    } else {\n                        this.swingResult.contact = false;\n                    }\n                } else {\n                    this.swingResult.strike = this.pitchInFlight.x > 50 && this.pitchInFlight.x < 150 && this.pitchInFlight.y > 35 && this.pitchInFlight.y < 165;\n                    this.batter.eye.bonus = Math.max(0, eye - Math.sqrt(Math.pow(this.batter.eye.x - this.pitchInFlight.x, 2) + Math.pow(this.batter.eye.y - this.pitchInFlight.y, 2)) * 1.5);\n                    this.swingResult.contact = false;\n                    this.swingResult.looking = true;\n                    this.batter.eye.x = this.pitchInFlight.x;\n                    this.batter.eye.y = this.pitchInFlight.y;\n                }\n            }\n            this.log.noteSwing(this.swingResult);\n            this.stage = 'pitch';\n\n            var half = this.half;\n            var result = this.swingResult;\n            this.umpire.makeCall();\n            emit = false;\n            if (half != this.half) {\n                callback = this.startOpponentPitching;\n                var emit = !override;\n            }\n\n            if (typeof callback == 'function') {\n                if (this.humanControl != 'none' && (this.humanControl == 'both' || this.teams[this.humanControl] == this.pitcher.team)) {\n                    callback();\n                    if (emit) {\n                        if (this.opponentService && this.opponentConnected) {\n                            this.opponentService.emitSwing(result);\n                        }\n                    }\n                } else {\n                    this.awaitPitch(callback, result);\n                }\n            }\n        }\n    },\n    setBatAngle: function setBatAngle(x, y) {\n        var giraffe = this,\n            pitchInFlight = this.pitchInFlight,\n            swingResult = this.swingResult;\n        var origin = {\n            x: giraffe.batter.bats == 'right' ? -10 : 210,\n            y: 160\n        };\n        var swing = {\n            x: x ? x : pitchInFlight.x + swingResult.x,\n            y: y ? y : pitchInFlight.y + swingResult.y\n        };\n        return _baseballServices_services.Mathinator.battingAngle(origin, swing);\n    },\n    debugOut: function debugOut() {\n        log('slugging', this.debug.filter(function (a) {\n            return a.bases == 1;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 2;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 3;\n        }).length, this.debug.filter(function (a) {\n            return a.bases == 4;\n        }).length);\n        log('grounders', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < -5;\n        }).length);\n        log('grounders thrown out', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle < -5 && a.thrownOut;\n        }).length);\n        log('weak air hits (thrown out)', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle > 0 && a.thrownOut;\n        }).length);\n        log('good air hits (not caught)', this.debug.filter(function (a) {\n            return !a.caught && !a.foul && a.flyAngle > 0 && !a.thrownOut;\n        }).length);\n\n        var PO = {};\n        this.debug.map(function (a) {\n            if (!a.fielder) return;\n            if (!PO[a.fielder]) {\n                PO[a.fielder] = 0;\n            }\n            if (!a.bases && a.fielder) {\n                PO[a.fielder]++;\n            }\n        });\n        log('fielding outs', PO);\n\n        var hitters = this.teams.away.lineup.concat(this.teams.home.lineup);\n        var atBats = [];\n        hitters.map(function (a) {\n            atBats = atBats.concat(a.getAtBats().map(function (ab) {\n                return ab.text;\n            }));\n        });\n\n        var LO = atBats.filter(function (ab) {\n            return ab == 'LO';\n        }).length;\n        var FO = atBats.filter(function (ab) {\n            return ab == 'FO';\n        }).length;\n        var GO = atBats.filter(function (ab) {\n            return ab == 'GO';\n        }).length;\n        var GIDP = atBats.filter(function (ab) {\n            return ab == '(IDP)';\n        }).length;\n        var SO = atBats.filter(function (ab) {\n            return ab == 'SO';\n        }).length;\n        var BB = atBats.filter(function (ab) {\n            return ab == 'BB';\n        }).length;\n        var SAC = atBats.filter(function (ab) {\n            return ab == 'SAC';\n        }).length;\n        var FC = atBats.filter(function (ab) {\n            return ab == 'FC';\n        }).length;\n        log('line outs', LO, 'fly outs', FO, 'groundouts', GO, 'strikeouts', SO, 'sacrifices', SAC, 'FC', FC, 'gidp', GIDP);\n        log('BB', BB);\n        log('fouls', this.debug.filter(function (a) {\n            return a.foul;\n        }).length);\n        log('fatigue, home vs away');\n        var teams = this.teams;\n        var fatigue = { home: {}, away: {} };\n        _baseballServices_services.Iterator.each(this.teams.home.positions, function (key) {\n            var position = key;\n            fatigue.home[position] = teams.home.positions[position].fatigue;\n            fatigue.away[position] = teams.away.positions[position].fatigue;\n        });\n        console.table(fatigue);\n        console.table(this.scoreboard);\n        console.table(this.tally);\n    },\n    toData: function toData() {\n        var data = {};\n        data.half = this.half;\n        data.inning = this.inning;\n        data.tally = this.tally;\n        var giraffe = this;\n        var players = this.teams.away.lineup.concat(this.teams.home.lineup);\n        // note: bench not included\n        data.field = {\n            first: players.indexOf(this.field.first),\n            second: players.indexOf(this.field.second),\n            third: players.indexOf(this.field.third)\n        };\n        data.batter = players.indexOf(this.batter);\n        data.deck = players.indexOf(this.deck);\n        data.hole = players.indexOf(this.hole);\n        data.teams = {\n            home: {\n                name: giraffe.teams.home.name,\n                nameJ: giraffe.teams.home.nameJ\n            },\n            away: {\n                name: giraffe.teams.away.name,\n                nameJ: giraffe.teams.away.nameJ\n            }\n        };\n        data.umpire = {\n            says: giraffe.umpire.says,\n            count: {\n                strikes: giraffe.umpire.count.strikes,\n                balls: giraffe.umpire.count.balls,\n                outs: giraffe.umpire.count.outs\n            }\n        };\n        data.players = players.map(function (player) {\n            return player.serialize();\n        });\n        data.log = {\n            pitchRecord: giraffe.log.pitchRecord,\n            record: giraffe.log.record\n        };\n        data.gamesIntoSeason = this.gamesIntoSeason;\n        return data;\n    },\n    fromData: function fromData(data) {\n        this.half = data.half;\n        this.inning = data.inning;\n        this.tally = data.tally;\n        var giraffe = this;\n        var players = data.players.map(function (playerJson, index) {\n            var playerData = JSON.parse(playerJson);\n            if (index > 8) {\n                var side = 'home';\n                index = index - 9;\n            } else {\n                side = 'away';\n            }\n            var player = giraffe.teams[side].positions[playerData.position];\n            player.fromData(playerData);\n            giraffe.teams[side].lineup[index] = player;\n            player.resetStats(data.gamesIntoSeason);\n            return player;\n        });\n        this.field.first = players[data.field.first];\n        this.field.second = players[data.field.second];\n        this.field.third = players[data.field.third];\n        this.batter = players[data.batter];\n        this.deck = players[data.deck];\n        this.hole = players[data.hole];\n        this.umpire.says = data.umpire.says;\n        this.umpire.count = data.umpire.count;\n        this.teams.away.name = data.teams.away.name;\n        this.teams.away.nameJ = data.teams.away.nameJ;\n        this.teams.home.name = data.teams.home.name;\n        this.teams.home.nameJ = data.teams.home.nameJ;\n        this.log.pitchRecord = data.log.pitchRecord;\n        this.log.record = data.log.record;\n        this.log.stabilizeShortRecord();\n        this.gamesIntoSeason = data.gamesIntoSeason;\n        return this;\n    },\n    startOpponentPitching: null, // late function\n    pitchTarget: { x: 100, y: 100 },\n    pitchInFlight: {\n        x: 100,\n        y: 100,\n        breakDirection: [0, 0],\n        name: 'slider',\n        velocity: 50,\n        'break': 50,\n        control: 50\n    },\n    swingResult: {\n        x: 100, //difference to pitch location\n        y: 100, //difference to pitch location\n        strike: false,\n        foul: false,\n        caught: false,\n        contact: false,\n        looking: true,\n        bases: 0,\n        fielder: 'short',\n        outs: 0\n    },\n    playResult: {\n        batter: '',\n        fielder: ''\n    },\n    showPlayResultPanels: function showPlayResultPanels(batter) {\n        var batterOutcomes = {};\n        var atBat = batter.atBats.slice(0).pop();\n        var fielderOutcomes = {};\n        var n = function n() {\n            var n = Math.floor(Math.random() * 3);\n            return n ? n : '';\n        };\n        this.playResult = {\n            batter: 'B_placeholder' + n() || batterOutcomes[atBat] || 'batter/' + atBat,\n            fielder: 'F_placeholder' + n() || fielderOutcomes[atBat] || 'fielder/' + atBat\n        };\n    },\n    pitchSelect: function pitchSelect() {},\n    field: null,\n    teams: {\n        away: null,\n        home: null\n    },\n    log: null,\n    half: 'top',\n    inning: 1,\n    scoreboard: {\n        away: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        },\n        home: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n            8: 0,\n            9: 0\n        }\n    },\n    resetTally: function resetTally() {\n        this.tally = {\n            away: {\n                H: 0,\n                R: 0,\n                E: 0\n            },\n            home: {\n                H: 0,\n                R: 0,\n                E: 0\n            }\n        };\n    },\n    tally: {\n        away: {\n            H: 0,\n            R: 0,\n            E: 0\n        },\n        home: {\n            H: 0,\n            R: 0,\n            E: 0\n        }\n    }\n};\n\nexports.Game = Game;\n\n},{\"baseball/Model/Field\":2,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":17,\"baseball/Utility/Log\":21,\"baseball/Utility/_utils\":22}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar Manager = function Manager(team) {\n    this.init(team);\n};\n\nManager.prototype = {\n    constructor: Manager,\n    init: function init(team) {\n        this.team = team;\n    },\n    makeLineup: function makeLineup() {\n        var jerseyNumber = 1;\n        this.team.positions.pitcher = this.selectForSkill(this.team.bench, ['pitching']);\n        this.team.positions.pitcher.position = 'pitcher';\n        if (!this.team.positions.pitcher.number) {\n            this.team.positions.pitcher.number = jerseyNumber++;\n        }\n        this.team.positions.catcher = this.selectForSkill(this.team.bench, ['defense', 'catching'], 'right');\n        this.team.positions.catcher.position = 'catcher';\n        if (!this.team.positions.catcher.number) {\n            this.team.positions.catcher.number = jerseyNumber++;\n        }\n        _baseballServices_services.Iterator.each(this.team.bench, function (key, player) {\n            if (!player.number) {\n                player.number = jerseyNumber++;\n            }\n        });\n        this.team.positions.short = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.short.position = 'short';\n        this.team.positions.second = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.second.position = 'second';\n        this.team.positions.third = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'right');\n        this.team.positions.third.position = 'third';\n        this.team.positions.center = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.center.position = 'center';\n        this.team.positions.left = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.left.position = 'left';\n        this.team.positions.right = this.selectForSkill(this.team.bench, ['defense', 'speed']);\n        this.team.positions.right.position = 'right';\n        this.team.positions.first = this.selectForSkill(this.team.bench, ['defense', 'fielding'], 'left');\n        this.team.positions.first.position = 'first';\n\n        this.team.lineup[3] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[3].order = 3;\n        this.team.lineup[2] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[2].order = 2;\n        this.team.lineup[4] = this.selectForSkill(this.team.positions, ['offense', 'power']);\n        this.team.lineup[4].order = 4;\n        this.team.lineup[0] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[0].order = 0;\n        this.team.lineup[1] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[1].order = 1;\n        this.team.lineup[5] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[5].order = 5;\n        this.team.lineup[6] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[6].order = 6;\n        this.team.lineup[7] = this.selectForSkill(this.team.positions, ['offense', 'eye']);\n        this.team.lineup[7].order = 7;\n        this.team.lineup[8] = this.selectForSkill(this.team.positions, ['offense', 'speed']);\n        this.team.lineup[8].order = 8;\n    },\n    selectForSkill: function selectForSkill(pool, skillset, requiredThrowingHandedness) {\n        if (this.team.bench.length || pool == this.team.positions) {\n            var selection = this.team.bench[0];\n            var rating = 0;\n            var index = 0;\n            _baseballServices_services.Iterator.each(pool, function (key, player) {\n                var skills = skillset.slice();\n                var cursor = player.skill;\n                var property = skills.shift();\n                while (property) {\n                    cursor = cursor[property];\n                    property = skills.shift();\n                }\n                if (!(player.order + 1) && cursor >= rating && (!requiredThrowingHandedness || player.throws == requiredThrowingHandedness)) {\n                    rating = cursor;\n                    selection = player;\n                    index = key;\n                }\n            });\n            if (pool == this.team.bench) {\n                delete this.team.bench[index];\n                this.team.bench = this.team.bench.filter(function (player) {\n                    return player instanceof selection.constructor;\n                });\n            }\n            return selection;\n        }\n        return 'no players available';\n    }\n};\n\nexports.Manager = Manager;\n\n},{\"baseball/Services/_services\":17}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar Player = function Player(team) {\n    this.init(team);\n    this.resetStats(this.team.game && this.team.game.gamesIntoSeason || 0);\n};\n\nPlayer.prototype = {\n    constructor: Player,\n    init: function init(team, hero) {\n        this.throws = Math.random() > 0.86 ? 'left' : 'right';\n        this.bats = Math.random() > 0.75 ? 'left' : 'right';\n        this.team = team;\n        this.skill = {};\n        this.eye = {\n            x: 100,\n            y: 100\n        };\n        this.pitching = { averaging: [] };\n        this.number = 0;\n        this.randomizeSkills(hero || Math.random() > 0.9);\n        var surnameKey = Math.floor(Math.random() * _baseballUtility_utils.data.surnames.length),\n            nameKey = Math.floor(Math.random() * _baseballUtility_utils.data.names.length);\n\n        this.name = _baseballUtility_utils.data.surnames[surnameKey] + ' ' + _baseballUtility_utils.data.names[nameKey];\n        var jSurname = _baseballUtility_utils.data.surnamesJ[surnameKey],\n            jGivenName = _baseballUtility_utils.data.namesJ[nameKey];\n        this.spaceName(jSurname, jGivenName);\n        this.surname = _baseballUtility_utils.data.surnames[surnameKey];\n        this.surnameJ = _baseballUtility_utils.data.surnamesJ[surnameKey];\n        this.atBats = [];\n    },\n    spaceName: function spaceName(jSurname, jGivenName) {\n        if (jSurname.length == 1 && jGivenName.length <= 2) jSurname += '・';\n        if (jGivenName.length == 1 && jSurname.indexOf('・') < 0 && jSurname.length <= 2) jSurname += '・';\n        this.nameJ = jSurname + jGivenName;\n        this.surnameJ = jSurname;\n    },\n    serialize: function serialize() {\n        var team = this.team;\n        delete this.team;\n        var data = JSON.stringify(this);\n        this.team = team;\n        return data;\n    },\n    fromData: function fromData(data) {\n        var giraffe = this;\n        _baseballServices_services.Iterator.each(data, function (key, value) {\n            giraffe[key] = value;\n        });\n        delete this.atBatObjects;\n        this.getAtBats();\n    },\n    resetStats: function resetStats() {\n        var gamesIntoSeason = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\n        var offense = this.skill.offense;\n        var defense = this.skill.defense;\n        var randBetween = function randBetween(a, b, skill) {\n            var total = 0,\n                count = 0;\n            skill += '';\n            if (!skill) skill = '';\n            _baseballServices_services.Iterator.each(skill.split(' '), function (key, value) {\n                var skill = value;\n                if (offense[skill]) skill = offense[skill];\n                if (defense[skill]) skill = defense[skill];\n                if (isNaN(skill)) skill = 50;\n                total += skill;\n                count++;\n            });\n\n            skill = Math.sqrt(0.05 + Math.random() * 0.95) * (total / (count * 0.97));\n            return Math.floor(skill / 100 * (b - a) + a);\n        };\n        var IP, ER, GS, W, L;\n        if (this.skill.pitching > 65) {\n            IP = (this.skill.pitching - 65) * gamesIntoSeason / 20;\n            ER = IP / 9 * randBetween(800, 215, this.skill.pitching) / 100;\n            if (IP > gamesIntoSeason) {\n                //starter\n                GS = Math.floor(gamesIntoSeason / 5);\n                W = randBetween(GS * 0.1, GS * 0.8, this.skill.pitching / 1.20);\n                L = randBetween(GS - W, 0, this.skill.pitching / 3);\n            } else {\n                //reliever\n                GS = Math.floor(gamesIntoSeason / 40);\n                W = randBetween(0, GS * 0.6, this.skill.pitching);\n                L = randBetween(GS - W, 0, this.skill.pitching);\n            }\n        }\n        var pa = randBetween(gamesIntoSeason * 3, gamesIntoSeason * 5, 'speed eye');\n        var paRemaining = pa;\n        var bb = Math.floor(randBetween(0, 18, 'power eye') * paRemaining / 100);\n        paRemaining -= bb;\n        var ab = paRemaining;\n        var so = Math.floor(randBetween(25, 2, 'eye') * paRemaining / 100);\n        paRemaining -= so;\n        var h = Math.floor(randBetween(185, 372, 'eye power speed') * paRemaining / 1000);\n        paRemaining -= h;\n\n        var doubles = randBetween(0, h / 4, 'power speed');\n        var triples = randBetween(0, h / 12, 'speed');\n        var hr = Math.max(0, randBetween(-h / 20, h / 5, 'power eye'));\n        var r = randBetween(h / 8, (h + bb) / 3, 'speed') + hr;\n        var rbi = randBetween(h / 8, h / 2, 'power eye') + hr;\n        var hbp = randBetween(0, gamesIntoSeason / 25);\n        var sac = randBetween(0, gamesIntoSeason / 5, 'eye');\n\n        var chances = randBetween(0, gamesIntoSeason * 10, 'fielding');\n        var E = randBetween(chances / 10, 0, 'fielding');\n        var PO = chances - E;\n\n        this.stats = {\n            pitching: {\n                pitches: 0, // in game\n                GS: GS,\n                W: W,\n                L: L,\n                strikes: 0, // in game\n                K: 0, // in game\n                getK9: function getK9() {\n                    return this.K / (this.IP[0] / 9);\n                },\n                getERA: function getERA() {\n                    return 9 * this.ER / Math.max(1 / 3, this.IP[0] + this.IP[1] / 3);\n                },\n                ERA: null,\n                ER: ER,\n                H: 0, // in game\n                HR: 0, // in game\n                BB: 0, // in game\n                IP: [IP, 0],\n                WHIP: 0,\n                getWHIP: function getWHIP() {\n                    return (this.H + this.BB) / (this.IP[0] ? this.IP[0] : 1);\n                }\n            },\n            batting: {\n                getBA: function getBA() {\n                    return this.h / Math.max(1, this.ab);\n                },\n                getBABIP: function getBABIP() {\n                    return (this.h - this.hr) / (this.ab - this.so - this.hr + this.sac);\n                },\n                ba: null,\n                getOBP: function getOBP() {\n                    return (this.h + this.bb + this.hbp) / (this.ab + this.bb + this.hbp + this.sac);\n                },\n                obp: null,\n                getSLG: function getSLG() {\n                    return (this.h - this['2b'] - this['3b'] - this.hr + 2 * this['2b'] + 3 * this['3b'] + 4 * this.hr) / this.ab;\n                },\n                slg: null,\n                pa: pa,\n                ab: ab,\n                so: so,\n                bb: bb,\n                h: h,\n                '2b': doubles,\n                '3b': triples,\n                hr: hr,\n                r: r,\n                rbi: rbi,\n                hbp: hbp,\n                sac: sac\n            },\n            fielding: {\n                E: E,\n                PO: PO, // should depend on position\n                A: Math.floor(Math.random() * 5) + 1 // ehh should depend on position\n            }\n        };\n        this.stats.pitching.ERA = this.stats.pitching.getERA();\n        this.stats.pitching.K9 = this.stats.pitching.getK9();\n        this.stats.pitching.WHIP = this.stats.pitching.getWHIP();\n        this.stats.batting.ba = this.stats.batting.getBA();\n    },\n    atBatObjects: [],\n    getAtBats: function getAtBats() {\n        if (this.atBats.length > this.atBatObjects.length) {\n            this.atBatObjects = this.atBats.map(function (item) {\n                return new _baseballModel_models.AtBat(item);\n            });\n        }\n        return this.atBatObjects;\n    },\n    recordRBI: function recordRBI() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.RBI_INDICATOR;\n    },\n    recordInfieldHit: function recordInfieldHit() {\n        this.atBats[this.atBats.length - 1] += _baseballModel_models.AtBat.prototype.INFIELD_HIT_INDICATOR;\n    },\n    getBaseRunningTime: function getBaseRunningTime() {\n        return _baseballServices_services.Mathinator.baseRunningTime(this.skill.offense.speed);\n    },\n    randomizeSkills: function randomizeSkills(hero, allPitches) {\n        this.hero = hero;\n        var giraffe = this;\n        var randValue = function randValue(isPitching) {\n            var value = Math.floor(Math.pow(Math.random(), 0.75) * 80 + Math.random() * 20);\n            if (hero) {\n                value += Math.floor((100 - value) * Math.max(Math.random(), isPitching ? 0 : 0.65));\n            }\n            if (isPitching) giraffe.pitching.averaging.push(value);\n            return value;\n        };\n        this.skill.offense = {\n            eye: randValue(),\n            power: randValue(),\n            speed: randValue()\n        };\n        this.skill.defense = {\n            catching: randValue(),\n            fielding: randValue(),\n            speed: randValue(),\n            throwing: randValue()\n        };\n        this.pitching.averaging = [];\n        this.pitching['4-seam'] = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        this.pitching.slider = {\n            velocity: randValue(true),\n            'break': randValue(true),\n            control: randValue(true)\n        };\n        if (Math.random() < 0.17 || allPitches) {\n            // can pitch!\n            if (Math.random() > 0.6 || allPitches) {\n                this.pitching['2-seam'] = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.18 || allPitches) {\n                this.pitching.fork = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() > 0.77 || allPitches) {\n                this.pitching.cutter = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n            if (Math.random() < 0.21 || allPitches) {\n                this.pitching.sinker = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.4 || allPitches) {\n                this.pitching.curve = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n\n            if (Math.random() < 0.9 || allPitches) {\n                this.pitching.change = {\n                    velocity: randValue(true),\n                    'break': randValue(true),\n                    control: randValue(true)\n                };\n            }\n        }\n        this.skill.pitching = Math.floor(this.pitching.averaging.reduce(function (prev, current) {\n            return prev + current;\n        }) / this.pitching.averaging.length + this.pitching.averaging.length * 3);\n        delete this.pitching.averaging;\n    },\n    getSurname: function getSurname() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.surnameJ : this.surname;\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    getUniformNumber: function getUniformNumber() {\n        return (0, _baseballUtility_utils.text)('#') + this.number;\n    },\n    getOrder: function getOrder() {\n        return (0, _baseballUtility_utils.text)([' 1st', ' 2nd', ' 3rd', ' 4th', ' 5th', ' 6th', '7th', ' 8th', ' 9th'][this.order]);\n    },\n    eye: {},\n    fatigue: 0,\n    name: '',\n    number: 0,\n    position: '',\n    atBats: []\n};\n\nexports.Player = Player;\n\n},{\"baseball/Model/_models\":8,\"baseball/Services/_services\":17,\"baseball/Utility/_utils\":22}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar Team = function Team(game) {\n    this.init(game);\n};\n\nTeam.prototype = {\n    constructor: Team,\n    init: function init(game) {\n        this.pickName();\n        this.lineup = [];\n        this.bench = [];\n        this.bullpen = [];\n        this.positions = {\n            pitcher: null,\n            catcher: null,\n            first: null,\n            second: null,\n            short: null,\n            third: null,\n            left: null,\n            center: null,\n            right: null\n        };\n        this.manager = new _baseballModelManager.Manager(this);\n        if (game !== 'no init') {\n            this.game = game;\n            for (var j = 0; j < 20; j++) {\n                this.bench.push(new _baseballModelPlayer.Player(this));\n            }\n            if (this.bench.length == 20) {\n                this.manager.makeLineup();\n            }\n        }\n    },\n    pickName: function pickName() {\n        var teamNameIndex = Math.floor(Math.random() * _baseballUtility_utils.data.teamNames.length);\n        this.name = _baseballUtility_utils.data.teamNames[teamNameIndex];\n        this.nameJ = _baseballUtility_utils.data.teamNamesJ[teamNameIndex];\n    },\n    getName: function getName() {\n        return _baseballUtility_utils.text.mode == 'n' ? this.nameJ : this.name;\n    },\n    lineup: [],\n    positions: {},\n    manager: null,\n    bench: [],\n    bullpen: [],\n    nowBatting: 0,\n    expanded: 'Player&'\n};\n\nexports.Team = Team;\n\n},{\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":22}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar Umpire = function Umpire(game) {\n    this.init(game);\n};\n\nUmpire.prototype = {\n    constructor: Umpire,\n    init: function init(game) {\n        this.game = game;\n        this.playBall();\n    },\n    count: {\n        strikes: 0,\n        balls: 0,\n        outs: 0\n    },\n    playBall: function playBall() {\n        var game = this.game;\n        game.half = 'top';\n        game.inning = 1;\n        game.batter = game.teams.away.lineup[0];\n        game.batterRunner = game.teams.away.lineup[0];\n        game.deck = game.teams.away.lineup[1];\n        game.hole = game.teams.away.lineup[2];\n        game.pitcher = game.teams.home.positions.pitcher;\n        var n = '一回のオモテ、' + game.teams.away.getName() + 'の攻撃対' + game.teams.home.getName() + '、ピッチャーは' + game.teams.home.positions.pitcher.getName() + '。',\n            e = 'Top 1, ' + game.teams.away.name + ' offense vs. ' + game.teams.home.positions.pitcher.name + ' starting for ' + game.teams.home.name;\n        game.log.note(e, n);\n        game.log.noteBatter(game.batter);\n    },\n    makeCall: function makeCall() {\n        this.says = '';\n        var game = this.game;\n        var result = game.swingResult;\n        var pitcher = game.pitcher;\n        var batter = game.batter;\n\n        if (game.swingResult.fielder) {\n            var fielder = game.teams[game.half == 'top' ? 'home' : 'away'].positions[result.fielder];\n        } else {\n            fielder = null;\n        }\n\n        game.batterRunner = game.batter;\n\n        pitcher.stats.pitching.pitches++;\n        if (result.looking) {\n            if (result.strike) {\n                this.count.strikes++;\n                pitcher.stats.pitching.strikes++;\n            } else {\n                this.count.balls++;\n            }\n        } else {\n            pitcher.stats.pitching.strikes++;\n            if (result.contact) {\n                game.passMinutes(1);\n                if (result.caught) {\n                    batter.stats.batting.pa++;\n                    pitcher.stats.pitching.IP[1]++;\n                    if (result.sacrificeAdvances.length && this.count.outs < 2) {\n                        batter.stats.batting.sac++;\n                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SACRIFICE);\n                        this.advanceRunners(false, null, result.sacrificeAdvances);\n                    } else {\n                        batter.stats.batting.ab++;\n                        if (result.flyAngle < 15) {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.LINEOUT);\n                        } else {\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FLYOUT);\n                        }\n                    }\n                    this.count.outs++;\n                    this.newBatter();\n                } else {\n                    if (result.foul) {\n                        this.count.strikes++;\n                        if (this.count.strikes > 2) this.count.strikes = 2;\n                    } else {\n                        batter.stats.batting.pa++;\n                        batter.stats.batting.ab++;\n                        if (result.firstOut) {\n                            result.additionalOuts.map(function (runner) {\n                                if (runner !== 'batter') {\n                                    game.field[runner] = null;\n                                }\n                            });\n                            this.count.outs += result.additionalOuts.length;\n                        }\n                        if (result.fieldersChoice && this.count.outs < 2) {\n                            result.bases = 0;\n                            this.count.outs++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.FIELDERS_CHOICE);\n                            this.advanceRunners(false, result.fieldersChoice);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            this.reachBase();\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        } else if (result.fieldersChoice) {\n                            result.bases = 0;\n                            result.thrownOut = true;\n                        }\n                        if (result.thrownOut) {\n                            this.count.outs++;\n                            pitcher.stats.pitching.IP[1]++;\n                            game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                            result.doublePlay && game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GIDP);\n                            if (this.count.outs < 3) {\n                                this.advanceRunners(false);\n                            }\n                            result.outs = this.count.outs;\n                            this.newBatter();\n                        }\n                        if (result.hitByPitch) {\n                            batter.stats.batting.ab--;\n                        }\n                        if (result.bases) {\n                            if (!result.error) {\n                                game.tally[game.half == 'top' ? 'away' : 'home'][_baseballUtility_utils.Log.prototype.SINGLE]++;\n                                pitcher.stats.pitching.H++;\n                            } else {\n                                if (result.bases > 0) {\n                                    game.tally[game.half == 'top' ? 'home' : 'away'].E++;\n                                    fielder.stats.fielding.E++;\n                                }\n                            }\n                            var bases = result.bases;\n                            switch (bases) {\n                                case 0:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.GROUNDOUT);\n                                    break;\n                                case 1:\n                                    if (result.error) {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.REACHED_ON_ERROR);\n                                    } else {\n                                        game.batter.atBats.push(_baseballUtility_utils.Log.prototype.SINGLE);\n                                        batter.stats.batting.h++;\n                                    }\n                                    break;\n                                case 2:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.DOUBLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['2b']++;\n                                    break;\n                                case 3:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.TRIPLE);\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting['3b']++;\n                                    break;\n                                case 4:\n                                    game.batter.atBats.push(_baseballUtility_utils.Log.prototype.HOMERUN);\n                                    pitcher.stats.pitching.HR++;\n                                    batter.stats.batting.h++;\n                                    batter.stats.batting.hr++;\n                                    break;\n                            }\n                            if (bases > 0 && bases < 4 && !result.error) {\n                                if (['left', 'right', 'center'].indexOf(result.fielder) == -1) {\n                                    batter.recordInfieldHit();\n                                }\n                            }\n                            if (bases >= 1) {\n                                this.advanceRunners();\n                                this.reachBase();\n                                bases -= 1;\n                            }\n                            while (bases > 0) {\n                                bases -= 1;\n                                this.advanceRunners();\n                            }\n                            this.newBatter();\n                        }\n                    }\n                }\n            } else {\n                this.count.strikes++;\n            }\n        }\n\n        this.says = this.count.balls + ' and ' + this.count.strikes;\n\n        result.outs = this.count.outs;\n\n        if (this.count.strikes > 2) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.ab++;\n            batter.stats.batting.so++;\n            pitcher.stats.pitching.K++;\n            this.count.outs++;\n            pitcher.stats.pitching.IP[1]++;\n            this.count.balls = this.count.strikes = 0;\n            this.says = 'Strike three. Batter out.';\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.STRIKEOUT);\n            this.newBatter();\n        }\n        if (this.count.balls > 3) {\n            batter.stats.batting.pa++;\n            batter.stats.batting.bb++;\n            pitcher.stats.pitching.BB++;\n            this.says = 'Ball four.';\n            this.count.balls = this.count.strikes = 0;\n            batter.atBats.push(_baseballUtility_utils.Log.prototype.WALK);\n            this.advanceRunners(true).reachBase().newBatter();\n        }\n        if (this.count.outs > 2) {\n            this.says = 'Three outs, change.';\n            this.count.outs = this.count.balls = this.count.strikes = 0;\n            pitcher.stats.pitching.IP[0]++;\n            pitcher.stats.pitching.IP[1] = 0;\n            this.changeSides();\n        }\n    },\n    reachBase: function reachBase() {\n        var game = this.game;\n        game.field.first = game.batter;\n        game.field.first.fatigue += 2;\n        return this;\n    },\n    advanceRunners: function advanceRunners(isWalk, fieldersChoice, sacrificeAdvances) {\n        isWalk = !!isWalk;\n        var game = this.game;\n        var first = game.field.first,\n            second = game.field.second,\n            third = game.field.third,\n            swing = game.swingResult;\n\n        if (isWalk) {\n            if (first) {\n                if (second) {\n                    if (third) {\n                        //bases loaded\n                        game.batter.recordRBI();\n                        game.batter.stats.batting.rbi++;\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                        third.stats.batting.r++;\n                        game.pitcher.stats.pitching.ER++;\n                        game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                        game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                        game.field.third = second;\n                        game.field.second = first;\n                        first = null;\n                    } else {\n                        // 1st and second\n                        game.field.third = second;\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                } else {\n                    if (third) {\n                        // first and third\n                        game.field.second = first;\n                        game.field.first = null;\n                    } else {\n                        // first only\n                        game.field.second = first;\n                        game.field.first = null;\n                    }\n                }\n            } else {\n                // no one on first\n            }\n        } else {\n                if (fieldersChoice) {\n                    game.field[fieldersChoice] = null;\n                    first = game.field.first;\n                    second = game.field.second;\n                    third = game.field.third;\n                }\n                var canAdvance = function canAdvance() {\n                    return true;\n                };\n                if (sacrificeAdvances) {\n                    canAdvance = function (position) {\n                        switch (position) {\n                            case 'first':\n                                return sacrificeAdvances.indexOf('first') > -1 && (canAdvance('second') || !second);\n                            case 'second':\n                                return sacrificeAdvances.indexOf('second') > -1 && (canAdvance('third') || !third);\n                            case 'third':\n                                return sacrificeAdvances.indexOf('third') > -1;\n                        }\n                    };\n                }\n                if (third instanceof _baseballModelPlayer.Player && canAdvance('third')) {\n                    // run scored\n                    game.scoreboard[game.half == 'top' ? 'away' : 'home'][game.inning]++;\n                    game.tally[game.half == 'top' ? 'away' : 'home'].R++;\n                    if (game.batter != third) {\n                        game.batter.recordRBI();\n                        third.atBats.push(_baseballUtility_utils.Log.prototype.RUN);\n                    }\n                    game.batter.stats.batting.rbi++;\n                    third.stats.batting.r++;\n                    game.pitcher.stats.pitching.ER++;\n                }\n                if (second && canAdvance('second')) {\n                    game.field.third = second;\n                } else {\n                    game.field.third = null;\n                }\n                if (first && canAdvance('first')) {\n                    game.field.second = first;\n                } else {\n                    game.field.second = null;\n                }\n                game.field.first = null;\n            }\n        return this;\n    },\n    newBatter: function newBatter() {\n        var game = this.game;\n        game.passMinutes(2);\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.count.balls = this.count.strikes = 0;\n        game.log.notePlateAppearanceResult(game);\n        var team = game.half == 'bottom' ? game.teams.home : game.teams.away;\n        game.lastBatter = game.batter;\n        game.batter = team.lineup[(team.nowBatting + 1) % 9];\n        game.deck = team.lineup[(team.nowBatting + 2) % 9];\n        game.hole = team.lineup[(team.nowBatting + 3) % 9];\n        team.nowBatting = (team.nowBatting + 1) % 9;\n        if (this.count.outs < 3) {\n            game.log.noteBatter(game.batter);\n        }\n        game.showPlayResultPanels(game.lastBatter);\n    },\n    changeSides: function changeSides() {\n        var game = this.game;\n        game.passMinutes(5);\n        game.swingResult = {};\n        game.swingResult.looking = true; // hide bat\n        game.pitchInFlight.x = null; // hide ball\n        game.pitchInFlight.y = null; // hide ball\n        game.log.pitchRecord = {\n            e: [],\n            n: []\n        };\n        var offense, defense;\n        game.field.first = null;\n        game.field.second = null;\n        game.field.third = null;\n        if (game.half == 'top') {\n            if (game.inning == 9 && game.tally.home.R > game.tally.away.R) {\n                return game.end();\n            }\n            game.half = 'bottom';\n        } else {\n            if (game.inning + 1 > 9) {\n                return game.end();\n            }\n            game.inning++;\n            game.half = 'top';\n        }\n        offense = game.half == 'top' ? 'away' : 'home';\n        defense = game.half == 'top' ? 'home' : 'away';\n        var n = game.inning + '回の' + (game.half == 'top' ? 'オモテ' : 'ウラ') + '、' + game.teams[game.half == 'top' ? 'away' : 'home'].getName() + 'の攻撃。',\n            e = (game.half == 'top' ? 'Top' : 'Bottom') + ' ' + game.inning;\n        game.log.note(e, n);\n        var team = game.teams[offense];\n        game.batter = team.lineup[team.nowBatting];\n        game.batterRunner = game.batter;\n        game.deck = team.lineup[(team.nowBatting + 1) % 9];\n        game.hole = team.lineup[(team.nowBatting + 2) % 9];\n\n        game.pitcher = game.teams[defense].positions.pitcher;\n        game.log.noteBatter(game.batter);\n        game.autoPitchSelect();\n    },\n    says: 'Play ball!',\n    game: null\n};\n\nexports.Umpire = Umpire;\n\n},{\"baseball/Model/Player\":5,\"baseball/Utility/_utils\":22}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nexports.AtBat = _baseballModelAtBat.AtBat;\nexports.Field = _baseballModelField.Field;\nexports.Game = _baseballModelGame.Game;\nexports.Manager = _baseballModelManager.Manager;\nexports.Player = _baseballModelPlayer.Player;\nexports.Team = _baseballModelTeam.Team;\nexports.Umpire = _baseballModelUmpire.Umpire;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _meshBall = require('./mesh/Ball');\n\nvar _sceneLighting = require('./scene/lighting');\n\nvar VERTICAL_CORRECTION = 0;\n\nvar Loop = (function () {\n    function Loop() {\n        _classCallCheck(this, Loop);\n\n        this.main();\n    }\n\n    _createClass(Loop, [{\n        key: 'loop',\n        value: function loop() {\n            requestAnimationFrame(this.loop.bind(this));\n            this.objects.map(function (i) {\n                return i.animate();\n            });\n            this.renderer.render(this.scene, this.camera);\n        }\n    }, {\n        key: 'main',\n        value: function main() {\n            this.objects = [];\n            if (this.getThree()) {\n\n                var THREE = this.THREE;\n                var scene = this.scene = new THREE.Scene();\n                var camera = this.camera = new THREE.PerspectiveCamera(75, this.getAspect(), 0.1, 500);\n                this.attach();\n                _sceneLighting.lighting.addTo(scene);\n\n                camera.position.z = 5;\n                camera.position.y += VERTICAL_CORRECTION;\n                this.loop();\n            }\n        }\n    }, {\n        key: 'getThree',\n        value: function getThree() {\n            if (this.THREE === Loop.prototype.THREE && typeof window === 'object' && window.THREE) {\n                return this.THREE = window.THREE;\n            }\n            return false;\n        }\n    }, {\n        key: 'attach',\n        value: function attach() {\n            window.removeEventListener('resize', this.onResize.bind(this), false);\n            window.addEventListener('resize', this.onResize.bind(this), false);\n            var element = document.getElementsByClassName('webgl-container')[0];\n            element.innerHTML = '';\n            var THREE = this.THREE;\n            var renderer = new THREE.WebGLRenderer({ alpha: true });\n            setSize(renderer);\n            //renderer.setClearColor(0xffffff, 0);\n\n            element.appendChild(renderer.domElement);\n\n            this.renderer = renderer;\n            return renderer;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.camera.aspect = Loop.prototype.getAspect();\n            this.camera.updateProjectionMatrix();\n            setSize(this.renderer);\n        }\n    }, {\n        key: 'test',\n        value: function test(d, s, f) {\n            var ball = new _meshBall.Ball();\n            ball.deriveTrajectory({\n                travelDistance: d,\n                splay: s,\n                flyAngle: f\n            });\n            ball.join(this);\n        }\n    }]);\n\n    return Loop;\n})();\n\nvar HEIGHT = 700;\nvar setSize = function setSize(renderer) {\n    var element = document.getElementsByClassName('webgl-container')[0];\n    var width = element.offsetWidth;\n    renderer.setSize(width, HEIGHT);\n};\n\nLoop.prototype.THREE = {};\nLoop.prototype.getAspect = function () {\n    var element = document.getElementsByClassName('webgl-container')[0];\n    return element.offsetWidth / HEIGHT;\n};\nLoop.prototype.constructors = {\n    Ball: _meshBall.Ball\n};\n\nexports.Loop = Loop;\n\n},{\"./mesh/Ball\":11,\"./scene/lighting\":12}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _Loop = require('../Loop');\n\nvar AbstractMesh = (function () {\n    function AbstractMesh() {\n        _classCallCheck(this, AbstractMesh);\n    }\n\n    _createClass(AbstractMesh, [{\n        key: 'attach',\n        value: function attach() {\n            var objects = this.loop.objects;\n            if (objects.indexOf(this) === -1) {\n                objects.push(this);\n            }\n            this.loop.scene.add(this.mesh);\n        }\n    }, {\n        key: 'detach',\n        value: function detach() {\n            var objects = this.loop.objects;\n            var index = objects.indexOf(this);\n            if (index !== -1) {\n                this.loop.objects.splice(index, 1);\n            }\n            this.loop.scene.remove(this.mesh);\n        }\n    }, {\n        key: 'join',\n        value: function join(loop) {\n            this.loop = loop || this.loop;\n            if (this.loop instanceof _Loop.Loop) {\n                this.attach();\n            }\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {}\n    }]);\n\n    return AbstractMesh;\n})();\n\nexports.AbstractMesh = AbstractMesh;\n\n},{\"../Loop\":9}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _AbstractMesh2 = require('./AbstractMesh');\n\nvar _Loop = require('../Loop');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nvar Ball = (function (_AbstractMesh) {\n    _inherits(Ball, _AbstractMesh);\n\n    function Ball(loop, trajectory, rpm) {\n        _classCallCheck(this, Ball);\n\n        _get(Object.getPrototypeOf(Ball.prototype), 'constructor', this).call(this);\n        if (!(loop instanceof _Loop.Loop) && loop instanceof Array) {\n            trajectory = loop;\n        }\n        this.trajectory = trajectory ? trajectory : [];\n        this.breakingTrajectory = [];\n        this.getMesh();\n        if (loop instanceof _Loop.Loop) {\n            this.join();\n        }\n        this.setRotation(rpm || this.DEFAULT_RPM);\n    }\n\n    _createClass(Ball, [{\n        key: 'getMesh',\n        value: function getMesh() {\n            /** @see threex.sportballs */\n            var baseURL = 'public/';\n            var THREE = window.THREE;\n            var loader = new THREE.TextureLoader();\n            var textureColor = loader.load(baseURL + 'images/SoftballColor.jpg');\n            var textureBump = loader.load(baseURL + 'images/SoftballBump.jpg');\n            var geometry = new THREE.SphereGeometry(0.5, 32, 16);\n            var material = new THREE.MeshPhongMaterial({\n                map: textureColor,\n                bumpMap: textureBump,\n                bumpScale: 0.01\n            });\n            this.mesh = new THREE.Mesh(geometry, material);\n            return this.mesh;\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var frame = this.trajectory.shift(),\n                pos = this.mesh.position;\n\n            if (frame) {\n                pos.x += frame.x;\n                pos.y += frame.y;\n                pos.z += frame.z;\n            }\n            if (frame.x + frame.y + frame.z !== 0) {\n                this.rotate();\n            }\n            if (!this.trajectory.length) {\n                this.detach();\n            }\n        }\n    }, {\n        key: 'rotate',\n        value: function rotate() {\n            var rotation = this.rotation;\n            this.mesh.rotation.x += rotation;\n            this.mesh.rotation.y += rotation;\n        }\n    }, {\n        key: 'setRotation',\n        value: function setRotation(rpm) {\n            this.RPM = rpm;\n            this.RPS = this.RPM / 60;\n            this.RP60thOfASecond = this.RPS / 60;\n            this.rotation = this.RP60thOfASecond * 360 * Math.PI / 180;\n        }\n    }, {\n        key: 'exportPositionTo',\n        value: function exportPositionTo(mesh) {\n            mesh.position.x = this.mesh.position.x;\n            mesh.position.y = this.mesh.position.y;\n            mesh.position.z = this.mesh.position.z;\n        }\n    }, {\n        key: 'derivePitchingTrajectory',\n        value: function derivePitchingTrajectory(game) {\n            var top = 200 - game.pitchTarget.y,\n                left = game.pitchTarget.x,\n                breakTop = 200 - game.pitchInFlight.y,\n                breakLeft = game.pitchInFlight.x,\n                flightTime = _baseballServicesMathinator.Mathinator.getFlightTime(game.pitchInFlight.velocity);\n\n            var scale = 2.8 / 100;\n            var origin = {\n                x: (game.pitcher.throws == 'left' ? 20 : -20) * scale,\n                y: 50 * scale,\n                z: -60.5 // mound distance\n            };\n            this.mesh.position.x = origin.x;\n            this.mesh.position.y = origin.y;\n            this.mesh.position.z = origin.z;\n\n            var terminus = {\n                x: (left - 100) * scale,\n                y: (100 - top) * scale,\n                z: 0\n            };\n            var breakingTerminus = {\n                x: (breakLeft - 100) * scale,\n                y: (100 - breakTop) * scale,\n                z: 0\n            };\n\n            var lastPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            },\n                lastBreakingPosition = {\n                x: origin.x, y: origin.y, z: origin.z\n            };\n\n            var frames = [],\n                breakingFrames = [],\n                frameCount = flightTime * 60 | 0,\n                counter = frameCount | 0,\n                frame = 0;\n\n            while (counter--) {\n                var progress = ++frame / frameCount;\n\n                var position = {\n                    x: origin.x + (terminus.x - origin.x) * progress,\n                    y: origin.y + (terminus.y - origin.y) * progress,\n                    z: origin.z + (terminus.z - origin.z) * progress\n                };\n                if (progress > 0.7) {\n                    var breakingPosition = {\n                        x: origin.x + (breakingTerminus.x - origin.x) * progress,\n                        y: origin.y + (breakingTerminus.y - origin.y) * progress,\n                        z: origin.z + (breakingTerminus.z - origin.z) * progress\n                    };\n                } else {\n                    breakingPosition = position;\n                }\n                var increment = {\n                    x: position.x - lastPosition.x,\n                    y: position.y - lastPosition.y,\n                    z: position.z - lastPosition.z\n                };\n                var breakingIncrement = {\n                    x: breakingPosition.x - lastBreakingPosition.x,\n                    y: breakingPosition.y - lastBreakingPosition.y,\n                    z: breakingPosition.z - lastBreakingPosition.z\n                };\n\n                lastPosition = position;\n                lastBreakingPosition = breakingPosition;\n\n                breakingFrames.push(breakingIncrement);\n                frames.push(increment);\n            }\n\n            var pause = 60;\n            while (pause--) {\n                breakingFrames.push({ x: 0, y: 0, z: 0 });\n                frames.push({ x: 0, y: 0, z: 0 });\n            }\n\n            this.breakingTrajectory = breakingFrames;\n            this.trajectory = frames;\n            return frames;\n        }\n    }, {\n        key: 'deriveTrajectory',\n        value: function deriveTrajectory(result, pitch) {\n            var dragScalarApproximation = {\n                distance: 1,\n                apexHeight: 0.57,\n                airTime: 0.96\n            };\n\n            var flyAngle = result.flyAngle,\n                distance = Math.abs(result.travelDistance),\n                scalar = result.travelDistance < 0 ? -1 : 1,\n                splay = result.splay; // 0 is up the middle\n\n            flyAngle = 1 + Math.abs(flyAngle); // todo why plus 1?\n            if (flyAngle > 90) flyAngle = 180 - flyAngle;\n\n            // velocity in m/s, I think\n            var velocity = dragScalarApproximation.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * flyAngle / 180));\n            var velocityVerticalComponent = Math.sin(_baseballServicesMathinator.Mathinator.RADIAN * flyAngle) * velocity;\n            // in feet\n            var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * dragScalarApproximation.apexHeight;\n            // in seconds\n            var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * dragScalarApproximation.airTime; // 2x freefall equation\n\n            var scale = 2.8 / 100;\n\n            var origin = {\n                x: pitch.x + result.x - 100,\n                y: pitch.y + result.y - 100,\n                z: 0\n            };\n\n            this.mesh.position.x = origin.x * scale;\n            this.mesh.position.y = origin.y * scale;\n            this.mesh.position.z = origin.z;\n\n            var extrema = {\n                x: Math.sin(splay / 180 * Math.PI) * distance,\n                y: apexHeight,\n                z: -Math.cos(splay / 180 * Math.PI) * distance\n            };\n\n            var frames = [],\n                frameCount = airTime * 60 | 0,\n                counter = frameCount,\n                frame = 0;\n\n            var lastHeight = 0;\n\n            while (counter--) {\n                var progress = ++frame / frameCount,\n                    percent = progress * 100;\n\n                // this equation is approximate\n                var y = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 1.2) * apexHeight;\n\n                frames.push({\n                    x: extrema.x / frameCount,\n                    y: y - lastHeight,\n                    z: extrema.z / frameCount\n                });\n\n                lastHeight = y;\n            }\n            this.trajectory = frames;\n            return frames;\n        }\n    }]);\n\n    return Ball;\n})(_AbstractMesh2.AbstractMesh);\n\nBall.prototype.DEFAULT_RPM = 1000;\nBall.prototype.RPM = 1000;\nBall.prototype.RPS = 1000 / 60;\nBall.prototype.RP60thOfASecond = 1000 / 60 / 60;\nBall.prototype.rotation = 1000 / 60 / 60 * 360 * Math.PI / 180; // in radians per 60th of a second\n\nexports.Ball = Ball;\n\n},{\"../Loop\":9,\"./AbstractMesh\":10,\"baseball/Services/Mathinator\":16}],12:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar lighting = {\n    addTo: function addTo(scene) {\n        var light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n        scene.add(light);\n    }\n};\n\nexports.lighting = lighting;\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballServices_services = require('baseball/services/_services');\n\nvar _baseballRenderLoop = require('baseball/Render/Loop');\n\nvar Animator = function Animator() {\n    this.init();\n    throw new Error('No need to instantiate Animator');\n};\nAnimator.TweenMax = {};\nAnimator.prototype = {\n    identifier: 'Animator',\n    constructor: Animator,\n    console: false,\n    TweenMax: {},\n    THREE: {},\n    init: function init() {},\n    beginRender: function beginRender() {\n        this.loop = new _baseballRenderLoop.Loop();\n        return this.loop;\n    },\n    loadTweenMax: function loadTweenMax() {\n        if (this.console || typeof window !== 'object') {\n            Animator.TweenMax = {\n                'set': function set() {},\n                'to': function to() {},\n                'from': function from() {},\n                killAll: function killAll() {}\n            };\n        } else {\n            Animator.TweenMax = window.TweenMax;\n        }\n        return Animator.TweenMax;\n    },\n    TIME_FROM_SET: 2300, //ms\n    TIME_FROM_WINDUP: 3600, //ms\n    HOLD_UP_ALLOWANCE: 0.75, // seconds\n    pitchTarget: null,\n    pitchBreak: null,\n    renderingMode: 'webgl',\n    /**\r\n     * this is called with $scope context binding\r\n     * @param callback\r\n     */\n    updateFlightPath: function updateFlightPath(callback) {\n        if (Animator.console) return;\n\n        if (Animator.renderingMode === 'webgl') {\n            return Animator.renderFlightPath(callback, this);\n        }\n        return Animator.tweenFlightPath(callback, this);\n    },\n    tweenFlightPath: function tweenFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            top = 200 - game.pitchTarget.y,\n            left = game.pitchTarget.x,\n            breakTop = 200 - game.pitchInFlight.y,\n            breakLeft = game.pitchInFlight.x,\n            $baseballs = $('.baseball'),\n            flightSpeed = 1.3 - 0.6 * (game.pitchInFlight.velocity + 300) / 400,\n            originTop = 50,\n            originLeft = 110 + (game.pitcher.throws == 'left' ? 20 : -20);\n        var pitch = this.pitchTarget = $('.main-area .target .baseball.pitch'),\n            henka = this.pitchBreak = $('.main-area .target .baseball.break'),\n            quarter = flightSpeed / 4;\n\n        var pitchTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 12, 4),\n            targetTransition = _baseballServices_services.Mathinator.pitchTransition(top, left, originTop, originLeft, quarter, 10, 3);\n\n        var transitions = [pitchTransition(0, 0), pitchTransition(10, 0), pitchTransition(30, 1), pitchTransition(50, 2), targetTransition(100, 3), pitchTransition(100, 3, breakTop, breakLeft)];\n\n        TweenMax.set([pitch, henka], transitions[0]);\n        TweenMax.to([pitch, henka], quarter, transitions[1]);\n        TweenMax.to([pitch, henka], quarter, transitions[2]);\n        TweenMax.to([pitch, henka], quarter, transitions[3]);\n        TweenMax.to(pitch, quarter, transitions[4]);\n        TweenMax.to(henka, quarter, transitions[5]);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback == 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        if (!game.pitchInFlight.x) {\n            $baseballs.addClass('hide');\n        } else {\n            if (game.humanBatting() && Math.random() * 180 > game.batter.skill.offense.eye) {\n                $('.baseball.break').addClass('hide');\n            } else {\n                $('.baseball.break').removeClass('hide');\n            }\n            $('.baseball.pitch').removeClass('hide');\n        }\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    renderFlightPath: function renderFlightPath(callback, $scope) {\n        var TweenMax = Animator.loadTweenMax();\n        TweenMax.killAll();\n        var game = $scope.y,\n            flightSpeed = _baseballServices_services.Mathinator.getFlightTime(game.pitchInFlight.velocity);\n\n        if (!this.loop) {\n            this.beginRender();\n        }\n        var ball = new this.loop.constructors.Ball();\n        //var breakingBall = new this.loop.constructors.Ball();\n        Animator._ball = ball;\n        ball.derivePitchingTrajectory(game);\n        ball.trajectory = ball.breakingTrajectory;\n        //ball.exportPositionTo(breakingBall.mesh);\n        ball.join(this.loop);\n        //breakingBall.join(this.loop);\n\n        $scope.lastTimeout = setTimeout(function () {\n            $scope.allowInput = true;\n            if (typeof callback === 'function') {\n                callback();\n                $scope.$apply();\n            }\n        }, flightSpeed * 1000);\n\n        var $baseballs = $('.baseball');\n        $baseballs.addClass('hide');\n\n        if (game.humanBatting() && !game.humanPitching()) {\n            $scope.holdUpTimeouts.push(setTimeout(function () {\n                $scope.holdUp();\n            }, (flightSpeed + Animator.HOLD_UP_ALLOWANCE) * 1000));\n        }\n    },\n    animateFieldingTrajectory: function animateFieldingTrajectory(game) {\n        if (Animator.console) return game.swingResult;\n\n        if (this.renderingMode === 'webgl') {\n            this.tweenFieldingTrajectory(game, true);\n            return Animator.renderFieldingTrajectory(game);\n        }\n        return this.tweenFieldingTrajectory(game);\n    },\n    tweenFieldingTrajectory: function tweenFieldingTrajectory(game, splayOnly) {\n        var TweenMax = Animator.loadTweenMax();\n        var ball = $('.splay-indicator-ball');\n        TweenMax.killAll();\n        var result = game.swingResult;\n\n        var linearApproximateDragScalar = {\n            distance: 1,\n            apexHeight: 0.57,\n            airTime: 0.96\n        };\n\n        var angle = result.flyAngle,\n            distance = Math.abs(result.travelDistance),\n            scalar = result.travelDistance < 0 ? -1 : 1;\n\n        _baseballServices_services.Mathinator.memory.bounding = angle < 0;\n        angle = 1 + Math.abs(angle);\n        if (angle > 90) angle = 180 - angle;\n\n        var velocity = linearApproximateDragScalar.distance * Math.sqrt(9.81 * distance / Math.sin(2 * Math.PI * angle / 180));\n        var velocityVerticalComponent = Math.sin(_baseballServices_services.Mathinator.RADIAN * angle) * velocity;\n        var apexHeight = velocityVerticalComponent * velocityVerticalComponent / (2 * 9.81) * linearApproximateDragScalar.apexHeight;\n        var airTime = 1.5 * Math.sqrt(2 * apexHeight / 9.81) * linearApproximateDragScalar.airTime; // 2x freefall equation\n\n        //log('angle', angle, 'vel', velocity, 'apex', apexHeight, 'air', airTime, 'dist', result.travelDistance);\n        var quarter = airTime / 4;\n        var mathinator = new _baseballServices_services.Mathinator();\n        var transitions = [mathinator.transitionalTrajectory(0, quarter, 0, apexHeight, scalar * distance, result.splay), mathinator.transitionalTrajectory(25, quarter, 0), mathinator.transitionalTrajectory(50, quarter, 1), mathinator.transitionalTrajectory(75, quarter, 2), mathinator.transitionalTrajectory(100, quarter, 3)];\n        TweenMax.set(ball, transitions[0]);\n        TweenMax.to(ball, quarter, transitions[1]);\n        TweenMax.to(ball, quarter, transitions[2]);\n        TweenMax.to(ball, quarter, transitions[3]);\n        TweenMax.to(ball, quarter, transitions[4]);\n\n        if (!splayOnly) {\n            ball = $('.indicator.baseball.break').removeClass('hide').show();\n            var time = quarter / 2;\n            transitions = [mathinator.transitionalCatcherPerspectiveTrajectory(0, time, 0, apexHeight, scalar * distance, result.splay, game.pitchInFlight), mathinator.transitionalCatcherPerspectiveTrajectory(12.5, time * 0.75, 0), mathinator.transitionalCatcherPerspectiveTrajectory(25, time * 0.80, 1), mathinator.transitionalCatcherPerspectiveTrajectory(37.5, time * 0.85, 2), mathinator.transitionalCatcherPerspectiveTrajectory(50, time * 0.90, 3), mathinator.transitionalCatcherPerspectiveTrajectory(62.5, time * 0.95, 4), mathinator.transitionalCatcherPerspectiveTrajectory(75, time, 5), mathinator.transitionalCatcherPerspectiveTrajectory(87.5, time, 6), mathinator.transitionalCatcherPerspectiveTrajectory(100, time, 7)];\n            TweenMax.set(ball, transitions[0]);\n            TweenMax.to(ball, time, transitions[1]);\n            TweenMax.to(ball, time, transitions[2]);\n            TweenMax.to(ball, time, transitions[3]);\n            TweenMax.to(ball, time, transitions[4]);\n            TweenMax.to(ball, time, transitions[5]);\n            TweenMax.to(ball, time, transitions[6]);\n            TweenMax.to(ball, time, transitions[7]);\n            TweenMax.to(ball, time, transitions[8]);\n\n            setTimeout(function () {\n                // hack\n                $('.indicator.baseball.break').removeClass('hide').show();\n            }, 50);\n        }\n\n        return game.swingResult;\n    },\n    renderFieldingTrajectory: function renderFieldingTrajectory(game) {\n        if (!this.loop) {\n            this.beginRender();\n        }\n\n        var ball = Animator._ball || new this.loop.constructors.Ball();\n        ball.deriveTrajectory(game.swingResult, game.pitchInFlight);\n        ball.join(this.loop);\n\n        return game.swingResult;\n    }\n};\n\nfor (var fn in Animator.prototype) {\n    if (Animator.prototype.hasOwnProperty(fn)) {\n        Animator[fn] = Animator.prototype[fn];\n    }\n}\n\nexports.Animator = Animator;\n\n},{\"baseball/Render/Loop\":9,\"baseball/services/_services\":28}],14:[function(require,module,exports){\n/**\r\n * For Probability!\r\n * @constructor\r\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Distribution = function Distribution() {};\n\nDistribution.prototype = {\n    identifier: 'Distribution',\n    constructor: Distribution,\n    /**\r\n     * @param scale {number}\r\n     * @returns {number}\r\n     */\n    chance: function chance(scale) {\n        if (!scale) scale = 1;\n        return Math.random() * scale;\n    },\n    /**\r\n     * @param fielder {Player}\r\n     * @returns {boolean}\r\n     */\n    error: function error(fielder) {\n        return (100 - fielder.skill.defense.fielding) * 0.40 + 4 > Math.random() * 100;\n    },\n    /**\r\n     * @param power\r\n     * @param flyAngle\r\n     * @returns {number}\r\n     */\n    landingDistance: function landingDistance(power, flyAngle) {\n        return (10 + power / 2 + Math.random() * 310 + power / 100 * 30) * (1 - Math.abs(flyAngle - 30) / 60);\n    },\n    /**\r\n     * @returns {{x: number, y: number}}\r\n     */\n    pitchLocation: function pitchLocation() {\n        var x, y;\n        if (Math.random() < 0.5) {\n            x = 50 + Math.floor(Math.random() * 70) - Math.floor(Math.random() * 15);\n        } else {\n            x = 150 + Math.floor(Math.random() * 15) - Math.floor(Math.random() * 70);\n        }\n        y = 30 + (170 - Math.floor(Math.sqrt(Math.random() * 28900)));\n        return { x: x, y: y };\n    },\n    /**\r\n     * swing centering basis\r\n     * @returns {number}\r\n     */\n    centralizedNumber: function centralizedNumber() {\n        return 100 + Math.floor(Math.random() * 15) - Math.floor(Math.random() * 15);\n    },\n    /**\r\n     * @param eye {Player.skill.offense.eye}\r\n     * @param x\r\n     * @param y\r\n     * @param umpire {Umpire}\r\n     */\n    swingLikelihood: function swingLikelihood(eye, x, y, umpire) {\n        var swingLikelihood = (200 - Math.abs(100 - x) - Math.abs(100 - y)) / 2;\n        if (x < 60 || x > 140 || y < 50 || y > 150) {\n            // ball\n            /** 138 based on avg O-Swing of 30% + 8% for fun */\n            swingLikelihood = (swingLikelihood + 138 - eye) / 2 - 15 * umpire.count.balls;\n        } else {\n            /** avg Swing rate of 65% - 8% for laughs */\n            swingLikelihood = (57 + (2 * swingLikelihood + eye) / 3) / 2;\n        }\n        return swingLikelihood - 35 + 2 * (umpire.count.balls + 8 * umpire.count.strikes);\n    },\n    /**\r\n     * @param target {number} 0-200\r\n     * @param control {number} 0-100\r\n     * @returns {number}\r\n     */\n    pitchControl: function pitchControl(target, control) {\n        var effect = (50 - Math.random() * 100) / (1 + control / 100);\n        return Math.min(199.9, Math.max(0.1, target + effect));\n    },\n    /**\r\n     * @param pitch {Game.pitchInFlight}\r\n     * @param pitcher {Player}\r\n     * @param x {number}\r\n     * @param y {number}\r\n     * @returns {object|{x: number, y: number}}\r\n     */\n    breakEffect: function breakEffect(pitch, pitcher, x, y) {\n        var effect = {};\n        effect.x = Math.floor(x + pitch.breakDirection[0] * (0.55 + 1.5 * Math.random() * pitcher.pitching[pitch.name]['break'] / 250));\n        effect.y = Math.floor(y + pitch.breakDirection[1] * (0.55 + 1.5 * Math.random() * pitcher.pitching[pitch.name]['break'] / 250 / (0.5 + y / 200)));\n        return effect;\n    },\n    /**\r\n     * Determine the swing target along an axis\r\n     * @param target {number} 0-200\r\n     * @param actual {number} 0-200\r\n     * @param eye {number} 0-100\r\n     * @returns {number} 0-200\r\n     */\n    cpuSwing: function cpuSwing(target, actual, eye) {\n        eye = Math.max(eye, 100); // higher eye would overcompensate here\n        return 100 + (target - 100) * (0.5 + Math.random() * eye / 200) - actual;\n    },\n    /**\r\n     * Determine the swing scalar\r\n     * @param eye {number} 0-100\r\n     * @returns {number}\r\n     */\n    swing: function swing(eye) {\n        return 100 / (eye + 25 + Math.random() * 50);\n    }\n};\n\nfor (var fn in Distribution.prototype) {\n    if (Distribution.prototype.hasOwnProperty(fn)) {\n        Distribution[fn] = Distribution.prototype[fn];\n    }\n}\n\nDistribution.main = function () {\n    var ump = {\n        count: {\n            balls: 0,\n            strikes: 0\n        }\n    };\n    while (ump.count.balls < 4) {\n        while (ump.count.strikes < 3) {\n            console.log('S', ump.count.strikes, 'B', ump.count.balls);\n            console.log('middle', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 100, 100, ump) | 0;\n            }));\n            console.log('corner', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 50, 50, ump) | 0;\n            }));\n            console.log('ball', [15, 35, 55, 75, 95].map(function (x) {\n                return Distribution.swingLikelihood(x, 15, 15, ump) | 0;\n            }));\n            ump.count.strikes++;\n        }\n        ump.count.balls++;\n        ump.count.strikes = 0;\n    }\n};\n\nexports.Distribution = Distribution;\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Iterator = function Iterator() {};\n\nIterator.prototype = {\n    identifier: 'Iterator',\n    constructor: Iterator,\n    each: function each(collection, map) {\n        var keys, i;\n        if (collection instanceof Array) {\n            for (i = 0; i < collection.length; i++) {\n                map(i, collection[i]);\n            }\n        } else {\n            keys = Object.keys(collection);\n            for (i = 0; i < keys.length; i++) {\n                map(keys[i], collection[keys[i]]);\n            }\n        }\n    }\n};\n\nfor (var fn in Iterator.prototype) {\n    if (Iterator.prototype.hasOwnProperty(fn)) {\n        Iterator[fn] = Iterator.prototype[fn];\n    }\n}\n\nexports.Iterator = Iterator;\n\n},{}],16:[function(require,module,exports){\n/**\r\n * For Math!\r\n * @constructor\r\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar Mathinator = function Mathinator() {};\n\n/**\r\n * @param n\r\n * @returns {number}\r\n */\nMathinator.square = function (n) {\n    return n * n;\n};\n\nMathinator.prototype = {\n    identifier: 'Mathinator',\n    constructor: Mathinator,\n    /**\r\n     * CONST\r\n     */\n    RADIAN: Math.PI / 180,\n    SPLAY_INDICATOR_LEFT: -4,\n    /**\r\n     * @param offset {{x: number, y: number}}\r\n     * @param angle {number}\r\n     * @returns {{x: number, y: number}}\r\n     */\n    getAngularOffset: function getAngularOffset(offset, angle) {\n        var xScalar = offset.x < 0 ? -1 : 1,\n            yScalar = offset.y < 0 ? -1 : 1;\n        var originalAngle = Math.atan(offset.x / offset.y) / this.RADIAN;\n        var distance = Math.sqrt(offset.x * offset.x + offset.y * offset.y),\n            angledY = yScalar * Math.cos((angle - originalAngle) * this.RADIAN) * distance,\n            angledX = xScalar * Math.sqrt(distance * distance - angledY * angledY);\n        return {\n            x: angledX,\n            y: angledY\n        };\n    },\n    /**\r\n     * @param a {Array<Number>}\r\n     * @param b {Array<Number>}\r\n     * @returns {number}\r\n     */\n    getPolarDistance: function getPolarDistance(a, b) {\n        var radians = this.RADIAN;\n        return Math.sqrt(a[1] * a[1] + b[1] * b[1] - 2 * a[1] * b[1] * Math.cos(a[0] * radians - b[0] * radians));\n    },\n    /**\r\n     * @param origin\r\n     * @param target\r\n     * @returns {number}\r\n     * 0 is flat (left-right), positive is clockwise.\r\n     * We use 125 instead of 180 to account for natural hand-height adjustments\r\n     * of various swing heights.\r\n     */\n    battingAngle: function battingAngle(origin, target) {\n        return Math.atan((origin.y - target.y) / (target.x - origin.x)) / Math.PI * 125;\n    },\n    memory: {},\n    /**\r\n     * @param percent {number} 0-100\r\n     * @param quarter {number} seconds\r\n     * @param step {number} 0 and up\r\n     * @param [givenApexHeight] feet\r\n     * @param [givenDistance] in feet\r\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\r\n     * @returns {{bottom: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\r\n     */\n    transitionalTrajectory: function transitionalTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle) {\n        if (givenApexHeight) Mathinator.prototype.memory.apexHeight = givenApexHeight;\n        if (givenDistance) Mathinator.prototype.memory.distance = givenDistance;\n        if (givenSplayAngle) Mathinator.prototype.memory.splay = givenSplayAngle;\n        var apexHeight = Mathinator.prototype.memory.apexHeight,\n            distance = Mathinator.prototype.memory.distance,\n            splay = Mathinator.prototype.memory.splay;\n        var bottom, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            quarter *= 4;\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        bottom = Math.cos(splay * radian) * percent / 100 * distance * 95 / 300;\n        left = Math.sin(splay * radian) * percent / 100 * distance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        var apexRatio = Math.sqrt((50 - Math.abs(percent - 50)) / 100) * (1 / 0.7071);\n        if (bounding) {\n            padding = 1;\n            borderWidth = 1;\n        } else {\n            padding = apexRatio * apexHeight / 90 * 15;\n            borderWidth = 2 + apexRatio * 2;\n        }\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n        padding = Math.max(Math.min(padding, 12), 0);\n        return {\n            bottom: bottom,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\r\n     * @param percent {number} 0-100\r\n     * @param quarter {number} seconds\r\n     * @param step {number} 0 and up\r\n     * @param [givenApexHeight] feet\r\n     * @param [givenDistance] in feet\r\n     * @param [givenSplayAngle] where 0 is up the middle and 90 is right foul\r\n     * @param [givenOrigin] Object with x, y -- pitchInFlight\r\n     * @returns {{top: number, left: number, padding: number, borderWidth: number, delay: number, ease: (r.easeOut|*)}}\r\n     */\n    transitionalCatcherPerspectiveTrajectory: function transitionalCatcherPerspectiveTrajectory(percent, quarter, step, givenApexHeight, givenDistance, givenSplayAngle, givenOrigin) {\n        var memory = Mathinator.prototype.memory;\n        if (givenApexHeight) memory.apexHeight = givenApexHeight;\n        if (givenDistance) memory.distance = givenDistance;\n        if (givenSplayAngle) memory.splay = givenSplayAngle;\n        if (givenOrigin) memory.origin = givenOrigin;\n        var apexHeight = memory.apexHeight,\n            distance = memory.distance,\n            splay = memory.splay,\n            origin = memory.origin;\n        var top, left, padding, borderWidth;\n        var bounding = Mathinator.prototype.memory.bounding,\n            radian = this.RADIAN;\n\n        if (bounding) {\n            percent = Math.floor(Math.sqrt(percent / 100) * 100);\n        }\n\n        var height = apexHeight - Math.pow(Math.abs(50 - percent) / 50, 1.2) * apexHeight,\n            currentDistance = distance * percent / 100;\n\n        var projection = Math.pow((500 - currentDistance) / 500, 2); // reduction of dimensions due to distance\n\n        top = 200 - origin.y - height * 20 * projection + percent / 100 * (origin.y - 85) * projection;\n        left = origin.x + Math.sin(splay * radian) * (currentDistance * 8) * projection;\n        padding = 12 * projection * projection;\n        borderWidth = Math.max(Math.min(padding / 3, 4), 0);\n\n        top = Math.max(Math.min(top, 500), -10000);\n        left = Math.max(Math.min(left, 10000), -10000);\n        padding = Math.max(Math.min(padding, 24), 1);\n\n        //console.log('height', height|0, apexHeight|0, projection, 'left/pad/border', left|0, padding|0, borderWidth|0, 'top', top);\n\n        return {\n            top: top,\n            left: left,\n            padding: padding,\n            borderWidth: borderWidth,\n            delay: quarter * step,\n            ease: bounding ? Power4.easeOut : Linear.easeNone\n        };\n    },\n    /**\r\n     * @param swingResult\r\n     * @returns {Game.swingResult}\r\n     */\n    translateSwingResultToStylePosition: function translateSwingResultToStylePosition(swingResult) {\n        // CF HR bottom: 95px, centerline: left: 190px;\n        var bottom, left;\n\n        bottom = Math.cos(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300;\n        left = Math.sin(swingResult.splay / 180 * Math.PI) * swingResult.travelDistance * 95 / 300 + this.SPLAY_INDICATOR_LEFT;\n\n        bottom = Math.max(Math.min(bottom, 400), -20);\n        left = Math.max(Math.min(left, 100), -100);\n\n        swingResult.bottom = bottom + 'px';\n        swingResult.left = left + 'px';\n        return swingResult;\n    },\n    /**\r\n     * @param left {number} 0-200\r\n     * @param top {number} 0-200\r\n     * @param originLeft {number} 0-200\r\n     * @param originTop {number} 0-200\r\n     * @param quarter {number} seconds\r\n     * @param maxPadding {number} px padding at full size\r\n     * @param maxBorderWidth {number} px border width at full size\r\n     * @returns {Function}\r\n     */\n    pitchTransition: function pitchTransition(top, left, originTop, originLeft, quarter, maxPadding, maxBorderWidth) {\n        /**\r\n         * @param percent {number} 0-100\r\n         * @param step {number} 0 and up\r\n         * @param [breakTop] {number} 0-200 override\r\n         * @param [breakLeft] {number} 0-200 override\r\n         * @returns {{top: number, left: number, padding: string, borderWidth: string, transform: string, delay: number, ease: *}}\r\n         */\n        return function (percent, step, breakTop, breakLeft) {\n            var _top, _left;\n            _top = breakTop || top;\n            _left = breakLeft || left;\n            _top = originTop + Mathinator.square(percent / 100) * (_top - originTop);\n            if (step == 1) {\n                _top -= 2;\n            }\n            if (step == 2) {\n                _top -= 1;\n            }\n            _left = originLeft + Mathinator.square(percent / 100) * (_left - originLeft);\n            var padding = Math.max(Mathinator.square(percent / 100) * maxPadding, 1),\n                borderWidth = Math.max(Mathinator.square(percent / 100) * maxBorderWidth, 1);\n            return {\n                top: _top,\n                left: _left,\n                padding: padding + 'px',\n                borderWidth: borderWidth + 'px',\n                transform: 'translateZ(0)',\n                delay: quarter * step,\n                ease: Linear.easeNone\n            };\n        };\n    },\n    /**\r\n     * @param distance {number} feet\r\n     * @param throwing {number} 0-1\r\n     * @param fielding {number} 0-1\r\n     * @param intercept {number} approx. -140 to 140\r\n     * @returns {number} seconds\r\n     */\n    fielderReturnDelay: function fielderReturnDelay(distance, throwing, fielding, intercept) {\n        return distance / 90 // bip distance\n         + distance / 90 / (0.5 + throwing / 2) // throwing distance\n         + 1 - (0.2 + fielding * 0.8) + 9 * (distance / 310) * Math.min(intercept - 120, 0) / -240; // gather time\n    },\n    /**\r\n     * @param player {Player}\r\n     * @returns {number} ~2.0\r\n     */\n    infieldThrowDelay: function infieldThrowDelay(player) {\n        var fielding = player.skill.defense.fielding,\n            throwing = player.skill.defense.throwing;\n        return 3.5 - (fielding + throwing) / 200;\n    },\n    /**\r\n     * @param speed {number} 0-100\r\n     * @returns {number} seconds\r\n     */\n    baseRunningTime: function baseRunningTime(speed) {\n        return 7.0 - speed / 100 * 4.1;\n    },\n    /**\r\n     * @param x {Number} bat offset\r\n     * @param y {Number} bat offset\r\n     * @param angle {Number} batting angle where 0 is horizontal, RHB clockwise increasing\r\n     * {\r\n     *   splay: 0-180 where 90 is up the middle,\r\n     *   fly: 0, flat, to 90, vertical pop up\r\n     * }\r\n     * @returns {{splay: number, fly: number}}\r\n     */\n    getSplayAndFlyAngle: function getSplayAndFlyAngle(x, y, angle) {\n        return {\n            splay: 90 - 2.5 * x - angle / 20 * y,\n            fly: -3 * y - angle / 35 * y\n        };\n    },\n    /**\r\n     * @param velocityRating {Number} 0-100\r\n     * @returns {number}\r\n     */\n    getFlightTime: function getFlightTime(velocityRating) {\n        return 1.3 - 0.6 * (velocityRating + 300) / 400;\n    }\n};\n\nfor (var fn in Mathinator.prototype) {\n    if (Mathinator.prototype.hasOwnProperty(fn)) {\n        Mathinator[fn] = Mathinator.prototype[fn];\n    }\n}\n\nexports.Mathinator = Mathinator;\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":13,\"baseball/Services/Distribution\":14,\"baseball/Services/Iterator\":15,\"baseball/Services/Mathinator\":16}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _TeamJapan = require('./TeamJapan');\n\nvar Provider = (function () {\n    function Provider() {\n        _classCallCheck(this, Provider);\n    }\n\n    _createClass(Provider, [{\n        key: 'assignTeam',\n        value: function assignTeam(game, team, side) {\n            var special = this.teams[team];\n            special.game = game;\n            game.teams[side] = special;\n        }\n    }]);\n\n    return Provider;\n})();\n\nProvider.prototype.teams = {\n    TeamJapan: _TeamJapan.samurai\n};\n\nexports.Provider = Provider;\n\n},{\"./TeamJapan\":19}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballModel_models = require('baseball/Model/_models');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballTeamsTrainer = require('baseball/Teams/Trainer');\n\nvar samurai = new _baseballModel_models.Team('no init');\nsamurai.name = 'Japan';\nsamurai.nameJ = '日本';\n\nvar darvish = new _baseballModelPlayer.Player(samurai),\n    johjima = new _baseballModelPlayer.Player(samurai),\n    ogasawara = new _baseballModelPlayer.Player(samurai),\n    nishioka = new _baseballModelPlayer.Player(samurai),\n    kawasaki = new _baseballModelPlayer.Player(samurai),\n    murata = new _baseballModelPlayer.Player(samurai),\n    matsui = new _baseballModelPlayer.Player(samurai),\n    ichiro = new _baseballModelPlayer.Player(samurai),\n    inaba = new _baseballModelPlayer.Player(samurai);\n\nvar matsuzaka = new _baseballModelPlayer.Player(samurai),\n    fukudome = new _baseballModelPlayer.Player(samurai),\n    aoki = new _baseballModelPlayer.Player(samurai),\n    abe = new _baseballModelPlayer.Player(samurai),\n    iwamura = new _baseballModelPlayer.Player(samurai);\n\nvar coach = new _baseballTeamsTrainer.Trainer();\n\ncoach.makePlayer(darvish, 'Yu', 'Darvish', 'ダルビッシュ', '有', 150, { eye: 80, power: 80, speed: 80 }, { catching: 50, fielding: 70, throwing: 100, speed: 80 }, 'right', 'right', 11);\n\ncoach.makePlayer(johjima, 'Kenji', 'Johjima', '城島', '健司', 60, { eye: 90, power: 88, speed: 70 }, { catching: 140, fielding: 95, throwing: 88, speed: 94 }, 'right', 'right', 2);\n\ncoach.makePlayer(ogasawara, 'Michihiro', 'Ogasawara', '小笠原', '道大', 80, { eye: 96, power: 115, speed: 90 }, { catching: 50, fielding: 96, throwing: 85, speed: 70 }, 'left', 'right', 36);\n\ncoach.makePlayer(nishioka, 'Tsuyoshi', 'Nishioka', '西岡', '剛', 80, { eye: 88, power: 75, speed: 92 }, { catching: 90, fielding: 88, throwing: 88, speed: 90 }, 'right', 'right', 7);\n\ncoach.makePlayer(kawasaki, 'Munenori', 'Kawasaki', '川崎', '宗則', 80, { eye: 95, power: 75, speed: 92 }, { catching: 90, fielding: 98, throwing: 90, speed: 110 }, 'left', 'right', 52);\n\ncoach.makePlayer(murata, 'Shuichi', 'Murata', '村田', '修一', 80, { eye: 82, power: 110, speed: 60 }, { catching: 80, fielding: 80, throwing: 90, speed: 90 }, 'right', 'right', 25);\n\ncoach.makePlayer(matsui, 'Hideki', 'Matsui', '秀樹', '松井', 75, { eye: 104, power: 130, speed: 68 }, { catching: 40, fielding: 85, throwing: 70, speed: 60 }, 'left', 'right', 55);\n\ncoach.makePlayer(ichiro, 'Ichiro', 'Suzuki', 'イチロー', '', 115, { eye: 115, power: 48, speed: 99 }, { catching: 80, fielding: 110, throwing: 135, speed: 120 }, 'left', 'right', 51);\n\ncoach.makePlayer(inaba, 'Atsunori', 'Inaba', '稲葉', '篤紀', 80, { eye: 92, power: 95, speed: 75 }, { catching: 50, fielding: 95, throwing: 95, speed: 90 }, 'right', 'right', 41);\n\nsamurai.bench = [darvish, johjima, ogasawara, nishioka, kawasaki, murata, matsui, ichiro, inaba, matsuzaka, fukudome, aoki, abe, iwamura];\nsamurai.manager.makeLineup();\nsamurai.positions = {\n    pitcher: darvish,\n    catcher: johjima,\n\n    first: ogasawara,\n    second: nishioka,\n    short: kawasaki,\n    third: murata,\n\n    left: matsui,\n    center: ichiro,\n    right: inaba\n};\n\nfor (var position in samurai.positions) {\n    if (samurai.positions.hasOwnProperty(position)) {\n        samurai.positions[position].position = position;\n    }\n}\n\nsamurai.lineup = [ichiro, kawasaki, inaba, matsui, ogasawara, johjima, murata, nishioka, darvish];\n\nsamurai.lineup.map(function (player, order) {\n    player.order = order;\n});\n\nexports.samurai = samurai;\n\n},{\"baseball/Model/Player\":5,\"baseball/Model/_models\":8,\"baseball/Teams/Trainer\":20}],20:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar Trainer = (function () {\n    function Trainer() {\n        _classCallCheck(this, Trainer);\n    }\n\n    _createClass(Trainer, [{\n        key: 'makePlayer',\n        value: function makePlayer(player, name, surname, surnameJ, nameJ, pitching, offense, defense, bats, throws, number) {\n            player.hero = true;\n\n            if ('rights' && 0) {\n                surnameJ = '代表';\n                nameJ = '選手';\n                name = 'TEAM';\n                surname = 'JPN';\n            }\n\n            player.name = name + ' ' + surname;\n            player.nameJ = surnameJ + nameJ;\n            player.surname = surname;\n            player.surnameJ = surnameJ;\n\n            player.spaceName(surnameJ, nameJ);\n            player.randomizeSkills(true, true);\n            player.skill.offense = offense;\n            player.skill.defense = defense;\n            player.skill.pitching = pitching;\n            player.bats = bats;\n            player.throws = throws;\n            player.number = number;\n            _baseballServicesIterator.Iterator.each(player.pitching, function (key, value) {\n                player.pitching[key].velocity += pitching / 5 | 0;\n                player.pitching[key]['break'] += pitching / 5 | 0;\n                player.pitching[key].control += pitching / 5 | 0;\n            });\n            player.resetStats(0);\n        }\n    }]);\n\n    return Trainer;\n})();\n\nexports.Trainer = Trainer;\n\n},{\"baseball/Services/Iterator\":15}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nvar Log = function Log() {\n    this.init();\n};\n\nLog.prototype = {\n    game: 'instance of Game',\n    init: function init() {\n        this.stabilized = {\n            pitchRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            },\n            shortRecord: {\n                e: ['', '', '', '', '', ''],\n                n: ['', '', '', '', '', '']\n            }\n        };\n        this.pitchRecord = {\n            e: [],\n            n: []\n        };\n        this.shortRecord = {\n            e: [],\n            n: []\n        };\n        this.record = {\n            e: [],\n            n: []\n        };\n    },\n    SINGLE: 'H',\n    DOUBLE: '2B',\n    TRIPLE: '3B',\n    HOMERUN: 'HR',\n    WALK: 'BB',\n    GROUNDOUT: 'GO',\n    FLYOUT: 'FO',\n    LINEOUT: 'LO',\n    RUN: 'R',\n    STRIKEOUT: 'SO',\n    SACRIFICE: 'SAC',\n    REACHED_ON_ERROR: 'ROE',\n    FIELDERS_CHOICE: 'FC',\n    GIDP: '(IDP)',\n    GITP: '(ITP)',\n    stabilizeShortRecord: function stabilizeShortRecord() {\n        var rec = this.record.e.slice(0, 6);\n        this.shortRecord.e = rec;\n        this.stabilized.shortRecord.e = rec.concat(['', '', '', '', '', '']).slice(0, 6);\n\n        var rec2 = this.record.n.slice(0, 6);\n        this.shortRecord.n = rec2;\n        this.stabilized.shortRecord.n = rec2.concat(['', '', '', '', '', '']).slice(0, 6);\n    },\n    note: function note(_note, noteJ) {\n        this.record.e.unshift(_note);\n        this.record.n.unshift(noteJ);\n        this.stabilizeShortRecord();\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(noteJ);\n            } else {\n                console.log(_note);\n            }\n        });\n    },\n    getBatter: function getBatter(batter) {\n        var order = batter.team.nowBatting;\n        order = ({\n            0: (0, _baseballUtilityText.text)(' 1st'),\n            1: (0, _baseballUtilityText.text)(' 2nd'),\n            2: (0, _baseballUtilityText.text)(' 3rd'),\n            3: (0, _baseballUtilityText.text)(' 4th'),\n            4: (0, _baseballUtilityText.text)(' 5th'),\n            5: (0, _baseballUtilityText.text)(' 6th'),\n            6: (0, _baseballUtilityText.text)(' 7th'),\n            7: (0, _baseballUtilityText.text)(' 8th'),\n            8: (0, _baseballUtilityText.text)(' 9th')\n        })[order];\n        var positions = this.longFormFielder();\n        return (0, _baseballUtilityText.text)('Now batting') + order + _baseballUtilityText.text.comma() + positions[batter.position] + _baseballUtilityText.text.comma() + batter.getUniformNumber() + _baseballUtilityText.text.comma() + batter.getName();\n    },\n    noteBatter: function noteBatter(batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getBatter(batter);\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getBatter(batter);\n        _baseballUtilityText.text.mode = m;\n        this.note(record, recordJ);\n    },\n    getPitchLocationDescription: function getPitchLocationDescription(pitchInFlight, batterIsLefty) {\n        var x = pitchInFlight.x,\n            y = pitchInFlight.y,\n            say = '';\n        var noComma = false,\n            noComma2 = false;\n        var ball = false;\n        if (!batterIsLefty) x = 200 - x;\n        if (x < 50) {\n            say += (0, _baseballUtilityText.text)('way outside');\n            ball = true;\n        } else if (x < 70) {\n            say += (0, _baseballUtilityText.text)('outside');\n        } else if (x < 100) {\n            say += '';\n            noComma = true;\n        } else if (x < 130) {\n            say += '';\n            noComma = true;\n        } else if (x < 150) {\n            say += (0, _baseballUtilityText.text)('inside');\n        } else {\n            say += (0, _baseballUtilityText.text)('way inside');\n            ball = true;\n        }\n        if (say != '') say += _baseballUtilityText.text.comma();\n        if (y < 35) {\n            say += (0, _baseballUtilityText.text)('way low');\n            ball = true;\n        } else if (y < 65) {\n            say += (0, _baseballUtilityText.text)('low');\n        } else if (y < 135) {\n            say += '';\n            noComma2 = true;\n        } else if (y < 165) {\n            say += (0, _baseballUtilityText.text)('high');\n        } else {\n            say += (0, _baseballUtilityText.text)('way high');\n            ball = true;\n        }\n        if (noComma || noComma2) {\n            say = say.split(_baseballUtilityText.text.comma()).join('');\n            if (noComma && noComma2) {\n                say = (0, _baseballUtilityText.text)('down the middle');\n            }\n        }\n        // say = (ball ? 'Ball, ' : 'Strike, ') + say;\n        say = _baseballUtilityText.text.namePitch(pitchInFlight) + _baseballUtilityText.text.comma() + say + _baseballUtilityText.text.stop();\n        return say;\n    },\n    notePitch: function notePitch(pitchInFlight, batter) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.unshift(record);\n        this.stabilized.pitchRecord.e.pop();\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getPitchLocationDescription(pitchInFlight, batter.bats == 'left');\n        this.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.unshift(recordJ);\n        this.stabilized.pitchRecord.n.pop();\n        _baseballUtilityText.text.mode = m;\n    },\n    broadcastCount: function broadcastCount(justOuts) {\n        if (!this.game.umpire) return '';\n        var count = this.game.umpire.count;\n        if (this.lastOuts == 2 && count.outs == 0) {\n            outs = 3 + (0, _baseballUtilityText.text)(' outs');\n        } else {\n            var outs = count.outs + (count.outs == 1 ? (0, _baseballUtilityText.text)(' out') : (0, _baseballUtilityText.text)(' outs'));\n        }\n        this.lastOuts = count.outs;\n        if (justOuts) {\n            return outs + _baseballUtilityText.text.stop();\n        }\n        return count.strikes + '-' + count.balls + ', ' + outs + _baseballUtilityText.text.stop();\n    },\n    broadcastScore: function broadcastScore() {\n        return this.game.teams.away.getName() + ' ' + this.game.tally.away.R + ', ' + this.game.teams.home.getName() + ' ' + this.game.tally.home.R + _baseballUtilityText.text.stop();\n    },\n    broadcastRunners: function broadcastRunners() {\n        var field = this.game.field;\n        var runners = [field.first && (0, _baseballUtilityText.text)('first') || '', field.second && (0, _baseballUtilityText.text)('second') || '', field.third && (0, _baseballUtilityText.text)('third') || ''].filter(function (x) {\n            return x;\n        });\n\n        var runnerCount = 0;\n        runners.map(function (runner) {\n            if (runner) {\n                runnerCount++;\n            }\n        });\n\n        switch (runnerCount) {\n            case 0:\n                return (0, _baseballUtilityText.text)('Bases empty') + _baseballUtilityText.text.stop();\n            case 1:\n                return (0, _baseballUtilityText.text)('Runner on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n            default:\n                return (0, _baseballUtilityText.text)('Runners on') + ': ' + runners.join(_baseballUtilityText.text.comma()) + _baseballUtilityText.text.stop();\n        }\n    },\n    getSwing: function getSwing(swingResult) {\n        var result = '';\n        if (swingResult.looking) {\n            if (swingResult.strike) {\n                result += (0, _baseballUtilityText.text)('Strike.');\n            } else {\n                result += (0, _baseballUtilityText.text)('Ball.');\n            }\n        } else {\n            if (swingResult.contact) {\n                if (swingResult.foul) {\n                    result += (0, _baseballUtilityText.text)('Fouled off.');\n                } else {\n                    if (swingResult.caught) {\n                        result += (0, _baseballUtilityText.text)('In play.');\n                    } else {\n                        if (swingResult.thrownOut) {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        } else {\n                            result += (0, _baseballUtilityText.text)('In play.');\n                        }\n                    }\n                }\n            } else {\n                result += (0, _baseballUtilityText.text)('Swinging strike.');\n            }\n        }\n        return result;\n    },\n    noteSwing: function noteSwing(swingResult) {\n        var m = _baseballUtilityText.text.mode,\n            record,\n            recordJ,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n        _baseballUtilityText.text.mode = 'e';\n        record = this.getSwing(swingResult);\n        pitchRecord.e[0] += record;\n        stabilized.e[0] += record;\n        _baseballUtilityText.text.mode = 'n';\n        recordJ = this.getSwing(swingResult);\n        pitchRecord.n[0] += recordJ;\n        stabilized.n[0] += recordJ;\n        _baseballUtilityText.text.mode = m;\n        recordJ = stabilized.n[0];\n        record = stabilized.e[0];\n        var giraffe = this;\n        record.indexOf('Previous') !== 0 && this.async(function () {\n            if (record.indexOf('In play') > -1 && record.indexOf('struck out') > -1) {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(recordJ);\n                } else {\n                    console.log(record);\n                }\n            } else {\n                if (_baseballUtilityText.text.mode === 'n') {\n                    console.log(giraffe.broadcastCount(), recordJ);\n                } else {\n                    console.log(giraffe.broadcastCount(), record);\n                }\n            }\n        });\n    },\n    async: function async(fn) {\n        if (!this.game.console && !this.game.quickMode) {\n            setTimeout(fn, 100);\n        }\n    },\n    getPlateAppearanceResult: function getPlateAppearanceResult(game) {\n        var r = game.swingResult;\n        var record = '';\n        var batter = game.batter.getName();\n        var out = [];\n        if (r.looking) {\n            if (r.strike) {\n                record = batter + (0, _baseballUtilityText.text)(' struck out looking.');\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' walked.');\n            }\n        } else {\n            if (r.contact) {\n                var fielder = r.fielder,\n                    bases = r.bases,\n                    outBy;\n                if (r.caught) {\n                    if (r.flyAngle < 15) {\n                        outBy = 'line';\n                    } else {\n                        if (['left', 'center', 'right'].indexOf(r.fielder) < 0) {\n                            outBy = 'pop';\n                        } else {\n                            outBy = 'fly';\n                        }\n                    }\n                } else {\n                    if (r.foul) {\n                        // not possible to end PA on foul?\n                    } else {\n                            if (r.error) {\n                                bases = 1;\n                                outBy = 'error';\n                            } else {\n                                if (r.thrownOut) {\n                                    if (Math.random() < 0.5) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'thrown';\n                                    }\n                                } else {\n                                    switch (r.bases) {\n                                        case 1:\n                                        case 2:\n                                        case 3:\n                                            bases = r.bases;\n                                            break;\n                                        case 4:\n                                            bases = 4;\n                                            if (r.splay < -15) {\n                                                fielder = 'left';\n                                            } else if (r.splay < 15) {\n                                                fielder = 'center';\n                                            } else {\n                                                fielder = 'right';\n                                            }\n                                            break;\n                                    }\n                                }\n                                if (r.firstOut) {\n                                    out = out.concat(r.additionalOuts.filter(function (runner) {\n                                        return runner !== 'batter';\n                                    }));\n                                    out.doublePlay = r.doublePlay;\n                                }\n                                if (r.fieldersChoice) {\n                                    out.push(r.fieldersChoice);\n                                    if (r.outs == 3) {\n                                        outBy = 'ground';\n                                    } else {\n                                        outBy = 'fieldersChoice';\n                                    }\n                                }\n                            }\n                        }\n                }\n                record = _baseballUtilityText.text.contactResult(batter, fielder, bases, outBy, r.outs === 3 ? [] : r.sacrificeAdvances, out);\n            } else {\n                record = batter + (0, _baseballUtilityText.text)(' struck out swinging.');\n            }\n        }\n        return record;\n    },\n    notePlateAppearanceResult: function notePlateAppearanceResult(game) {\n        var m = _baseballUtilityText.text.mode,\n            prevJ = (0, _baseballUtilityText.text)('Previous: ', 'n'),\n            prev = (0, _baseballUtilityText.text)('Previous: ', 'e');\n\n        var statement,\n            record = this.record,\n            pitchRecord = this.pitchRecord,\n            stabilized = this.stabilized.pitchRecord;\n\n        _baseballUtilityText.text.mode = 'e';\n        var result = this.getPlateAppearanceResult(game);\n        record.e.unshift(result);\n        statement = prev + result;\n        pitchRecord.e = [statement];\n        stabilized.e = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = 'n';\n        var resultJ = this.getPlateAppearanceResult(game);\n        record.n.unshift(resultJ);\n        statement = prevJ + resultJ;\n        pitchRecord.n = [statement];\n        stabilized.n = [statement, '', '', '', '', ''];\n\n        _baseballUtilityText.text.mode = m;\n        var giraffe = this;\n        this.async(function () {\n            if (_baseballUtilityText.text.mode === 'n') {\n                console.log(['%c' + resultJ, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            } else {\n                console.log(['%c' + result, giraffe.broadcastCount(true), giraffe.broadcastScore(), giraffe.broadcastRunners()].join(' '), 'color: darkgreen;');\n            }\n        });\n    },\n    pointer: 0,\n    stabilized: {\n        pitchRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        },\n        shortRecord: {\n            e: ['', '', '', '', '', ''],\n            n: ['', '', '', '', '', '']\n        }\n    },\n    pitchRecord: {\n        e: [],\n        n: []\n    },\n    shortRecord: {\n        e: [],\n        n: []\n    },\n    record: {\n        e: [],\n        n: []\n    },\n    longFormFielder: function longFormFielder() {\n        return {\n            first: (0, _baseballUtilityText.text)('first baseman'),\n            second: (0, _baseballUtilityText.text)('second baseman'),\n            third: (0, _baseballUtilityText.text)('third baseman'),\n            short: (0, _baseballUtilityText.text)('shortstop'),\n            pitcher: (0, _baseballUtilityText.text)('pitcher'),\n            catcher: (0, _baseballUtilityText.text)('catcher'),\n            left: (0, _baseballUtilityText.text)('left fielder'),\n            center: (0, _baseballUtilityText.text)('center fielder'),\n            right: (0, _baseballUtilityText.text)('right fielder')\n        };\n    }\n};\n\nexports.Log = Log;\n\n},{\"baseball/Utility/text\":25}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballUtilityData = require('baseball/Utility/data');\n\nvar _baseballUtilityHelper = require('baseball/Utility/helper');\n\nvar _baseballUtilityLog = require('baseball/Utility/Log');\n\nvar _baseballUtilityText = require('baseball/Utility/text');\n\nexports.data = _baseballUtilityData.data;\nexports.helper = _baseballUtilityHelper.helper;\nexports.Log = _baseballUtilityLog.Log;\nexports.text = _baseballUtilityText.text;\n\n},{\"baseball/Utility/Log\":21,\"baseball/Utility/data\":23,\"baseball/Utility/helper\":24,\"baseball/Utility/text\":25}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar data = {\n    surnames: ['Sato', 'Suzuki', 'Takahashi', 'Tanaka', 'Watanabe', 'Ito', 'Nakamura', 'Kobayashi', 'Yamamoto', 'Kato', 'Yoshida', 'Yamada', 'Sasaki', 'Yamaguchi', 'Matsumoto', 'Inoue', 'Kimura', 'Shimizu', 'Hayashi', 'Saito', 'Saito', 'Yamazaki', 'Nakajima', 'Mori', 'Abe', 'Ikeda', 'Hashimoto', 'Ishikawa', 'Yamashita', 'Ogawa', 'Ishii', 'Hasegawa', 'Goto', 'Okada', 'Kondo', 'Maeda', 'Fujita', 'Endo', 'Aoki', 'Sakamoto', 'Murakami', 'Ota', 'Kaneko', 'Fujii', 'Fukuda', 'Nishimura', 'Miura', 'Takeuchi', 'Nakagawa', 'Okamoto', 'Matsuda', 'Harada', 'Nakano'],\n    surnamesJ: ['佐藤', '鈴木', '高橋', '田中', '渡辺', '伊藤', '中村', '小林', '山本', '加藤', '吉田', '山田', '佐々木', '山口', '松本', '井上', '木村', '清水', '林', '斉藤', '斎藤', '山崎', '中島', '森', '阿部', '池田', '橋本', '石川', '山下', '小川', '石井', '長谷川', '後藤', '岡田', '近藤', '前田', '藤田', '遠藤', '青木', '坂本', '村上', '太田', '金子', '藤井', '福田', '西村', '三浦', '竹内', '中川', '岡本', '松田', '原田', '中野'],\n\n    namesJ: ['匠', 'ヒカル', 'ゆうき', '翔太', '冬馬', '漣', '港区', 'ルイ', '樹', '賢治', '五木', '春', '光一', '宗介', 'こうすけ', '雄太', '大樹', '瑛太',\n    // newer set\n    '宏', '亨', '道夫', '聡', '昭', '茂雄', '勝', '純一', '和夫', '勲', '省三', '隆', '達夫', '正一', '輝夫', '俊夫', '史郎', '勇', '義弘', '良雄', '登', '義明', '正義', '秀夫', '肇', '月', '克己', '正男', '光男', '久', '耕三', '清', '次郎', '正博', '明子', '武', '勉', '晴夫', '裕二', '稔', '障子', '和子', '敦', '茂', '信夫', '恵一', '忠', '高尾', '薫', 'ケン', '健治', '哲夫', '啓二', '光一', '真一', '貞夫', '靖', '武', '雄', '文雄', '久雄', '一朗', '健一', '正明', '五郎', '誠', '昭夫', '誠司', '洋一', '康夫', '誠一', '正美', '則夫', '幸雄', '忠雄', '仁', 'シンジ', '豊', '邦雄', '修', '雅之', '三郎', '英治', '浩二', '栄一', '恒夫', '義郎', '進', '博之', '巌'],\n    names: ['Takumi', 'Hikaru', 'Yuuki', 'Shouta', 'Touma', 'Ren', 'Minato', 'Rui', 'Tatsuki', 'Kenji', 'Itsuki', 'Haru', 'Kouichi', 'Sousuke', 'Kousuke', 'Yuuta', 'Daiki', 'Eita',\n    // newer set\n    'Hiroshi', 'Toru', 'Michio', 'Satoshi', 'Akira', 'Shigeo', 'Masaru', 'Junichi', 'Kazuo', 'Isao', 'Shozo', 'Takashi', 'Tatsuo', 'Shoichi', 'Teruo', 'Toshio', 'Shiro', 'Isamu', 'Yoshihiro', 'Yoshio', 'Noboru', 'Yoshiaki', 'Tadayoshi', 'Hideo', 'Hajime', 'Akari', 'Katsumi', 'Masao', 'Mitsuo', 'Hisashi', 'Kozo', 'Kiyoshi', 'Jiro', 'Masahiro', 'Akiko', 'Takeshi', 'Tsutomu', 'Haruo', 'Yuji', 'Minoru', 'Shoji', 'Kazuko', 'Atsushi', 'Shigeru', 'Shinobu', 'Keiichi', 'Tadashi', 'Takao', 'Kaoru', 'Ken', 'Kenji', 'Tetsuo', 'Keiji', 'Koichi', 'Shinichi', 'Sadao', 'Yasushi', 'Takeshi', 'Yu', 'Fumio', 'Hisao', 'Ichiro', 'Kenichi', 'Masaaki', 'Goro', 'Makoto', 'Akio', 'Seiji', 'Yoichi', 'Yasuo', 'Seiichi', 'Masami', 'Norio', 'Yukio', 'Tadao', 'Hitoshi', 'Shinji', 'Yutaka', 'Kunio', 'Osamu', 'Masayuki', 'Saburo', 'Eiji', 'Koji', 'Eiichi', 'Tsuneo', 'Yoshio', 'Susumu', 'Hiroyuki', 'Iwao'],\n    teamNamesJ: ['横浜', '大阪', '名古屋', '札幌', '神戸', '京都', '福岡', '川崎', '埼玉県', '広島', '仙台', '千葉県', '新潟', '浜松', '静岡', '相模原', '岡山', '熊本', '鹿児島', '船橋', '川口', '姫路', '松山', '宇都宮', '松戸', '西宮', '倉敷', '市川', '福山', '尼崎', '金沢', '長崎', '横須賀', '富山', '高松', '町田', '岐阜', '枚方', '藤沢', '柏', '豊中', '長野県', '豊橋', '一宮', '和歌山', '岡崎', '宮崎', '奈良', '吹田', '高槻', '旭川', 'いわき', '高崎', '所沢', '川越', '秋田', '越谷', '前橋', '那覇', '四日市', '青森', '久留米', '春日井', '盛岡', '明石', '福島', '下関', '長岡', '市原', '函館', '茨城県', '福井', '加古川', '徳島', '水戸', '平塚', '佐世保', '呉', '八戸', '佐賀', '寝屋川', '富士', '春日部', '茅ヶ崎', '松本', '厚木', '大和', '上尾', '宝塚', '筑波', '沼津', '熊谷', '伊勢崎', '岸和田', '鳥取', '小田原', '鈴鹿', '松江', '日立'],\n    teamNames: ['Yokohama', 'Osaka', 'Nagoya', 'Sapporo', 'Kobe', 'Kyoto', 'Fukuoka', 'Kawasaki', 'Saitama', 'Hiroshima', 'Sendai', 'Chiba', 'Niigata', 'Hamamatsu', 'Shizuoka', 'Sagamihara', 'Okayama', 'Kumamoto', 'Kagoshima', 'Funabashi', 'Kawaguchi', 'Himeji', 'Matsuyama', 'Utsunomiya', 'Matsudo', 'Nishinomiya', 'Kurashiki', 'Ichikawa', 'Fukuyama', 'Amagasaki', 'Kanazawa', 'Nagasaki', 'Yokosuka', 'Toyama', 'Takamatsu', 'Machida', 'Gifu', 'Hirakata', 'Fujisawa', 'Kashiwa', 'Toyonaka', 'Nagano', 'Toyohashi', 'Ichinomiya', 'Wakayama', 'Okazaki', 'Miyazaki', 'Nara', 'Suita', 'Takatsuki', 'Asahikawa', 'Iwaki', 'Takasaki', 'Tokorozawa', 'Kawagoe', 'Akita', 'Koshigaya', 'Maebashi', 'Naha', 'Yokkaichi', 'Aomori', 'Kurume', 'Kasugai', 'Morioka', 'Akashi', 'Fukushima', 'Shimonoseki', 'Nagaoka', 'Ichihara', 'Hakodate', 'Ibaraki', 'Fukui', 'Kakogawa', 'Tokushima', 'Mito', 'Hiratsuka', 'Sasebo', 'Kure', 'Hachinohe', 'Saga', 'Neyagawa', 'Fuji', 'Kasukabe', 'Chigasaki', 'Matsumoto', 'Atsugi', 'Yamato', 'Ageo', 'Takarazuka', 'Tsukuba', 'Numazu', 'Kumagaya', 'Isesaki', 'Kishiwada', 'Tottori', 'Odawara', 'Suzuka', 'Matsue', 'Hitachi']\n};\n\nexports.data = data;\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar helper = {\n    pitchDefinitions: {\n        '4-seam': [0, 0, 1], //x movement, y movement, speed ratio\n        '2-seam': [20, -20, 0.90],\n        'cutter': [-25, -20, 0.95],\n        'sinker': [-15, -30, 0.95],\n\n        'slider': [-50, -35, 0.9],\n        'fork': [0, -70, 0.87],\n        'curve': [0, -90, 0.82],\n\n        'change': [0, -10, 0.88]\n    },\n    selectRandomPitch: function selectRandomPitch() {\n        return ['4-seam', '2-seam', 'cutter', 'sinker', 'slider', 'fork', 'curve', 'change'][Math.floor(Math.random() * 8)];\n    }\n};\n\nexports.helper = helper;\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar text = function text(phrase, override) {\n    if (!text.mode) text.mode = 'n';\n    var string = ({\n        n: {\n            empty: '-',\n            ' 1st': '1番',\n            ' 2nd': '2番',\n            ' 3rd': '3番',\n            ' 4th': '4番',\n            ' 5th': '5番',\n            ' 6th': '6番',\n            ' 7th': '7番',\n            ' 8th': '8番',\n            ' 9th': '9番',\n            'Now batting': '次のバッター',\n            'way outside': '相当外角',\n            'outside': '外角',\n            'inside': '内角',\n            'way inside': '相当内角',\n            'way low': '相当低め',\n            'low': '低め',\n            'high': '高め',\n            'way high': '相当高め',\n            'down the middle': '真ん中',\n            'first baseman': 'ファースト',\n            'second baseman': 'セカンド',\n            'third baseman': 'サード',\n            'shortstop': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left fielder': 'レフト',\n            'center fielder': 'センター',\n            'right fielder': 'ライト',\n            'Strike.': 'ストライク。',\n            'Ball.': 'ボール。',\n            'Fouled off.': 'ファウル。',\n            'In play.': 'インプレー。',\n            'Swinging strike.': '空振り。',\n            ' outs': 'アウト',\n            ' out': 'アウト',\n            '4-seam': 'ストレート',\n            '2-seam': 'シュート',\n            'slider': 'スライダー',\n            'fork': 'フォーク',\n            'cutter': 'カット',\n            'sinker': 'シンカー',\n            'curve': 'カーブ',\n            'change': 'チェンジ',\n            ' struck out looking.': '、見逃し三振。',\n            ' walked.': '、フォアボール。',\n            ' struck out swinging.': '、空振り三振。',\n            'Previous: ': '前：',\n            'looks like: ': '予想',\n            'breaking ball': '変化球',\n            'fastball': 'ストレート',\n            'Batting, ': '打球',\n            'Catching, pitch selection': '捕球選択',\n            'Season': '記録',\n            'Game': '今試合',\n            'Pitch': '球',\n            'Control': '制球',\n            'Velocity': '速度',\n            'Break': '変化',\n            'At Bat': 'バッター',\n            'On Deck': '次バッター',\n            'Eye :': '目',\n            'Power :': '力',\n            'Speed :': '速',\n            'Up to Bat': '打席',\n            'Fielding': '守備',\n            'BA': '打率',\n            'OBP': '出塁',\n            'SLG': '長打',\n            'PA': '打席',\n            'H/2B/3B/HR': '安／二／三／本',\n            'H': '安',\n            '2B': '二',\n            '3B': '三',\n            'HR': '本塁打',\n            'RBI': '打点',\n            'R': '得点',\n            'BB': '四球',\n            'SO': '三振',\n\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'Runner on': 'ランナー',\n            'Runners on': 'ランナー',\n            'Bases empty': 'ランナーなし',\n            'base': '塁',\n\n            'Select Language:': '言語',\n            'Run Fast Simulation': 'シミュレーションを試合終了まで行う',\n            'Play Ball!': 'プレーボール',\n            'Spectate the CPU': 'CPU観戦',\n            'Play from the 7th': '７回からプレーする',\n\n            'Throws/Bats': ' ',\n            'LHP': '左投',\n            'RHP': '右投',\n            'LHB': '左打',\n            'RHB': '右打',\n            'L': '左投',\n            'R ': '右投',\n            ' L ': '左打',\n            ' R ': '右打',\n            '#': '背番号',\n\n            'Opponent connected': '相手選手見参',\n            'Click Here': 'ここにクリック',\n            'Play against Team Japan': '日本代表挑戦'\n        },\n        e: {\n            empty: '-',\n            'Season': 'Season'\n        }\n    })[override ? override : text.mode][phrase];\n    return string ? string : phrase;\n};\n\ntext.getBattersEye = function (game) {\n    var eye = {},\n        breaking = Math.abs(game.pitchInFlight.breakDirection[0]) + Math.abs(game.pitchInFlight.breakDirection[1]) > 40;\n    eye.e = text('looks like: ', 'e') + breaking ? text('breaking ball', 'e') : text('fastball', 'e');\n    eye.n = text('looks like: ', 'n') + breaking ? text('breaking ball', 'n') : text('fastball', 'n');\n    return eye;\n};\n\ntext.fielderShortName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': '一',\n            'second': '二',\n            'third': '三',\n            'short': '遊',\n            'pitcher': '投',\n            'catcher': '捕',\n            'left': '左',\n            'center': '中',\n            'right': '右'\n        })[fielder];\n    }\n    return fielder;\n};\n\ntext.slash = function () {\n    if (text.mode == 'n') {\n        return '・';\n    }\n    return '/';\n};\n\ntext.fielderLongName = function (fielder) {\n    if (text.mode == 'n') {\n        return ({\n            'first': 'ファースト',\n            'second': 'セカンド',\n            'third': 'サード',\n            'short': 'ショート',\n            'pitcher': 'ピッチャー',\n            'catcher': 'キャッチャー',\n            'left': 'レフト',\n            'center': 'センター',\n            'right': 'ライト'\n        })[fielder];\n    }\n    return ({\n        first: text('first baseman'),\n        second: text('second baseman'),\n        third: text('third baseman'),\n        short: text('shortstop'),\n        pitcher: text('pitcher'),\n        catcher: text('catcher'),\n        left: text('left fielder'),\n        center: text('center fielder'),\n        right: text('right fielder')\n    })[fielder];\n};\n\ntext.comma = function () {\n    return ({ n: '、', e: ', ' })[text.mode];\n};\ntext.stop = function () {\n    return ({ n: '。', e: '. ' })[text.mode];\n};\n\ntext.namePitch = function (pitch) {\n    if (text.mode == 'e') {\n        return pitch.name.charAt(0).toUpperCase() + pitch.name.slice(1);\n    }\n    if (text.mode == 'n') {\n        return text(pitch.name);\n    }\n};\n\ntext.contactResult = function (batter, fielder, bases, outBy, sacrificeAdvances, out) {\n    var statement = '';\n    var infield = ['left', 'center', 'right'].indexOf(fielder) < 0;\n    var doublePlay = out.doublePlay;\n    if (text.mode == 'e') {\n        statement += batter;\n        if (outBy) {\n            switch (outBy) {\n                case 'fieldersChoice':\n                    play = out.length === 2 ? 'double play ' : '';\n                    statement += ' reached on a fielder\\'s choice ' + play + 'by ' + text.fielderShortName(fielder);\n                    break;\n                case 'line':\n                    statement += ' lined out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'fly':\n                    statement += ' flew out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'error':\n                    statement += ' reached on error by ' + text.fielderShortName(fielder);\n                    break;\n                case 'pop':\n                    statement += ' popped out to ' + text.fielderShortName(fielder);\n                    break;\n                case 'ground':\n                    var play = doublePlay ? 'into a double play by' : 'out to';\n                    statement += ' grounded ' + play + ' ' + text.fielderShortName(fielder);\n                    break;\n                case 'thrown':\n                    play = doublePlay ? ' on a double play' : '';\n                    statement += ' was thrown out by ' + text.fielderShortName(fielder) + play;\n                    break;\n            }\n            if (out.length) {\n                var plural = out.length > 1;\n                var runner = plural ? 'Runners' : 'Runner';\n                var is = plural ? 'are' : 'is';\n                statement += '. ' + runner + ' from ' + text(out.join(text.comma())) + ' ' + is + ' out';\n            }\n        } else {\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += ' reached on an infield hit to ' + text.fielderShortName(fielder);\n                    } else {\n                        statement += ' reached on a single to ' + text.fielderShortName(fielder);\n                    }\n                    break;\n                case 2:\n                    statement += ' doubled past ' + text.fielderShortName(fielder);\n                    break;\n                case 3:\n                    statement += ' tripled past ' + text.fielderShortName(fielder);\n                    break;\n                case 4:\n                    statement += ' homered to ' + text.fielderShortName(fielder);\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += text.stop() + 'Runner on third scores';\n                } else {\n                    statement += text.stop() + 'Runner on ' + base + ' advances';\n                }\n            });\n        }\n        statement += text.stop();\n    }\n    if (text.mode == 'n') {\n        var stop = text.stop();\n        statement += batter + 'は';\n        if (outBy) {\n            var fielderLong = text.fielderLongName(fielder);\n            fielder = text.fielderShortName(fielder);\n            switch (outBy) {\n                case 'fieldersChoice':\n                    statement += '野選(' + fielder + ')で出塁';\n                    break;\n                case 'line':\n                    statement += fielder + '直';\n                    break;\n                case 'fly':\n                    statement += fielder + '飛';\n                    break;\n                case 'error':\n                    statement += 'エラー(' + fielder + ')で出塁';\n                    break;\n                case 'pop':\n                    statement += 'ポップフライで' + fielder + '飛';\n                    break;\n                case 'ground':\n                    statement += fielderLong + 'ゴロに封殺';\n                    break;\n                case 'thrown':\n                    statement += fielder + 'ゴロ';\n                    break;\n            }\n            if (out.length) {\n                statement += '。' + out.map(function (runner) {\n                    return text(runner);\n                }).join(text.comma()) + 'ランナーはアウト';\n            }\n            if (doublePlay) {\n                statement += '。ゲッツー';\n            }\n        } else {\n            fielder = text.fielderShortName(fielder);\n            switch (bases) {\n                case 1:\n                    if (infield) {\n                        statement += '内野安打' + '(' + fielder + ')' + 'で出塁';\n                    } else {\n                        statement += '安打(' + fielder + ')' + 'で出塁';\n                    }\n                    break;\n                case 2:\n                    statement += '二塁打（' + fielder + '）で出塁';\n                    break;\n                case 3:\n                    statement += '三塁打（' + fielder + '）で出塁';\n                    break;\n                case 4:\n                    statement += '本塁打（' + fielder + '）';\n                    break;\n            }\n        }\n        if (sacrificeAdvances) {\n            sacrificeAdvances.map(function (base) {\n                if (base == 'third') {\n                    statement += stop + 'サードランナーホームイン';\n                } else {\n                    statement += stop + text(base) + 'ランナー進塁';\n                }\n            });\n        }\n        statement += stop;\n    }\n    return statement;\n};\n\nexports.text = text;\n\n},{}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _baseballNamespace = require('baseball/namespace');\n\nif (typeof window == 'object') {\n    window.Baseball = _baseballNamespace.Baseball;\n}\n\nexports.Baseball = _baseballNamespace.Baseball;\n\n},{\"baseball/namespace\":27}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballModelAtBat = require('baseball/Model/AtBat');\n\nvar _baseballModelField = require('baseball/Model/Field');\n\nvar _baseballModelGame = require('baseball/Model/Game');\n\nvar _baseballModelManager = require('baseball/Model/Manager');\n\nvar _baseballModelPlayer = require('baseball/Model/Player');\n\nvar _baseballModelTeam = require('baseball/Model/Team');\n\nvar _baseballModelUmpire = require('baseball/Model/Umpire');\n\nvar _baseballUtility_utils = require('baseball/Utility/_utils');\n\nvar _baseballServices_services = require('baseball/Services/_services');\n\nvar _baseballTeamsProvider = require('baseball/Teams/Provider');\n\nvar Baseball = {};\n\nBaseball.model = {};\nBaseball.model.Game = Baseball.Game = _baseballModelGame.Game;\nBaseball.model.Player = Baseball.Player = _baseballModelPlayer.Player;\nBaseball.model.Team = Baseball.Team = _baseballModelTeam.Team;\n\nBaseball.service = {};\nBaseball.service.Animator = _baseballServices_services.Animator;\nBaseball.service.Distribution = _baseballServices_services.Distribution;\nBaseball.service.Iterator = _baseballServices_services.Iterator;\nBaseball.service.Mathinator = _baseballServices_services.Mathinator;\n\nBaseball.util = {};\nBaseball.util.text = _baseballUtility_utils.text;\nBaseball.util.Log = _baseballUtility_utils.Log;\n\nBaseball.teams = {};\nBaseball.teams.Provider = _baseballTeamsProvider.Provider;\n\nexports.Baseball = Baseball;\n\n},{\"baseball/Model/AtBat\":1,\"baseball/Model/Field\":2,\"baseball/Model/Game\":3,\"baseball/Model/Manager\":4,\"baseball/Model/Player\":5,\"baseball/Model/Team\":6,\"baseball/Model/Umpire\":7,\"baseball/Services/_services\":17,\"baseball/Teams/Provider\":18,\"baseball/Utility/_utils\":22}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _baseballServicesAnimator = require('baseball/Services/Animator');\n\nvar _baseballServicesDistribution = require('baseball/Services/Distribution');\n\nvar _baseballServicesIterator = require('baseball/Services/Iterator');\n\nvar _baseballServicesMathinator = require('baseball/Services/Mathinator');\n\nexports.Animator = _baseballServicesAnimator.Animator;\nexports.Distribution = _baseballServicesDistribution.Distribution;\nexports.Iterator = _baseballServicesIterator.Iterator;\nexports.Mathinator = _baseballServicesMathinator.Mathinator;\n\n},{\"baseball/Services/Animator\":13,\"baseball/Services/Distribution\":14,\"baseball/Services/Iterator\":15,\"baseball/Services/Mathinator\":16}]},{},[26]);\n","IndexController = function($scope, socket) {\r\n    var text = Baseball.util.text;\r\n    var Game = Baseball.Game;\r\n    var Animator = Baseball.service.Animator;\r\n\r\n    window.s = $scope;\r\n    $scope.t = text;\r\n\r\n    $scope.mode = function(setMode) {\r\n        if (setMode) {\r\n            text.mode = setMode;\r\n        }\r\n        return text.mode;\r\n    };\r\n\r\n    $scope.teamJapan = function() {\r\n        var provider = new Baseball.teams.Provider;\r\n        provider.assignTeam($scope.y, 'TeamJapan', 'away');\r\n        var game = $scope.y;\r\n        if (game.half === 'top') {\r\n            game.batter = game.teams.away.lineup[game.batter.order];\r\n            game.deck = game.teams.away.lineup[(game.batter.order + 1) % 9];\r\n            game.hole = game.teams.away.lineup[(game.batter.order + 2) % 9];\r\n        } else {\r\n            game.pitcher = game.teams.away.positions.pitcher;\r\n        }\r\n    };\r\n\r\n    $scope.proceedToGame = function(quickMode, spectateCpu) {\r\n        Game.prototype.humanControl = spectateCpu ? 'none' : 'home';\r\n        Game.prototype.quickMode = !!quickMode && quickMode !== 7;\r\n        $scope.y = new Game();\r\n        var game = $scope.y;\r\n        var field = window.location.hash ? window.location.hash.slice(1) : game.teams.home.name + Math.ceil(Math.random()*47);\r\n        if (typeof io !== 'undefined') {\r\n            socket.game = game;\r\n            $scope.socket = io(window.location.hostname + ':64321');\r\n            $scope.socketService = socket;\r\n            socket.socket = $scope.socket;\r\n            socket.start(field);\r\n        }\r\n        window.location.hash = '#' + field;\r\n        s2.y = game;\r\n        bindMethods();\r\n        $('.blocking').remove();\r\n        if (game.humanControl == 'none' && game.quickMode) {\r\n            var n = 0;\r\n            Animator.console = true;\r\n            game.console = true;\r\n            do {\r\n                n++;\r\n                game.simulateInput(function(callback) {\r\n                    typeof callback == 'function' && callback();\r\n                });\r\n            } while (game.stage != 'end' && n < 500);\r\n            Animator.console = game.console = false;\r\n            log('sim ended');\r\n            game.debugOut();\r\n        } else if (game.humanControl == 'none') {\r\n            var scalar = game.quickMode ? 0.05 : 1;\r\n            var auto = setInterval(function() {\r\n                if (game.stage == 'end') {\r\n                    clearInterval(auto);\r\n                }\r\n                game.simulatePitchAndSwing(function(callback) {\r\n                    game.quickMode ? void 0 : $scope.$apply();\r\n                    $scope.updateFlightPath(callback);\r\n                });\r\n            }, scalar*(game.field.hasRunnersOn() ? Animator.TIME_FROM_SET + 2000 : Animator.TIME_FROM_WINDUP + 2000));\r\n        }\r\n        if (quickMode === 7 && spectateCpu === undefined) {\r\n            Game.prototype.quickMode = true;\r\n            do {\r\n                game.simulateInput(function(callback) {\r\n                    typeof callback == 'function' && callback();\r\n                });\r\n            } while (game.stage != 'end' && game.inning != 7);\r\n            log('sim halted in 7th');\r\n            game.debugOut();\r\n            Game.prototype.quickMode = false;\r\n            game.simulateInput(function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        }\r\n        if (game.humanControl == 'away') {\r\n            game.simulateInput(function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        }\r\n        if (game.humanControl == 'home') {\r\n            $scope.showMessage = true;\r\n        }\r\n        if (!quickMode || quickMode === 7) {\r\n            game.timeOfDay.h = '00';\r\n            var delay = 100,\r\n                interval = 150;\r\n            while (delay < (game.startTime.h - game.timeOfDay.h) * interval) {\r\n                setTimeout(function() {\r\n                    game.timeOfDay.h = ('00' + (parseInt(game.timeOfDay.h) + 1)).slice(-2);\r\n                    $scope.$apply();\r\n                }, delay);\r\n                delay += interval;\r\n            }\r\n        }\r\n    };\r\n\r\n    var bindMethods = function() {\r\n        var game = $scope.y;\r\n        $scope.holdUpTimeouts = [];\r\n        $scope.expandScoreboard = false;\r\n        $scope.updateFlightPath = Animator.updateFlightPath.bind($scope);\r\n\r\n        // avoid scope cycles, any other easy way?\r\n        var bat = $('.target .swing.stance-indicator');\r\n        var showBat = function(event) {\r\n            if (game.humanBatting()) {\r\n                var offset = $('.target').offset();\r\n                var relativeOffset = {\r\n                    x : event.pageX - offset.left,\r\n                    y : 200 - (event.pageY - offset.top)\r\n                };\r\n                var angle = game.setBatAngle(relativeOffset.x, relativeOffset.y);\r\n                bat.css({\r\n                    top: 200-relativeOffset.y + \"px\",\r\n                    left: relativeOffset.x + \"px\",\r\n                    transform: \"rotate(\" + angle + \"deg) rotateY(\"+(game.batter.bats == \"left\" ? 0 : -0)+\"deg)\"\r\n                });\r\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\r\n                    bat.hide();\r\n                } else {\r\n                    bat.show();\r\n                }\r\n            }\r\n        };\r\n        var glove = $('.target .glove.stance-indicator');\r\n        var showGlove = function(event) {\r\n            if (game.humanPitching()) {\r\n                var offset = $('.target').offset();\r\n                var relativeOffset = {\r\n                    x : event.pageX - offset.left,\r\n                    y : 200 - (event.pageY - offset.top)\r\n                };\r\n                glove.css({\r\n                    top: 200-relativeOffset.y + \"px\",\r\n                    left: relativeOffset.x + \"px\"\r\n                });\r\n                if (relativeOffset.x > 200 || relativeOffset.x < 0 || relativeOffset.y > 200 || relativeOffset.y < 0) {\r\n                    glove.hide();\r\n                } else {\r\n                    glove.show();\r\n                }\r\n            }\r\n        };\r\n\r\n        $scope.selectPitch = function(pitchName) {\r\n            if (game.stage == 'pitch') {\r\n                game.pitchInFlight = $.extend({}, game.pitcher.pitching[pitchName]);\r\n                game.pitchInFlight.name = pitchName;\r\n                game.swingResult.looking = true;\r\n            }\r\n        };\r\n        $scope.allowInput = true;\r\n        $scope.holdUp = function() {\r\n            $('.no-swing').click();\r\n            $scope.$apply();\r\n        };\r\n        game.startOpponentPitching = function(callback) {\r\n            $scope.updateFlightPath(callback);\r\n        };\r\n        $scope.indicate = function($event) {\r\n            if (!$scope.allowInput) {\r\n                return;\r\n            }\r\n            if (game.pitcher.windingUp) {\r\n                return;\r\n            }\r\n            if (game.humanPitching()) $scope.allowInput = false;\r\n            var offset = $('.target').offset();\r\n            var relativeOffset = {\r\n                x : $event.pageX - offset.left,\r\n                y : 200 - ($event.pageY - offset.top)\r\n            };\r\n            clearTimeout($scope.lastTimeout);\r\n            while ($scope.holdUpTimeouts.length) {\r\n                clearTimeout($scope.holdUpTimeouts.shift());\r\n            }\r\n            $scope.showMessage = false;\r\n            game.receiveInput(relativeOffset.x, relativeOffset.y, function(callback) {\r\n                $scope.updateFlightPath(callback);\r\n            });\r\n        };\r\n        $scope.abbreviatePosition = function(position) {\r\n            if (text.mode == 'e') {\r\n                return {\r\n                    pitcher : 'P',\r\n                    catcher : 'C',\r\n                    first : '1B',\r\n                    second : '2B',\r\n                    short : 'SS',\r\n                    third : '3B',\r\n                    left : 'LF',\r\n                    center : 'CF',\r\n                    right : 'RF'\r\n                }[position];\r\n            }\r\n            return text.fielderShortName(position);\r\n        };\r\n        $scope.$watch('y.humanBatting()', function() {\r\n            if ($scope.y.humanBatting()) {\r\n                $('.input-area').mousemove(showBat);\r\n            } else {\r\n                $('.input-area').unbind('mousemove', showBat);\r\n                bat.hide();\r\n            }\r\n        });\r\n        $scope.$watch('y.humanPitching()', function() {\r\n            if ($scope.y.humanPitching()) {\r\n                $('.input-area').mousemove(showGlove);\r\n            } else {\r\n                $('.input-area').unbind('mousemove', showGlove);\r\n                glove.hide();\r\n            }\r\n        });\r\n        var aside = {\r\n            left: $('aside.image-panel.left'),\r\n            right: $('aside.image-panel.right')\r\n        };\r\n        //$scope.$watch('y.playResult', function() {\r\n        //    aside.left.hide();\r\n        //    aside.right.hide();\r\n        //    aside.left.fadeIn(1000, function() {\r\n        //        aside.left.fadeOut(1000);\r\n        //        aside.right.fadeIn(1000, function() {\r\n        //            aside.right.fadeOut(1000);\r\n        //        })\r\n        //    });\r\n        //    $scope.imagePanel = {\r\n        //        left: 'url(./public/images/' + $scope.y.playResult.batter + '.png)',\r\n        //        right: 'url(./public/images/' + $scope.y.playResult.fielder + '.png)'\r\n        //    };\r\n        //});\r\n    };\r\n\r\n\r\n};","var SocketService = function() {\r\n    var Service = function() {};\r\n    var game, socket, NO_OPERATION = function() {},\r\n        animator = Baseball.service.Animator;\r\n    Service.prototype = {\r\n        socket : {},\r\n        game : {},\r\n        connected : false,\r\n        start : function(key) {\r\n            game = this.game;\r\n            socket = this.socket;\r\n            game.opponentService = this;\r\n            this.connected = socket.connected;\r\n            this.on();\r\n            socket.emit('register', key);\r\n        },\r\n        on : function() {\r\n            var giraffe = this;\r\n            socket.on('register', this.register);\r\n            socket.on('connect reconnect', function() {\r\n                giraffe.connected = true;\r\n            });\r\n            socket.on('disconnect', function() {\r\n                giraffe.connected = false;\r\n            });\r\n            socket.on('pitch', function(pitch) {\r\n                //console.log('receive', 'pitch', pitch);\r\n                game.thePitch(0, 0, NO_OPERATION, pitch);\r\n                var scope = window.s;\r\n                animator.updateFlightPath.bind(scope)();\r\n            });\r\n            socket.on('swing', function(swing) {\r\n                //console.log('receive', 'swing', swing);\r\n                game.theSwing(0, 0, NO_OPERATION, swing);\r\n                var scope = window.s;\r\n                animator.updateFlightPath.bind(scope)(function() {\r\n                    if (swing.contact) {\r\n                        animator.animateFieldingTrajectory(game);\r\n                    }\r\n                });\r\n            });\r\n            socket.on('partner_disconnect', function() {\r\n                console.log('The opponent has disconnected');\r\n                game.opponentConnected = false;\r\n                var scope = window.s;\r\n                scope.$digest();\r\n            });\r\n            socket.on('partner_connect', function() {\r\n                game.opponentConnected = true;\r\n                var scope = window.s;\r\n                scope.$digest();\r\n            });\r\n            socket.on('opponent_taking_field', function() {\r\n                console.log('A challenger has appeared! Sending game data.');\r\n                socket.emit('game_data', game.toData());\r\n            });\r\n            socket.on('game_data', function(data) {\r\n                game.fromData(data);\r\n                var scope = window.s;\r\n                scope.$apply();\r\n            });\r\n            socket.on('field_in_use', function() {\r\n                game.opponentConnected = false;\r\n            });\r\n        },\r\n        off : function() {\r\n            socket.on('register', NO_OPERATION);\r\n        },\r\n        register: function(data) {\r\n            console.log(data);\r\n            if (data === 'away') {\r\n                game.humanControl = 'away';\r\n            }\r\n            socket.on('register', NO_OPERATION);\r\n        },\r\n        emitPitch : function(pitch) {\r\n            //console.log('emit', 'pitch', pitch);\r\n            socket.emit('pitch', pitch);\r\n        },\r\n        emitSwing : function(swing) {\r\n            //console.log('emit', 'swing', swing);\r\n            socket.emit('swing', swing);\r\n        },\r\n        swing : function() {\r\n\r\n        },\r\n        pitch : function() {\r\n\r\n        }\r\n    };\r\n    return new Service;\r\n};","BattersDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/batters.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","BatteryDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/battery.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","FieldDirective = function() {\r\n    return {\r\n        //scope: {\r\n        //    game: '=',\r\n        //    text: '='\r\n        //},\r\n        templateUrl: 'public/html/views/directives/field.html?cache='+cacheKey,\r\n        transclude : true,\r\n        //link: function(scope) {\r\n        //    scope.t = scope.text;\r\n        //    scope.y = scope.game;\r\n        //}\r\n    };\r\n};","RatingBlockDirective = function() {\r\n    return {\r\n        scope: {\r\n            rating: '='\r\n        },\r\n        transclude: true,\r\n        templateUrl: 'public/html/views/directives/ratingBlock.html?cache='+cacheKey,\r\n        link: function(scope) {\r\n        }\r\n    };\r\n};","ScoreboardDirective = function() {\r\n    return {\r\n        scope: {\r\n            game: '=',\r\n            text: '='\r\n        },\r\n        templateUrl: 'public/html/views/directives/scoreboard.html?cache='+cacheKey,\r\n        link: function(scope) {\r\n            window.s2 = scope;\r\n            scope.t = scope.text;\r\n            scope.y = scope.game;\r\n        }\r\n    };\r\n};","var app = angular.module('YakyuuAikoukai', ['directives'])\r\n    .service('socket', SocketService)\r\n    .controller('IndexController', ['$scope', 'socket', IndexController]);\r\n\r\napp.config(function($interpolateProvider) {\r\n    $interpolateProvider.startSymbol('{{');\r\n    $interpolateProvider.endSymbol('}}');\r\n});\r\n\r\ncacheKey = Math.floor(Math.random()*1500);\r\n\r\nangular.module('directives', [])\r\n    .directive('scoreboard', ScoreboardDirective)\r\n    .directive('batters', BattersDirective)\r\n    .directive('battery', BatteryDirective)\r\n    .directive('field', FieldDirective)\r\n    .directive('ratingBlock', RatingBlockDirective);"],"sourceRoot":"/source/"}