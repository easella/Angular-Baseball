import { AbstractMesh } from './AbstractMesh';
import { Loop } from '../Loop';

class Sky extends AbstractMesh {
    constructor(loop) {
        super();
        this.getMesh();
        if (loop instanceof Loop) {
            this.join(loop);
        }
    }
    getMesh() {
        var uniforms = {
            luminance:	 { type: "f", value: 0.2 },
            turbidity:	 { type: "f", value: 10 },
            reileigh:	 { type: "f", value: 1.5 },
            mieCoefficient:	 { type: "f", value: 0.005 },
            mieDirectionalG: { type: "f", value: 0.8 },
            sunPosition: 	 { type: "v3", value: new THREE.Vector3() }
        };

        var geometry = new THREE.SphereGeometry(100000, 32, 15);
        var material = new THREE.ShaderMaterial({
            vertexShader: document.getElementsByClassName('vertexShader')[0].textContent,
            fragmentShader: document.getElementsByClassName('sky4')[0].textContent,
            uniforms: uniforms,
            side: THREE.BackSide
        });

        this.mesh = new THREE.Mesh( geometry, material );
        return this.mesh;
    }
    animate() {

    }
}

export { Sky }