!function(t,e){for(var n in e)t[n]=e[n]}(exports,function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var i={};n.r(i),n.d(i,"ACESFilmicToneMapping",(function(){return Rt})),n.d(i,"AddEquation",(function(){return Z})),n.d(i,"AddOperation",(function(){return Mt})),n.d(i,"AdditiveAnimationBlendMode",(function(){return xn})),n.d(i,"AdditiveBlending",(function(){return q})),n.d(i,"AlphaFormat",(function(){return ce})),n.d(i,"AlwaysDepth",(function(){return ft})),n.d(i,"AlwaysStencilFunc",(function(){return Zn})),n.d(i,"AmbientLight",(function(){return Iu})),n.d(i,"AmbientLightProbe",(function(){return td})),n.d(i,"AnimationClip",(function(){return Fh})),n.d(i,"AnimationLoader",(function(){return Yh})),n.d(i,"AnimationMixer",(function(){return Cd})),n.d(i,"AnimationObjectGroup",(function(){return Ld})),n.d(i,"AnimationUtils",(function(){return Eh})),n.d(i,"ArcCurve",(function(){return eu})),n.d(i,"ArrayCamera",(function(){return tc})),n.d(i,"ArrowHelper",(function(){return bp})),n.d(i,"Audio",(function(){return ud})),n.d(i,"AudioAnalyser",(function(){return yd})),n.d(i,"AudioContext",(function(){return $u})),n.d(i,"AudioListener",(function(){return hd})),n.d(i,"AudioLoader",(function(){return Ku})),n.d(i,"AxesHelper",(function(){return wp})),n.d(i,"AxisHelper",(function(){return Tf})),n.d(i,"BackSide",(function(){return H})),n.d(i,"BasicDepthPacking",(function(){return Cn})),n.d(i,"BasicShadowMap",(function(){return B})),n.d(i,"BinaryTextureLoader",(function(){return Pf})),n.d(i,"Bone",(function(){return kc})),n.d(i,"BooleanKeyframeTrack",(function(){return Ih})),n.d(i,"BoundingBoxHelper",(function(){return Ef})),n.d(i,"Box2",(function(){return Ud})),n.d(i,"Box3",(function(){return Ei})),n.d(i,"Box3Helper",(function(){return mp})),n.d(i,"BoxBufferGeometry",(function(){return ks})),n.d(i,"BoxGeometry",(function(){return ks})),n.d(i,"BoxHelper",(function(){return fp})),n.d(i,"BufferAttribute",(function(){return $r})),n.d(i,"BufferGeometry",(function(){return vs})),n.d(i,"BufferGeometryLoader",(function(){return Hu})),n.d(i,"ByteType",(function(){return $t})),n.d(i,"Cache",(function(){return Uh})),n.d(i,"Camera",(function(){return js})),n.d(i,"CameraHelper",(function(){return up})),n.d(i,"CanvasRenderer",(function(){return Of})),n.d(i,"CanvasTexture",(function(){return pl})),n.d(i,"CatmullRomCurve3",(function(){return au})),n.d(i,"CineonToneMapping",(function(){return At})),n.d(i,"CircleBufferGeometry",(function(){return ml})),n.d(i,"CircleGeometry",(function(){return ml})),n.d(i,"ClampToEdgeWrapping",(function(){return kt})),n.d(i,"Clock",(function(){return rd})),n.d(i,"ClosedSplineCurve3",(function(){return _f})),n.d(i,"Color",(function(){return Wr})),n.d(i,"ColorKeyframeTrack",(function(){return Oh})),n.d(i,"CompressedTexture",(function(){return dl})),n.d(i,"CompressedTextureLoader",(function(){return Xh})),n.d(i,"ConeBufferGeometry",(function(){return yl})),n.d(i,"ConeGeometry",(function(){return yl})),n.d(i,"CubeCamera",(function(){return Vs})),n.d(i,"CubeReflectionMapping",(function(){return Ct})),n.d(i,"CubeRefractionMapping",(function(){return It})),n.d(i,"CubeTexture",(function(){return qs})),n.d(i,"CubeTextureLoader",(function(){return Zh})),n.d(i,"CubeUVReflectionMapping",(function(){return Bt})),n.d(i,"CubeUVRefractionMapping",(function(){return Nt})),n.d(i,"CubicBezierCurve",(function(){return uu})),n.d(i,"CubicBezierCurve3",(function(){return du})),n.d(i,"CubicInterpolant",(function(){return Rh})),n.d(i,"CullFaceBack",(function(){return I})),n.d(i,"CullFaceFront",(function(){return O})),n.d(i,"CullFaceFrontBack",(function(){return D})),n.d(i,"CullFaceNone",(function(){return C})),n.d(i,"Curve",(function(){return Qh})),n.d(i,"CurvePath",(function(){return xu})),n.d(i,"CustomBlending",(function(){return J})),n.d(i,"CustomToneMapping",(function(){return Lt})),n.d(i,"CylinderBufferGeometry",(function(){return gl})),n.d(i,"CylinderGeometry",(function(){return gl})),n.d(i,"Cylindrical",(function(){return Fd})),n.d(i,"DataTexture",(function(){return Xs})),n.d(i,"DataTexture2DArray",(function(){return xo})),n.d(i,"DataTexture3D",(function(){return bo})),n.d(i,"DataTextureLoader",(function(){return $h})),n.d(i,"DataUtils",(function(){return Sp})),n.d(i,"DecrementStencilOp",(function(){return Fn})),n.d(i,"DecrementWrapStencilOp",(function(){return Un})),n.d(i,"DefaultLoadingManager",(function(){return jh})),n.d(i,"DepthFormat",(function(){return fe})),n.d(i,"DepthStencilFormat",(function(){return me})),n.d(i,"DepthTexture",(function(){return fl})),n.d(i,"DirectionalLight",(function(){return Cu})),n.d(i,"DirectionalLightHelper",(function(){return cp})),n.d(i,"DiscreteInterpolant",(function(){return Ph})),n.d(i,"DodecahedronBufferGeometry",(function(){return xl})),n.d(i,"DodecahedronGeometry",(function(){return xl})),n.d(i,"DoubleSide",(function(){return U})),n.d(i,"DstAlphaFactor",(function(){return ct})),n.d(i,"DstColorFactor",(function(){return ht})),n.d(i,"DynamicBufferAttribute",(function(){return df})),n.d(i,"DynamicCopyUsage",(function(){return ri})),n.d(i,"DynamicDrawUsage",(function(){return Kn})),n.d(i,"DynamicReadUsage",(function(){return ei})),n.d(i,"EdgesGeometry",(function(){return Sl})),n.d(i,"EdgesHelper",(function(){return Af})),n.d(i,"EllipseCurve",(function(){return tu})),n.d(i,"EqualDepth",(function(){return yt})),n.d(i,"EqualStencilFunc",(function(){return Vn})),n.d(i,"EquirectangularReflectionMapping",(function(){return Ot})),n.d(i,"EquirectangularRefractionMapping",(function(){return Dt})),n.d(i,"Euler",(function(){return sr})),n.d(i,"EventDispatcher",(function(){return ci})),n.d(i,"ExtrudeBufferGeometry",(function(){return Ql})),n.d(i,"ExtrudeGeometry",(function(){return Ql})),n.d(i,"Face3",(function(){return Vr})),n.d(i,"Face4",(function(){return Zp})),n.d(i,"FaceColors",(function(){return tf})),n.d(i,"FileLoader",(function(){return qh})),n.d(i,"FlatShading",(function(){return G})),n.d(i,"Float16BufferAttribute",(function(){return ss})),n.d(i,"Float32Attribute",(function(){return bf})),n.d(i,"Float32BufferAttribute",(function(){return os})),n.d(i,"Float64Attribute",(function(){return wf})),n.d(i,"Float64BufferAttribute",(function(){return as})),n.d(i,"FloatType",(function(){return ne})),n.d(i,"Fog",(function(){return cc})),n.d(i,"FogExp2",(function(){return ac})),n.d(i,"Font",(function(){return Yu})),n.d(i,"FontLoader",(function(){return Ju})),n.d(i,"FrontSide",(function(){return F})),n.d(i,"Frustum",(function(){return $s})),n.d(i,"GLBufferAttribute",(function(){return Dd})),n.d(i,"GLSL1",(function(){return oi})),n.d(i,"GLSL3",(function(){return ai})),n.d(i,"GammaEncoding",(function(){return Tn})),n.d(i,"GeometryUtils",(function(){return If})),n.d(i,"GreaterDepth",(function(){return xt})),n.d(i,"GreaterEqualDepth",(function(){return vt})),n.d(i,"GreaterEqualStencilFunc",(function(){return Jn})),n.d(i,"GreaterStencilFunc",(function(){return Yn})),n.d(i,"GridHelper",(function(){return ip})),n.d(i,"Group",(function(){return ec})),n.d(i,"HalfFloatType",(function(){return ie})),n.d(i,"HemisphereLight",(function(){return Mu})),n.d(i,"HemisphereLightHelper",(function(){return np})),n.d(i,"HemisphereLightProbe",(function(){return Qu})),n.d(i,"IcosahedronBufferGeometry",(function(){return eh})),n.d(i,"IcosahedronGeometry",(function(){return eh})),n.d(i,"ImageBitmapLoader",(function(){return Vu})),n.d(i,"ImageLoader",(function(){return Jh})),n.d(i,"ImageUtils",(function(){return mi})),n.d(i,"ImmediateRenderObject",(function(){return Vd})),n.d(i,"IncrementStencilOp",(function(){return kn})),n.d(i,"IncrementWrapStencilOp",(function(){return Hn})),n.d(i,"InstancedBufferAttribute",(function(){return Fu})),n.d(i,"InstancedBufferGeometry",(function(){return ku})),n.d(i,"InstancedInterleavedBuffer",(function(){return Od})),n.d(i,"InstancedMesh",(function(){return qc})),n.d(i,"Int16Attribute",(function(){return gf})),n.d(i,"Int16BufferAttribute",(function(){return es})),n.d(i,"Int32Attribute",(function(){return vf})),n.d(i,"Int32BufferAttribute",(function(){return is})),n.d(i,"Int8Attribute",(function(){return pf})),n.d(i,"Int8BufferAttribute",(function(){return Kr})),n.d(i,"IntType",(function(){return te})),n.d(i,"InterleavedBuffer",(function(){return hc})),n.d(i,"InterleavedBufferAttribute",(function(){return dc})),n.d(i,"Interpolant",(function(){return Ah})),n.d(i,"InterpolateDiscrete",(function(){return dn})),n.d(i,"InterpolateLinear",(function(){return pn})),n.d(i,"InterpolateSmooth",(function(){return fn})),n.d(i,"InvertStencilOp",(function(){return Gn})),n.d(i,"JSONLoader",(function(){return Df})),n.d(i,"KeepStencilOp",(function(){return Nn})),n.d(i,"KeyframeTrack",(function(){return Ch})),n.d(i,"LOD",(function(){return Cc})),n.d(i,"LatheBufferGeometry",(function(){return nh})),n.d(i,"LatheGeometry",(function(){return nh})),n.d(i,"Layers",(function(){return cr})),n.d(i,"LensFlare",(function(){return Nf})),n.d(i,"LessDepth",(function(){return mt})),n.d(i,"LessEqualDepth",(function(){return gt})),n.d(i,"LessEqualStencilFunc",(function(){return qn})),n.d(i,"LessStencilFunc",(function(){return Wn})),n.d(i,"Light",(function(){return _u})),n.d(i,"LightProbe",(function(){return Bu})),n.d(i,"Line",(function(){return Qc})),n.d(i,"Line3",(function(){return Wd})),n.d(i,"LineBasicMaterial",(function(){return Yc})),n.d(i,"LineCurve",(function(){return pu})),n.d(i,"LineCurve3",(function(){return fu})),n.d(i,"LineDashedMaterial",(function(){return Sh})),n.d(i,"LineLoop",(function(){return il})),n.d(i,"LinePieces",(function(){return Kp})),n.d(i,"LineSegments",(function(){return nl})),n.d(i,"LineStrip",(function(){return $p})),n.d(i,"LinearEncoding",(function(){return Mn})),n.d(i,"LinearFilter",(function(){return Vt})),n.d(i,"LinearInterpolant",(function(){return Lh})),n.d(i,"LinearMipMapLinearFilter",(function(){return Jt})),n.d(i,"LinearMipMapNearestFilter",(function(){return Yt})),n.d(i,"LinearMipmapLinearFilter",(function(){return Xt})),n.d(i,"LinearMipmapNearestFilter",(function(){return qt})),n.d(i,"LinearToneMapping",(function(){return Tt})),n.d(i,"Loader",(function(){return Wh})),n.d(i,"LoaderUtils",(function(){return zu})),n.d(i,"LoadingManager",(function(){return Gh})),n.d(i,"LogLuvEncoding",(function(){return An})),n.d(i,"LoopOnce",(function(){return ln})),n.d(i,"LoopPingPong",(function(){return un})),n.d(i,"LoopRepeat",(function(){return hn})),n.d(i,"LuminanceAlphaFormat",(function(){return de})),n.d(i,"LuminanceFormat",(function(){return ue})),n.d(i,"MOUSE",(function(){return L})),n.d(i,"Material",(function(){return Yr})),n.d(i,"MaterialLoader",(function(){return Nu})),n.d(i,"Math",(function(){return ui})),n.d(i,"MathUtils",(function(){return ui})),n.d(i,"Matrix3",(function(){return pi})),n.d(i,"Matrix4",(function(){return $i})),n.d(i,"MaxEquation",(function(){return et})),n.d(i,"Mesh",(function(){return Ns})),n.d(i,"MeshBasicMaterial",(function(){return Xr})),n.d(i,"MeshDepthMaterial",(function(){return Xa})),n.d(i,"MeshDistanceMaterial",(function(){return Ja})),n.d(i,"MeshFaceMaterial",(function(){return nf})),n.d(i,"MeshLambertMaterial",(function(){return _h})),n.d(i,"MeshMatcapMaterial",(function(){return Mh})),n.d(i,"MeshNormalMaterial",(function(){return wh})),n.d(i,"MeshPhongMaterial",(function(){return xh})),n.d(i,"MeshPhysicalMaterial",(function(){return vh})),n.d(i,"MeshStandardMaterial",(function(){return yh})),n.d(i,"MeshToonMaterial",(function(){return bh})),n.d(i,"MinEquation",(function(){return tt})),n.d(i,"MirroredRepeatWrapping",(function(){return Ft})),n.d(i,"MixOperation",(function(){return _t})),n.d(i,"MultiMaterial",(function(){return rf})),n.d(i,"MultiplyBlending",(function(){return X})),n.d(i,"MultiplyOperation",(function(){return wt})),n.d(i,"NearestFilter",(function(){return Ht})),n.d(i,"NearestMipMapLinearFilter",(function(){return Wt})),n.d(i,"NearestMipMapNearestFilter",(function(){return Gt})),n.d(i,"NearestMipmapLinearFilter",(function(){return jt})),n.d(i,"NearestMipmapNearestFilter",(function(){return Ut})),n.d(i,"NeverDepth",(function(){return pt})),n.d(i,"NeverStencilFunc",(function(){return jn})),n.d(i,"NoBlending",(function(){return W})),n.d(i,"NoColors",(function(){return Qp})),n.d(i,"NoToneMapping",(function(){return St})),n.d(i,"NormalAnimationBlendMode",(function(){return vn})),n.d(i,"NormalBlending",(function(){return V})),n.d(i,"NotEqualDepth",(function(){return bt})),n.d(i,"NotEqualStencilFunc",(function(){return Xn})),n.d(i,"NumberKeyframeTrack",(function(){return Dh})),n.d(i,"Object3D",(function(){return _r})),n.d(i,"ObjectLoader",(function(){return Uu})),n.d(i,"ObjectSpaceNormalMap",(function(){return Dn})),n.d(i,"OctahedronBufferGeometry",(function(){return ih})),n.d(i,"OctahedronGeometry",(function(){return ih})),n.d(i,"OneFactor",(function(){return it})),n.d(i,"OneMinusDstAlphaFactor",(function(){return lt})),n.d(i,"OneMinusDstColorFactor",(function(){return ut})),n.d(i,"OneMinusSrcAlphaFactor",(function(){return at})),n.d(i,"OneMinusSrcColorFactor",(function(){return st})),n.d(i,"OrthographicCamera",(function(){return Lu})),n.d(i,"PCFShadowMap",(function(){return N})),n.d(i,"PCFSoftShadowMap",(function(){return z})),n.d(i,"PMREMGenerator",(function(){return Up})),n.d(i,"ParametricBufferGeometry",(function(){return rh})),n.d(i,"ParametricGeometry",(function(){return rh})),n.d(i,"Particle",(function(){return of})),n.d(i,"ParticleBasicMaterial",(function(){return lf})),n.d(i,"ParticleSystem",(function(){return af})),n.d(i,"ParticleSystemMaterial",(function(){return hf})),n.d(i,"Path",(function(){return bu})),n.d(i,"PerspectiveCamera",(function(){return Ws})),n.d(i,"Plane",(function(){return Er})),n.d(i,"PlaneBufferGeometry",(function(){return to})),n.d(i,"PlaneGeometry",(function(){return to})),n.d(i,"PlaneHelper",(function(){return gp})),n.d(i,"PointCloud",(function(){return sf})),n.d(i,"PointCloudMaterial",(function(){return cf})),n.d(i,"PointLight",(function(){return Ru})),n.d(i,"PointLightHelper",(function(){return Kd})),n.d(i,"Points",(function(){return ll})),n.d(i,"PointsMaterial",(function(){return rl})),n.d(i,"PolarGridHelper",(function(){return rp})),n.d(i,"PolyhedronBufferGeometry",(function(){return vl})),n.d(i,"PolyhedronGeometry",(function(){return vl})),n.d(i,"PositionalAudio",(function(){return gd})),n.d(i,"PropertyBinding",(function(){return Rd})),n.d(i,"PropertyMixer",(function(){return vd})),n.d(i,"QuadraticBezierCurve",(function(){return mu})),n.d(i,"QuadraticBezierCurve3",(function(){return gu})),n.d(i,"Quaternion",(function(){return _i})),n.d(i,"QuaternionKeyframeTrack",(function(){return Nh})),n.d(i,"QuaternionLinearInterpolant",(function(){return Bh})),n.d(i,"REVISION",(function(){return R})),n.d(i,"RGBADepthPacking",(function(){return In})),n.d(i,"RGBAFormat",(function(){return he})),n.d(i,"RGBAIntegerFormat",(function(){return we})),n.d(i,"RGBA_ASTC_10x10_Format",(function(){return We})),n.d(i,"RGBA_ASTC_10x5_Format",(function(){return Ue})),n.d(i,"RGBA_ASTC_10x6_Format",(function(){return Ge})),n.d(i,"RGBA_ASTC_10x8_Format",(function(){return je})),n.d(i,"RGBA_ASTC_12x10_Format",(function(){return Ve})),n.d(i,"RGBA_ASTC_12x12_Format",(function(){return qe})),n.d(i,"RGBA_ASTC_4x4_Format",(function(){return Oe})),n.d(i,"RGBA_ASTC_5x4_Format",(function(){return De})),n.d(i,"RGBA_ASTC_5x5_Format",(function(){return Be})),n.d(i,"RGBA_ASTC_6x5_Format",(function(){return Ne})),n.d(i,"RGBA_ASTC_6x6_Format",(function(){return ze})),n.d(i,"RGBA_ASTC_8x5_Format",(function(){return ke})),n.d(i,"RGBA_ASTC_8x6_Format",(function(){return Fe})),n.d(i,"RGBA_ASTC_8x8_Format",(function(){return He})),n.d(i,"RGBA_BPTC_Format",(function(){return Ye})),n.d(i,"RGBA_ETC2_EAC_Format",(function(){return Ie})),n.d(i,"RGBA_PVRTC_2BPPV1_Format",(function(){return Le})),n.d(i,"RGBA_PVRTC_4BPPV1_Format",(function(){return Re})),n.d(i,"RGBA_S3TC_DXT1_Format",(function(){return Me})),n.d(i,"RGBA_S3TC_DXT3_Format",(function(){return Se})),n.d(i,"RGBA_S3TC_DXT5_Format",(function(){return Te})),n.d(i,"RGBDEncoding",(function(){return Pn})),n.d(i,"RGBEEncoding",(function(){return En})),n.d(i,"RGBEFormat",(function(){return pe})),n.d(i,"RGBFormat",(function(){return le})),n.d(i,"RGBIntegerFormat",(function(){return be})),n.d(i,"RGBM16Encoding",(function(){return Ln})),n.d(i,"RGBM7Encoding",(function(){return Rn})),n.d(i,"RGB_ETC1_Format",(function(){return Pe})),n.d(i,"RGB_ETC2_Format",(function(){return Ce})),n.d(i,"RGB_PVRTC_2BPPV1_Format",(function(){return Ae})),n.d(i,"RGB_PVRTC_4BPPV1_Format",(function(){return Ee})),n.d(i,"RGB_S3TC_DXT1_Format",(function(){return _e})),n.d(i,"RGFormat",(function(){return ve})),n.d(i,"RGIntegerFormat",(function(){return xe})),n.d(i,"RawShaderMaterial",(function(){return gh})),n.d(i,"Ray",(function(){return Zi})),n.d(i,"Raycaster",(function(){return Bd})),n.d(i,"RectAreaLight",(function(){return Ou})),n.d(i,"RedFormat",(function(){return ge})),n.d(i,"RedIntegerFormat",(function(){return ye})),n.d(i,"ReinhardToneMapping",(function(){return Et})),n.d(i,"RepeatWrapping",(function(){return zt})),n.d(i,"ReplaceStencilOp",(function(){return zn})),n.d(i,"ReverseSubtractEquation",(function(){return Q})),n.d(i,"RingBufferGeometry",(function(){return sh})),n.d(i,"RingGeometry",(function(){return sh})),n.d(i,"SRGB8_ALPHA8_ASTC_10x10_Format",(function(){return on})),n.d(i,"SRGB8_ALPHA8_ASTC_10x5_Format",(function(){return nn})),n.d(i,"SRGB8_ALPHA8_ASTC_10x6_Format",(function(){return rn})),n.d(i,"SRGB8_ALPHA8_ASTC_10x8_Format",(function(){return sn})),n.d(i,"SRGB8_ALPHA8_ASTC_12x10_Format",(function(){return an})),n.d(i,"SRGB8_ALPHA8_ASTC_12x12_Format",(function(){return cn})),n.d(i,"SRGB8_ALPHA8_ASTC_4x4_Format",(function(){return Xe})),n.d(i,"SRGB8_ALPHA8_ASTC_5x4_Format",(function(){return Je})),n.d(i,"SRGB8_ALPHA8_ASTC_5x5_Format",(function(){return Ze})),n.d(i,"SRGB8_ALPHA8_ASTC_6x5_Format",(function(){return $e})),n.d(i,"SRGB8_ALPHA8_ASTC_6x6_Format",(function(){return Ke})),n.d(i,"SRGB8_ALPHA8_ASTC_8x5_Format",(function(){return Qe})),n.d(i,"SRGB8_ALPHA8_ASTC_8x6_Format",(function(){return tn})),n.d(i,"SRGB8_ALPHA8_ASTC_8x8_Format",(function(){return en})),n.d(i,"Scene",(function(){return lc})),n.d(i,"SceneUtils",(function(){return Bf})),n.d(i,"ShaderChunk",(function(){return eo})),n.d(i,"ShaderLib",(function(){return io})),n.d(i,"ShaderMaterial",(function(){return Gs})),n.d(i,"ShadowMaterial",(function(){return mh})),n.d(i,"Shape",(function(){return wu})),n.d(i,"ShapeBufferGeometry",(function(){return oh})),n.d(i,"ShapeGeometry",(function(){return oh})),n.d(i,"ShapePath",(function(){return qu})),n.d(i,"ShapeUtils",(function(){return Zl})),n.d(i,"ShortType",(function(){return Kt})),n.d(i,"Skeleton",(function(){return Uc})),n.d(i,"SkeletonHelper",(function(){return $d})),n.d(i,"SkinnedMesh",(function(){return zc})),n.d(i,"SmoothShading",(function(){return j})),n.d(i,"Sphere",(function(){return Gi})),n.d(i,"SphereBufferGeometry",(function(){return ah})),n.d(i,"SphereGeometry",(function(){return ah})),n.d(i,"Spherical",(function(){return kd})),n.d(i,"SphericalHarmonics3",(function(){return Du})),n.d(i,"Spline",(function(){return Sf})),n.d(i,"SplineCurve",(function(){return yu})),n.d(i,"SplineCurve3",(function(){return Mf})),n.d(i,"SpotLight",(function(){return Eu})),n.d(i,"SpotLightHelper",(function(){return Yd})),n.d(i,"Sprite",(function(){return Ac})),n.d(i,"SpriteMaterial",(function(){return pc})),n.d(i,"SrcAlphaFactor",(function(){return ot})),n.d(i,"SrcAlphaSaturateFactor",(function(){return dt})),n.d(i,"SrcColorFactor",(function(){return rt})),n.d(i,"StaticCopyUsage",(function(){return ii})),n.d(i,"StaticDrawUsage",(function(){return $n})),n.d(i,"StaticReadUsage",(function(){return ti})),n.d(i,"StereoCamera",(function(){return id})),n.d(i,"StreamCopyUsage",(function(){return si})),n.d(i,"StreamDrawUsage",(function(){return Qn})),n.d(i,"StreamReadUsage",(function(){return ni})),n.d(i,"StringKeyframeTrack",(function(){return zh})),n.d(i,"SubtractEquation",(function(){return K})),n.d(i,"SubtractiveBlending",(function(){return Y})),n.d(i,"TOUCH",(function(){return P})),n.d(i,"TangentSpaceNormalMap",(function(){return On})),n.d(i,"TetrahedronBufferGeometry",(function(){return ch})),n.d(i,"TetrahedronGeometry",(function(){return ch})),n.d(i,"TextBufferGeometry",(function(){return lh})),n.d(i,"TextGeometry",(function(){return lh})),n.d(i,"Texture",(function(){return yi})),n.d(i,"TextureLoader",(function(){return Kh})),n.d(i,"TorusBufferGeometry",(function(){return hh})),n.d(i,"TorusGeometry",(function(){return hh})),n.d(i,"TorusKnotBufferGeometry",(function(){return uh})),n.d(i,"TorusKnotGeometry",(function(){return uh})),n.d(i,"Triangle",(function(){return zr})),n.d(i,"TriangleFanDrawMode",(function(){return _n})),n.d(i,"TriangleStripDrawMode",(function(){return wn})),n.d(i,"TrianglesDrawMode",(function(){return bn})),n.d(i,"TubeBufferGeometry",(function(){return dh})),n.d(i,"TubeGeometry",(function(){return dh})),n.d(i,"UVMapping",(function(){return Pt})),n.d(i,"Uint16Attribute",(function(){return yf})),n.d(i,"Uint16BufferAttribute",(function(){return ns})),n.d(i,"Uint32Attribute",(function(){return xf})),n.d(i,"Uint32BufferAttribute",(function(){return rs})),n.d(i,"Uint8Attribute",(function(){return ff})),n.d(i,"Uint8BufferAttribute",(function(){return Qr})),n.d(i,"Uint8ClampedAttribute",(function(){return mf})),n.d(i,"Uint8ClampedBufferAttribute",(function(){return ts})),n.d(i,"Uniform",(function(){return Id})),n.d(i,"UniformsLib",(function(){return no})),n.d(i,"UniformsUtils",(function(){return Us})),n.d(i,"UnsignedByteType",(function(){return Zt})),n.d(i,"UnsignedInt248Type",(function(){return ae})),n.d(i,"UnsignedIntType",(function(){return ee})),n.d(i,"UnsignedShort4444Type",(function(){return re})),n.d(i,"UnsignedShort5551Type",(function(){return se})),n.d(i,"UnsignedShort565Type",(function(){return oe})),n.d(i,"UnsignedShortType",(function(){return Qt})),n.d(i,"VSMShadowMap",(function(){return k})),n.d(i,"Vector2",(function(){return di})),n.d(i,"Vector3",(function(){return Mi})),n.d(i,"Vector4",(function(){return xi})),n.d(i,"VectorKeyframeTrack",(function(){return kh})),n.d(i,"Vertex",(function(){return uf})),n.d(i,"VertexColors",(function(){return ef})),n.d(i,"VideoTexture",(function(){return ul})),n.d(i,"WebGL1Renderer",(function(){return oc})),n.d(i,"WebGLCubeRenderTarget",(function(){return Ys})),n.d(i,"WebGLMultisampleRenderTarget",(function(){return wi})),n.d(i,"WebGLRenderTarget",(function(){return bi})),n.d(i,"WebGLRenderTargetCube",(function(){return Cf})),n.d(i,"WebGLRenderer",(function(){return sc})),n.d(i,"WebGLUtils",(function(){return Qa})),n.d(i,"WireframeGeometry",(function(){return ph})),n.d(i,"WireframeHelper",(function(){return Rf})),n.d(i,"WrapAroundEnding",(function(){return yn})),n.d(i,"XHRLoader",(function(){return Lf})),n.d(i,"ZeroCurvatureEnding",(function(){return mn})),n.d(i,"ZeroFactor",(function(){return nt})),n.d(i,"ZeroSlopeEnding",(function(){return gn})),n.d(i,"ZeroStencilOp",(function(){return Bn})),n.d(i,"sRGBEncoding",(function(){return Sn}));const r={n:{empty:"-"," 1st":"1番"," 2nd":"2番"," 3rd":"3番"," 4th":"4番"," 5th":"5番"," 6th":"6番"," 7th":"7番"," 8th":"8番"," 9th":"9番","Now batting":"次のバッター","way outside":"相当外角",outside:"外角",inside:"内角","way inside":"相当内角","way low":"相当低め",low:"低め",high:"高め","way high":"相当高め","down the middle":"真ん中","first baseman":"ファースト","second baseman":"セカンド","third baseman":"サード",shortstop:"ショート",pitcher:"ピッチャー",catcher:"キャッチャー","left fielder":"レフト","center fielder":"センター","right fielder":"ライト","Strike.":"ストライク。","Ball.":"ボール。","Fouled off.":"ファウル。","In play.":"インプレー。","Swinging strike.":"空振り。"," outs":"アウト"," out":"アウト","4-seam":"ストレート","2-seam":"シュート",slider:"スライダー",fork:"フォーク",cutter:"カット",sinker:"シンカー",curve:"カーブ",change:"チェンジ"," struck out looking.":"、見逃し三振。"," walked.":"、フォアボール。"," struck out swinging.":"、空振り三振。","Previous: ":"前：","looks like: ":"予想","breaking ball":"変化球",fastball:"ストレート","Batting, ":"打球","Catching, pitch selection":"捕球選択",Season:"記録",Game:"今試合",Pitch:"球",Control:"制球",Velocity:"速度",Break:"変化","At Bat":"バッター","On Deck":"次バッター",Eye:"目",Power:"力",Speed:"速","Up to Bat":"打席",Fielding:"守備",Pitching:"投球",BA:"打率",OBP:"出塁",SLG:"長打",PA:"打席","H 2B 3B HR":"安 二 三 本",H:"安","2B":"二","3B":"三",HR:"本塁打",RBI:"打点",R:"得点",BB:"四球",SO:"三振",ERA:"防御率",W:"勝",K:"三振",first:"ファースト",second:"セカンド",third:"サード","Runner on":"ランナー","Runners on":"ランナー","Bases empty":"ランナーなし",base:"塁","stolen base":"盗塁成功","caught stealing":"盗塁失敗",Steal:"盗塁",Opportunistic:"自由",Hold:"止まれ","Select Language:":"言語","Run Fast Simulation":"シミュレーションを試合終了まで行う","Play Ball!":"プレーボール","Spectate the CPU":"CPU観戦","Play from the 7th":"７回からプレーする","Throws/Bats":" ",LHP:"左投",RHP:"右投",LHB:"左打",RHB:"右打",L:"左投","R ":"右投"," L ":"左打"," R ":"右打","#":"背番号","Opponent connected":"対戦相手現参","Click Here":"ここにクリック","Amateur Baseball Club":"野球愛好会","Amateur Baseball Team":"愛好球団","College Team":"大学球団","Industrial League Team":"社会人球団","Training Squad":"練習軍","Team Japan":"日本代表",Substituted:"交代",Bench:"ベンチ","Batter Ready":"打撃準備",Ace:"エース","Control pitcher":"技巧派",Flamethrower:"速球派","Breaking ball":"変化球","Genius batter":"天才",Contact:"バットコントロール","Power hitter":"主砲",Speedster:"足速い",Inept:"不器用","Weak swing":"弱い","Strikes out":"三振がち","Leisurely runner":"悠長","Defensive wizard":"守備万能",Glove:"好守",Range:"レンジ","Strong throw":"肩強い","Very late":"とても遅め",Late:"遅め","":"",Early:"早め","Very Early":"とても早め","Sim At Bat":"自動打撃"},e:{empty:"-",Season:"Season",Fielding:"F%",Pitching:"P",Eye:"Eye",Power:"Pow",Speed:"Spd"}},s=(t,e)=>{s.mode||(s.mode="e");const n=r[e||s.mode][t];return n||t};s.mode="e",s.substitution=(t,e,n)=>{const i=s.mode;n=n||s.mode;const r={0:s(" 1st",n),1:s(" 2nd",n),2:s(" 3rd",n),3:s(" 4th",n),4:s(" 5th",n),5:s(" 6th",n),6:s(" 7th",n),7:s(" 8th",n),8:s(" 9th",n)}[e.order],o=s.fielderShortName(e.position,n);if("n"===n){s.mode="n";var a=`${t.getName()+s.comma()+e.getName()}の交代${s.comma()}${r}(${o})`}else s.mode="e",a=`${t.getName()} replaces ${e.getName()} at ${o}, batting${r}`;return s.mode=i,a},s.getBattersEye=t=>{const e={e:"",n:""},n=Math.abs(t.pitchInFlight.breakDirection[0])+Math.abs(t.pitchInFlight.breakDirection[1])>40;return e.e=s("looks like: ","e")+n?s("breaking ball","e"):s("fastball","e"),e.n=s("looks like: ","n")+n?s("breaking ball","n"):s("fastball","n"),e};const o={"1st":"一","2nd":"二","3rd":"三",home:"本",Home:"本",left:"左",center:"中",right:"右"};s.baseShortName=t=>"n"==s.mode?o[t]:t;const a={first:"一",second:"二",third:"三",short:"遊",pitcher:"投",catcher:"捕",left:"左",center:"中",right:"右"};s.fielderShortName=(t,e)=>"n"===(e||s.mode)?a[t]:t,s.slash=()=>"n"==s.mode?"・":"/",s.fielderLongName=t=>({first:s("first baseman"),second:s("second baseman"),third:s("third baseman"),short:s("shortstop"),pitcher:s("pitcher"),catcher:s("catcher"),left:s("left fielder"),center:s("center fielder"),right:s("right fielder")}[t]),s.comma=()=>({n:"、",e:", "}[s.mode]),s.space=()=>({n:"",e:" "}[s.mode]),s.stop=()=>({n:"。",e:". "}[s.mode]),s.namePitch=t=>"e"==s.mode?t.name.charAt(0).toUpperCase()+t.name.slice(1):s(t.name),s.contactResult=(t,e,n,i,r,o)=>{let a="";const c=["left","center","right"].indexOf(e)<0,l=o.doublePlay;if("e"==s.mode){if(a+=t,i){switch(i){case"fieldersChoice":h=2===o.length?"double play ":"",a+=` reached on a <span class="txt-red">fielder's choice</span> ${h}by ${s.fielderShortName(e)}`;break;case"line":a+=' <span class="txt-red">lined out</span> to '+s.fielderShortName(e);break;case"fly":a+=' <span class="txt-red">flew out</span> to '+s.fielderShortName(e);break;case"error":a+=' <span class="txt-blue">reached on error</span> by '+s.fielderShortName(e);break;case"pop":a+=' <span class="txt-red">popped out</span> to '+s.fielderShortName(e);break;case"ground":var h=l?"into a double play by":"out to";a+=` <span class="txt-red">grounded ${h}</span> ${s.fielderShortName(e)}`;break;case"thrown":h=l?" on a double play":"",a+=` was <span class="txt-red">thrown out</span> by ${s.fielderShortName(e)}${h}`}if(o.length){const t=o.length>1,e=t?"are":"is";a+=`. ${t?"Runners":"Runner"} from ${s(o.join(s.comma()))} ${e} <span class="txt-red">out</span>`}}else switch(n){case 1:a+=c?' reached on an <span class="txt-blue">infield hit</span> to '+s.fielderShortName(e):' reached on a <span class="txt-blue">single</span> to '+s.fielderShortName(e);break;case 2:a+=' <span class="txt-blue">doubled</span> past '+s.fielderShortName(e);break;case 3:a+=' <span class="txt-blue">tripled</span> past '+s.fielderShortName(e);break;case 4:a+=' <span class="txt-blue">homered</span> to '+s.fielderShortName(e)}r&&r.map(t=>{a+="third"==t?s.stop()+'Runner on third <span class="txt-blue">scores</span>':`${s.stop()}Runner on ${t} <span class="txt-green">advances</span>`}),a+=s.stop()}if("n"==s.mode){const h=s.stop();if(a+=t+"は",i){const t=s.fielderLongName(e);switch(e=s.fielderShortName(e),i){case"fieldersChoice":a+=`野選(${e})で<span class="txt-red">出塁</span>`;break;case"line":a+=`<span class="txt-red">${e}直</span>`;break;case"fly":a+=`<span class="txt-red">${e}飛</span>`;break;case"error":a+=`<span class="txt-blue">エラー(${e})で出塁</span>`;break;case"pop":a+=`<span class="txt-red">ポップフライで${e}飛</span>`;break;case"ground":a+=`<span class="txt-red">${t}ゴロに封殺</span>`;break;case"thrown":a+=`<span class="txt-red">${e}ゴロ</span>`}o.length&&(a+=`。${o.map(t=>s(t)).join(s.comma())}ランナーは<span class="txt-red">アウト</span>`),l&&(a+='。<span class="txt-red">ゲッツー</span>')}else switch(e=s.fielderShortName(e),n){case 1:a+=c?`<span class="txt-blue">内野安打</span>(${e})で出塁`:`<span class="txt-blue">安打</span>(${e})で出塁`;break;case 2:a+=`<span class="txt-blue">二塁打</span>（${e}）で出塁`;break;case 3:a+=`<span class="txt-blue">三塁打</span>（${e}）で出塁`;break;case 4:a+=`<span class="txt-blue">本塁打</span>（${e}）`}r&&r.map(t=>{a+="third"===t?h+'サードランナー<span class="txt-blue">ホームイン</span>':h+s(t)+'ランナー<span class="txt-green">進塁</span>'}),a+=h}return a};const c={pitcher:"P",catcher:"C",first:"1B",second:"2B",short:"SS",third:"3B",left:"LF",center:"CF",right:"RF"};class l{constructor(t){this.game=t,this.lastOuts=0,this.pointer=0,this.stabilized={pitchRecord:{e:["","","","","",""],n:["","","","","",""]},shortRecord:{e:["","","","","",""],n:["","","","","",""]}},this.pitchRecord={e:[],n:[]},this.shortRecord={e:[],n:[]},this.record={e:[],n:[]},this.lastSwing="",this.lastSwingJ=""}stabilizeShortRecord(){const t=this.record.e.slice(0,6);this.shortRecord.e=t,this.stabilized.shortRecord.e=t.concat(["","","","","",""]).slice(0,6);const e=this.record.n.slice(0,6);this.shortRecord.n=e,this.stabilized.shortRecord.n=e.concat(["","","","","",""]).slice(0,6)}note(t,e,n){"e"===n?(this.record.e.unshift(t),this.async(()=>{this.pushConsole(t)})):"n"===n?(this.record.n.unshift(e),this.async(()=>{this.pushConsole(e)})):(this.record.e.unshift(t),this.record.n.unshift(e),this.async(()=>{"n"===s.mode?this.pushConsole(e):this.pushConsole(t)})),this.stabilizeShortRecord()}getBatter(t){const e=t.team.nowBatting,n={0:s(" 1st"),1:s(" 2nd"),2:s(" 3rd"),3:s(" 4th"),4:s(" 5th"),5:s(" 6th"),6:s(" 7th"),7:s(" 8th"),8:s(" 9th")}[e];return s("Now batting")+n+s.comma()+s.fielderLongName(t.position)+s.comma()+t.getUniformNumber()+s.comma()+t.getName()}noteBatter(t){const e=s.mode;let n,i;s.mode="e",n=this.getBatter(t),s.mode="n",i=this.getBatter(t),s.mode=e,this.note(n,i)}getPitchLocationDescription(t,e){let n=t.x;const i=t.y;let r="",o=!1,a=!1,c=!1;return e||(n=200-n),n<50?(r+=s("way outside"),c=!0):n<70?r+=s("outside"):n<100||n<130?(r+="",o=!0):n<150?r+=s("inside"):(r+=s("way inside"),c=!0),r&&(r+=s.comma()),i<35?(r+=s("way low"),c=!0):i<65?r+=s("low"):i<135?(r+="",a=!0):i<165?r+=s("high"):(r+=s("way high"),c=!0),(o||a)&&(r=r.split(s.comma()).join(""),o&&a&&(r=s("down the middle"))),r=s.namePitch(t)+s.comma()+r+s.stop(),r}notePitch(t,e){const n=s.mode;let i,r;s.mode="e",i=this.getPitchLocationDescription(t,"left"==e.bats),this.pitchRecord.e.unshift(i),this.stabilized.pitchRecord.e.unshift(i),this.stabilized.pitchRecord.e.pop(),s.mode="n",r=this.getPitchLocationDescription(t,"left"==e.bats),this.pitchRecord.n.unshift(r),this.stabilized.pitchRecord.n.unshift(r),this.stabilized.pitchRecord.n.pop(),s.mode=n}broadcastCount(t){let e;if(!this.game.umpire)return"";const n=this.game.umpire.count;return e=2===this.lastOuts&&0===n.outs?3+s(" outs"):n.outs+(1==n.outs?s(" out"):s(" outs")),this.lastOuts=n.outs,t?e+s.stop():`${this.game.getInning()}: ${n.strikes}-${n.balls}, ${e}${s.stop()}`}broadcastScore(){return`${this.game.teams.away.getName()} ${this.game.tally.away.R}, ${this.game.teams.home.getName()} ${this.game.tally.home.R}${s.stop()}`}broadcastRunners(){const t=this.game.field,e=[t.first&&s("first")||"",t.second&&s("second")||"",t.third&&s("third")||""].filter(t=>t);let n=0;switch(e.map(t=>{t&&n++}),n){case 0:return s("Bases empty")+s.stop();case 1:return`${s("Runner on")}: ${e.join(s.comma())}${s.stop()}`;default:return`${s("Runners on")}: ${e.join(s.comma())}${s.stop()}`}}displayMph(t){return t?"e"===s.mode?(0|t)+"mph. ":`時速${1.60934*t|0}キロ。`:""}getSwing(t){let e="";if(t.looking)t.strike?e+=`<span class="txt-orange">${s("Strike.")}</span>`:e+=`<span class="txt-green">${s("Ball.")}</span>`;else{const n=["Very late","Late","","Early","Very Early"][Math.max(0,Math.min(4,(175+(0|t.timing))/70|0))];n&&(e+="("+s(n)+")"+s.space()),t.contact?t.foul?e+=`<span class="txt-orange">${s("Fouled off.")}</span>`:(t.caught||t.thrownOut,e+=`<span class="txt-blue">${s("In play.")} ${this.displayMph(t.battedBallSpeed)}</span>`):e+=`<span class="txt-orange">${s("Swinging strike.")}</span>`}let n="";const i=this.game.batter.team.lineup;if(!isNaN(t.stoleABase)){const e=i[t.stoleABase];e&&(n=this.noteStealAttempt(e,!0,t.attemptedBase))}if(!isNaN(t.caughtStealing)){const e=i[t.caughtStealing];e&&(n=this.noteStealAttempt(e,!0,t.attemptedBase))}return n&&this.note(n,n,s.mode),e+n}noteSwing(t){const e=s.mode;let n,i;const r=this.pitchRecord,o=this.stabilized.pitchRecord;s.mode="e",n=this.getSwing(t),r.e[0]+=n,o.e[0]+=n,s.mode="n",i=this.getSwing(t),r.n[0]+=i,o.n[0]+=i,s.mode=e,i=o.n[0],n=o.e[0];const a=this;this.lastSwing=n,this.lastSwingJ=i,0!==n.indexOf("Previous")&&this.async(()=>{n.indexOf("In play")>-1&&n.indexOf("struck out")>-1?"n"===s.mode?this.pushConsole(i):this.pushConsole(n):"n"===s.mode?this.pushConsole(a.broadcastCount(),i):this.pushConsole(a.broadcastCount(),n)})}pushConsole(...t){console.log(...t.map(t=>t.replace(/<span (class="?([\w-_]+)?"?)?>(.*?)<\/span>/g,"$3")))}async(t){this.game&&this.game.console||setTimeout(t,100)}noteStealAttempt(t,e,n){return`${s.space()+t.getName()+s.comma()+s(e?"stolen base":"caught stealing")+s.space()}(${s.baseShortName(n)})${s.stop()}`}noteSubstitution(t,e){return this.note(s.substitution(t,e,"e"),s.substitution(t,e,"n"))}getPlateAppearanceResult(t){const e=t.swingResult;let n="";const i=t.batter.getName();let r=[];if(e.looking){n=e.strike?i+`<span class="txt-red">${s(" struck out looking.")}</span>`:i+`<span class="txt-blue">${s(" walked.")}</span>`;let t="";const r=this.game.batter.team.lineup;if(!isNaN(e.stoleABase)){const n=r[e.stoleABase];t=this.noteStealAttempt(n,!0,e.attemptedBase)}if(!isNaN(e.caughtStealing)){const n=r[e.caughtStealing];t=this.noteStealAttempt(n,!1,e.attemptedBase)}n+=t}else if(e.contact){let t=e.fielder,o=e.bases,a=!1;if(e.caught)a=e.flyAngle<15?"line":["left","center","right"].indexOf(e.fielder)<0?"pop":"fly";else if(e.foul);else if(e.error)o=1,a="error";else{if(e.thrownOut)a=Math.random()<.5?"ground":"thrown";else switch(e.bases){case 1:case 2:case 3:o=e.bases;break;case 4:o=4,t=e.splay<-15?"left":e.splay<15?"center":"right"}e.firstOut&&(r=r.concat(e.additionalOuts.filter(t=>"batter"!==t)),r.doublePlay=e.doublePlay),e.fieldersChoice&&(r.push(e.fieldersChoice),a=3==e.outs?"ground":"fieldersChoice")}n=s.contactResult(i,t,o,a,3===e.outs?[]:e.sacrificeAdvances,r)}else n=i+`<span class="txt-red">${s(" struck out swinging.")}</span>`;return n}notePlateAppearanceResult(t){const e=s.mode,n=s("Previous: ","n"),i=s("Previous: ","e");let r;const o=this.record,a=this.pitchRecord,c=this.stabilized.pitchRecord;s.mode="e";const l=this.getPlateAppearanceResult(t);o.e.unshift(l),r=i+this.lastSwing+s.space()+l,a.e=[r],c.e=[r,"","","","",""],s.mode="n";const h=this.getPlateAppearanceResult(t);o.n.unshift(h),r=n+this.lastSwingJ+s.space()+h,a.n=[r],c.n=[r,"","","","",""],s.mode=e;const u=this;this.async(()=>{"n"===s.mode?this.pushConsole(["%c"+h,u.broadcastCount(!0),u.broadcastScore(),u.broadcastRunners()].join(" "),"color: darkgreen;"):this.pushConsole(["%c"+l,u.broadcastCount(!0),u.broadcastScore(),u.broadcastRunners()].join(" "),"color: darkgreen;")})}}l.SINGLE="H",l.DOUBLE="2B",l.TRIPLE="3B",l.HOMERUN="HR",l.WALK="BB",l.GROUNDOUT="GO",l.FLYOUT="FO",l.LINEOUT="LO",l.RUN="R",l.STRIKEOUT="SO",l.SACRIFICE="SAC",l.REACHED_ON_ERROR="ROE",l.FIELDERS_CHOICE="FC",l.GIDP="(IDP)",l.GITP="(ITP)",l.STOLEN_BASE="SB",l.CAUGHT_STEALING="CS";class h{constructor(t){this.beneficial=!1,this.infield=t.includes(h.INFIELD_HIT_INDICATOR)?h.INFIELD_HIT_INDICATOR:"",t=t.replace(h.INFIELD_HIT_INDICATOR,""),this.text=t.split(h.RBI_INDICATOR)[0],this.rbi=""+(t.split(this.text)[1]||"");~[l.WALK,l.SINGLE,l.HOMERUN,l.DOUBLE,l.TRIPLE,l.SACRIFICE,l.REACHED_ON_ERROR,l.STOLEN_BASE,l.RUN].indexOf(this.text)&&(this.beneficial=!0)}toString(){return`${this.infield}${this.text}${this.rbi}`}}h.INFIELD_HIT_INDICATOR="",h.RBI_INDICATOR="+";const u={surnames:["Sato","Suzuki","Takahashi","Tanaka","Watanabe","Ito","Nakamura","Kobayashi","Yamamoto","Kato","Yoshida","Yamada","Sasaki","Yamaguchi","Matsumoto","Inoue","Kimura","Shimizu","Hayashi","Saito","Saito","Yamazaki","Nakajima","Mori","Abe","Ikeda","Hashimoto","Ishikawa","Yamashita","Ogawa","Ishii","Hasegawa","Goto","Okada","Kondo","Maeda","Fujita","Endo","Aoki","Sakamoto","Murakami","Ota","Kaneko","Fujii","Fukuda","Nishimura","Miura","Takeuchi","Nakagawa","Okamoto","Matsuda","Harada","Nakano"],surnamesJ:["佐藤","鈴木","高橋","田中","渡辺","伊藤","中村","小林","山本","加藤","吉田","山田","佐々木","山口","松本","井上","木村","清水","林","斉藤","斎藤","山崎","中島","森","阿部","池田","橋本","石川","山下","小川","石井","長谷川","後藤","岡田","近藤","前田","藤田","遠藤","青木","坂本","村上","太田","金子","藤井","福田","西村","三浦","竹内","中川","岡本","松田","原田","中野"],namesJ:["匠","ヒカル","ゆうき","翔太","冬馬","漣","港区","ルイ","樹","賢治","五木","春","光一","宗介","こうすけ","雄太","大樹","瑛太","宏","亨","道夫","聡","昭","茂雄","勝","純一","和夫","勲","省三","隆","達夫","正一","輝夫","俊夫","史郎","勇","義弘","良雄","登","義明","正義","秀夫","肇","月","克己","正男","光男","久","耕三","清","次郎","正博","明子","武","勉","晴夫","裕二","稔","障子","和子","敦","茂","信夫","恵一","忠","高尾","薫","ケン","健治","哲夫","啓二","光一","真一","貞夫","靖","武","雄","文雄","久雄","一朗","健一","正明","五郎","誠","昭夫","誠司","洋一","康夫","誠一","正美","則夫","幸雄","忠雄","仁","シンジ","豊","邦雄","修","雅之","三郎","英治","浩二","栄一","恒夫","義郎","進","博之","巌"],names:["Takumi","Hikaru","Yuuki","Shouta","Touma","Ren","Minato","Rui","Tatsuki","Kenji","Itsuki","Haru","Kouichi","Sousuke","Kousuke","Yuuta","Daiki","Eita","Hiroshi","Toru","Michio","Satoshi","Akira","Shigeo","Masaru","Junichi","Kazuo","Isao","Shozo","Takashi","Tatsuo","Shoichi","Teruo","Toshio","Shiro","Isamu","Yoshihiro","Yoshio","Noboru","Yoshiaki","Tadayoshi","Hideo","Hajime","Akari","Katsumi","Masao","Mitsuo","Hisashi","Kozo","Kiyoshi","Jiro","Masahiro","Akiko","Takeshi","Tsutomu","Haruo","Yuji","Minoru","Shoji","Kazuko","Atsushi","Shigeru","Shinobu","Keiichi","Tadashi","Takao","Kaoru","Ken","Kenji","Tetsuo","Keiji","Koichi","Shinichi","Sadao","Yasushi","Takeshi","Yu","Fumio","Hisao","Ichiro","Kenichi","Masaaki","Goro","Makoto","Akio","Seiji","Yoichi","Yasuo","Seiichi","Masami","Norio","Yukio","Tadao","Hitoshi","Shinji","Yutaka","Kunio","Osamu","Masayuki","Saburo","Eiji","Koji","Eiichi","Tsuneo","Yoshio","Susumu","Hiroyuki","Iwao"],teamNamesJ:["横浜","大阪","名古屋","札幌","神戸","京都","福岡","川崎","埼玉県","広島","仙台","千葉県","新潟","浜松","静岡","相模原","岡山","熊本","鹿児島","船橋","川口","姫路","松山","宇都宮","松戸","西宮","倉敷","市川","福山","尼崎","金沢","長崎","横須賀","富山","高松","町田","岐阜","枚方","藤沢","柏","豊中","長野県","豊橋","一宮","和歌山","岡崎","宮崎","奈良","吹田","高槻","旭川","いわき","高崎","所沢","川越","秋田","越谷","前橋","那覇","四日市","青森","久留米","春日井","盛岡","明石","福島","下関","長岡","市原","函館","茨城県","福井","加古川","徳島","水戸","平塚","佐世保","呉","八戸","佐賀","寝屋川","富士","春日部","茅ヶ崎","松本","厚木","大和","上尾","宝塚","筑波","沼津","熊谷","伊勢崎","岸和田","鳥取","小田原","鈴鹿","松江","日立"],teamNames:["Yokohama","Osaka","Nagoya","Sapporo","Kobe","Kyoto","Fukuoka","Kawasaki","Saitama","Hiroshima","Sendai","Chiba","Niigata","Hamamatsu","Shizuoka","Sagamihara","Okayama","Kumamoto","Kagoshima","Funabashi","Kawaguchi","Himeji","Matsuyama","Utsunomiya","Matsudo","Nishinomiya","Kurashiki","Ichikawa","Fukuyama","Amagasaki","Kanazawa","Nagasaki","Yokosuka","Toyama","Takamatsu","Machida","Gifu","Hirakata","Fujisawa","Kashiwa","Toyonaka","Nagano","Toyohashi","Ichinomiya","Wakayama","Okazaki","Miyazaki","Nara","Suita","Takatsuki","Asahikawa","Iwaki","Takasaki","Tokorozawa","Kawagoe","Akita","Koshigaya","Maebashi","Naha","Yokkaichi","Aomori","Kurume","Kasugai","Morioka","Akashi","Fukushima","Shimonoseki","Nagaoka","Ichihara","Hakodate","Ibaraki","Fukui","Kakogawa","Tokushima","Mito","Hiratsuka","Sasebo","Kure","Hachinohe","Saga","Neyagawa","Fuji","Kasukabe","Chigasaki","Matsumoto","Atsugi","Yamato","Ageo","Takarazuka","Tsukuba","Numazu","Kumagaya","Isesaki","Kishiwada","Tottori","Odawara","Suzuka","Matsue","Hitachi"]},d={pitchDefinitions:{"4-seam":[0,0,1,180,1e3],"2-seam":[20,-20,.9,-45,1200],cutter:[-25,-20,.95,75,1200],sinker:[15,-30,.95,-45,1500],slider:[-50,-35,.88,80,2e3],fork:[0,-70,.87,20,500],curve:[0,-110,.82,10,2500],change:[0,-10,.86,-15,1e3]},selectRandomPitch:()=>["4-seam","2-seam","cutter","sinker","slider","fork","curve","change"][Math.floor(8*Math.random())]},p=d.pitchDefinitions,{random:f,min:m,max:g,floor:y,ceil:v,abs:x,pow:b,sqrt:w}=Math;class _{static error(t){return.1*(100-t.skill.defense.fielding)+3.25>100*f()}static travelDistance(t,e,n,i){n=m(5,0|x(n)),i=m(5,0|x(i));const r=8-w(n*n+i*i),s=(10+320*b(f(),1-.125*r)+t/300+f()*t)*(e>0?Math.pow(1-x(e-30)/60,2):.5*Math.pow(1-x(e)/90,2));let o;return o=s<110?.25*s+82.5:s,o}static pitchLocation(t){let e,n;e=f()<.5?50+y(90*f())-y(30*f()):150+y(30*f())-y(90*f()),n=170-y(w(28900*f()))+30;const i=t.strikes+t.balls+3;return e=((3+t.strikes)*e+100*t.balls)/i,n=((3+t.strikes)*n+100*t.balls)/i,{x:e,y:n}}static centralizedNumber(){return 100+y(15*f())-y(15*f())}static swingLikelihood(t,e,n,i,r=50){let s;switch(String(i.count.balls)+String(i.count.strikes)){case"01":s=65;break;case"02":s=70;break;case"10":s=55;break;case"11":s=70;break;case"12":s=90;break;case"20":s=50;break;case"21":s=60;break;case"22":s=110;break;case"30":s=10;break;case"31":s=40;break;case"32":s=130;break;case"00":default:s=33}(i.game.field.second||i.game.field.third)&&(s+=20);const o=(180-x(100-e)-x(100-n))/2,a=_.inStrikezone(e,n);if(a)c=65+.3*t;else var c=30-.3*t;let l=(30*o+40*c+20*s+10*x(r))/100;return 100*f()<t&&(c>s&&a||c<s&&!a)&&(l=(10*o+80*c+10*x(r))/100),l}static pitchControl(t,e){const n=(50-100*f())/(1+e/100);return m(199.9,g(.1,t+n))}static breakEffect(t,e,n,i){const r={x:0,y:0},s=e.pitching[t.name]||{break:0};return r.x=y(n+t.breakDirection[0]*(.5+.5*f()+s.break/200)),r.y=y(i+t.breakDirection[1]*((.5+.5*f()+s.break/200)/(.5+i/200))),r}static cpuSwing(t,e,n,i){n=m(n,100);return.85*(100+(t-100)*(100+f()*n)/200+30*(f()-.5)+(i?800*(f()-.5)*45/(300+n):0)-(e-100))}static inStrikezone(t,e){return t>50&&t<150&&e>35&&e<165}static swing(t){return 1-(t/1e3+f())}static stealSuccess(t,e,n,i,r){let s=f();const o=f();4==i&&(s/=100);const a=(1+o)/2,c=(p[t.name]||["","",.6])[2];return(35*Number(r)+n.skill.offense.eye+(-25*i+45))*s+10+2*n.skill.offense.speed-n.fatigue>c*t.velocity*a+(e.skill.defense.catching+e.skill.defense.throwing)*o}static willSteal(t,e,n,i){return 4!=i&&(f()<.15&&this.stealSuccess(t,e,n,i,!1)&&f()<.5)}static main(){const t={count:{balls:0,strikes:0}};for(;t.count.balls<4;){for(;t.count.strikes<3;)console.log("S",t.count.strikes,"B",t.count.balls),console.log("middle",[15,35,55,75,95].map(e=>0|_.swingLikelihood(e,100,100,t))),console.log("corner",[15,35,55,75,95].map(e=>0|_.swingLikelihood(e,50,50,t))),console.log("ball",[15,35,55,75,95].map(e=>0|_.swingLikelihood(e,15,15,t))),t.count.strikes++;t.count.balls++,t.count.strikes=0}}}class M{static getAngularOffset(t,e){const n=t.x<0?-1:1,i=t.y<0?-1:1,r=Math.atan(t.x/t.y)/this.RADIAN,s=Math.sqrt(t.x*t.x+t.y*t.y),o=i*Math.cos((e-r)*this.RADIAN)*s;return{x:n*Math.sqrt(s*s-o*o),y:o}}static getPolarDistance(t,e){const n=this.RADIAN;return Math.sqrt(t[1]*t[1]+e[1]*e[1]-2*t[1]*e[1]*Math.cos(t[0]*n-e[0]*n))}static battingAngle(t,e){return Math.atan((t.y-e.y)/(e.x-t.x))/Math.PI*125}static transitionalTrajectory(t,e,n,i,r,s){i&&(M.memory.apexHeight=i),r&&(M.memory.distance=r),s&&(M.memory.splay=s);const o=M.memory.apexHeight,a=M.memory.distance,c=M.memory.splay;let l,h,u,d;const p=M.memory.bounding,f=this.RADIAN;p&&(e*=4,t=Math.floor(100*Math.sqrt(t/100))),l=Math.cos(c*f)*t/100*a*95/300,h=Math.sin(c*f)*t/100*a*95/300+this.SPLAY_INDICATOR_LEFT;const m=Math.sqrt((50-Math.abs(t-50))/100)*(1/.7071);p?(u=1,d=1):(u=m*o/90*15,d=2+2*m),l=Math.max(Math.min(l,400),-20),h=Math.max(Math.min(h,100),-100),u=Math.max(Math.min(u,12),0);const{Power4:g,Linear:y}=TweenMax;return{bottom:l,left:h,padding:u,borderWidth:d,delay:e*n,ease:p?g.easeOut:y.easeNone}}static fielderReturnDelay(t,e,n,i){const r=t/60;return r+(120+t)/310*8*Math.min(i-120,0)/-240+1-(1.8+1/n*1.8)+r/(.5+e/2)}static infieldThrowDelay(t){return 4.5-(t.skill.defense.fielding+t.skill.defense.throwing)/200}static baseRunningTime(t){return 7-t/100*4.1}static getSplayAndFlyAngle(t,e,n,i,r,s){let o=(s?1:-1)*(50/140*r+100/(50+i)*5);o/=Math.abs(100/(100+n));const a=5+-6.5*e;return{splay:-1.75*t-e*n/20+o,fly:5+(a>0?1:-1)*Math.pow(.01+Math.abs(a-30),.75)}}static getFlightTime(t,e){return(1.3-.6*(t+300)/400)/e}}M.RADIAN=Math.PI/180,M.SPLAY_INDICATOR_LEFT=-4,M.memory={};class S{static each(t,e){let n,i;if(t instanceof Array)for(i=0;i<t.length;i++)e(i,t[i]);else for(n=Object.keys(t),i=0;i<n.length;i++)e(n[i],t[n[i]])}}class T{constructor(t){this.team=t}makeLineup(){let t=1;this.team.positions.pitcher=this.selectForSkill(this.team.bench,["pitching"]),this.team.positions.pitcher.position="pitcher",this.team.positions.pitcher.number||(this.team.positions.pitcher.number=t++),this.team.positions.catcher=this.selectForSkill(this.team.bench,["defense","catching"],"right"),this.team.positions.catcher.position="catcher",this.team.positions.catcher.number||(this.team.positions.catcher.number=t++),S.each(this.team.bench,(e,n)=>{n.number||(t+=1+(5*Math.random()|0),n.number=t)}),this.team.positions.short=this.selectForSkill(this.team.bench,["defense","fielding"],"right"),this.team.positions.short.position="short",this.team.positions.second=this.selectForSkill(this.team.bench,["defense","fielding"],"right"),this.team.positions.second.position="second",this.team.positions.third=this.selectForSkill(this.team.bench,["defense","fielding"],"right"),this.team.positions.third.position="third",this.team.positions.center=this.selectForSkill(this.team.bench,["defense","speed"]),this.team.positions.center.position="center",this.team.positions.left=this.selectForSkill(this.team.bench,["defense","speed"]),this.team.positions.left.position="left",this.team.positions.right=this.selectForSkill(this.team.bench,["defense","speed"]),this.team.positions.right.position="right",this.team.positions.first=this.selectForSkill(this.team.bench,["defense","fielding"],"left"),this.team.positions.first.position="first",this.team.lineup[3]=this.selectForSkill(this.team.positions,["offense","power"]),this.team.lineup[3].order=3,this.team.lineup[2]=this.selectForSkill(this.team.positions,["offense","power"]),this.team.lineup[2].order=2,this.team.lineup[4]=this.selectForSkill(this.team.positions,["offense","power"]),this.team.lineup[4].order=4,this.team.lineup[0]=this.selectForSkill(this.team.positions,["offense","speed"]),this.team.lineup[0].order=0,this.team.lineup[1]=this.selectForSkill(this.team.positions,["offense","eye"]),this.team.lineup[1].order=1,this.team.lineup[5]=this.selectForSkill(this.team.positions,["offense","eye"]),this.team.lineup[5].order=5,this.team.lineup[6]=this.selectForSkill(this.team.positions,["offense","eye"]),this.team.lineup[6].order=6,this.team.lineup[7]=this.selectForSkill(this.team.positions,["offense","eye"]),this.team.lineup[7].order=7,this.team.lineup[8]=this.selectForSkill(this.team.positions,["offense","speed"]),this.team.lineup[8].order=8}selectForSkill(t,e,n){t===this.team.positions&&(t=Object.keys(this.team.positions).map(t=>this.team.positions[t]));const i=t;if(i.length){let r=this.team.bench[0],s=0,o=0,a=0;for(const t of i){const i=e.slice();let c=t.skill,l=i.shift();for(;l;)c=c[l],l=i.shift();-1===t.order&&c>=s&&(!n||t.throws===n)&&(s=c,r=t,a=o),o+=1}return t===this.team.bench&&(delete this.team.bench[a],this.team.bench=this.team.bench.filter(t=>t instanceof A)),r}throw new Error("no players available")}checkPitcherFatigue(t=120){const e=this.team,n=e.positions.pitcher,i=this.selectForSkill(e.bench,["pitching"]);if(!i||!i.substitute)return;n.fatigue-n.skill.pitching>t-i.skill.pitching?i.substitute(n):e.bench.push(i)}}class E{constructor(t,e=.1){if(this.stealAttempt=E.RUNNERS_DISCRETION,this.lineup=[],this.game=null,this.manager=new T(this),this.bench=[],this.bullpen=[],this.nowBatting=0,this.substituted=[],this.expanded=null,this.name="",this.nameJ="",this.noSubstituteSelected={toString:()=>"",toValue:()=>!1},this.sub=this.noSubstituteSelected,this.substituted=[],this.pickName(),this.lineup=[],this.bench=[],this.bullpen=[],this.positions={pitcher:null,catcher:null,first:null,second:null,short:null,third:null,left:null,center:null,right:null},"no init"!==t){this.game=t;for(let t=0;t<20;t++)this.bench.push(new A(this,Math.random()<e));20===this.bench.length&&this.manager.makeLineup()}}pickName(){const t=Math.floor(Math.random()*u.teamNames.length);this.name=u.teamNames[t],this.nameJ=u.teamNamesJ[t]}getName(){return"n"===s.mode?this.nameJ:this.name}}E.RUNNERS_DISCRETION="runnersDiscretion",E.RUNNER_GO="go",E.RUNNER_HOLD="hold";class A{constructor(t,e){this.team=t,this.position="bench",this.ready=!1,this.hero=!1,this.fatigue=0,this.order=-1,this.throws=Math.random()>.86?"left":"right",this.bats=Math.random()>.75?"left":"right",this.skill={offense:{eye:0,power:0,speed:0},defense:{catching:0,fielding:0,throwing:0,speed:0},pitching:0},this.eye={x:100,y:100},this.lastPitchCertainty=0,this.pitching={averaging:[]},this.number=0,this.nameJ="",this.atBats=[],this.atBatObjects=[],this.definingBattingCharacteristic={e:"",n:""},this.definingPitchingCharacteristic={e:"",n:""},this.definingCharacteristic={e:"",n:""},this.windingUp=!1,this.stats={pitching:{pitches:0,GS:0,W:0,L:0,strikes:0,K:0,K9:0,getK9(){return this.K/(this.IP[0]/9)},getERA(){return(9*this.ER/Math.max(1/3,this.IP[0]+this.IP[1]/3)+"00").slice(0,4)},ERA:"0",ER:0,H:0,HR:0,BB:0,IP:[0,0],WHIP:0,getWHIP(){return(this.H+this.BB)/(this.IP[0]?this.IP[0]:1)}},batting:{getBA(){return this.h/Math.max(1,this.ab)},getBABIP(){return(this.h-this.hr)/(this.ab-this.so-this.hr+this.sac)},ba:0,getOBP(){return(this.h+this.bb+this.hbp)/(this.ab+this.bb+this.hbp+this.sac)},obp:0,getSLG(){return(this.h-this["2b"]-this["3b"]-this.hr+2*this["2b"]+3*this["3b"]+4*this.hr)/this.ab},slash:"",getSlash(){return this.slash=this.slash||[this.getBA()||".---",this.getOBP(),this.getSLG()].map(t=>isNaN(Number(t))?".---":(t+"0000").slice(t<1?1:0,5)).join("/"),this.slash},slg:"",pa:0,ab:0,so:0,bb:0,h:0,"2b":0,"3b":0,hr:0,r:0,rbi:0,hbp:0,sac:0,sb:0,cs:0,getPPA(){return this.ps/this.pa},ps:0,oSwings:0,getOSwing(){return this.oSwings/this.swings},zSwings:0,getZSwing(){return this.zSwings/this.swings},swings:0,getSwing(){return this.swings/this.ps},go:0,fo:0},fielding:{E:0,PO:0,A:Math.floor(5*Math.random())+1}},this.randomizeSkills(e||Math.random()>.9);const n=Math.floor(Math.random()*u.surnames.length),i=Math.floor(Math.random()*u.names.length);this.name=`${u.surnames[n]} ${u.names[i]}`;const r=u.surnamesJ[n],s=u.namesJ[i];this.spaceName(r,s),this.surname=u.surnames[n],this.surnameJ=u.surnamesJ[n],this.resetStats(this.team.game&&this.team.game.gamesIntoSeason||72)}spaceName(t,e){1===t.length&&e.length<=2&&(t+="・"),1===e.length&&!t.includes("・")&&t.length<=2&&(t+="・"),this.nameJ=t+e,this.surnameJ=t}toData(){const t=this.team;delete this.team;const e=JSON.parse(JSON.stringify(this));return this.team=t,e}fromData(t){Object.assign(this,t),delete this.atBatObjects,this.getAtBats()}substitute(t){if(t.team!==this.team)return!1;const e=t.order,n=t.position;t.team.substituted.push(t),t.team.positions[n]=this,t.team.lineup[e]=this,this.position=n,this.order=e;const i=this.team.game;i.pitcher===t&&(i.pitcher=this),i.batter===t&&(i.batter=this),i.deck===t&&(i.deck=this),i.hole===t&&(i.hole=this);const r=i.field;r.first===t&&(r.first=this),r.second===t&&(r.second=this),r.third===t&&(r.third=this);const s=this.team.bench,o=this.team.bullpen;return~s.indexOf(this)&&s.splice(s.indexOf(this),1),~o.indexOf(this)&&o.splice(o.indexOf(this),1),i.log.noteSubstitution(this,t),!0}resetStats(t=72){const e=this.skill.offense,n=this.skill.defense,i=(t,i,r="")=>{let s=0,o=0,a=0;if("number"==typeof r)s+=r,o+=1;else{(r+="")||(r="");for(const t of r.split(" "))e[t]&&(a=e[t]),n[t]&&(a=n[t]),isNaN(a)&&(a=50),s+=a,o++}return a=Math.sqrt(.05+.95*Math.random())*(s/(.97*o)),Math.floor(a/100*(i-t)+t)};let r,s,o,a,c;this.skill.pitching>65?(r=(this.skill.pitching-65)*t/20,s=r/9*i(800,215,this.skill.pitching)/100,r>t?(o=Math.floor(t/5),a=i(.1*o,.8*o,this.skill.pitching/1.2),c=i(o-a,0,this.skill.pitching/3)):(o=Math.floor(t/40),a=i(0,.6*o,this.skill.pitching),c=i(o-a,0,this.skill.pitching))):(r=0,s=0,o=0,a=0,c=0);const l=i(3*t,5*t,"speed eye");let h=l;const u=Math.floor(i(0,18,"power eye")*h/100);h-=u;const d=h,p=Math.floor(i(25,2,"eye")*h/100);h-=p;const f=Math.floor(i(185,372,"eye power speed")*h/1e3);h-=f;const m=0|i(0,(f+u)/6,"speed"),g=0|i(m,0,"speed eye"),y=i(0,f/4,"power speed"),v=i(0,f/12,"speed"),x=Math.max(0,i(-f/20,f/5,"power eye")),b=i(f/8,(f+u)/3,"speed")+x,w=i(f/8,f/2,"power eye")+x,_=i(0,t/25),M=i(0,t/5,"eye"),S=i(5*t,l-u-p-x,"fielding"),T=i(S/10,0,"fielding"),E=S-T,A=i(9*t,t,"eye"),R=i(t,6*t,"eye"),L=i(2*l,4.2*l,"eye"),P=A+R,C=i(.9*l/2,.7*l/2,"eye"),I=i(.9*l/2,.7*l/2,"eye");Object.assign(this.stats.pitching,{pitches:0,GS:o,W:a,L:c,strikes:0,K:0,ERA:"0.00",ER:s,H:0,HR:0,BB:0,IP:[r,0],WHIP:0}),Object.assign(this.stats.batting,{ba:0,obp:0,slg:0,pa:l,ab:d,so:p,bb:u,h:f,"2b":y,"3b":v,hr:x,r:b,rbi:w,hbp:_,sac:M,sb:m,cs:g,ps:L,oSwings:A,zSwings:R,swings:P,go:C,fo:I}),Object.assign(this.stats.fielding,{E:T,PO:E,A:Math.floor(5*Math.random())+1}),this.stats.pitching.ERA=this.stats.pitching.getERA(),this.stats.pitching.K9=this.stats.pitching.getK9(),this.stats.pitching.WHIP=this.stats.pitching.getWHIP(),this.stats.batting.ba=this.stats.batting.getBA()}getAtBats(){return this.atBats.length>this.atBatObjects.length&&(this.atBatObjects=this.atBats.map(t=>new h(t))),this.atBatObjects}recordRBI(){this.atBats[this.atBats.length-1]+=h.RBI_INDICATOR}recordInfieldHit(){this.atBats[this.atBats.length-1]+=h.INFIELD_HIT_INDICATOR}getBaseRunningTime(){return M.baseRunningTime(this.skill.offense.speed)}attemptSteal(t,e){const n=t.pitchInFlight;let i;switch(_.stealSuccess(n,t.pitcher.team.positions.catcher,this,e,this.team.stealAttempt===E.RUNNERS_DISCRETION)?(t.swingResult.stoleABase=this.order,t.swingResult.caughtStealing=void 0):(t.swingResult.stoleABase=void 0,t.swingResult.caughtStealing=this.order),e){case 1:i="1st";break;case 2:i="2nd";break;case 3:i="3rd";break;case 4:i="Home"}return t.swingResult.attemptedBase=i,this}defensiveAverage(){const t=this.skill.defense;return(t.speed+t.fielding+t.throwing)/3}randomizeSkills(t,e){this.hero=t;const n=this,i=e=>{let i=Math.floor(80*Math.pow(Math.random(),.75)+20*Math.random());return t&&(i+=Math.floor((100-i)*Math.max(Math.random(),e?0:.65))),e&&n.pitching.averaging.push(i),i};this.skill.offense={eye:i(),power:i(),speed:i()},this.skill.defense={catching:i(),fielding:i(),speed:i(),throwing:i()},this.pitching.averaging=[],this.pitching["4-seam"]={velocity:i(!0),break:i(!0),control:i(!0)},this.pitching.slider={velocity:i(!0),break:i(!0),control:i(!0)},(Math.random()<.85||e)&&((Math.random()>.6||e)&&(this.pitching["2-seam"]={velocity:i(!0),break:i(!0),control:i(!0)}),(Math.random()<.18||e)&&(this.pitching.fork={velocity:i(!0),break:i(!0),control:i(!0)}),(Math.random()>.77||e)&&(this.pitching.cutter={velocity:i(!0),break:i(!0),control:i(!0)}),(Math.random()<.21||e)&&(this.pitching.sinker={velocity:i(!0),break:i(!0),control:i(!0)}),(Math.random()<.4||e)&&(this.pitching.curve={velocity:i(!0),break:i(!0),control:i(!0)}),(Math.random()<.9||e)&&(this.pitching.change={velocity:i(!0),break:i(!0),control:i(!0)}));const r=this.pitching.averaging.sort((t,e)=>e-t).slice(0,4).reduce((t,e)=>t+e)/4;this.skill.pitching=Math.floor(r),delete this.pitching.averaging}getSurname(){return"n"===s.mode?this.surnameJ:this.surname}getName(){return"n"===s.mode?this.nameJ:this.name}getUniformNumber(){return s("#")+this.number}getOrder(){return s([" 1st"," 2nd"," 3rd"," 4th"," 5th"," 6th","7th"," 8th"," 9th"][this.order])}getAISwingTiming(){return 280*(Math.random()-.5)*(60/(60+this.skill.offense.eye))*((200-this.lastPitchCertainty)/(200+this.lastPitchCertainty)||1)}getDefiningBattingCharacteristic(){return this.definingBattingCharacteristic[s.mode]||(this.definingBattingCharacteristic[s.mode]=this.getDefiningCharacteristic(!0)),this.definingBattingCharacteristic[s.mode]}getDefiningPitchingCharacteristic(){return this.definingPitchingCharacteristic[s.mode]||(this.definingPitchingCharacteristic[s.mode]=this.getDefiningCharacteristic(!1,!0)),this.definingPitchingCharacteristic[s.mode]}getDefiningCharacteristic(t,e){if(this.definingCharacteristic[s.mode]&&!t)return this.definingCharacteristic[s.mode];let n="";const i=this.skill.offense,r=this.skill.defense,o=this.skill.pitching,a=this.pitching,c=(i.eye,i.power,i.speed,r.fielding,r.speed,r.throwing,[i.eye,i.power,i.speed]),l=[r.fielding,r.speed,r.throwing],h=t=>t.reduce((t,e)=>t+e);let u=[0,0,0];const d=Object.keys(a);d.map(t=>{const e=a[t];u[0]+=e.control,u[1]+=e.velocity,u[2]+=e.break});const p=d.length;return u=u.map(t=>t/p|0),e||o>90&&!t?o>94?n=s("Ace"):u[0]>80?n=s("Control pitcher"):u[1]>80?n=s("Flamethrower"):u[2]>80&&(n=s("Breaking ball")):t||h([2*c[0],.5*c[1],c[2]])>h(l)?c[0]>98||h(c)>270?n=s("Genius batter"):c[1]>80&&c[1]>c[0]?n=s("Power hitter"):c[0]>80?n=s("Contact"):c[2]>80?n=s("Speedster"):c[0]<20||h(c)<120?n=s("Inept"):c[1]<20&&c[1]<c[0]?n=s("Weak swing"):c[0]<30?n=s("Strikes out"):c[2]<40&&(n=s("Leisurely runner")):h(l)>240?n=s("Defensive wizard"):l[0]>80?n=s("Glove"):l[1]>80?n=s("Range"):l[2]>90&&(n=s("Strong throw")),t||e?n:this.definingCharacteristic[s.mode]=n}toString(){return`${this.name} #${this.number}`}}const R="125dev",L={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},P={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},C=0,I=1,O=2,D=3,B=0,N=1,z=2,k=3,F=0,H=1,U=2,G=1,j=2,W=0,V=1,q=2,Y=3,X=4,J=5,Z=100,K=101,Q=102,tt=103,et=104,nt=200,it=201,rt=202,st=203,ot=204,at=205,ct=206,lt=207,ht=208,ut=209,dt=210,pt=0,ft=1,mt=2,gt=3,yt=4,vt=5,xt=6,bt=7,wt=0,_t=1,Mt=2,St=0,Tt=1,Et=2,At=3,Rt=4,Lt=5,Pt=300,Ct=301,It=302,Ot=303,Dt=304,Bt=306,Nt=307,zt=1e3,kt=1001,Ft=1002,Ht=1003,Ut=1004,Gt=1004,jt=1005,Wt=1005,Vt=1006,qt=1007,Yt=1007,Xt=1008,Jt=1008,Zt=1009,$t=1010,Kt=1011,Qt=1012,te=1013,ee=1014,ne=1015,ie=1016,re=1017,se=1018,oe=1019,ae=1020,ce=1021,le=1022,he=1023,ue=1024,de=1025,pe=he,fe=1026,me=1027,ge=1028,ye=1029,ve=1030,xe=1031,be=1032,we=1033,_e=33776,Me=33777,Se=33778,Te=33779,Ee=35840,Ae=35841,Re=35842,Le=35843,Pe=36196,Ce=37492,Ie=37496,Oe=37808,De=37809,Be=37810,Ne=37811,ze=37812,ke=37813,Fe=37814,He=37815,Ue=37816,Ge=37817,je=37818,We=37819,Ve=37820,qe=37821,Ye=36492,Xe=37840,Je=37841,Ze=37842,$e=37843,Ke=37844,Qe=37845,tn=37846,en=37847,nn=37848,rn=37849,sn=37850,on=37851,an=37852,cn=37853,ln=2200,hn=2201,un=2202,dn=2300,pn=2301,fn=2302,mn=2400,gn=2401,yn=2402,vn=2500,xn=2501,bn=0,wn=1,_n=2,Mn=3e3,Sn=3001,Tn=3007,En=3002,An=3003,Rn=3004,Ln=3005,Pn=3006,Cn=3200,In=3201,On=0,Dn=1,Bn=0,Nn=7680,zn=7681,kn=7682,Fn=7683,Hn=34055,Un=34056,Gn=5386,jn=512,Wn=513,Vn=514,qn=515,Yn=516,Xn=517,Jn=518,Zn=519,$n=35044,Kn=35048,Qn=35040,ti=35045,ei=35049,ni=35041,ii=35046,ri=35050,si=35042,oi="100",ai="300 es";function ci(){}Object.assign(ci.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t)}}});const li=[];for(let t=0;t<256;t++)li[t]=(t<16?"0":"")+t.toString(16);let hi=1234567;const ui={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(li[255&t]+li[t>>8&255]+li[t>>16&255]+li[t>>24&255]+"-"+li[255&e]+li[e>>8&255]+"-"+li[e>>16&15|64]+li[e>>24&255]+"-"+li[63&n|128]+li[n>>8&255]+"-"+li[n>>16&255]+li[n>>24&255]+li[255&i]+li[i>>8&255]+li[i>>16&255]+li[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},damp:function(t,e,n,i){return ui.lerp(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(ui.euclideanModulo(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(hi=t%2147483647),hi=16807*hi%2147483647,(hi-1)/2147483646},degToRad:function(t){return t*ui.DEG2RAD},radToDeg:function(t){return t*ui.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const s=Math.cos,o=Math.sin,a=s(n/2),c=o(n/2),l=s((e+i)/2),h=o((e+i)/2),u=s((e-i)/2),d=o((e-i)/2),p=s((i-e)/2),f=o((i-e)/2);switch(r){case"XYX":t.set(a*h,c*u,c*d,a*l);break;case"YZY":t.set(c*d,a*h,c*u,a*l);break;case"ZXZ":t.set(c*u,c*d,a*h,a*l);break;case"XZX":t.set(a*h,c*f,c*p,a*l);break;case"YXY":t.set(c*p,a*h,c*f,a*l);break;case"ZYZ":t.set(c*f,c*p,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class di{constructor(t=0,e=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*n-s*i+t.x,this.y=r*i+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class pi{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,s,o,a,c){const l=this.elements;return l[0]=t,l[1]=i,l[2]=o,l[3]=e,l[4]=r,l[5]=a,l[6]=n,l[7]=s,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],o=n[3],a=n[6],c=n[1],l=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],y=i[1],v=i[4],x=i[7],b=i[2],w=i[5],_=i[8];return r[0]=s*f+o*y+a*b,r[3]=s*m+o*v+a*w,r[6]=s*g+o*x+a*_,r[1]=c*f+l*y+h*b,r[4]=c*m+l*v+h*w,r[7]=c*g+l*x+h*_,r[2]=u*f+d*y+p*b,r[5]=u*m+d*v+p*w,r[8]=u*g+d*x+p*_,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],o=t[5],a=t[6],c=t[7],l=t[8];return e*s*l-e*o*c-n*r*l+n*o*a+i*r*c-i*s*a}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],o=t[5],a=t[6],c=t[7],l=t[8],h=l*s-o*c,u=o*a-l*r,d=c*r-s*a,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*c-l*n)*f,t[2]=(o*n-i*s)*f,t[3]=u*f,t[4]=(l*e-i*a)*f,t[5]=(i*r-o*e)*f,t[6]=d*f,t[7]=(n*a-c*e)*f,t[8]=(s*e-n*r)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).copy(this).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,s,o){const a=Math.cos(r),c=Math.sin(r);return this.set(n*a,n*c,-n*(a*s+c*o)+s+t,-i*c,i*a,-i*(-c*s+a*o)+o+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],s=i[3],o=i[6],a=i[1],c=i[4],l=i[7];return i[0]=e*r+n*a,i[3]=e*s+n*c,i[6]=e*o+n*l,i[1]=-n*r+e*a,i[4]=-n*s+e*c,i[7]=-n*o+e*l,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}}let fi;const mi={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===fi&&(fi=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),fi.width=t.width,fi.height=t.height;const n=fi.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=fi}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let gi=0;function yi(t=yi.DEFAULT_IMAGE,e=yi.DEFAULT_MAPPING,n=kt,i=kt,r=Vt,s=Xt,o=he,a=Zt,c=1,l=Mn){Object.defineProperty(this,"id",{value:gi++}),this.uuid=ui.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=a,this.offset=new di(0,0),this.repeat=new di(1,1),this.center=new di(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}function vi(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?mi.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}yi.DEFAULT_IMAGE=void 0,yi.DEFAULT_MAPPING=Pt,yi.prototype=Object.assign(Object.create(ci.prototype),{constructor:yi,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=ui.generateUUID()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(vi(i[t].image)):e.push(vi(i[t]))}else e=vi(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==Pt)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case zt:t.x=t.x-Math.floor(t.x);break;case kt:t.x=t.x<0?0:1;break;case Ft:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case zt:t.y=t.y-Math.floor(t.y);break;case kt:t.y=t.y<0?0:1;break;case Ft:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(yi.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});class xi{constructor(t=0,e=0,n=0,i=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*e+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*e+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*e+s[7]*n+s[11]*i+s[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const s=t.elements,o=s[0],a=s[4],c=s[8],l=s[1],h=s[5],u=s[9],d=s[2],p=s[6],f=s[10];if(Math.abs(a-l)<.01&&Math.abs(c-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(a+l)<.1&&Math.abs(c+d)<.1&&Math.abs(u+p)<.1&&Math.abs(o+h+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(o+1)/2,s=(h+1)/2,m=(f+1)/2,g=(a+l)/4,y=(c+d)/4,v=(u+p)/4;return t>s&&t>m?t<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=g/n,r=y/n):s>m?s<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(s),n=g/i,r=v/i):m<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(m),n=y/r,i=v/r),this.set(n,i,r,e),this}let m=Math.sqrt((p-u)*(p-u)+(c-d)*(c-d)+(l-a)*(l-a));return Math.abs(m)<.001&&(m=1),this.x=(p-u)/m,this.y=(c-d)/m,this.z=(l-a)/m,this.w=Math.acos((o+h+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}class bi extends ci{constructor(t,e,n){super(),Object.defineProperty(this,"isWebGLRenderTarget",{value:!0}),this.width=t,this.height=e,this.scissor=new xi(0,0,t,e),this.scissorTest=!1,this.viewport=new xi(0,0,t,e),n=n||{},this.texture=new yi(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Vt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setSize(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}class wi extends bi{constructor(t,e,n){super(t,e,n),Object.defineProperty(this,"isWebGLMultisampleRenderTarget",{value:!0}),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}class _i{constructor(t=0,e=0,n=0,i=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return n.copy(t).slerp(e,i)}static slerpFlat(t,e,n,i,r,s,o){let a=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[s+0],d=r[s+1],p=r[s+2],f=r[s+3];if(h!==f||a!==u||c!==d||l!==p){let t=1-o;const e=a*u+c*d+l*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),s=Math.atan2(r,e*n);t=Math.sin(t*s)/r,o=Math.sin(o*s)/r}const r=o*n;if(a=a*t+u*r,c=c*t+d*r,l=l*t+p*r,h=h*t+f*r,t===1-o){const t=1/Math.sqrt(a*a+c*c+l*l+h*h);a*=t,c*=t,l*=t,h*=t}}t[e]=a,t[e+1]=c,t[e+2]=l,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,s){const o=n[i],a=n[i+1],c=n[i+2],l=n[i+3],h=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return t[e]=o*p+l*h+a*d-c*u,t[e+1]=a*p+l*u+c*h-o*d,t[e+2]=c*p+l*d+o*u-a*h,t[e+3]=l*p-o*h-a*u-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,s=t._order,o=Math.cos,a=Math.sin,c=o(n/2),l=o(i/2),h=o(r/2),u=a(n/2),d=a(i/2),p=a(r/2);switch(s){case"XYZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"YXZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"ZXY":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"ZYX":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"YZX":this._x=u*l*h+c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h-u*d*p;break;case"XZY":this._x=u*l*h-c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],s=e[1],o=e[5],a=e[9],c=e[2],l=e[6],h=e[10],u=n+o+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-a)*t,this._y=(r-c)*t,this._z=(s-i)*t}else if(n>o&&n>h){const t=2*Math.sqrt(1+n-o-h);this._w=(l-a)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(r+c)/t}else if(o>h){const t=2*Math.sqrt(1+o-n-h);this._w=(r-c)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+h-n-o);this._w=(s-i)/t,this._x=(r+c)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-6?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ui.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,s=t._w,o=e._x,a=e._y,c=e._z,l=e._w;return this._x=n*l+s*o+i*c-r*a,this._y=i*l+s*a+r*o-n*c,this._z=r*l+s*c+n*a-i*o,this._w=s*l-n*o-i*a-r*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,s=this._w;let o=s*t._w+n*t._x+i*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const a=1-o*o;if(a<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),l=Math.atan2(c,o),h=Math.sin((1-e)*l)/c,u=Math.sin(e*l)/c;return this._w=s*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class Mi{constructor(t=0,e=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Ti.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ti.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,s=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,s=t.y,o=t.z,a=t.w,c=a*e+s*i-o*n,l=a*n+o*e-r*i,h=a*i+r*n-s*e,u=-r*e-s*n-o*i;return this.x=c*a+u*-r+l*-o-h*-s,this.y=l*a+u*-s+h*-r-c*-o,this.z=h*a+u*-o+c*-s-l*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,s=e.x,o=e.y,a=e.z;return this.x=i*a-r*o,this.y=r*s-n*a,this.z=n*o-i*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Si.copy(this).projectOnVector(t),this.sub(Si)}reflect(t){return this.sub(Si.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ui.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const Si=new Mi,Ti=new _i;class Ei{constructor(t,e){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==t?t:new Mi(1/0,1/0,1/0),this.max=void 0!==e?e:new Mi(-1/0,-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,s=-1/0,o=-1/0;for(let a=0,c=t.length;a<c;a+=3){const c=t[a],l=t[a+1],h=t[a+2];c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>s&&(s=l),h>o&&(o=h)}return this.min.set(e,n,i),this.max.set(r,s,o),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,s=-1/0,o=-1/0;for(let a=0,c=t.count;a<c;a++){const c=t.getX(a),l=t.getY(a),h=t.getZ(a);c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>s&&(s=l),h>o&&(o=h)}return this.min.set(e,n,i),this.max.set(r,s,o),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Li.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new Mi),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new Mi),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),Pi.copy(e.boundingBox),Pi.applyMatrix4(t.matrixWorld),this.union(Pi));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new Mi),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Li),Li.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(zi),ki.subVectors(this.max,zi),Ci.subVectors(t.a,zi),Ii.subVectors(t.b,zi),Oi.subVectors(t.c,zi),Di.subVectors(Ii,Ci),Bi.subVectors(Oi,Ii),Ni.subVectors(Ci,Oi);let e=[0,-Di.z,Di.y,0,-Bi.z,Bi.y,0,-Ni.z,Ni.y,Di.z,0,-Di.x,Bi.z,0,-Bi.x,Ni.z,0,-Ni.x,-Di.y,Di.x,0,-Bi.y,Bi.x,0,-Ni.y,Ni.x,0];return!!Ai(e,Ci,Ii,Oi,ki)&&(e=[1,0,0,0,1,0,0,0,1],!!Ai(e,Ci,Ii,Oi,ki)&&(Fi.crossVectors(Di,Bi),e=[Fi.x,Fi.y,Fi.z],Ai(e,Ci,Ii,Oi,ki)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new Mi),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Li.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(Li).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ri[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ri[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ri[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ri[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ri[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ri[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ri[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ri[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ri)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function Ai(t,e,n,i,r){for(let s=0,o=t.length-3;s<=o;s+=3){Hi.fromArray(t,s);const o=r.x*Math.abs(Hi.x)+r.y*Math.abs(Hi.y)+r.z*Math.abs(Hi.z),a=e.dot(Hi),c=n.dot(Hi),l=i.dot(Hi);if(Math.max(-Math.max(a,c,l),Math.min(a,c,l))>o)return!1}return!0}const Ri=[new Mi,new Mi,new Mi,new Mi,new Mi,new Mi,new Mi,new Mi],Li=new Mi,Pi=new Ei,Ci=new Mi,Ii=new Mi,Oi=new Mi,Di=new Mi,Bi=new Mi,Ni=new Mi,zi=new Mi,ki=new Mi,Fi=new Mi,Hi=new Mi,Ui=new Ei;class Gi{constructor(t,e){this.center=void 0!==t?t:new Mi,this.radius=void 0!==e?e:-1}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Ui.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new Mi),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new Ei),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}const ji=new Mi,Wi=new Mi,Vi=new Mi,qi=new Mi,Yi=new Mi,Xi=new Mi,Ji=new Mi;class Zi{constructor(t,e){this.origin=void 0!==t?t:new Mi,this.direction=void 0!==e?e:new Mi(0,0,-1)}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new Mi),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ji)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new Mi),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ji.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ji.copy(this.direction).multiplyScalar(e).add(this.origin),ji.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Wi.copy(t).add(e).multiplyScalar(.5),Vi.copy(e).sub(t).normalize(),qi.copy(this.origin).sub(Wi);const r=.5*t.distanceTo(e),s=-this.direction.dot(Vi),o=qi.dot(this.direction),a=-qi.dot(Vi),c=qi.lengthSq(),l=Math.abs(1-s*s);let h,u,d,p;if(l>0)if(h=s*a-o,u=s*o-a,p=r*l,h>=0)if(u>=-p)if(u<=p){const t=1/l;h*=t,u*=t,d=h*(h+s*u+2*o)+u*(s*h+u+2*a)+c}else u=r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+c;else u=-r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+c;else u<=-p?(h=Math.max(0,-(-s*r+o)),u=h>0?-r:Math.min(Math.max(-r,-a),r),d=-h*h+u*(u+2*a)+c):u<=p?(h=0,u=Math.min(Math.max(-r,-a),r),d=u*(u+2*a)+c):(h=Math.max(0,-(s*r+o)),u=h>0?r:Math.min(Math.max(-r,-a),r),d=-h*h+u*(u+2*a)+c);else u=s>0?-r:r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Vi).multiplyScalar(u).add(Wi),d}intersectSphere(t,e){ji.subVectors(t.center,this.origin);const n=ji.dot(this.direction),i=ji.dot(ji)-n*n,r=t.radius*t.radius;if(i>r)return null;const s=Math.sqrt(r-i),o=n-s,a=n+s;return o<0&&a<0?null:o<0?this.at(a,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,s,o,a;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),l>=0?(r=(t.min.y-u.y)*l,s=(t.max.y-u.y)*l):(r=(t.max.y-u.y)*l,s=(t.min.y-u.y)*l),n>s||r>i?null:((r>n||n!=n)&&(n=r),(s<i||i!=i)&&(i=s),h>=0?(o=(t.min.z-u.z)*h,a=(t.max.z-u.z)*h):(o=(t.max.z-u.z)*h,a=(t.min.z-u.z)*h),n>a||o>i?null:((o>n||n!=n)&&(n=o),(a<i||i!=i)&&(i=a),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,ji)}intersectTriangle(t,e,n,i,r){Yi.subVectors(e,t),Xi.subVectors(n,t),Ji.crossVectors(Yi,Xi);let s,o=this.direction.dot(Ji);if(o>0){if(i)return null;s=1}else{if(!(o<0))return null;s=-1,o=-o}qi.subVectors(this.origin,t);const a=s*this.direction.dot(Xi.crossVectors(qi,Xi));if(a<0)return null;const c=s*this.direction.dot(Yi.cross(qi));if(c<0)return null;if(a+c>o)return null;const l=-s*qi.dot(Ji);return l<0?null:this.at(l/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}class $i{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,s,o,a,c,l,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=s,g[9]=o,g[13]=a,g[2]=c,g[6]=l,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new $i).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Ki.setFromMatrixColumn(t,0).length(),r=1/Ki.setFromMatrixColumn(t,1).length(),s=1/Ki.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,s=Math.cos(n),o=Math.sin(n),a=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=s*l,n=s*h,i=o*l,r=o*h;e[0]=a*l,e[4]=-a*h,e[8]=c,e[1]=n+i*c,e[5]=t-r*c,e[9]=-o*a,e[2]=r-t*c,e[6]=i+n*c,e[10]=s*a}else if("YXZ"===t.order){const t=a*l,n=a*h,i=c*l,r=c*h;e[0]=t+r*o,e[4]=i*o-n,e[8]=s*c,e[1]=s*h,e[5]=s*l,e[9]=-o,e[2]=n*o-i,e[6]=r+t*o,e[10]=s*a}else if("ZXY"===t.order){const t=a*l,n=a*h,i=c*l,r=c*h;e[0]=t-r*o,e[4]=-s*h,e[8]=i+n*o,e[1]=n+i*o,e[5]=s*l,e[9]=r-t*o,e[2]=-s*c,e[6]=o,e[10]=s*a}else if("ZYX"===t.order){const t=s*l,n=s*h,i=o*l,r=o*h;e[0]=a*l,e[4]=i*c-n,e[8]=t*c+r,e[1]=a*h,e[5]=r*c+t,e[9]=n*c-i,e[2]=-c,e[6]=o*a,e[10]=s*a}else if("YZX"===t.order){const t=s*a,n=s*c,i=o*a,r=o*c;e[0]=a*l,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=s*l,e[9]=-o*l,e[2]=-c*l,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=s*a,n=s*c,i=o*a,r=o*c;e[0]=a*l,e[4]=-h,e[8]=c*l,e[1]=t*h+r,e[5]=s*l,e[9]=n*h-i,e[2]=i*h-n,e[6]=o*l,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(tr,t,er)}lookAt(t,e,n){const i=this.elements;return rr.subVectors(t,e),0===rr.lengthSq()&&(rr.z=1),rr.normalize(),nr.crossVectors(n,rr),0===nr.lengthSq()&&(1===Math.abs(n.z)?rr.x+=1e-4:rr.z+=1e-4,rr.normalize(),nr.crossVectors(n,rr)),nr.normalize(),ir.crossVectors(rr,nr),i[0]=nr.x,i[4]=ir.x,i[8]=rr.x,i[1]=nr.y,i[5]=ir.y,i[9]=rr.y,i[2]=nr.z,i[6]=ir.z,i[10]=rr.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],o=n[4],a=n[8],c=n[12],l=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],y=n[3],v=n[7],x=n[11],b=n[15],w=i[0],_=i[4],M=i[8],S=i[12],T=i[1],E=i[5],A=i[9],R=i[13],L=i[2],P=i[6],C=i[10],I=i[14],O=i[3],D=i[7],B=i[11],N=i[15];return r[0]=s*w+o*T+a*L+c*O,r[4]=s*_+o*E+a*P+c*D,r[8]=s*M+o*A+a*C+c*B,r[12]=s*S+o*R+a*I+c*N,r[1]=l*w+h*T+u*L+d*O,r[5]=l*_+h*E+u*P+d*D,r[9]=l*M+h*A+u*C+d*B,r[13]=l*S+h*R+u*I+d*N,r[2]=p*w+f*T+m*L+g*O,r[6]=p*_+f*E+m*P+g*D,r[10]=p*M+f*A+m*C+g*B,r[14]=p*S+f*R+m*I+g*N,r[3]=y*w+v*T+x*L+b*O,r[7]=y*_+v*E+x*P+b*D,r[11]=y*M+v*A+x*C+b*B,r[15]=y*S+v*R+x*I+b*N,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],s=t[1],o=t[5],a=t[9],c=t[13],l=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*a*h-i*c*h-r*o*u+n*c*u+i*o*d-n*a*d)+t[7]*(+e*a*d-e*c*u+r*s*u-i*s*d+i*c*l-r*a*l)+t[11]*(+e*c*h-e*o*d-r*s*h+n*s*d+r*o*l-n*c*l)+t[15]*(-i*o*l-e*a*h+e*o*u+i*s*h-n*s*u+n*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],o=t[5],a=t[6],c=t[7],l=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],y=h*m*c-f*u*c+f*a*d-o*m*d-h*a*g+o*u*g,v=p*u*c-l*m*c-p*a*d+s*m*d+l*a*g-s*u*g,x=l*f*c-p*h*c+p*o*d-s*f*d-l*o*g+s*h*g,b=p*h*a-l*f*a-p*o*u+s*f*u+l*o*m-s*h*m,w=e*y+n*v+i*x+r*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return t[0]=y*_,t[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*_,t[2]=(o*m*r-f*a*r+f*i*c-n*m*c-o*i*g+n*a*g)*_,t[3]=(h*a*r-o*u*r-h*i*c+n*u*c+o*i*d-n*a*d)*_,t[4]=v*_,t[5]=(l*m*r-p*u*r+p*i*d-e*m*d-l*i*g+e*u*g)*_,t[6]=(p*a*r-s*m*r-p*i*c+e*m*c+s*i*g-e*a*g)*_,t[7]=(s*u*r-l*a*r+l*i*c-e*u*c-s*i*d+e*a*d)*_,t[8]=x*_,t[9]=(p*h*r-l*f*r-p*n*d+e*f*d+l*n*g-e*h*g)*_,t[10]=(s*f*r-p*o*r+p*n*c-e*f*c-s*n*g+e*o*g)*_,t[11]=(l*o*r-s*h*r-l*n*c+e*h*c+s*n*d-e*o*d)*_,t[12]=b*_,t[13]=(l*f*i-p*h*i+p*n*u-e*f*u-l*n*m+e*h*m)*_,t[14]=(p*o*i-s*f*i-p*n*a+e*f*a+s*n*m-e*o*m)*_,t[15]=(s*h*i-l*o*i+l*n*a-e*h*a-s*n*u+e*o*u)*_,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,s=t.x,o=t.y,a=t.z,c=r*s,l=r*o;return this.set(c*s+n,c*o-i*a,c*a+i*o,0,c*o+i*a,l*o+n,l*a-i*s,0,c*a-i*o,l*a+i*s,r*a*a+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,s=e._y,o=e._z,a=e._w,c=r+r,l=s+s,h=o+o,u=r*c,d=r*l,p=r*h,f=s*l,m=s*h,g=o*h,y=a*c,v=a*l,x=a*h,b=n.x,w=n.y,_=n.z;return i[0]=(1-(f+g))*b,i[1]=(d+x)*b,i[2]=(p-v)*b,i[3]=0,i[4]=(d-x)*w,i[5]=(1-(u+g))*w,i[6]=(m+y)*w,i[7]=0,i[8]=(p+v)*_,i[9]=(m-y)*_,i[10]=(1-(u+f))*_,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Ki.set(i[0],i[1],i[2]).length();const s=Ki.set(i[4],i[5],i[6]).length(),o=Ki.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Qi.copy(this);const a=1/r,c=1/s,l=1/o;return Qi.elements[0]*=a,Qi.elements[1]*=a,Qi.elements[2]*=a,Qi.elements[4]*=c,Qi.elements[5]*=c,Qi.elements[6]*=c,Qi.elements[8]*=l,Qi.elements[9]*=l,Qi.elements[10]*=l,e.setFromRotationMatrix(Qi),n.x=r,n.y=s,n.z=o,this}makePerspective(t,e,n,i,r,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,a=2*r/(e-t),c=2*r/(n-i),l=(e+t)/(e-t),h=(n+i)/(n-i),u=-(s+r)/(s-r),d=-2*s*r/(s-r);return o[0]=a,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,i,r,s){const o=this.elements,a=1/(e-t),c=1/(n-i),l=1/(s-r),h=(e+t)*a,u=(n+i)*c,d=(s+r)*l;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Ki=new Mi,Qi=new $i,tr=new Mi(0,0,0),er=new Mi(1,1,1),nr=new Mi,ir=new Mi,rr=new Mi;class sr{constructor(t=0,e=0,n=0,i=sr.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=ui.clamp,r=t.elements,s=r[0],o=r[4],a=r[8],c=r[1],l=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return or.makeRotationFromQuaternion(t),this.setFromRotationMatrix(or,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return ar.setFromEuler(this),this.setFromQuaternion(ar,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new Mi(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}sr.DefaultOrder="XYZ",sr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const or=new $i,ar=new _i;class cr{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let lr=0;const hr=new Mi,ur=new _i,dr=new $i,pr=new Mi,fr=new Mi,mr=new Mi,gr=new _i,yr=new Mi(1,0,0),vr=new Mi(0,1,0),xr=new Mi(0,0,1),br={type:"added"},wr={type:"removed"};function _r(){Object.defineProperty(this,"id",{value:lr++}),this.uuid=ui.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=_r.DefaultUp.clone();const t=new Mi,e=new sr,n=new _i,i=new Mi(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new $i},normalMatrix:{value:new pi}}),this.matrix=new $i,this.matrixWorld=new $i,this.matrixAutoUpdate=_r.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new cr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}_r.DefaultUp=new Mi(0,1,0),_r.DefaultMatrixAutoUpdate=!0,_r.prototype=Object.assign(Object.create(ci.prototype),{constructor:_r,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return ur.setFromAxisAngle(t,e),this.quaternion.multiply(ur),this},rotateOnWorldAxis:function(t,e){return ur.setFromAxisAngle(t,e),this.quaternion.premultiply(ur),this},rotateX:function(t){return this.rotateOnAxis(yr,t)},rotateY:function(t){return this.rotateOnAxis(vr,t)},rotateZ:function(t){return this.rotateOnAxis(xr,t)},translateOnAxis:function(t,e){return hr.copy(t).applyQuaternion(this.quaternion),this.position.add(hr.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(yr,t)},translateY:function(t){return this.translateOnAxis(vr,t)},translateZ:function(t){return this.translateOnAxis(xr,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(dr.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?pr.copy(t):pr.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),fr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?dr.lookAt(fr,pr,this.up):dr.lookAt(pr,fr,this.up),this.quaternion.setFromRotationMatrix(dr),i&&(dr.extractRotation(i.matrixWorld),ur.setFromRotationMatrix(dr),this.quaternion.premultiply(ur.invert()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(br)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(wr)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(wr)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),dr.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),dr.multiply(t.parent.matrixWorld)),t.applyMatrix4(dr),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new Mi),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new _i),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fr,t,mr),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new Mi),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fr,gr,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new Mi),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=s(t.geometries),i=s(t.materials),r=s(t.textures),o=s(t.images),a=s(t.shapes),c=s(t.skeletons),l=s(t.animations);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),o.length>0&&(n.images=o),a.length>0&&(n.shapes=a),c.length>0&&(n.skeletons=c),l.length>0&&(n.animations=l)}return n.object=i,n;function s(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const Mr=new Mi,Sr=new Mi,Tr=new pi;class Er{constructor(t,e){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==t?t:new Mi(1,0,0),this.constant=void 0!==e?e:0}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Mr.subVectors(n,e).cross(Sr.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new Mi),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new Mi);const n=t.delta(Mr),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?void 0:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new Mi),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Tr.getNormalMatrix(t),i=this.coplanarPoint(Mr).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}const Ar=new Mi,Rr=new Mi,Lr=new Mi,Pr=new Mi,Cr=new Mi,Ir=new Mi,Or=new Mi,Dr=new Mi,Br=new Mi,Nr=new Mi;class zr{constructor(t,e,n){this.a=void 0!==t?t:new Mi,this.b=void 0!==e?e:new Mi,this.c=void 0!==n?n:new Mi}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new Mi),i.subVectors(n,e),Ar.subVectors(t,e),i.cross(Ar);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Ar.subVectors(i,e),Rr.subVectors(n,e),Lr.subVectors(t,e);const s=Ar.dot(Ar),o=Ar.dot(Rr),a=Ar.dot(Lr),c=Rr.dot(Rr),l=Rr.dot(Lr),h=s*c-o*o;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new Mi),0===h)return r.set(-2,-1,-1);const u=1/h,d=(c*a-o*l)*u,p=(s*l-o*a)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Pr),Pr.x>=0&&Pr.y>=0&&Pr.x+Pr.y<=1}static getUV(t,e,n,i,r,s,o,a){return this.getBarycoord(t,e,n,i,Pr),a.set(0,0),a.addScaledVector(r,Pr.x),a.addScaledVector(s,Pr.y),a.addScaledVector(o,Pr.z),a}static isFrontFacing(t,e,n,i){return Ar.subVectors(n,e),Rr.subVectors(t,e),Ar.cross(Rr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ar.subVectors(this.c,this.b),Rr.subVectors(this.a,this.b),.5*Ar.cross(Rr).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new Mi),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return zr.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Er),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return zr.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return zr.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return zr.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return zr.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new Mi);const n=this.a,i=this.b,r=this.c;let s,o;Cr.subVectors(i,n),Ir.subVectors(r,n),Dr.subVectors(t,n);const a=Cr.dot(Dr),c=Ir.dot(Dr);if(a<=0&&c<=0)return e.copy(n);Br.subVectors(t,i);const l=Cr.dot(Br),h=Ir.dot(Br);if(l>=0&&h<=l)return e.copy(i);const u=a*h-l*c;if(u<=0&&a>=0&&l<=0)return s=a/(a-l),e.copy(n).addScaledVector(Cr,s);Nr.subVectors(t,r);const d=Cr.dot(Nr),p=Ir.dot(Nr);if(p>=0&&d<=p)return e.copy(r);const f=d*c-a*p;if(f<=0&&c>=0&&p<=0)return o=c/(c-p),e.copy(n).addScaledVector(Ir,o);const m=l*p-d*h;if(m<=0&&h-l>=0&&d-p>=0)return Or.subVectors(r,i),o=(h-l)/(h-l+(d-p)),e.copy(i).addScaledVector(Or,o);const g=1/(m+f+u);return s=f*g,o=u*g,e.copy(n).addScaledVector(Cr,s).addScaledVector(Ir,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const kr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Fr={h:0,s:0,l:0},Hr={h:0,s:0,l:0};function Ur(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function Gr(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function jr(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Wr{constructor(t,e,n){return Object.defineProperty(this,"isColor",{value:!0}),void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=ui.euclideanModulo(t,1),e=ui.clamp(e,0,1),n=ui.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=Ur(r,i,t+1/3),this.g=Ur(r,i,t),this.b=Ur(r,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=kr[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Gr(t.r),this.g=Gr(t.g),this.b=Gr(t.b),this}copyLinearToSRGB(t){return this.r=jr(t.r),this.g=jr(t.g),this.b=jr(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),s=Math.min(e,n,i);let o,a;const c=(s+r)/2;if(s===r)o=0,a=0;else{const t=r-s;switch(a=c<=.5?t/(r+s):t/(2-r-s),r){case e:o=(n-i)/t+(n<i?6:0);break;case n:o=(i-e)/t+2;break;case i:o=(e-n)/t+4}o/=6}return t.h=o,t.s=a,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(Fr),Fr.h+=t,Fr.s+=e,Fr.l+=n,this.setHSL(Fr.h,Fr.s,Fr.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Fr),t.getHSL(Hr);const n=ui.lerp(Fr.h,Hr.h,e),i=ui.lerp(Fr.s,Hr.s,e),r=ui.lerp(Fr.l,Hr.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Wr.NAMES=kr,Wr.prototype.r=1,Wr.prototype.g=1,Wr.prototype.b=1;class Vr{constructor(t,e,n,i,r,s=0){this.a=t,this.b=e,this.c=n,this.normal=i&&i.isVector3?i:new Mi,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new Wr,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=s}clone(){return(new this.constructor).copy(this)}copy(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(let e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(let e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}}let qr=0;function Yr(){Object.defineProperty(this,"id",{value:qr++}),this.uuid=ui.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=V,this.side=F,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ot,this.blendDst=at,this.blendEquation=Z,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=gt,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Zn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Nn,this.stencilZFail=Nn,this.stencilZPass=Nn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function Xr(t){Yr.call(this),this.type="MeshBasicMaterial",this.color=new Wr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=wt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}Yr.prototype=Object.assign(Object.create(ci.prototype),{constructor:Yr,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===G;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==V&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==F&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Yr.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Xr.prototype=Object.create(Yr.prototype),Xr.prototype.constructor=Xr,Xr.prototype.isMeshBasicMaterial=!0,Xr.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Jr=new Mi,Zr=new di;function $r(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=$n,this.updateRange={offset:0,count:-1},this.version=0}function Kr(t,e,n){$r.call(this,new Int8Array(t),e,n)}function Qr(t,e,n){$r.call(this,new Uint8Array(t),e,n)}function ts(t,e,n){$r.call(this,new Uint8ClampedArray(t),e,n)}function es(t,e,n){$r.call(this,new Int16Array(t),e,n)}function ns(t,e,n){$r.call(this,new Uint16Array(t),e,n)}function is(t,e,n){$r.call(this,new Int32Array(t),e,n)}function rs(t,e,n){$r.call(this,new Uint32Array(t),e,n)}function ss(t,e,n){$r.call(this,new Uint16Array(t),e,n)}function os(t,e,n){$r.call(this,new Float32Array(t),e,n)}function as(t,e,n){$r.call(this,new Float64Array(t),e,n)}function cs(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}Object.defineProperty($r.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign($r.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new Wr),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new di),e[n++]=r.x,e[n++]=r.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new Mi),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new xi),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Zr.fromBufferAttribute(this,e),Zr.applyMatrix3(t),this.setXY(e,Zr.x,Zr.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Jr.fromBufferAttribute(this,e),Jr.applyMatrix3(t),this.setXYZ(e,Jr.x,Jr.y,Jr.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Jr.x=this.getX(e),Jr.y=this.getY(e),Jr.z=this.getZ(e),Jr.applyMatrix4(t),this.setXYZ(e,Jr.x,Jr.y,Jr.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Jr.x=this.getX(e),Jr.y=this.getY(e),Jr.z=this.getZ(e),Jr.applyNormalMatrix(t),this.setXYZ(e,Jr.x,Jr.y,Jr.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Jr.x=this.getX(e),Jr.y=this.getY(e),Jr.z=this.getZ(e),Jr.transformDirection(t),this.setXYZ(e,Jr.x,Jr.y,Jr.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Kr.prototype=Object.create($r.prototype),Kr.prototype.constructor=Kr,Qr.prototype=Object.create($r.prototype),Qr.prototype.constructor=Qr,ts.prototype=Object.create($r.prototype),ts.prototype.constructor=ts,es.prototype=Object.create($r.prototype),es.prototype.constructor=es,ns.prototype=Object.create($r.prototype),ns.prototype.constructor=ns,is.prototype=Object.create($r.prototype),is.prototype.constructor=is,rs.prototype=Object.create($r.prototype),rs.prototype.constructor=rs,ss.prototype=Object.create($r.prototype),ss.prototype.constructor=ss,ss.prototype.isFloat16BufferAttribute=!0,os.prototype=Object.create($r.prototype),os.prototype.constructor=os,as.prototype=Object.create($r.prototype),as.prototype.constructor=as;const ls={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function hs(t,e){return new ls[t](e)}let us=0;const ds=new $i,ps=new _r,fs=new Mi,ms=new Ei,gs=new Ei,ys=new Mi;function vs(){Object.defineProperty(this,"id",{value:us++}),this.uuid=ui.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}vs.prototype=Object.assign(Object.create(ci.prototype),{constructor:vs,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(cs(t)>65535?rs:ns)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new pi).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return ds.makeRotationX(t),this.applyMatrix4(ds),this},rotateY:function(t){return ds.makeRotationY(t),this.applyMatrix4(ds),this},rotateZ:function(t){return ds.makeRotationZ(t),this.applyMatrix4(ds),this},translate:function(t,e,n){return ds.makeTranslation(t,e,n),this.applyMatrix4(ds),this},scale:function(t,e,n){return ds.makeScale(t,e,n),this.applyMatrix4(ds),this},lookAt:function(t){return ps.lookAt(t),ps.updateMatrix(),this.applyMatrix4(ps.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(fs).negate(),this.translate(fs.x,fs.y,fs.z),this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new os(e,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Ei);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Mi(-1/0,-1/0,-1/0),new Mi(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];ms.setFromBufferAttribute(n),this.morphTargetsRelative?(ys.addVectors(this.boundingBox.min,ms.min),this.boundingBox.expandByPoint(ys),ys.addVectors(this.boundingBox.max,ms.max),this.boundingBox.expandByPoint(ys)):(this.boundingBox.expandByPoint(ms.min),this.boundingBox.expandByPoint(ms.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Gi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Mi,1/0);if(t){const n=this.boundingSphere.center;if(ms.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];gs.setFromBufferAttribute(n),this.morphTargetsRelative?(ys.addVectors(ms.min,gs.min),ms.expandByPoint(ys),ys.addVectors(ms.max,gs.max),ms.expandByPoint(ys)):(ms.expandByPoint(gs.min),ms.expandByPoint(gs.max))}ms.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)ys.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(ys));if(e)for(let r=0,s=e.length;r<s;r++){const s=e[r],o=this.morphTargetsRelative;for(let e=0,r=s.count;e<r;e++)ys.fromBufferAttribute(s,e),o&&(fs.fromBufferAttribute(t,e),ys.add(fs)),i=Math.max(i,n.distanceToSquared(ys))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,i=e.position.array,r=e.normal.array,s=e.uv.array,o=i.length/3;void 0===e.tangent&&this.setAttribute("tangent",new $r(new Float32Array(4*o),4));const a=e.tangent.array,c=[],l=[];for(let t=0;t<o;t++)c[t]=new Mi,l[t]=new Mi;const h=new Mi,u=new Mi,d=new Mi,p=new di,f=new di,m=new di,g=new Mi,y=new Mi;function v(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(s,2*t),f.fromArray(s,2*e),m.fromArray(s,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const r=1/(f.x*m.y-m.x*f.y);isFinite(r)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(r),y.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(r),c[t].add(g),c[e].add(g),c[n].add(g),l[t].add(y),l[e].add(y),l[n].add(y))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)v(n[t+0],n[t+1],n[t+2])}const b=new Mi,w=new Mi,_=new Mi,M=new Mi;function S(t){_.fromArray(r,3*t),M.copy(_);const e=c[t];b.copy(e),b.sub(_.multiplyScalar(_.dot(e))).normalize(),w.crossVectors(M,e);const n=w.dot(l[t])<0?-1:1;a[4*t]=b.x,a[4*t+1]=b.y,a[4*t+2]=b.z,a[4*t+3]=n}for(let t=0,e=x.length;t<e;++t){const e=x[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)S(n[t+0]),S(n[t+1]),S(n[t+2])}},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new $r(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new Mi,r=new Mi,s=new Mi,o=new Mi,a=new Mi,c=new Mi,l=new Mi,h=new Mi;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,f),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),o.fromBufferAttribute(n,d),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),o.add(l),a.add(l),c.add(l),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let t=0,o=e.count;t<o;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),n.setXYZ(t+0,l.x,l.y,l.z),n.setXYZ(t+1,l.x,l.y,l.z),n.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const r=n[i].array,s=t.attributes[i],o=s.array,a=s.itemSize*e,c=Math.min(o.length,r.length-a);for(let t=0,e=a;t<c;t++,e++)r[e]=o[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ys.fromBufferAttribute(t,e),ys.normalize(),t.setXYZ(e,ys.x,ys.y,ys.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,s=new n.constructor(e.length*i);let o=0,a=0;for(let t=0,r=e.length;t<r;t++){o=e[t]*i;for(let t=0;t<i;t++)s[a++]=n[o++]}return new $r(s,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new vs,n=this.index.array,i=this.attributes;for(const r in i){const s=t(i[r],n);e.setAttribute(r,s)}const r=this.morphAttributes;for(const i in r){const s=[],o=r[i];for(let e=0,i=o.length;e<i;e++){const i=t(o[e],n);s.push(i)}e.morphAttributes[i]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,n=s.length;t<n;t++){const n=s[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e],r=i.toJSON(t.data);""!==i.name&&(r.name=i.name),t.data.attributes[e]=r}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],s=[];for(let e=0,i=n.length;e<i;e++){const i=n[e],r=i.toJSON(t.data);""!==i.name&&(r.name=i.name),s.push(r)}s.length>0&&(i[e]=s,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return null!==o&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t},clone:function(){return(new vs).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const o=t.boundingBox;null!==o&&(this.boundingBox=o.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const xs=new $i,bs=new Zi,ws=new Gi,_s=new Mi,Ms=new Mi,Ss=new Mi,Ts=new Mi,Es=new Mi,As=new Mi,Rs=new Mi,Ls=new Mi,Ps=new Mi,Cs=new di,Is=new di,Os=new di,Ds=new Mi,Bs=new Mi;function Ns(t=new vs,e=new Xr){_r.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function zs(t,e,n,i,r,s,o,a,c,l,h,u){_s.fromBufferAttribute(r,l),Ms.fromBufferAttribute(r,h),Ss.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(e.morphTargets&&s&&d){Rs.set(0,0,0),Ls.set(0,0,0),Ps.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const e=d[t],n=s[t];0!==e&&(Ts.fromBufferAttribute(n,l),Es.fromBufferAttribute(n,h),As.fromBufferAttribute(n,u),o?(Rs.addScaledVector(Ts,e),Ls.addScaledVector(Es,e),Ps.addScaledVector(As,e)):(Rs.addScaledVector(Ts.sub(_s),e),Ls.addScaledVector(Es.sub(Ms),e),Ps.addScaledVector(As.sub(Ss),e)))}_s.add(Rs),Ms.add(Ls),Ss.add(Ps)}t.isSkinnedMesh&&(t.boneTransform(l,_s),t.boneTransform(h,Ms),t.boneTransform(u,Ss));const p=function(t,e,n,i,r,s,o,a){let c;if(c=e.side===H?i.intersectTriangle(o,s,r,!0,a):i.intersectTriangle(r,s,o,e.side!==U,a),null===c)return null;Bs.copy(a),Bs.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(Bs);return l<n.near||l>n.far?null:{distance:l,point:Bs.clone(),object:t}}(t,e,n,i,_s,Ms,Ss,Ds);if(p){a&&(Cs.fromBufferAttribute(a,l),Is.fromBufferAttribute(a,h),Os.fromBufferAttribute(a,u),p.uv=zr.getUV(Ds,_s,Ms,Ss,Cs,Is,Os,new di)),c&&(Cs.fromBufferAttribute(c,l),Is.fromBufferAttribute(c,h),Os.fromBufferAttribute(c,u),p.uv2=zr.getUV(Ds,_s,Ms,Ss,Cs,Is,Os,new di));const t=new Vr(l,h,u);zr.getNormal(_s,Ms,Ss,t.normal),p.face=t}return p}Ns.prototype=Object.assign(Object.create(_r.prototype),{constructor:Ns,isMesh:!0,copy:function(t){return _r.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),ws.copy(n.boundingSphere),ws.applyMatrix4(r),!1===t.ray.intersectsSphere(ws))return;if(xs.copy(r).invert(),bs.copy(t.ray).applyMatrix4(xs),null!==n.boundingBox&&!1===bs.intersectsBox(n.boundingBox))return;let s;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position,a=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),d=r.getX(n+2);s=zs(this,f,t,bs,o,a,c,l,h,i,u,d),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{for(let n=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);n<u;n+=3){const u=r.getX(n),d=r.getX(n+1),p=r.getX(n+2);s=zs(this,i,t,bs,o,a,c,l,h,u,d,p),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}}else if(void 0!==o)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],p=i[r.materialIndex];for(let n=Math.max(r.start,d.start),i=Math.min(r.start+r.count,d.start+d.count);n<i;n+=3){s=zs(this,p,t,bs,o,a,c,l,h,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=r.materialIndex,e.push(s))}}else{for(let n=Math.max(0,d.start),r=Math.min(o.count,d.start+d.count);n<r;n+=3){s=zs(this,i,t,bs,o,a,c,l,h,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class ks extends vs{constructor(t=1,e=1,n=1,i=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const o=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const a=[],c=[],l=[],h=[];let u=0,d=0;function p(t,e,n,i,r,s,p,f,m,g,y){const v=s/m,x=p/g,b=s/2,w=p/2,_=f/2,M=m+1,S=g+1;let T=0,E=0;const A=new Mi;for(let s=0;s<S;s++){const o=s*x-w;for(let a=0;a<M;a++){const u=a*v-b;A[t]=u*i,A[e]=o*r,A[n]=_,c.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,l.push(A.x,A.y,A.z),h.push(a/m),h.push(1-s/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+M*t,i=u+e+M*(t+1),r=u+(e+1)+M*(t+1),s=u+(e+1)+M*t;a.push(n,i,s),a.push(i,r,s),E+=6}o.addGroup(d,E,y),d+=E,u+=T}p("z","y","x",-1,-1,n,e,t,s,r,0),p("z","y","x",1,-1,n,e,-t,s,r,1),p("x","z","y",1,1,t,n,e,i,s,2),p("x","z","y",1,-1,t,n,-e,i,s,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(a),this.setAttribute("position",new os(c,3)),this.setAttribute("normal",new os(l,3)),this.setAttribute("uv",new os(h,2))}}function Fs(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function Hs(t){const e={};for(let n=0;n<t.length;n++){const i=Fs(t[n]);for(const t in i)e[t]=i[t]}return e}const Us={clone:Fs,merge:Hs};function Gs(t){Yr.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function js(){_r.call(this),this.type="Camera",this.matrixWorldInverse=new $i,this.projectionMatrix=new $i,this.projectionMatrixInverse=new $i}function Ws(t=50,e=1,n=.1,i=2e3){js.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Gs.prototype=Object.create(Yr.prototype),Gs.prototype.constructor=Gs,Gs.prototype.isShaderMaterial=!0,Gs.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Fs(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},Gs.prototype.toJSON=function(t){const e=Yr.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},js.prototype=Object.assign(Object.create(_r.prototype),{constructor:js,isCamera:!0,copy:function(t,e){return _r.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new Mi),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){_r.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){_r.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),Ws.prototype=Object.assign(Object.create(js.prototype),{constructor:Ws,isPerspectiveCamera:!0,copy:function(t,e){return js.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*ui.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*ui.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*ui.RAD2DEG*Math.atan(Math.tan(.5*ui.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*ui.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,o=s.fullHeight;r+=s.offsetX*i/t,e-=s.offsetY*n/o,i*=s.width/t,n*=s.height/o}const o=this.filmOffset;0!==o&&(r+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=_r.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});function Vs(t,e,n){if(_r.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new Ws(90,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Mi(1,0,0)),this.add(i);const r=new Ws(90,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Mi(-1,0,0)),this.add(r);const s=new Ws(90,1,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new Mi(0,1,0)),this.add(s);const o=new Ws(90,1,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new Mi(0,-1,0)),this.add(o);const a=new Ws(90,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new Mi(0,0,1)),this.add(a);const c=new Ws(90,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new Mi(0,0,-1)),this.add(c),this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();const l=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,s),t.setRenderTarget(n,3),t.render(e,o),t.setRenderTarget(n,4),t.render(e,a),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=l}}function qs(t,e,n,i,r,s,o,a,c,l){t=void 0!==t?t:[],e=void 0!==e?e:Ct,o=void 0!==o?o:le,yi.call(this,t,e,n,i,r,s,o,a,c,l),this.flipY=!1,this._needsFlipEnvMap=!0}Vs.prototype=Object.create(_r.prototype),Vs.prototype.constructor=Vs,qs.prototype=Object.create(yi.prototype),qs.prototype.constructor=qs,qs.prototype.isCubeTexture=!0,Object.defineProperty(qs.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});class Ys extends bi{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),Object.defineProperty(this,"isWebGLCubeRenderTarget",{value:!0}),e=e||{},this.texture=new qs(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=he,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new ks(5,5,5),r=new Gs({name:"CubemapFromEquirect",uniforms:Fs(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:H,blending:W});r.uniforms.tEquirect.value=e;const s=new Ns(i,r),o=e.minFilter;e.minFilter===Xt&&(e.minFilter=Vt);return new Vs(1,10,this).update(t,s),e.minFilter=o,s.geometry.dispose(),s.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(r)}}function Xs(t,e,n,i,r,s,o,a,c,l,h,u){yi.call(this,null,s,o,a,c,l,i,r,h,u),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==c?c:Ht,this.minFilter=void 0!==l?l:Ht,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Xs.prototype=Object.create(yi.prototype),Xs.prototype.constructor=Xs,Xs.prototype.isDataTexture=!0;const Js=new Gi,Zs=new Mi;class $s{constructor(t,e,n,i,r,s){this.planes=[void 0!==t?t:new Er,void 0!==e?e:new Er,void 0!==n?n:new Er,void 0!==i?i:new Er,void 0!==r?r:new Er,void 0!==s?s:new Er]}set(t,e,n,i,r,s){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(s),this}clone(){return(new this.constructor).copy(this)}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],s=n[2],o=n[3],a=n[4],c=n[5],l=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],y=n[14],v=n[15];return e[0].setComponents(o-i,h-a,f-u,v-m).normalize(),e[1].setComponents(o+i,h+a,f+u,v+m).normalize(),e[2].setComponents(o+r,h+c,f+d,v+g).normalize(),e[3].setComponents(o-r,h-c,f-d,v-g).normalize(),e[4].setComponents(o-s,h-l,f-p,v-y).normalize(),e[5].setComponents(o+s,h+l,f+p,v+y).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Js.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Js)}intersectsSprite(t){return Js.center.set(0,0,0),Js.radius=.7071067811865476,Js.applyMatrix4(t.matrixWorld),this.intersectsSphere(Js)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Zs.x=i.normal.x>0?t.max.x:t.min.x,Zs.y=i.normal.y>0?t.max.y:t.min.y,Zs.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Zs)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}}function Ks(){let t=null,e=!1,n=null,i=null;function r(e,s){n(e,s),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Qs(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=i.get(e);void 0===s?i.set(e,function(e,i){const r=e.array,s=e.usage,o=t.createBuffer();t.bindBuffer(i,o),t.bufferData(i,r,s),e.onUploadCallback();let a=5126;return r instanceof Float32Array?a=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?e.isFloat16BufferAttribute?n?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:r instanceof Int16Array?a=5122:r instanceof Uint32Array?a=5125:r instanceof Int32Array?a=5124:r instanceof Int8Array?a=5120:r instanceof Uint8Array&&(a=5121),{buffer:o,type:a,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):s.version<e.version&&(!function(e,i,r){const s=i.array,o=i.updateRange;t.bindBuffer(r,e),-1===o.count?t.bufferSubData(r,0,s):(n?t.bufferSubData(r,o.offset*s.BYTES_PER_ELEMENT,s,o.offset,o.count):t.bufferSubData(r,o.offset*s.BYTES_PER_ELEMENT,s.subarray(o.offset,o.offset+o.count)),o.count=-1)}(s.buffer,e,r),s.version=e.version)}}}class to extends vs{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,s=e/2,o=Math.floor(n),a=Math.floor(i),c=o+1,l=a+1,h=t/o,u=e/a,d=[],p=[],f=[],m=[];for(let t=0;t<l;t++){const e=t*u-s;for(let n=0;n<c;n++){const i=n*h-r;p.push(i,-e,0),f.push(0,0,1),m.push(n/o),m.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<o;e++){const n=e+c*t,i=e+c*(t+1),r=e+1+c*(t+1),s=e+1+c*t;d.push(n,i,s),d.push(i,r,s)}this.setIndex(d),this.setAttribute("position",new os(p,3)),this.setAttribute("normal",new os(f,3)),this.setAttribute("uv",new os(m,2))}}const eo={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},no={common:{diffuse:{value:new Wr(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new pi},uv2Transform:{value:new pi},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new di(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Wr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Wr(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new pi}},sprite:{diffuse:{value:new Wr(15658734)},opacity:{value:1},center:{value:new di(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new pi}}},io={basic:{uniforms:Hs([no.common,no.specularmap,no.envmap,no.aomap,no.lightmap,no.fog]),vertexShader:eo.meshbasic_vert,fragmentShader:eo.meshbasic_frag},lambert:{uniforms:Hs([no.common,no.specularmap,no.envmap,no.aomap,no.lightmap,no.emissivemap,no.fog,no.lights,{emissive:{value:new Wr(0)}}]),vertexShader:eo.meshlambert_vert,fragmentShader:eo.meshlambert_frag},phong:{uniforms:Hs([no.common,no.specularmap,no.envmap,no.aomap,no.lightmap,no.emissivemap,no.bumpmap,no.normalmap,no.displacementmap,no.fog,no.lights,{emissive:{value:new Wr(0)},specular:{value:new Wr(1118481)},shininess:{value:30}}]),vertexShader:eo.meshphong_vert,fragmentShader:eo.meshphong_frag},standard:{uniforms:Hs([no.common,no.envmap,no.aomap,no.lightmap,no.emissivemap,no.bumpmap,no.normalmap,no.displacementmap,no.roughnessmap,no.metalnessmap,no.fog,no.lights,{emissive:{value:new Wr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:eo.meshphysical_vert,fragmentShader:eo.meshphysical_frag},toon:{uniforms:Hs([no.common,no.aomap,no.lightmap,no.emissivemap,no.bumpmap,no.normalmap,no.displacementmap,no.gradientmap,no.fog,no.lights,{emissive:{value:new Wr(0)}}]),vertexShader:eo.meshtoon_vert,fragmentShader:eo.meshtoon_frag},matcap:{uniforms:Hs([no.common,no.bumpmap,no.normalmap,no.displacementmap,no.fog,{matcap:{value:null}}]),vertexShader:eo.meshmatcap_vert,fragmentShader:eo.meshmatcap_frag},points:{uniforms:Hs([no.points,no.fog]),vertexShader:eo.points_vert,fragmentShader:eo.points_frag},dashed:{uniforms:Hs([no.common,no.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:eo.linedashed_vert,fragmentShader:eo.linedashed_frag},depth:{uniforms:Hs([no.common,no.displacementmap]),vertexShader:eo.depth_vert,fragmentShader:eo.depth_frag},normal:{uniforms:Hs([no.common,no.bumpmap,no.normalmap,no.displacementmap,{opacity:{value:1}}]),vertexShader:eo.normal_vert,fragmentShader:eo.normal_frag},sprite:{uniforms:Hs([no.sprite,no.fog]),vertexShader:eo.sprite_vert,fragmentShader:eo.sprite_frag},background:{uniforms:{uvTransform:{value:new pi},t2D:{value:null}},vertexShader:eo.background_vert,fragmentShader:eo.background_frag},cube:{uniforms:Hs([no.envmap,{opacity:{value:1}}]),vertexShader:eo.cube_vert,fragmentShader:eo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:eo.equirect_vert,fragmentShader:eo.equirect_frag},distanceRGBA:{uniforms:Hs([no.common,no.displacementmap,{referencePosition:{value:new Mi},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:eo.distanceRGBA_vert,fragmentShader:eo.distanceRGBA_frag},shadow:{uniforms:Hs([no.lights,no.fog,{color:{value:new Wr(0)},opacity:{value:1}}]),vertexShader:eo.shadow_vert,fragmentShader:eo.shadow_frag}};function ro(t,e,n,i,r){const s=new Wr(0);let o,a,c=0,l=null,h=0,u=null;function d(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return s},setClearColor:function(t,e=1){s.set(t),c=e,d(s,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,d(s,c)},render:function(n,r,p,f){let m=!0===r.isScene?r.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,y=g.getSession&&g.getSession();y&&"additive"===y.environmentBlendMode&&(m=null),null===m?d(s,c):m&&m.isColor&&(d(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.mapping===Bt)?(void 0===a&&(a=new Ns(new ks(1,1,1),new Gs({name:"BackgroundCubeMaterial",uniforms:Fs(io.cube.uniforms),vertexShader:io.cube.vertexShader,fragmentShader:io.cube.fragmentShader,side:H,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(a)),m.isWebGLCubeRenderTarget&&(m=m.texture),a.material.uniforms.envMap.value=m,a.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,l===m&&h===m.version&&u===t.toneMapping||(a.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null)):m&&m.isTexture&&(void 0===o&&(o=new Ns(new to(2,2),new Gs({name:"BackgroundMaterial",uniforms:Fs(io.background.uniforms),vertexShader:io.background.vertexShader,fragmentShader:io.background.fragmentShader,side:F,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(o)),o.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),l===m&&h===m.version&&u===t.toneMapping||(o.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null))}}}function so(t,e,n,i){const r=t.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||null!==s,a={},c=d(null);let l=c;function h(e){return i.isWebGL2?t.bindVertexArray(e):s.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):s.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],i=[];for(let t=0;t<r;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function p(){const t=l.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,r){const s=l.newAttributes,o=l.enabledAttributes,a=l.attributeDivisors;if(s[n]=1,0===o[n]&&(t.enableVertexAttribArray(n),o[n]=1),a[n]!==r){(i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),a[n]=r}}function g(){const e=l.newAttributes,n=l.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function y(e,n,r,s,o,a){!0!==i.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,n,r,s,o,a):t.vertexAttribIPointer(e,n,r,o,a)}function v(){x(),l!==c&&(l=c,h(l.object))}function x(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(r,c,u,v,x){let b=!1;if(o){const e=function(e,n,r){const o=!0===r.wireframe;let c=a[e.id];void 0===c&&(c={},a[e.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let h=l[o];void 0===h&&(h=d(i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()),l[o]=h);return h}(v,u,c);l!==e&&(l=e,h(l.object)),b=function(t,e){const n=l.attributes,i=t.attributes;let r=0;for(const t in i){const e=n[t],s=i[t];if(void 0===e)return!0;if(e.attribute!==s)return!0;if(e.data!==s.data)return!0;r++}return l.attributesNum!==r||l.index!==e}(v,x),b&&function(t,e){const n={},i=t.attributes;let r=0;for(const t in i){const e=i[t],s={};s.attribute=e,e.data&&(s.data=e.data),n[t]=s,r++}l.attributes=n,l.attributesNum=r,l.index=e}(v,x)}else{const t=!0===c.wireframe;l.geometry===v.id&&l.program===u.id&&l.wireframe===t||(l.geometry=v.id,l.program=u.id,l.wireframe=t,b=!0)}!0===r.isInstancedMesh&&(b=!0),null!==x&&n.update(x,34963),b&&(!function(r,s,o,a){if(!1===i.isWebGL2&&(r.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const c=a.attributes,l=o.getAttributes(),h=s.defaultAttributeValues;for(const e in l){const i=l[e];if(i>=0){const s=c[e];if(void 0!==s){const e=s.normalized,r=s.itemSize,o=n.get(s);if(void 0===o)continue;const c=o.buffer,l=o.type,h=o.bytesPerElement;if(s.isInterleavedBufferAttribute){const n=s.data,o=n.stride,u=s.offset;n&&n.isInstancedInterleavedBuffer?(m(i,n.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=n.meshPerAttribute*n.count)):f(i),t.bindBuffer(34962,c),y(i,r,l,e,o*h,u*h)}else s.isInstancedBufferAttribute?(m(i,s.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=s.meshPerAttribute*s.count)):f(i),t.bindBuffer(34962,c),y(i,r,l,e,0,0)}else if("instanceMatrix"===e){const e=n.get(r.instanceMatrix);if(void 0===e)continue;const s=e.buffer,o=e.type;m(i+0,1),m(i+1,1),m(i+2,1),m(i+3,1),t.bindBuffer(34962,s),t.vertexAttribPointer(i+0,4,o,!1,64,0),t.vertexAttribPointer(i+1,4,o,!1,64,16),t.vertexAttribPointer(i+2,4,o,!1,64,32),t.vertexAttribPointer(i+3,4,o,!1,64,48)}else if("instanceColor"===e){const e=n.get(r.instanceColor);if(void 0===e)continue;const s=e.buffer,o=e.type;m(i,1),t.bindBuffer(34962,s),t.vertexAttribPointer(i,3,o,!1,12,0)}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}g()}(r,c,u,v),null!==x&&t.bindBuffer(34963,n.get(x).buffer))},reset:v,resetDefaultState:x,dispose:function(){v();for(const t in a){const e=a[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const n=a[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function oo(t,e,n,i){const r=i.isWebGL2;let s;this.setMode=function(t){s=t},this.render=function(e,i){t.drawArrays(s,e,i),n.update(i,s,1)},this.renderInstances=function(i,o,a){if(0===a)return;let c,l;if(r)c=t,l="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](s,i,o,a),n.update(o,s,a)}}function ao(t,e,n){let i;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let o=void 0!==n.precision?n.precision:"highp";const a=r(o);a!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",a,"instead."),o=a);const c=!0===n.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),g=t.getParameter(36349),y=h>0,v=s||!!e.get("OES_texture_float");return{isWebGL2:s,getMaxAnisotropy:function(){if(void 0!==i)return i;const n=e.get("EXT_texture_filter_anisotropic");return i=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,i},getMaxPrecision:r,precision:o,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:y,floatFragmentTextures:v,floatVertexTextures:y&&v,maxSamples:s?t.getParameter(36183):0}}function co(t){const e=this;let n=null,i=0,r=!1,s=!1;const o=new Er,a=new pi,c={value:null,needsUpdate:!1};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,r){const s=null!==t?t.length:0;let l=null;if(0!==s){if(l=c.value,!0!==r||null===l){const e=i+4*s,r=n.matrixWorldInverse;a.getNormalMatrix(r),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,n=i;e!==s;++e,n+=4)o.copy(t[e]).applyMatrix4(r,a),o.normal.toArray(l,n),l[n+3]=o.constant}c.value=l,c.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,s){const o=0!==t.length||e||0!==i||r;return r=e,n=h(t,s,0),i=t.length,o},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,l()},this.setState=function(e,o,a){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!r||null===u||0===u.length||s&&!p)s?h(null):l();else{const t=s?0:i,e=4*t;let r=f.clippingState||null;c.value=r,r=h(u,o,e,a);for(let t=0;t!==e;++t)r[t]=n[t];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function lo(t){let e=new WeakMap;function n(t,e){return e===Ot?t.mapping=Ct:e===Dt&&(t.mapping=It),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping;if(s===Ot||s===Dt){if(e.has(r)){return n(e.get(r).texture,r.mapping)}{const s=r.image;if(s&&s.height>0){const o=t.getRenderList(),a=t.getRenderTarget(),c=new Ys(s.height/2);return c.fromEquirectangularTexture(t,r),e.set(r,c),t.setRenderTarget(a),t.setRenderList(o),r.addEventListener("dispose",i),n(c.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}function ho(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function uo(t,e,n,i){const r={},s=new WeakMap;function o(t){const a=t.target;null!==a.index&&e.remove(a.index);for(const t in a.attributes)e.remove(a.attributes[t]);a.removeEventListener("dispose",o),delete r[a.id];const c=s.get(a);c&&(e.remove(c),s.delete(a)),i.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,n.memory.geometries--}function a(t){const n=[],i=t.index,r=t.attributes.position;let o=0;if(null!==i){const t=i.array;o=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],s=t[e+2];n.push(i,r,r,s,s,i)}}else{const t=r.array;o=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const a=new(cs(n)>65535?rs:ns)(n,1);a.version=o;const c=s.get(t);c&&e.remove(c),s.set(t,a)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",o),r[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&a(t)}else a(t);return s.get(t)}}}function po(t,e,n,i){const r=i.isWebGL2;let s,o,a;this.setMode=function(t){s=t},this.setIndex=function(t){o=t.type,a=t.bytesPerElement},this.render=function(e,i){t.drawElements(s,i,o,e*a),n.update(i,s,1)},this.renderInstances=function(i,c,l){if(0===l)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](s,c,o,i*a,l),n.update(c,s,l)}}function fo(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function mo(t,e){return t[0]-e[0]}function go(t,e){return Math.abs(e[1])-Math.abs(t[1])}function yo(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(r,s,o,a){const c=r.morphTargetInfluences,l=void 0===c?0:c.length;let h=e[s.id];if(void 0===h){h=[];for(let t=0;t<l;t++)h[t]=[t,0];e[s.id]=h}for(let t=0;t<l;t++){const e=h[t];e[0]=t,e[1]=c[t]}h.sort(go);for(let t=0;t<8;t++)t<l&&h[t][1]?(i[t][0]=h[t][0],i[t][1]=h[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(mo);const u=o.morphTargets&&s.morphAttributes.position,d=o.morphNormals&&s.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=i[t],r=e[0],o=e[1];r!==Number.MAX_SAFE_INTEGER&&o?(u&&s.getAttribute("morphTarget"+t)!==u[r]&&s.setAttribute("morphTarget"+t,u[r]),d&&s.getAttribute("morphNormal"+t)!==d[r]&&s.setAttribute("morphNormal"+t,d[r]),n[t]=o,p+=o):(u&&!0===s.hasAttribute("morphTarget"+t)&&s.deleteAttribute("morphTarget"+t),d&&!0===s.hasAttribute("morphNormal"+t)&&s.deleteAttribute("morphNormal"+t),n[t]=0)}const f=s.morphTargetsRelative?1:1-p;a.getUniforms().setValue(t,"morphTargetBaseInfluence",f),a.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function vo(t,e,n,i){let r=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const o=i.render.frame,a=t.geometry,c=e.get(t,a);return r.get(c)!==o&&(e.update(c),r.set(c,o)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",s)&&t.addEventListener("dispose",s),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),c},dispose:function(){r=new WeakMap}}}function xo(t=null,e=1,n=1,i=1){yi.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ht,this.minFilter=Ht,this.wrapR=kt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function bo(t=null,e=1,n=1,i=1){yi.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ht,this.minFilter=Ht,this.wrapR=kt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}io.physical={uniforms:Hs([io.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new di(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Wr(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:eo.meshphysical_vert,fragmentShader:eo.meshphysical_frag},xo.prototype=Object.create(yi.prototype),xo.prototype.constructor=xo,xo.prototype.isDataTexture2DArray=!0,bo.prototype=Object.create(yi.prototype),bo.prototype.constructor=bo,bo.prototype.isDataTexture3D=!0;const wo=new yi,_o=new xo,Mo=new bo,So=new qs,To=[],Eo=[],Ao=new Float32Array(16),Ro=new Float32Array(9),Lo=new Float32Array(4);function Po(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=To[r];if(void 0===s&&(s=new Float32Array(r),To[r]=s),0!==e){i.toArray(s,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(s,r)}return s}function Co(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Io(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Oo(t,e){let n=Eo[e];void 0===n&&(n=new Int32Array(e),Eo[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Do(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Bo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Co(n,e))return;t.uniform2fv(this.addr,e),Io(n,e)}}function No(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Co(n,e))return;t.uniform3fv(this.addr,e),Io(n,e)}}function zo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Co(n,e))return;t.uniform4fv(this.addr,e),Io(n,e)}}function ko(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Co(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Io(n,e)}else{if(Co(n,i))return;Lo.set(i),t.uniformMatrix2fv(this.addr,!1,Lo),Io(n,i)}}function Fo(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Co(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Io(n,e)}else{if(Co(n,i))return;Ro.set(i),t.uniformMatrix3fv(this.addr,!1,Ro),Io(n,i)}}function Ho(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Co(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Io(n,e)}else{if(Co(n,i))return;Ao.set(i),t.uniformMatrix4fv(this.addr,!1,Ao),Io(n,i)}}function Uo(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||wo,r)}function Go(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||_o,r)}function jo(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Mo,r)}function Wo(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||So,r)}function Vo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function qo(t,e){const n=this.cache;Co(n,e)||(t.uniform2iv(this.addr,e),Io(n,e))}function Yo(t,e){const n=this.cache;Co(n,e)||(t.uniform3iv(this.addr,e),Io(n,e))}function Xo(t,e){const n=this.cache;Co(n,e)||(t.uniform4iv(this.addr,e),Io(n,e))}function Jo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Zo(t,e){t.uniform1fv(this.addr,e)}function $o(t,e){t.uniform1iv(this.addr,e)}function Ko(t,e){t.uniform2iv(this.addr,e)}function Qo(t,e){t.uniform3iv(this.addr,e)}function ta(t,e){t.uniform4iv(this.addr,e)}function ea(t,e){const n=Po(e,this.size,2);t.uniform2fv(this.addr,n)}function na(t,e){const n=Po(e,this.size,3);t.uniform3fv(this.addr,n)}function ia(t,e){const n=Po(e,this.size,4);t.uniform4fv(this.addr,n)}function ra(t,e){const n=Po(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function sa(t,e){const n=Po(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function oa(t,e){const n=Po(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function aa(t,e,n){const i=e.length,r=Oo(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||wo,r[t])}function ca(t,e,n){const i=e.length,r=Oo(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||So,r[t])}function la(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Do;case 35664:return Bo;case 35665:return No;case 35666:return zo;case 35674:return ko;case 35675:return Fo;case 35676:return Ho;case 5124:case 35670:return Vo;case 35667:case 35671:return qo;case 35668:case 35672:return Yo;case 35669:case 35673:return Xo;case 5125:return Jo;case 35678:case 36198:case 36298:case 36306:case 35682:return Uo;case 35679:case 36299:case 36307:return jo;case 35680:case 36300:case 36308:case 36293:return Wo;case 36289:case 36303:case 36311:case 36292:return Go}}(e.type)}function ha(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Zo;case 35664:return ea;case 35665:return na;case 35666:return ia;case 35674:return ra;case 35675:return sa;case 35676:return oa;case 5124:case 35670:return $o;case 35667:case 35671:return Ko;case 35668:case 35672:return Qo;case 35669:case 35673:return ta;case 35678:case 36198:case 36298:case 36306:case 35682:return aa;case 35680:case 36300:case 36308:case 36293:return ca}}(e.type)}function ua(t){this.id=t,this.seq=[],this.map={}}ha.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Io(e,t)},ua.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const s=i[r];s.setValue(t,e[s.id],n)}};const da=/(\w+)(\])?(\[|\.)?/g;function pa(t,e){t.seq.push(e),t.map[e.id]=e}function fa(t,e,n){const i=t.name,r=i.length;for(da.lastIndex=0;;){const s=da.exec(i),o=da.lastIndex;let a=s[1];const c="]"===s[2],l=s[3];if(c&&(a|=0),void 0===l||"["===l&&o+2===r){pa(n,void 0===l?new la(a,t,e):new ha(a,t,e));break}{let t=n.map[a];void 0===t&&(t=new ua(a),pa(n,t)),n=t}}}function ma(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);fa(n,t.getUniformLocation(e,n.name),this)}}function ga(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}ma.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},ma.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},ma.upload=function(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const s=e[r],o=n[s.id];!1!==o.needsUpdate&&s.setValue(t,o.value,i)}},ma.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n};let ya=0;function va(t){switch(t){case Mn:return["Linear","( value )"];case Sn:return["sRGB","( value )"];case En:return["RGBE","( value )"];case Rn:return["RGBM","( value, 7.0 )"];case Ln:return["RGBM","( value, 16.0 )"];case Pn:return["RGBD","( value, 256.0 )"];case Tn:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case An:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function xa(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function ba(t,e){const n=va(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function wa(t,e){const n=va(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function _a(t,e){let n;switch(e){case Tt:n="Linear";break;case Et:n="Reinhard";break;case At:n="OptimizedCineon";break;case Rt:n="ACESFilmic";break;case Lt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ma(t){return""!==t}function Sa(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ta(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Ea=/^[ \t]*#include +<([\w\d./]+)>/gm;function Aa(t){return t.replace(Ea,Ra)}function Ra(t,e){const n=eo[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Aa(n)}const La=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Pa=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ca(t){return t.replace(Pa,Oa).replace(La,Ia)}function Ia(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Oa(t,e,n,i)}function Oa(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function Da(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Ba(t,e,n,i){const r=t.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===N?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===z?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===k&&(e="SHADOWMAP_TYPE_VSM"),e}(n),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Ct:case It:e="ENVMAP_TYPE_CUBE";break;case Bt:case Nt:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case It:case Nt:e="ENVMAP_MODE_REFRACTION"}return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case wt:e="ENVMAP_BLENDING_MULTIPLY";break;case _t:e="ENVMAP_BLENDING_MIX";break;case Mt:e="ENVMAP_BLENDING_ADD"}return e}(n),d=t.gammaFactor>0?t.gammaFactor:1,p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ma).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(s),m=r.createProgram();let g,y,v=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(Ma).join("\n"),g.length>0&&(g+="\n"),y=[p,f].filter(Ma).join("\n"),y.length>0&&(y+="\n")):(g=[Da(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ma).join("\n"),y=[p,Da(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==St?"#define TONE_MAPPING":"",n.toneMapping!==St?eo.tonemapping_pars_fragment:"",n.toneMapping!==St?_a("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",eo.encodings_pars_fragment,n.map?ba("mapTexelToLinear",n.mapEncoding):"",n.matcap?ba("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?ba("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?ba("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?ba("lightMapTexelToLinear",n.lightMapEncoding):"",wa("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ma).join("\n")),o=Aa(o),o=Sa(o,n),o=Ta(o,n),a=Aa(a),a=Sa(a,n),a=Ta(a,n),o=Ca(o),a=Ca(a),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(v="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,y=["#define varying in",n.glslVersion===ai?"":"out highp vec4 pc_fragColor;",n.glslVersion===ai?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const x=v+y+a,b=ga(r,35633,v+g+o),w=ga(r,35632,x);if(r.attachShader(m,b),r.attachShader(m,w),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(m).trim(),e=r.getShaderInfoLog(b).trim(),n=r.getShaderInfoLog(w).trim();let i=!0,s=!0;if(!1===r.getProgramParameter(m,35714)){i=!1;const e=xa(r,b,"vertex"),n=xa(r,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(m,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(s=!1);s&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:y}})}let _,M;return r.deleteShader(b),r.deleteShader(w),this.getUniforms=function(){return void 0===_&&(_=new ma(r,m)),_},this.getAttributes=function(){return void 0===M&&(M=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r).name;n[i]=t.getAttribLocation(e,i)}return n}(r,m)),M},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=ya++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=b,this.fragmentShader=w,this}function Na(t,e,n,i,r,s){const o=[],a=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Mn,e}return{getParameters:function(r,o,f,g,y){const v=g.fog,x=r.isMeshStandardMaterial?g.environment:null,b=e.get(r.envMap||x),w=p[r.type],_=y.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(l)return 1024;{const t=h,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(y):0;let M,S;if(null!==r.precision&&(d=i.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead.")),w){const t=io[w];M=t.vertexShader,S=t.fragmentShader}else M=r.vertexShader,S=r.fragmentShader;const T=t.getRenderTarget();return{isWebGL2:a,shaderID:w,shaderName:r.type,vertexShader:M,fragmentShader:S,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:u,outputEncoding:null!==T?m(T.texture):t.outputEncoding,map:!!r.map,mapEncoding:m(r.map),matcap:!!r.matcap,matcapEncoding:m(r.matcap),envMap:!!b,envMapMode:b&&b.mapping,envMapEncoding:m(b),envMapCubeUV:!!b&&(b.mapping===Bt||b.mapping===Nt),lightMap:!!r.lightMap,lightMapEncoding:m(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:m(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:r.normalMapType===Dn,tangentSpaceNormalMap:r.normalMapType===On,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!v,useFog:r.fog,fogExp2:v&&v.isFogExp2,flatShading:r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:c,skinning:r.skinning&&_>0,maxBones:_,useVertexTexture:l,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:r.toneMapped?t.toneMapping:St,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===U,flipSided:r.side===H,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=io[e];n=Us.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=o.length;t<e;t++){const e=o[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new Ba(t,n,e,r),o.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=o.indexOf(t);o[e]=o[o.length-1],o.pop(),t.destroy()}},programs:o}}function za(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function ka(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Fa(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ha(t){const e=[];let n=0;const i=[],r=[],s={id:-1};function o(i,r,o,a,c,l){let h=e[n];const u=t.get(o);return void 0===h?(h={id:i.id,object:i,geometry:r,material:o,program:u.program||s,groupOrder:a,renderOrder:i.renderOrder,z:c,group:l},e[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=o,h.program=u.program||s,h.groupOrder=a,h.renderOrder=i.renderOrder,h.z=c,h.group=l),n++,h}return{opaque:i,transparent:r,init:function(){n=0,i.length=0,r.length=0},push:function(t,e,n,s,a,c){const l=o(t,e,n,s,a,c);(!0===n.transparent?r:i).push(l)},unshift:function(t,e,n,s,a,c){const l=o(t,e,n,s,a,c);(!0===n.transparent?r:i).unshift(l)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||ka),r.length>1&&r.sort(e||Fa)}}}function Ua(t){let e=new WeakMap;return{get:function(n,i){const r=e.get(n);let s;return void 0===r?(s=new Ha(t),e.set(n,new WeakMap),e.get(n).set(i,s)):(s=r.get(i),void 0===s&&(s=new Ha(t),r.set(i,s))),s},dispose:function(){e=new WeakMap}}}function Ga(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Mi,color:new Wr};break;case"SpotLight":n={position:new Mi,direction:new Mi,color:new Wr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Mi,color:new Wr,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Mi,skyColor:new Wr,groundColor:new Wr};break;case"RectAreaLight":n={color:new Wr,position:new Mi,halfWidth:new Mi,halfHeight:new Mi}}return t[e.id]=n,n}}}let ja=0;function Wa(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Va(t,e){const n=new Ga,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new di};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new di,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)r.probe.push(new Mi);const s=new Mi,o=new $i,a=new $i;return{setup:function(s){let o=0,a=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let l=0,h=0,u=0,d=0,p=0,f=0,m=0,g=0;s.sort(Wa);for(let t=0,e=s.length;t<e;t++){const e=s[t],y=e.color,v=e.intensity,x=e.distance,b=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=y.r*v,a+=y.g*v,c+=y.b*v;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],v);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[l]=n,r.directionalShadowMap[l]=b,r.directionalShadowMatrix[l]=e.shadow.matrix,f++}r.directional[l]=t,l++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(y).multiplyScalar(v),t.distance=x,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.spotShadow[u]=n,r.spotShadowMap[u]=b,r.spotShadowMatrix[u]=e.shadow.matrix,g++}r.spot[u]=t,u++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(y).multiplyScalar(v),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[d]=t,d++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[h]=n,r.pointShadowMap[h]=b,r.pointShadowMatrix[h]=e.shadow.matrix,m++}r.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(v),t.groundColor.copy(e.groundColor).multiplyScalar(v),r.hemi[p]=t,p++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=no.LTC_FLOAT_1,r.rectAreaLTC2=no.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=no.LTC_HALF_1,r.rectAreaLTC2=no.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=a,r.ambient[2]=c;const y=r.hash;y.directionalLength===l&&y.pointLength===h&&y.spotLength===u&&y.rectAreaLength===d&&y.hemiLength===p&&y.numDirectionalShadows===f&&y.numPointShadows===m&&y.numSpotShadows===g||(r.directional.length=l,r.spot.length=u,r.rectArea.length=d,r.point.length=h,r.hemi.length=p,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=m,r.pointShadowMap.length=m,r.spotShadow.length=g,r.spotShadowMap.length=g,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=m,r.spotShadowMatrix.length=g,y.directionalLength=l,y.pointLength=h,y.spotLength=u,y.rectAreaLength=d,y.hemiLength=p,y.numDirectionalShadows=f,y.numPointShadows=m,y.numSpotShadows=g,r.version=ja++)},setupView:function(t,e){let n=0,i=0,c=0,l=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(u),n++}else if(d.isSpotLight){const t=r.spot[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(u),c++}else if(d.isRectAreaLight){const t=r.rectArea[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),a.identity(),o.copy(d.matrixWorld),o.premultiply(u),a.extractRotation(o),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),l++}else if(d.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),h++}}},state:r}}function qa(t,e){const n=new Va(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function Ya(t,e){let n=new WeakMap;return{get:function(i,r=0){let s;return!1===n.has(i)?(s=new qa(t,e),n.set(i,[]),n.get(i).push(s)):r>=n.get(i).length?(s=new qa(t,e),n.get(i).push(s)):s=n.get(i)[r],s},dispose:function(){n=new WeakMap}}}function Xa(t){Yr.call(this),this.type="MeshDepthMaterial",this.depthPacking=Cn,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function Ja(t){Yr.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Mi,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}Xa.prototype=Object.create(Yr.prototype),Xa.prototype.constructor=Xa,Xa.prototype.isMeshDepthMaterial=!0,Xa.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},Ja.prototype=Object.create(Yr.prototype),Ja.prototype.constructor=Ja,Ja.prototype.isMeshDistanceMaterial=!0,Ja.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};function Za(t,e,n){let i=new $s;const r=new di,s=new di,o=new xi,a=[],c=[],l={},h={0:H,1:F,2:U},u=new Gs({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new di},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=u.clone();d.defines.HORIZONTAL_PASS=1;const p=new vs;p.setAttribute("position",new $r(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new Ns(p,u),m=this;function g(n,i){const r=e.update(f);u.uniforms.shadow_pass.value=n.map.texture,u.uniforms.resolution.value=n.mapSize,u.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,u,f,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,d,f,null)}function y(t,e,n){const i=t<<0|e<<1|n<<2;let r=a[i];return void 0===r&&(r=new Xa({depthPacking:In,morphTargets:t,skinning:e}),a[i]=r),r}function v(t,e,n){const i=t<<0|e<<1|n<<2;let r=c[i];return void 0===r&&(r=new Ja({morphTargets:t,skinning:e}),c[i]=r),r}function x(e,n,i,r,s,o,a){let c=null,u=y,d=e.customDepthMaterial;if(!0===r.isPointLight&&(u=v,d=e.customDistanceMaterial),void 0===d){let t=!1;!0===i.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let r=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e));c=u(t,r,!0===e.isInstancedMesh)}else c=d;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const t=c.uuid,e=i.uuid;let n=l[t];void 0===n&&(n={},l[t]=n);let r=n[e];void 0===r&&(r=c.clone(),n[e]=r),c=r}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=a===k?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:h[i.side],c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=s,c.farDistance=o),c}function b(n,r,s,o,a){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&a===k)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let c=0,l=e.length;c<l;c++){const l=e[c],h=r[l.materialIndex];if(h&&h.visible){const e=x(n,i,h,o,s.near,s.far,a);t.renderBufferDirect(s,null,i,e,n,l)}}}else if(r.visible){const e=x(n,i,r,o,s.near,s.far,a);t.renderBufferDirect(s,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)b(c[t],r,s,o,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=N,this.render=function(e,a,c){if(!1===m.enabled)return;if(!1===m.autoUpdate&&!1===m.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),h=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(W),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,h=e.length;l<h;l++){const h=e[l],u=h.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const p=u.getFrameExtents();if(r.multiply(p),s.copy(u.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(s.x=Math.floor(n/p.x),r.x=s.x*p.x,u.mapSize.x=s.x),r.y>n&&(s.y=Math.floor(n/p.y),r.y=s.y*p.y,u.mapSize.y=s.y)),null===u.map&&!u.isPointLightShadow&&this.type===k){const t={minFilter:Vt,magFilter:Vt,format:he};u.map=new bi(r.x,r.y,t),u.map.texture.name=h.name+".shadowMap",u.mapPass=new bi(r.x,r.y,t),u.camera.updateProjectionMatrix()}if(null===u.map){const t={minFilter:Ht,magFilter:Ht,format:he};u.map=new bi(r.x,r.y,t),u.map.texture.name=h.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const f=u.getViewportCount();for(let t=0;t<f;t++){const e=u.getViewport(t);o.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),d.viewport(o),u.updateMatrices(h,t),i=u.getFrustum(),b(a,c,u.camera,h,this.type)}u.isPointLightShadow||this.type!==k||g(u,c),u.needsUpdate=!1}m.needsUpdate=!1,t.setRenderTarget(l,h,u)}}function $a(t,e,n){const i=n.isWebGL2;const r=new function(){let e=!1;const n=new xi;let i=null;const r=new xi(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,s,o,a){!0===a&&(e*=o,i*=o,s*=o),n.set(e,i,s,o),!1===r.equals(n)&&(t.clearColor(e,i,s,o),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},s=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(t){t?N(2929):z(2929)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case pt:t.depthFunc(512);break;case ft:t.depthFunc(519);break;case mt:t.depthFunc(513);break;case gt:t.depthFunc(515);break;case yt:t.depthFunc(514);break;case vt:t.depthFunc(518);break;case xt:t.depthFunc(516);break;case bt:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},o=new function(){let e=!1,n=null,i=null,r=null,s=null,o=null,a=null,c=null,l=null;return{setTest:function(t){e||(t?N(2960):z(2960))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,o){i===e&&r===n&&s===o||(t.stencilFunc(e,n,o),i=e,r=n,s=o)},setOp:function(e,n,i){o===e&&a===n&&c===i||(t.stencilOp(e,n,i),o=e,a=n,c=i)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(t.clearStencil(e),l=e)},reset:function(){e=!1,n=null,i=null,r=null,s=null,o=null,a=null,c=null,l=null}}};let a={},c=null,l=null,h=null,u=null,d=null,p=null,f=null,m=null,g=null,y=!1,v=null,x=null,b=null,w=null,_=null;const M=t.getParameter(35661);let S=!1,T=0;const E=t.getParameter(7938);-1!==E.indexOf("WebGL")?(T=parseFloat(/^WebGL (\d)/.exec(E)[1]),S=T>=1):-1!==E.indexOf("OpenGL ES")&&(T=parseFloat(/^OpenGL ES (\d)/.exec(E)[1]),S=T>=2);let A=null,R={};const L=new xi,P=new xi;function D(e,n,i){const r=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<i;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,r);return s}const B={};function N(e){!0!==a[e]&&(t.enable(e),a[e]=!0)}function z(e){!1!==a[e]&&(t.disable(e),a[e]=!1)}B[3553]=D(3553,3553,1),B[34067]=D(34067,34069,6),r.setClear(0,0,0,1),s.setClear(1),o.setClear(0),N(2929),s.setFunc(gt),j(!1),$(I),N(2884),G(W);const k={[Z]:32774,[K]:32778,[Q]:32779};if(i)k[tt]=32775,k[et]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(k[tt]=t.MIN_EXT,k[et]=t.MAX_EXT)}const F={[nt]:0,[it]:1,[rt]:768,[ot]:770,[dt]:776,[ht]:774,[ct]:772,[st]:769,[at]:771,[ut]:775,[lt]:773};function G(e,n,i,r,s,o,a,c){if(e!==W){if(l||(N(3042),l=!0),e===J)s=s||n,o=o||i,a=a||r,n===u&&s===f||(t.blendEquationSeparate(k[n],k[s]),u=n,f=s),i===d&&r===p&&o===m&&a===g||(t.blendFuncSeparate(F[i],F[r],F[o],F[a]),d=i,p=r,m=o,g=a),h=e,y=null;else if(e!==h||c!==y){if(u===Z&&f===Z||(t.blendEquation(32774),u=Z,f=Z),c)switch(e){case V:t.blendFuncSeparate(1,771,1,771);break;case q:t.blendFunc(1,1);break;case Y:t.blendFuncSeparate(0,0,769,771);break;case X:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case V:t.blendFuncSeparate(770,771,1,771);break;case q:t.blendFunc(770,1);break;case Y:t.blendFunc(0,769);break;case X:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}d=null,p=null,m=null,g=null,h=e,y=c}}else l&&(z(3042),l=!1)}function j(e){v!==e&&(e?t.frontFace(2304):t.frontFace(2305),v=e)}function $(e){e!==C?(N(2884),e!==x&&(e===I?t.cullFace(1029):e===O?t.cullFace(1028):t.cullFace(1032))):z(2884),x=e}function wt(e,n,i){e?(N(32823),w===n&&_===i||(t.polygonOffset(n,i),w=n,_=i)):z(32823)}function _t(e){void 0===e&&(e=33984+M-1),A!==e&&(t.activeTexture(e),A=e)}return{buffers:{color:r,depth:s,stencil:o},enable:N,disable:z,useProgram:function(e){return c!==e&&(t.useProgram(e),c=e,!0)},setBlending:G,setMaterial:function(t,e){t.side===U?z(2884):N(2884);let n=t.side===H;e&&(n=!n),j(n),t.blending===V&&!1===t.transparent?G(W):G(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),r.setMask(t.colorWrite);const i=t.stencilWrite;o.setTest(i),i&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),wt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:j,setCullFace:$,setLineWidth:function(e){e!==b&&(S&&t.lineWidth(e),b=e)},setPolygonOffset:wt,setScissorTest:function(t){t?N(3089):z(3089)},activeTexture:_t,bindTexture:function(e,n){null===A&&_t();let i=R[A];void 0===i&&(i={type:void 0,texture:void 0},R[A]=i),i.type===e&&i.texture===n||(t.bindTexture(e,n||B[e]),i.type=e,i.texture=n)},unbindTexture:function(){const e=R[A];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===L.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),L.copy(e))},viewport:function(e){!1===P.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),P.copy(e))},reset:function(){a={},A=null,R={},c=null,l=null,h=null,u=null,d=null,p=null,f=null,m=null,g=null,y=!1,v=null,x=null,b=null,w=null,_=null,r.reset(),s.reset(),o.reset()}}}function Ka(t,e,n,i,r,s,o){const a=r.isWebGL2,c=r.maxTextures,l=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,d=new WeakMap;let p,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function m(t,e){return f?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?ui.floorPowerOfTwo:Math.floor,s=i(r*t.width),o=i(r*t.height);void 0===p&&(p=m(s,o));const a=n?m(s,o):p;a.width=s,a.height=o;return a.getContext("2d").drawImage(t,0,0,s,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+s+"x"+o+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function y(t){return ui.isPowerOfTwo(t.width)&&ui.isPowerOfTwo(t.height)}function v(t,e){return t.generateMipmaps&&e&&t.minFilter!==Ht&&t.minFilter!==Vt}function x(e,n,r,s){t.generateMipmap(e);i.get(n).__maxMipLevel=Math.log(Math.max(r,s))*Math.LOG2E}function b(n,i,r){if(!1===a)return i;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let s=i;return 6403===i&&(5126===r&&(s=33326),5131===r&&(s=33325),5121===r&&(s=33321)),6407===i&&(5126===r&&(s=34837),5131===r&&(s=34843),5121===r&&(s=32849)),6408===i&&(5126===r&&(s=34836),5131===r&&(s=34842),5121===r&&(s=32856)),33325!==s&&33326!==s&&34842!==s&&34836!==s||e.get("EXT_color_buffer_float"),s}function w(t){return t===Ht||t===Ut||t===jt?9728:9729}function _(e){const n=e.target;n.removeEventListener("dispose",_),function(e){const n=i.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),i.remove(e)}(n),n.isVideoTexture&&d.delete(n),o.memory.textures--}function M(e){const n=e.target;n.removeEventListener("dispose",M),function(e){const n=i.get(e),r=i.get(e.texture);if(!e)return;void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&t.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer);i.remove(e.texture),i.remove(e)}(n),o.memory.textures--}let S=0;function T(t,e){const r=i.get(t);if(t.isVideoTexture&&function(t){const e=o.render.frame;d.get(t)!==e&&(d.set(t,e),t.update())}(t),t.version>0&&r.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void C(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,r.__webglTexture)}function E(e,r){const o=i.get(e);e.version>0&&o.__version!==e.version?function(e,i,r){if(6!==i.image.length)return;P(e,i),n.activeTexture(33984+r),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment);const o=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),c=i.image[0]&&i.image[0].isDataTexture,h=[];for(let t=0;t<6;t++)h[t]=o||c?c?i.image[t].image:i.image[t]:g(i.image[t],!1,!0,l);const u=h[0],d=y(u)||a,p=s.convert(i.format),f=s.convert(i.type),m=b(i.internalFormat,p,f);let w;if(L(34067,i,d),o){for(let t=0;t<6;t++){w=h[t].mipmaps;for(let e=0;e<w.length;e++){const r=w[e];i.format!==he&&i.format!==le?null!==p?n.compressedTexImage2D(34069+t,e,m,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,e,m,r.width,r.height,0,p,f,r.data)}}e.__maxMipLevel=w.length-1}else{w=i.mipmaps;for(let t=0;t<6;t++)if(c){n.texImage2D(34069+t,0,m,h[t].width,h[t].height,0,p,f,h[t].data);for(let e=0;e<w.length;e++){const i=w[e].image[t].image;n.texImage2D(34069+t,e+1,m,i.width,i.height,0,p,f,i.data)}}else{n.texImage2D(34069+t,0,m,p,f,h[t]);for(let e=0;e<w.length;e++){const i=w[e];n.texImage2D(34069+t,e+1,m,p,f,i.image[t])}}e.__maxMipLevel=w.length}v(i,d)&&x(34067,i,u.width,u.height);e.__version=i.version,i.onUpdate&&i.onUpdate(i)}(o,e,r):(n.activeTexture(33984+r),n.bindTexture(34067,o.__webglTexture))}const A={[zt]:10497,[kt]:33071,[Ft]:33648},R={[Ht]:9728,[Ut]:9984,[jt]:9986,[Vt]:9729,[qt]:9985,[Xt]:9987};function L(n,s,o){o?(t.texParameteri(n,10242,A[s.wrapS]),t.texParameteri(n,10243,A[s.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,A[s.wrapR]),t.texParameteri(n,10240,R[s.magFilter]),t.texParameteri(n,10241,R[s.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),s.wrapS===kt&&s.wrapT===kt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,w(s.magFilter)),t.texParameteri(n,10241,w(s.minFilter)),s.minFilter!==Ht&&s.minFilter!==Vt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const c=e.get("EXT_texture_filter_anisotropic");if(c){if(s.type===ne&&null===e.get("OES_texture_float_linear"))return;if(s.type===ie&&null===(a||e.get("OES_texture_half_float_linear")))return;(s.anisotropy>1||i.get(s).__currentAnisotropy)&&(t.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),i.get(s).__currentAnisotropy=s.anisotropy)}}function P(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",_),e.__webglTexture=t.createTexture(),o.memory.textures++)}function C(e,i,r){let o=3553;i.isDataTexture2DArray&&(o=35866),i.isDataTexture3D&&(o=32879),P(e,i),n.activeTexture(33984+r),n.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment);const c=function(t){return!a&&(t.wrapS!==kt||t.wrapT!==kt||t.minFilter!==Ht&&t.minFilter!==Vt)}(i)&&!1===y(i.image),l=g(i.image,c,!1,h),u=y(l)||a,d=s.convert(i.format);let p,f=s.convert(i.type),m=b(i.internalFormat,d,f);L(o,i,u);const w=i.mipmaps;if(i.isDepthTexture)m=6402,a?m=i.type===ne?36012:i.type===ee?33190:i.type===ae?35056:33189:i.type===ne&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===fe&&6402===m&&i.type!==Qt&&i.type!==ee&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=Qt,f=s.convert(i.type)),i.format===me&&6402===m&&(m=34041,i.type!==ae&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=ae,f=s.convert(i.type))),n.texImage2D(3553,0,m,l.width,l.height,0,d,f,null);else if(i.isDataTexture)if(w.length>0&&u){for(let t=0,e=w.length;t<e;t++)p=w[t],n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data);i.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,l.width,l.height,0,d,f,l.data),e.__maxMipLevel=0;else if(i.isCompressedTexture){for(let t=0,e=w.length;t<e;t++)p=w[t],i.format!==he&&i.format!==le?null!==d?n.compressedTexImage2D(3553,t,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data);e.__maxMipLevel=w.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,m,l.width,l.height,l.depth,0,d,f,l.data),e.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,m,l.width,l.height,l.depth,0,d,f,l.data),e.__maxMipLevel=0;else if(w.length>0&&u){for(let t=0,e=w.length;t<e;t++)p=w[t],n.texImage2D(3553,t,m,d,f,p);i.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,d,f,l),e.__maxMipLevel=0;v(i,u)&&x(o,i,l.width,l.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}function I(e,r,o,a){const c=s.convert(r.texture.format),l=s.convert(r.texture.type),h=b(r.texture.internalFormat,c,l);n.texImage2D(a,0,h,r.width,r.height,0,c,l,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,o,a,i.get(r.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function O(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===ne?r=36012:e.type===ee&&(r=33190));const i=B(n);t.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else t.renderbufferStorage(36161,r,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=B(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=s.convert(n.texture.format),r=s.convert(n.texture.type),o=b(n.texture.internalFormat,e,r);if(i){const e=B(n);t.renderbufferStorageMultisample(36161,e,o,n.width,n.height)}else t.renderbufferStorage(36161,o,n.width,n.height)}t.bindRenderbuffer(36161,null)}function D(e){const n=i.get(e),r=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),T(n.depthTexture,0);const r=i.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===fe)t.framebufferTexture2D(36160,36096,3553,r,0);else{if(n.depthTexture.format!==me)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,r,0)}}(n.__webglFramebuffer,e)}else if(r){n.__webglDepthbuffer=[];for(let i=0;i<6;i++)t.bindFramebuffer(36160,n.__webglFramebuffer[i]),n.__webglDepthbuffer[i]=t.createRenderbuffer(),O(n.__webglDepthbuffer[i],e,!1)}else t.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),O(n.__webglDepthbuffer,e,!1);t.bindFramebuffer(36160,null)}function B(t){return a&&t.isWebGLMultisampleRenderTarget?Math.min(u,t.samples):0}let N=!1,z=!1;this.allocateTextureUnit=function(){const t=S;return t>=c&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+c),S+=1,t},this.resetTextureUnits=function(){S=0},this.setTexture2D=T,this.setTexture2DArray=function(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?C(r,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?C(r,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,r.__webglTexture))},this.setTextureCube=E,this.setupRenderTarget=function(e){const r=i.get(e),c=i.get(e.texture);e.addEventListener("dispose",M),c.__webglTexture=t.createTexture(),o.memory.textures++;const l=!0===e.isWebGLCubeRenderTarget,h=!0===e.isWebGLMultisampleRenderTarget,u=y(e)||a;if(!a||e.texture.format!==le||e.texture.type!==ne&&e.texture.type!==ie||(e.texture.format=he,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),l){r.__webglFramebuffer=[];for(let e=0;e<6;e++)r.__webglFramebuffer[e]=t.createFramebuffer()}else if(r.__webglFramebuffer=t.createFramebuffer(),h)if(a){r.__webglMultisampledFramebuffer=t.createFramebuffer(),r.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,r.__webglColorRenderbuffer);const n=s.convert(e.texture.format),i=s.convert(e.texture.type),o=b(e.texture.internalFormat,n,i),a=B(e);t.renderbufferStorageMultisample(36161,a,o,e.width,e.height),t.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(r.__webglDepthRenderbuffer=t.createRenderbuffer(),O(r.__webglDepthRenderbuffer,e,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(l){n.bindTexture(34067,c.__webglTexture),L(34067,e.texture,u);for(let t=0;t<6;t++)I(r.__webglFramebuffer[t],e,36064,34069+t);v(e.texture,u)&&x(34067,e.texture,e.width,e.height),n.bindTexture(34067,null)}else n.bindTexture(3553,c.__webglTexture),L(3553,e.texture,u),I(r.__webglFramebuffer,e,36064,3553),v(e.texture,u)&&x(3553,e.texture,e.width,e.height),n.bindTexture(3553,null);e.depthBuffer&&D(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(v(e,y(t)||a)){const r=t.isWebGLCubeRenderTarget?34067:3553,s=i.get(e).__webglTexture;n.bindTexture(r,s),x(r,e,t.width,t.height),n.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(a){const n=i.get(e);t.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,n.__webglFramebuffer);const r=e.width,s=e.height;let o=16384;e.depthBuffer&&(o|=256),e.stencilBuffer&&(o|=1024),t.blitFramebuffer(0,0,r,s,0,0,r,s,o,9728),t.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===N&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),N=!0),t=t.texture),T(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===z&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),z=!0),t=t.texture),E(t,e)}}function Qa(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(t===Zt)return 5121;if(t===re)return 32819;if(t===se)return 32820;if(t===oe)return 33635;if(t===$t)return 5120;if(t===Kt)return 5122;if(t===Qt)return 5123;if(t===te)return 5124;if(t===ee)return 5125;if(t===ne)return 5126;if(t===ie)return i?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(t===ce)return 6406;if(t===le)return 6407;if(t===he)return 6408;if(t===ue)return 6409;if(t===de)return 6410;if(t===fe)return 6402;if(t===me)return 34041;if(t===ge)return 6403;if(t===ye)return 36244;if(t===ve)return 33319;if(t===xe)return 33320;if(t===be)return 36248;if(t===we)return 36249;if(t===_e||t===Me||t===Se||t===Te){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(t===_e)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Me)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Se)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Te)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===Ee||t===Ae||t===Re||t===Le){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(t===Ee)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===Ae)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===Re)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Le)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===Pe)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===Ce||t===Ie)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(t===Ce)return n.COMPRESSED_RGB8_ETC2;if(t===Ie)return n.COMPRESSED_RGBA8_ETC2_EAC}return t===Oe||t===De||t===Be||t===Ne||t===ze||t===ke||t===Fe||t===He||t===Ue||t===Ge||t===je||t===We||t===Ve||t===qe||t===Xe||t===Je||t===Ze||t===$e||t===Ke||t===Qe||t===tn||t===en||t===nn||t===rn||t===sn||t===on||t===an||t===cn?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):t===Ye?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===ae?i?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function tc(t=[]){Ws.call(this),this.cameras=t}function ec(){_r.call(this),this.type="Group"}function nc(){this._targetRay=null,this._grip=null,this._hand=null}function ic(t,e){const n=this;let i=null,r=1,s=null,o="local-floor",a=null;const c=[],l=new Map,h=new Ws;h.layers.enable(1),h.viewport=new xi;const u=new Ws;u.layers.enable(2),u.viewport=new xi;const d=[h,u],p=new tc;p.layers.enable(1),p.layers.enable(2);let f=null,m=null;function g(t){const e=l.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function y(){l.forEach((function(t,e){t.disconnect(e)})),l.clear(),f=null,m=null,t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),M.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function v(t){const e=i.inputSources;for(let t=0;t<c.length;t++)l.set(e[t],c[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=l.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),l.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=l.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=c[t];return void 0===e&&(e=new nc,c[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=c[t];return void 0===e&&(e=new nc,c[t]=e),e.getGripSpace()},this.getHand=function(t){let e=c[t];return void 0===e&&(e=new nc,c[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=async function(t){if(i=t,null!==i){i.addEventListener("select",g),i.addEventListener("selectstart",g),i.addEventListener("selectend",g),i.addEventListener("squeeze",g),i.addEventListener("squeezestart",g),i.addEventListener("squeezeend",g),i.addEventListener("end",y),i.addEventListener("inputsourceschange",v);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const a={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:r},c=new XRWebGLLayer(i,e,a);i.updateRenderState({baseLayer:c}),s=await i.requestReferenceSpace(o),M.setContext(i),M.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const x=new Mi,b=new Mi;function w(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){p.near=u.near=h.near=t.near,p.far=u.far=h.far=t.far,f===p.near&&m===p.far||(i.updateRenderState({depthNear:p.near,depthFar:p.far}),f=p.near,m=p.far);const e=t.parent,n=p.cameras;w(p,e);for(let t=0;t<n.length;t++)w(n[t],e);t.matrixWorld.copy(p.matrixWorld),t.matrix.copy(p.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const r=t.children;for(let t=0,e=r.length;t<e;t++)r[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){x.setFromMatrixPosition(e.matrixWorld),b.setFromMatrixPosition(n.matrixWorld);const i=x.distanceTo(b),r=e.projectionMatrix.elements,s=n.projectionMatrix.elements,o=r[14]/(r[10]-1),a=r[14]/(r[10]+1),c=(r[9]+1)/r[5],l=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(s[8]+1)/s[0],d=o*h,p=o*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=o+f,y=a+f,v=d-m,w=p+(i-m),_=c*a/y*g,M=l*a/y*g;t.projectionMatrix.makePerspective(v,w,_,M,g,y)}(p,h,u):p.projectionMatrix.copy(h.projectionMatrix),p};let _=null;const M=new Ks;M.setAnimationLoop((function(e,n){if(a=n.getViewerPose(s),null!==a){const e=a.views,n=i.renderState.baseLayer;t.setFramebuffer(n.framebuffer);let r=!1;e.length!==p.cameras.length&&(p.cameras.length=0,r=!0);for(let t=0;t<e.length;t++){const i=e[t],s=n.getViewport(i),o=d[t];o.matrix.fromArray(i.transform.matrix),o.projectionMatrix.fromArray(i.projectionMatrix),o.viewport.set(s.x,s.y,s.width,s.height),0===t&&p.matrix.copy(o.matrix),!0===r&&p.cameras.push(o)}}const r=i.inputSources;for(let t=0;t<c.length;t++){const e=c[t],i=r[t];e.update(i,n,s)}_&&_(e,n)})),this.setAnimationLoop=function(t){_=t},this.dispose=function(){}}function rc(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,s;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(r=n.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),n.aoMap?s=n.aoMap:n.lightMap&&(s=n.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),e.uv2Transform.value.copy(s.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===H&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===H&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,r,s){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===H&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===H&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===H&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===H&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===H&&t.clearcoatNormalScale.value.negate());t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,i):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===H&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===H&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===H&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===H&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,i,r,s):i.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function sc(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,s=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u=null,d=null;const p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Mn,this.physicallyCorrectLights=!1,this.toneMapping=St,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const f=this;let m=!1,g=null,y=0,v=0,x=null,b=null,w=-1,_=null;const M=new xi,S=new xi;let T=null,E=e.width,A=e.height,R=1,L=null,P=null;const C=new xi(0,0,E,A),I=new xi(0,0,E,A);let O=!1;const D=new $s;let B=!1,N=!1;const z=new $i,k=new Mi,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function H(){return null===x?R:1}let U,G,j,W,V,q,Y,X,J,Z,$,K,Q,tt,et,nt,it,rt,st,ot,at,ct=n;function lt(t,n){for(let i=0;i<t.length;i++){const r=t[i],s=e.getContext(r,n);if(null!==s)return s}return null}try{const t={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",pt,!1),e.addEventListener("webglcontextrestored",ft,!1),null===ct){const e=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&e.shift(),ct=lt(e,t),null===ct)throw lt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ct.getShaderPrecisionFormat&&(ct.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function ht(){U=new ho(ct),G=new ao(ct,U,t),U.init(G),ot=new Qa(ct,U,G),j=new $a(ct,U,G),j.scissor(S.copy(I).multiplyScalar(R).floor()),j.viewport(M.copy(C).multiplyScalar(R).floor()),W=new fo(ct),V=new za,q=new Ka(ct,U,j,V,G,ot,W),Y=new lo(f),X=new Qs(ct,G),at=new so(ct,U,X,G),J=new uo(ct,X,W,at),Z=new vo(ct,J,X,W),it=new yo(ct),et=new co(V),$=new Na(f,Y,U,G,at,et),K=new rc(V),Q=new Ua(V),tt=new Ya(U,G),nt=new ro(f,Y,j,Z,a),rt=new oo(ct,U,W,G),st=new po(ct,U,W,G),W.programs=$.programs,f.capabilities=G,f.extensions=U,f.properties=V,f.renderLists=Q,f.state=j,f.info=W}ht();const ut=new ic(f,ct);this.xr=ut;const dt=new Za(f,Z,G.maxTextureSize);function pt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function ft(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,ht()}function mt(t){const e=t.target;e.removeEventListener("dispose",mt),function(t){gt(t),V.remove(t)}(e)}function gt(t){const e=V.get(t).program;void 0!==e&&$.releaseProgram(e)}this.shadowMap=dt,this.getContext=function(){return ct},this.getContextAttributes=function(){return ct.getContextAttributes()},this.forceContextLoss=function(){const t=U.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=U.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(t){void 0!==t&&(R=t,this.setSize(E,A,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new di),t.set(E,A)},this.setSize=function(t,n,i){ut.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(E=t,A=n,e.width=Math.floor(t*R),e.height=Math.floor(n*R),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new di),t.set(E*R,A*R).floor()},this.setDrawingBufferSize=function(t,n,i){E=t,A=n,R=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new xi),t.copy(M)},this.getViewport=function(t){return t.copy(C)},this.setViewport=function(t,e,n,i){t.isVector4?C.set(t.x,t.y,t.z,t.w):C.set(t,e,n,i),j.viewport(M.copy(C).multiplyScalar(R).floor())},this.getScissor=function(t){return t.copy(I)},this.setScissor=function(t,e,n,i){t.isVector4?I.set(t.x,t.y,t.z,t.w):I.set(t,e,n,i),j.scissor(S.copy(I).multiplyScalar(R).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(t){j.setScissorTest(O=t)},this.setOpaqueSort=function(t){L=t},this.setTransparentSort=function(t){P=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new Wr),t.copy(nt.getClearColor())},this.setClearColor=function(){nt.setClearColor.apply(nt,arguments)},this.getClearAlpha=function(){return nt.getClearAlpha()},this.setClearAlpha=function(){nt.setClearAlpha.apply(nt,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),ct.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",pt,!1),e.removeEventListener("webglcontextrestored",ft,!1),Q.dispose(),tt.dispose(),V.dispose(),Y.dispose(),Z.dispose(),at.dispose(),ut.dispose(),vt.stop()},this.renderBufferImmediate=function(t,e){at.initAttributes();const n=V.get(t);t.hasPositions&&!n.position&&(n.position=ct.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=ct.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=ct.createBuffer()),t.hasColors&&!n.color&&(n.color=ct.createBuffer());const i=e.getAttributes();t.hasPositions&&(ct.bindBuffer(34962,n.position),ct.bufferData(34962,t.positionArray,35048),at.enableAttribute(i.position),ct.vertexAttribPointer(i.position,3,5126,!1,0,0)),t.hasNormals&&(ct.bindBuffer(34962,n.normal),ct.bufferData(34962,t.normalArray,35048),at.enableAttribute(i.normal),ct.vertexAttribPointer(i.normal,3,5126,!1,0,0)),t.hasUvs&&(ct.bindBuffer(34962,n.uv),ct.bufferData(34962,t.uvArray,35048),at.enableAttribute(i.uv),ct.vertexAttribPointer(i.uv,2,5126,!1,0,0)),t.hasColors&&(ct.bindBuffer(34962,n.color),ct.bufferData(34962,t.colorArray,35048),at.enableAttribute(i.color),ct.vertexAttribPointer(i.color,3,5126,!1,0,0)),at.disableUnusedAttributes(),ct.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,r,s){null===e&&(e=F);const o=r.isMesh&&r.matrixWorld.determinant()<0,a=Mt(t,e,i,r);j.setMaterial(i,o);let c=n.index;const l=n.attributes.position;if(null===c){if(void 0===l||0===l.count)return}else if(0===c.count)return;let h,u=1;!0===i.wireframe&&(c=J.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&it.update(r,n,i,a),at.setup(r,i,a,n,c);let d=rt;null!==c&&(h=X.get(c),d=st,d.setIndex(h));const p=null!==c?c.count:l.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==s?s.start*u:0,y=null!==s?s.count*u:1/0,v=Math.max(f,g),x=Math.min(p,f+m,g+y)-1,b=Math.max(0,x-v+1);if(0!==b){if(r.isMesh)!0===i.wireframe?(j.setLineWidth(i.wireframeLinewidth*H()),d.setMode(1)):d.setMode(4);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),j.setLineWidth(t*H()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(v,b,r.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(v,b,t)}else d.render(v,b)}},this.compile=function(t,e){d=tt.get(t),d.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(d.pushLight(t),t.castShadow&&d.pushShadow(t))})),d.setupLights();const n=new WeakMap;t.traverse((function(e){const i=e.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++){const s=i[r];!1===n.has(s)&&(_t(s,t,e),n.set(s))}else!1===n.has(i)&&(_t(i,t,e),n.set(i))}))};let yt=null;const vt=new Ks;function xt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||D.intersectsSprite(t)){i&&k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(z);const e=Z.update(t),r=t.material;r.visible&&u.push(t,e,r,n,k.z,null)}}else if(t.isImmediateRenderObject)i&&k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(z),u.push(t,null,t.material,n,k.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==W.render.frame&&(t.skeleton.update(),t.skeleton.frame=W.render.frame),!t.frustumCulled||D.intersectsObject(t))){i&&k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(z);const e=Z.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let s=0,o=i.length;s<o;s++){const o=i[s],a=r[o.materialIndex];a&&a.visible&&u.push(t,e,a,n,k.z,o)}}else r.visible&&u.push(t,e,r,n,k.z,null)}const r=t.children;for(let t=0,s=r.length;t<s;t++)xt(r[t],e,n,i)}function bt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,s=t.length;r<s;r++){const s=t[r],o=s.object,a=s.geometry,c=null===i?s.material:i,l=s.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];o.layers.test(i.layers)&&(j.viewport(M.copy(i.viewport)),d.setupLightsView(i),wt(o,e,i,a,c,l))}}else wt(o,e,n,a,c,l)}}function wt(t,e,n,i,r,s){if(t.onBeforeRender(f,e,n,i,r,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=Mt(n,e,r,t);j.setMaterial(r),at.reset(),function(t,e){t.render((function(t){f.renderBufferImmediate(t,e)}))}(t,i)}else f.renderBufferDirect(n,e,i,r,t,s);t.onAfterRender(f,e,n,i,r,s)}function _t(t,e,n){!0!==e.isScene&&(e=F);const i=V.get(t),r=d.state.lights,s=d.state.shadowsArray,o=r.state.version,a=$.getParameters(t,r.state,s,e,n),c=$.getProgramCacheKey(a);let l=i.program,h=!0;if(i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=Y.get(t.envMap||i.environment),void 0===l)t.addEventListener("dispose",mt);else if(l.cacheKey!==c)gt(t);else if(i.lightsStateVersion!==o)h=!1;else{if(void 0!==a.shaderID)return;h=!1}h&&(a.uniforms=$.getUniforms(t),t.onBeforeCompile(a,f),l=$.acquireProgram(a,c),i.program=l,i.uniforms=a.uniforms,i.outputEncoding=a.outputEncoding);const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(i.numClippingPlanes=et.numPlanes,i.numIntersection=et.numIntersection,u.clippingPlanes=et.uniform),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=o,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const p=i.program.getUniforms(),m=ma.seqWithValue(p.seq,u);i.uniformsList=m}function Mt(t,e,n,i){!0!==e.isScene&&(e=F),q.resetTextureUnits();const r=e.fog,s=n.isMeshStandardMaterial?e.environment:null,o=null===x?f.outputEncoding:x.texture.encoding,a=Y.get(n.envMap||s),c=V.get(n),l=d.state.lights;if(!0===B&&(!0===N||t!==_)){const e=t===_&&n.id===w;et.setState(n,t,e)}n.version===c.__version?n.fog&&c.fog!==r||c.environment!==s||c.needsLights&&c.lightsStateVersion!==l.state.version?_t(n,e,i):void 0===c.numClippingPlanes||c.numClippingPlanes===et.numPlanes&&c.numIntersection===et.numIntersection?(c.outputEncoding!==o||c.envMap!==a)&&_t(n,e,i):_t(n,e,i):(_t(n,e,i),c.__version=n.version);let h=!1,u=!1,p=!1;const m=c.program,g=m.getUniforms(),y=c.uniforms;if(j.useProgram(m.program)&&(h=!0,u=!0,p=!0),n.id!==w&&(w=n.id,u=!0),h||_!==t){if(g.setValue(ct,"projectionMatrix",t.projectionMatrix),G.logarithmicDepthBuffer&&g.setValue(ct,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),_!==t&&(_=t,u=!0,p=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=g.map.cameraPosition;void 0!==e&&e.setValue(ct,k.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(ct,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(ct,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){g.setOptional(ct,i,"bindMatrix"),g.setOptional(ct,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(G.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=ui.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const r=new Xs(i,n,n,he,ne);t.boneMatrices=i,t.boneTexture=r,t.boneTextureSize=n}g.setValue(ct,"boneTexture",t.boneTexture,q),g.setValue(ct,"boneTextureSize",t.boneTextureSize)}else g.setOptional(ct,t,"boneMatrices")}}var v,b;return(u||c.receiveShadow!==i.receiveShadow)&&(c.receiveShadow=i.receiveShadow,g.setValue(ct,"receiveShadow",i.receiveShadow)),u&&(g.setValue(ct,"toneMappingExposure",f.toneMappingExposure),c.needsLights&&(b=p,(v=y).ambientLightColor.needsUpdate=b,v.lightProbe.needsUpdate=b,v.directionalLights.needsUpdate=b,v.directionalLightShadows.needsUpdate=b,v.pointLights.needsUpdate=b,v.pointLightShadows.needsUpdate=b,v.spotLights.needsUpdate=b,v.spotLightShadows.needsUpdate=b,v.rectAreaLights.needsUpdate=b,v.hemisphereLights.needsUpdate=b),r&&n.fog&&K.refreshFogUniforms(y,r),K.refreshMaterialUniforms(y,n,R,A),ma.upload(ct,c.uniformsList,y,q)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ma.upload(ct,c.uniformsList,y,q),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(ct,"center",i.center),g.setValue(ct,"modelViewMatrix",i.modelViewMatrix),g.setValue(ct,"normalMatrix",i.normalMatrix),g.setValue(ct,"modelMatrix",i.matrixWorld),m}vt.setAnimationLoop((function(t){ut.isPresenting||yt&&yt(t)})),"undefined"!=typeof window&&vt.setContext(window),this.setAnimationLoop=function(t){yt=t,ut.setAnimationLoop(t),null===t?vt.stop():vt.start()},this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===m)return;at.resetDefaultState(),w=-1,_=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ut.enabled&&!0===ut.isPresenting&&(e=ut.getCamera(e)),!0===t.isScene&&t.onBeforeRender(f,t,e,n||x),d=tt.get(t,p.length),d.init(),p.push(d),z.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),D.setFromProjectionMatrix(z),N=this.localClippingEnabled,B=et.init(this.clippingPlanes,N,e),u=Q.get(t,e),u.init(),xt(t,e,0,f.sortObjects),u.finish(),!0===f.sortObjects&&u.sort(L,P),!0===B&&et.beginShadows();const r=d.state.shadowsArray;dt.render(r,t,e),d.setupLights(),d.setupLightsView(e),!0===B&&et.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),nt.render(u,t,e,i);const s=u.opaque,o=u.transparent;s.length>0&&bt(s,t,e),o.length>0&&bt(o,t,e),!0===t.isScene&&t.onAfterRender(f,t,e),null!==x&&(q.updateRenderTargetMipmap(x),q.updateMultisampleRenderTarget(x)),j.buffers.depth.setTest(!0),j.buffers.depth.setMask(!0),j.buffers.color.setMask(!0),j.setPolygonOffset(!1),p.pop(),d=p.length>0?p[p.length-1]:null,u=null},this.setFramebuffer=function(t){g!==t&&null===x&&ct.bindFramebuffer(36160,t),g=t},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return v},this.getRenderList=function(){return u},this.setRenderList=function(t){u=t},this.getRenderTarget=function(){return x},this.setRenderTarget=function(t,e=0,n=0){x=t,y=e,v=n,t&&void 0===V.get(t).__webglFramebuffer&&q.setupRenderTarget(t);let i=g,r=!1;if(t){const n=V.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=n[e],r=!0):i=t.isWebGLMultisampleRenderTarget?V.get(t).__webglMultisampledFramebuffer:n,M.copy(t.viewport),S.copy(t.scissor),T=t.scissorTest}else M.copy(C).multiplyScalar(R).floor(),S.copy(I).multiplyScalar(R).floor(),T=O;if(b!==i&&(ct.bindFramebuffer(36160,i),b=i),j.viewport(M),j.scissor(S),j.setScissorTest(T),r){const i=V.get(t.texture);ct.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}},this.readRenderTargetPixels=function(t,e,n,i,r,s,o){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=V.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(a=a[o]),a){let o=!1;a!==b&&(ct.bindFramebuffer(36160,a),o=!0);try{const a=t.texture,c=a.format,l=a.type;if(c!==he&&ot.convert(c)!==ct.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const h=l===ie&&(U.has("EXT_color_buffer_half_float")||G.isWebGL2&&U.has("EXT_color_buffer_float"));if(!(l===Zt||ot.convert(l)===ct.getParameter(35738)||l===ne&&(G.isWebGL2||U.has("OES_texture_float")||U.has("WEBGL_color_buffer_float"))||h))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ct.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&ct.readPixels(e,n,i,r,ot.convert(c),ot.convert(l),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{o&&ct.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),s=Math.floor(e.image.height*i),o=ot.convert(e.format);q.setTexture2D(e,0),ct.copyTexImage2D(3553,n,o,t.x,t.y,r,s,0),j.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,s=e.image.height,o=ot.convert(n.format),a=ot.convert(n.type);q.setTexture2D(n,0),ct.pixelStorei(37440,n.flipY),ct.pixelStorei(37441,n.premultiplyAlpha),ct.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?ct.texSubImage2D(3553,i,t.x,t.y,r,s,o,a,e.image.data):e.isCompressedTexture?ct.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,o,e.mipmaps[0].data):ct.texSubImage2D(3553,i,t.x,t.y,o,a,e.image),0===i&&n.generateMipmaps&&ct.generateMipmap(3553),j.unbindTexture()},this.initTexture=function(t){q.setTexture2D(t,0),j.unbindTexture()},this.resetState=function(){j.reset(),at.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function oc(t){sc.call(this,t)}tc.prototype=Object.assign(Object.create(Ws.prototype),{constructor:tc,isArrayCamera:!0}),ec.prototype=Object.assign(Object.create(_r.prototype),{constructor:ec,isGroup:!0}),Object.assign(nc.prototype,{constructor:nc,getHandSpace:function(){return null===this._hand&&(this._hand=new ec,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new ec,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new ec,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,c=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(c&&t.hand){s=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n);if(void 0===c.joints[i.jointName]){const t=new ec;t.matrixAutoUpdate=!1,t.visible=!1,c.joints[i.jointName]=t,c.add(t)}const r=c.joints[i.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const i=c.joints["index-finger-tip"],r=c.joints["thumb-tip"],o=i.position.distanceTo(r.position),a=.02,l=.005;c.inputState.pinching&&o>a+l?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&o<=a-l&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),null!==a&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return null!==o&&(o.visible=null!==i),null!==a&&(a.visible=null!==r),null!==c&&(c.visible=null!==s),this}}),Object.assign(ic.prototype,ci.prototype),oc.prototype=Object.assign(Object.create(sc.prototype),{constructor:oc,isWebGL1Renderer:!0});class ac{constructor(t,e){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new Wr(t),this.density=void 0!==e?e:25e-5}clone(){return new ac(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class cc{constructor(t,e,n){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new Wr(t),this.near=void 0!==e?e:1,this.far=void 0!==n?n:1e3}clone(){return new cc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class lc extends _r{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function hc(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=$n,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ui.generateUUID()}Object.defineProperty(hc.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(hc.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ui.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new hc(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ui.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const uc=new Mi;function dc(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}function pc(t){Yr.call(this),this.type="SpriteMaterial",this.color=new Wr(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}let fc;Object.defineProperties(dc.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(dc.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)uc.x=this.getX(e),uc.y=this.getY(e),uc.z=this.getZ(e),uc.applyMatrix4(t),this.setXYZ(e,uc.x,uc.y,uc.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new $r(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new dc(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),pc.prototype=Object.create(Yr.prototype),pc.prototype.constructor=pc,pc.prototype.isSpriteMaterial=!0,pc.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};const mc=new Mi,gc=new Mi,yc=new Mi,vc=new di,xc=new di,bc=new $i,wc=new Mi,_c=new Mi,Mc=new Mi,Sc=new di,Tc=new di,Ec=new di;function Ac(t){if(_r.call(this),this.type="Sprite",void 0===fc){fc=new vs;const t=new hc(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);fc.setIndex([0,1,2,0,2,3]),fc.setAttribute("position",new dc(t,3,0,!1)),fc.setAttribute("uv",new dc(t,2,3,!1))}this.geometry=fc,this.material=void 0!==t?t:new pc,this.center=new di(.5,.5)}function Rc(t,e,n,i,r,s){vc.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(xc.x=s*vc.x-r*vc.y,xc.y=r*vc.x+s*vc.y):xc.copy(vc),t.copy(e),t.x+=xc.x,t.y+=xc.y,t.applyMatrix4(bc)}Ac.prototype=Object.assign(Object.create(_r.prototype),{constructor:Ac,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),gc.setFromMatrixScale(this.matrixWorld),bc.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),yc.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&gc.multiplyScalar(-yc.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Rc(wc.set(-.5,-.5,0),yc,s,gc,i,r),Rc(_c.set(.5,-.5,0),yc,s,gc,i,r),Rc(Mc.set(.5,.5,0),yc,s,gc,i,r),Sc.set(0,0),Tc.set(1,0),Ec.set(1,1);let o=t.ray.intersectTriangle(wc,_c,Mc,!1,mc);if(null===o&&(Rc(_c.set(-.5,.5,0),yc,s,gc,i,r),Tc.set(0,1),o=t.ray.intersectTriangle(wc,Mc,_c,!1,mc),null===o))return;const a=t.ray.origin.distanceTo(mc);a<t.near||a>t.far||e.push({distance:a,point:mc.clone(),uv:zr.getUV(mc,wc,_c,Mc,Sc,Tc,Ec,new di),face:null,object:this})},copy:function(t){return _r.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}});const Lc=new Mi,Pc=new Mi;function Cc(){_r.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}Cc.prototype=Object.assign(Object.create(_r.prototype),{constructor:Cc,isLOD:!0,copy:function(t){_r.prototype.copy.call(this,t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e=0){e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){Lc.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Lc);this.getObjectForDistance(n).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){Lc.setFromMatrixPosition(t.matrixWorld),Pc.setFromMatrixPosition(this.matrixWorld);const n=Lc.distanceTo(Pc)/t.zoom;let i,r;for(e[0].object.visible=!0,i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(t){const e=_r.prototype.toJSON.call(this,t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.object.levels.push({object:i.object.uuid,distance:i.distance})}return e}});const Ic=new Mi,Oc=new xi,Dc=new xi,Bc=new Mi,Nc=new $i;function zc(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Ns.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new $i,this.bindMatrixInverse=new $i}function kc(){_r.call(this),this.type="Bone"}zc.prototype=Object.assign(Object.create(Ns.prototype),{constructor:zc,isSkinnedMesh:!0,copy:function(t){return Ns.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new xi,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Ns.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,i=this.geometry;Oc.fromBufferAttribute(i.attributes.skinIndex,t),Dc.fromBufferAttribute(i.attributes.skinWeight,t),Ic.fromBufferAttribute(i.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=Dc.getComponent(t);if(0!==i){const r=Oc.getComponent(t);Nc.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(Bc.copy(Ic).applyMatrix4(Nc),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}),kc.prototype=Object.assign(Object.create(_r.prototype),{constructor:kc,isBone:!0});const Fc=new $i,Hc=new $i;function Uc(t=[],e=[]){this.uuid=ui.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(Uc.prototype,{init:function(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new $i)}},calculateInverses:function(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new $i;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,r=t.length;i<r;i++){const r=t[i]?t[i].matrixWorld:Hc;Fc.multiplyMatrices(r,e[i]),Fc.toArray(n,16*i)}null!==i&&(i.needsUpdate=!0)},clone:function(){return new Uc(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}},dispose:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const i=t.bones[n];let r=e[i];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),r=new kc),this.bones.push(r),this.boneInverses.push((new $i).fromArray(t.boneInverses[n]))}return this.init(),this},toJSON:function(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const r=e[i];t.bones.push(r.uuid);const s=n[i];t.boneInverses.push(s.toArray())}return t}});const Gc=new $i,jc=new $i,Wc=[],Vc=new Ns;function qc(t,e,n){Ns.call(this,t,e),this.instanceMatrix=new $r(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}function Yc(t){Yr.call(this),this.type="LineBasicMaterial",this.color=new Wr(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}qc.prototype=Object.assign(Object.create(Ns.prototype),{constructor:qc,isInstancedMesh:!0,copy:function(t){return Ns.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(Vc.geometry=this.geometry,Vc.material=this.material,void 0!==Vc.material)for(let r=0;r<i;r++){this.getMatrixAt(r,Gc),jc.multiplyMatrices(n,Gc),Vc.matrixWorld=jc,Vc.raycast(t,Wc);for(let t=0,n=Wc.length;t<n;t++){const n=Wc[t];n.instanceId=r,n.object=this,e.push(n)}Wc.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new $r(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Yc.prototype=Object.create(Yr.prototype),Yc.prototype.constructor=Yc,Yc.prototype.isLineBasicMaterial=!0,Yc.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const Xc=new Mi,Jc=new Mi,Zc=new $i,$c=new Zi,Kc=new Gi;function Qc(t=new vs,e=new Yc){_r.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}Qc.prototype=Object.assign(Object.create(_r.prototype),{constructor:Qc,isLine:!0,copy:function(t){return _r.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)Xc.fromBufferAttribute(e,t-1),Jc.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Xc.distanceTo(Jc);t.setAttribute("lineDistance",new os(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),Kc.copy(n.boundingSphere),Kc.applyMatrix4(i),Kc.radius+=r,!1===t.ray.intersectsSphere(Kc))return;Zc.copy(i).invert(),$c.copy(t.ray).applyMatrix4(Zc);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new Mi,c=new Mi,l=new Mi,h=new Mi,u=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i){const n=i.array;for(let i=0,s=n.length-1;i<s;i+=u){const s=n[i],u=n[i+1];a.fromBufferAttribute(r,s),c.fromBufferAttribute(r,u);if($c.distanceSqToSegment(a,c,h,l)>o)continue;h.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(h);d<t.near||d>t.far||e.push({distance:d,point:l.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else for(let n=0,i=r.count-1;n<i;n+=u){a.fromBufferAttribute(r,n),c.fromBufferAttribute(r,n+1);if($c.distanceSqToSegment(a,c,h,l)>o)continue;h.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(h);i<t.near||i>t.far||e.push({distance:i,point:l.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const tl=new Mi,el=new Mi;function nl(t,e){Qc.call(this,t,e),this.type="LineSegments"}function il(t,e){Qc.call(this,t,e),this.type="LineLoop"}function rl(t){Yr.call(this),this.type="PointsMaterial",this.color=new Wr(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}nl.prototype=Object.assign(Object.create(Qc.prototype),{constructor:nl,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)tl.fromBufferAttribute(e,t),el.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+tl.distanceTo(el);t.setAttribute("lineDistance",new os(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}),il.prototype=Object.assign(Object.create(Qc.prototype),{constructor:il,isLineLoop:!0}),rl.prototype=Object.create(Yr.prototype),rl.prototype.constructor=rl,rl.prototype.isPointsMaterial=!0,rl.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const sl=new $i,ol=new Zi,al=new Gi,cl=new Mi;function ll(t=new vs,e=new rl){_r.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function hl(t,e,n,i,r,s,o){const a=ol.distanceSqToPoint(t);if(a<n){const n=new Mi;ol.closestPointToPoint(t,n),n.applyMatrix4(i);const c=r.ray.origin.distanceTo(n);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:n,index:e,face:null,object:o})}}function ul(t,e,n,i,r,s,o,a,c){yi.call(this,t,e,n,i,r,s,o,a,c),this.format=void 0!==o?o:le,this.minFilter=void 0!==s?s:Vt,this.magFilter=void 0!==r?r:Vt,this.generateMipmaps=!1;const l=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){l.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}function dl(t,e,n,i,r,s,o,a,c,l,h,u){yi.call(this,null,s,o,a,c,l,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function pl(t,e,n,i,r,s,o,a,c){yi.call(this,t,e,n,i,r,s,o,a,c),this.needsUpdate=!0}function fl(t,e,n,i,r,s,o,a,c,l){if((l=void 0!==l?l:fe)!==fe&&l!==me)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===fe&&(n=Qt),void 0===n&&l===me&&(n=ae),yi.call(this,null,i,r,s,o,a,l,n,c),this.image={width:t,height:e},this.magFilter=void 0!==o?o:Ht,this.minFilter=void 0!==a?a:Ht,this.flipY=!1,this.generateMipmaps=!1}ll.prototype=Object.assign(Object.create(_r.prototype),{constructor:ll,isPoints:!0,copy:function(t){return _r.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),al.copy(n.boundingSphere),al.applyMatrix4(i),al.radius+=r,!1===t.ray.intersectsSphere(al))return;sl.copy(i).invert(),ol.copy(t.ray).applyMatrix4(sl);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position;if(null!==r){const n=r.array;for(let r=0,a=n.length;r<a;r++){const a=n[r];cl.fromBufferAttribute(s,a),hl(cl,a,o,i,t,e,this)}}else for(let n=0,r=s.count;n<r;n++)cl.fromBufferAttribute(s,n),hl(cl,n,o,i,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),ul.prototype=Object.assign(Object.create(yi.prototype),{constructor:ul,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),dl.prototype=Object.create(yi.prototype),dl.prototype.constructor=dl,dl.prototype.isCompressedTexture=!0,pl.prototype=Object.create(yi.prototype),pl.prototype.constructor=pl,pl.prototype.isCanvasTexture=!0,fl.prototype=Object.create(yi.prototype),fl.prototype.constructor=fl,fl.prototype.isDepthTexture=!0;class ml extends vs{constructor(t=1,e=8,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],s=[],o=[],a=[],c=new Mi,l=new di;s.push(0,0,0),o.push(0,0,1),a.push(.5,.5);for(let r=0,h=3;r<=e;r++,h+=3){const u=n+r/e*i;c.x=t*Math.cos(u),c.y=t*Math.sin(u),s.push(c.x,c.y,c.z),o.push(0,0,1),l.x=(s[h]/t+1)/2,l.y=(s[h+1]/t+1)/2,a.push(l.x,l.y)}for(let t=1;t<=e;t++)r.push(t,t+1,0);this.setIndex(r),this.setAttribute("position",new os(s,3)),this.setAttribute("normal",new os(o,3)),this.setAttribute("uv",new os(a,2))}}class gl extends vs{constructor(t=1,e=1,n=1,i=8,r=1,s=!1,o=0,a=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a};const c=this;i=Math.floor(i),r=Math.floor(r);const l=[],h=[],u=[],d=[];let p=0;const f=[],m=n/2;let g=0;function y(n){const r=p,s=new di,f=new Mi;let y=0;const v=!0===n?t:e,x=!0===n?1:-1;for(let t=1;t<=i;t++)h.push(0,m*x,0),u.push(0,x,0),d.push(.5,.5),p++;const b=p;for(let t=0;t<=i;t++){const e=t/i*a+o,n=Math.cos(e),r=Math.sin(e);f.x=v*r,f.y=m*x,f.z=v*n,h.push(f.x,f.y,f.z),u.push(0,x,0),s.x=.5*n+.5,s.y=.5*r*x+.5,d.push(s.x,s.y),p++}for(let t=0;t<i;t++){const e=r+t,i=b+t;!0===n?l.push(i,i+1,e):l.push(i+1,i,e),y+=3}c.addGroup(g,y,!0===n?1:2),g+=y}!function(){const s=new Mi,y=new Mi;let v=0;const x=(e-t)/n;for(let c=0;c<=r;c++){const l=[],g=c/r,v=g*(e-t)+t;for(let t=0;t<=i;t++){const e=t/i,r=e*a+o,c=Math.sin(r),f=Math.cos(r);y.x=v*c,y.y=-g*n+m,y.z=v*f,h.push(y.x,y.y,y.z),s.set(c,x,f).normalize(),u.push(s.x,s.y,s.z),d.push(e,1-g),l.push(p++)}f.push(l)}for(let t=0;t<i;t++)for(let e=0;e<r;e++){const n=f[e][t],i=f[e+1][t],r=f[e+1][t+1],s=f[e][t+1];l.push(n,i,s),l.push(i,r,s),v+=6}c.addGroup(g,v,0),g+=v}(),!1===s&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(l),this.setAttribute("position",new os(h,3)),this.setAttribute("normal",new os(u,3)),this.setAttribute("uv",new os(d,2))}}class yl extends gl{constructor(t=1,e=1,n=8,i=1,r=!1,s=0,o=2*Math.PI){super(0,t,e,n,i,r,s,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:o}}}class vl extends vs{constructor(t,e,n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const r=[],s=[];function o(t,e,n,i){const r=i+1,s=[];for(let i=0;i<=r;i++){s[i]=[];const o=t.clone().lerp(n,i/r),a=e.clone().lerp(n,i/r),c=r-i;for(let t=0;t<=c;t++)s[i][t]=0===t&&i===r?o:o.clone().lerp(a,t/c)}for(let t=0;t<r;t++)for(let e=0;e<2*(r-t)-1;e++){const n=Math.floor(e/2);e%2==0?(a(s[t][n+1]),a(s[t+1][n]),a(s[t][n])):(a(s[t][n+1]),a(s[t+1][n+1]),a(s[t+1][n]))}}function a(t){r.push(t.x,t.y,t.z)}function c(e,n){const i=3*e;n.x=t[i+0],n.y=t[i+1],n.z=t[i+2]}function l(t,e,n,i){i<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=i/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new Mi,i=new Mi,r=new Mi;for(let s=0;s<e.length;s+=3)c(e[s+0],n),c(e[s+1],i),c(e[s+2],r),o(n,i,r,t)}(i),function(t){const e=new Mi;for(let n=0;n<r.length;n+=3)e.x=r[n+0],e.y=r[n+1],e.z=r[n+2],e.normalize().multiplyScalar(t),r[n+0]=e.x,r[n+1]=e.y,r[n+2]=e.z}(n),function(){const t=new Mi;for(let n=0;n<r.length;n+=3){t.x=r[n+0],t.y=r[n+1],t.z=r[n+2];const i=h(t)/2/Math.PI+.5,o=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);s.push(i,1-o)}var e;(function(){const t=new Mi,e=new Mi,n=new Mi,i=new Mi,o=new di,a=new di,c=new di;for(let u=0,d=0;u<r.length;u+=9,d+=6){t.set(r[u+0],r[u+1],r[u+2]),e.set(r[u+3],r[u+4],r[u+5]),n.set(r[u+6],r[u+7],r[u+8]),o.set(s[d+0],s[d+1]),a.set(s[d+2],s[d+3]),c.set(s[d+4],s[d+5]),i.copy(t).add(e).add(n).divideScalar(3);const p=h(i);l(o,d+0,t,p),l(a,d+2,e,p),l(c,d+4,n,p)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],i=s[t+4],r=Math.max(e,n,i),o=Math.min(e,n,i);r>.9&&o<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),i<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new os(r,3)),this.setAttribute("normal",new os(r.slice(),3)),this.setAttribute("uv",new os(s,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}}class xl extends vl{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}}const bl=new Mi,wl=new Mi,_l=new Mi,Ml=new zr;class Sl extends vs{constructor(t,e){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1,!0===t.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const n=Math.pow(10,4),i=Math.cos(ui.DEG2RAD*e),r=t.getIndex(),s=t.getAttribute("position"),o=r?r.count:s.count,a=[0,0,0],c=["a","b","c"],l=new Array(3),h={},u=[];for(let t=0;t<o;t+=3){r?(a[0]=r.getX(t),a[1]=r.getX(t+1),a[2]=r.getX(t+2)):(a[0]=t,a[1]=t+1,a[2]=t+2);const{a:e,b:o,c:d}=Ml;if(e.fromBufferAttribute(s,a[0]),o.fromBufferAttribute(s,a[1]),d.fromBufferAttribute(s,a[2]),Ml.getNormal(_l),l[0]=`${Math.round(e.x*n)},${Math.round(e.y*n)},${Math.round(e.z*n)}`,l[1]=`${Math.round(o.x*n)},${Math.round(o.y*n)},${Math.round(o.z*n)}`,l[2]=`${Math.round(d.x*n)},${Math.round(d.y*n)},${Math.round(d.z*n)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=l[t],r=l[e],s=Ml[c[t]],o=Ml[c[e]],d=`${n}_${r}`,p=`${r}_${n}`;p in h&&h[p]?(_l.dot(h[p].normal)<=i&&(u.push(s.x,s.y,s.z),u.push(o.x,o.y,o.z)),h[p]=null):d in h||(h[d]={index0:a[t],index1:a[e],normal:_l.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:n}=h[t];bl.fromBufferAttribute(s,e),wl.fromBufferAttribute(s,n),u.push(bl.x,bl.y,bl.z),u.push(wl.x,wl.y,wl.z)}this.setAttribute("position",new os(u,3))}}const Tl=function(t,e,n){n=n||2;const i=e&&e.length,r=i?e[0]*n:t.length;let s=El(t,0,r,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,l,h,u,d,p;if(i&&(s=function(t,e,n,i){const r=[];let s,o,a,c,l;for(s=0,o=e.length;s<o;s++)a=e[s]*i,c=s<o-1?e[s+1]*i:t.length,l=El(t,a,c,i,!1),l===l.next&&(l.steiner=!0),r.push(zl(l));for(r.sort(Ol),s=0;s<r.length;s++)Dl(r[s],n),n=Al(n,n.next);return n}(t,e,s,n)),t.length>80*n){a=l=t[0],c=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<a&&(a=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);p=Math.max(l-a,h-c),p=0!==p?1/p:0}return Rl(s,o,n,a,c,p),o};function El(t,e,n,i,r){let s,o;if(r===function(t,e,n,i){let r=0;for(let s=e,o=n-i;s<n;s+=i)r+=(t[o]-t[s])*(t[s+1]+t[o+1]),o=s;return r}(t,e,n,i)>0)for(s=e;s<n;s+=i)o=Yl(s,t[s],t[s+1],o);else for(s=n-i;s>=e;s-=i)o=Yl(s,t[s],t[s+1],o);return o&&Ul(o,o.next)&&(Xl(o),o=o.next),o}function Al(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!Ul(i,i.next)&&0!==Hl(i.prev,i,i.next))i=i.next;else{if(Xl(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Rl(t,e,n,i,r,s,o){if(!t)return;!o&&s&&function(t,e,n,i){let r=t;do{null===r.z&&(r.z=Nl(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,s,o,a,c,l=1;do{for(n=t,t=null,s=null,o=0;n;){for(o++,i=n,a=0,e=0;e<l&&(a++,i=i.nextZ,i);e++);for(c=l;a>0||c>0&&i;)0!==a&&(0===c||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,c--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,l*=2}while(o>1)}(r)}(t,i,r,s);let a,c,l=t;for(;t.prev!==t.next;)if(a=t.prev,c=t.next,s?Pl(t,i,r,s):Ll(t))e.push(a.i/n),e.push(t.i/n),e.push(c.i/n),Xl(t),t=c.next,l=c.next;else if((t=c)===l){o?1===o?Rl(t=Cl(Al(t),e,n),e,n,i,r,s,2):2===o&&Il(t,e,n,i,r,s):Rl(Al(t),e,n,i,r,s,1);break}}function Ll(t){const e=t.prev,n=t,i=t.next;if(Hl(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(kl(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Hl(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Pl(t,e,n,i){const r=t.prev,s=t,o=t.next;if(Hl(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,c=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,l=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=Nl(a,c,e,n,i),d=Nl(l,h,e,n,i);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&kl(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Hl(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&kl(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&Hl(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&kl(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Hl(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&kl(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&Hl(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function Cl(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!Ul(r,s)&&Gl(r,i,i.next,s)&&Vl(r,s)&&Vl(s,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(s.i/n),Xl(i),Xl(i.next),i=t=s),i=i.next}while(i!==t);return Al(i)}function Il(t,e,n,i,r,s){let o=t;do{let t=o.next.next;for(;t!==o.prev;){if(o.i!==t.i&&Fl(o,t)){let a=ql(o,t);return o=Al(o,o.next),a=Al(a,a.next),Rl(o,e,n,i,r,s),void Rl(a,e,n,i,r,s)}t=t.next}o=o.next}while(o!==t)}function Ol(t,e){return t.x-e.x}function Dl(t,e){if(e=function(t,e){let n=e;const i=t.x,r=t.y;let s,o=-1/0;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>o){if(o=t,t===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(i===o)return s;const a=s,c=s.x,l=s.y;let h,u=1/0;n=s;do{i>=n.x&&n.x>=c&&i!==n.x&&kl(r<l?i:o,r,c,l,r<l?o:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),Vl(n,t)&&(h<u||h===u&&(n.x>s.x||n.x===s.x&&Bl(s,n)))&&(s=n,u=h)),n=n.next}while(n!==a);return s}(t,e)){const n=ql(e,t);Al(e,e.next),Al(n,n.next)}}function Bl(t,e){return Hl(t.prev,t,e.prev)<0&&Hl(e.next,t,t.next)<0}function Nl(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function zl(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function kl(t,e,n,i,r,s,o,a){return(r-o)*(e-a)-(t-o)*(s-a)>=0&&(t-o)*(i-a)-(n-o)*(e-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function Fl(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Gl(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Vl(t,e)&&Vl(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(Hl(t.prev,t,e.prev)||Hl(t,e.prev,e))||Ul(t,e)&&Hl(t.prev,t,t.next)>0&&Hl(e.prev,e,e.next)>0)}function Hl(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Ul(t,e){return t.x===e.x&&t.y===e.y}function Gl(t,e,n,i){const r=Wl(Hl(t,e,n)),s=Wl(Hl(t,e,i)),o=Wl(Hl(n,i,t)),a=Wl(Hl(n,i,e));return r!==s&&o!==a||(!(0!==r||!jl(t,n,e))||(!(0!==s||!jl(t,i,e))||(!(0!==o||!jl(n,t,i))||!(0!==a||!jl(n,e,i)))))}function jl(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Wl(t){return t>0?1:t<0?-1:0}function Vl(t,e){return Hl(t.prev,t,t.next)<0?Hl(t,e,t.next)>=0&&Hl(t,t.prev,e)>=0:Hl(t,e,t.prev)<0||Hl(t,t.next,e)<0}function ql(t,e){const n=new Jl(t.i,t.x,t.y),i=new Jl(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function Yl(t,e,n,i){const r=new Jl(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Xl(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Jl(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const Zl={area:function(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n},isClockWise:function(t){return Zl.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];$l(t),Kl(n,t);let s=t.length;e.forEach($l);for(let t=0;t<e.length;t++)i.push(s),s+=e[t].length,Kl(n,e[t]);const o=Tl(n,i);for(let t=0;t<o.length;t+=3)r.push(o.slice(t,t+3));return r}};function $l(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Kl(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Ql extends vs{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let e=0,n=t.length;e<n;e++){s(t[e])}function s(t){const s=[],o=void 0!==e.curveSegments?e.curveSegments:12,a=void 0!==e.steps?e.steps:1;let c=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:h-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:th;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);let g,y,v,x,b,w=!1;f&&(g=f.getSpacedPoints(a),w=!0,l=!1,y=f.computeFrenetFrames(a,!1),v=new Mi,x=new Mi,b=new Mi),l||(p=0,h=0,u=0,d=0);const _=t.extractPoints(o);let M=_.shape;const S=_.holes;if(!Zl.isClockWise(M)){M=M.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];Zl.isClockWise(e)&&(S[t]=e.reverse())}}const T=Zl.triangulateShape(M,S),E=M;for(let t=0,e=S.length;t<e;t++){const e=S[t];M=M.concat(e)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const R=M.length,L=T.length;function P(t,e,n){let i,r,s;const o=t.x-e.x,a=t.y-e.y,c=n.x-t.x,l=n.y-t.y,h=o*o+a*a,u=o*l-a*c;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(c*c+l*l),p=e.x-a/u,f=e.y+o/u,m=((n.x-l/d-p)*l-(n.y+c/d-f)*c)/(o*l-a*c);i=p+o*m-t.x,r=f+a*m-t.y;const g=i*i+r*r;if(g<=2)return new di(i,r);s=Math.sqrt(g/2)}else{let t=!1;o>Number.EPSILON?c>Number.EPSILON&&(t=!0):o<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(l)&&(t=!0),t?(i=-a,r=o,s=Math.sqrt(h)):(i=o,r=a,s=Math.sqrt(h/2))}return new di(i/s,r/s)}const C=[];for(let t=0,e=E.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),C[t]=P(E[t],E[n],E[i]);const I=[];let O,D=C.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];O=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),O[t]=P(e[t],e[i],e[r]);I.push(O),D=D.concat(O)}for(let t=0;t<p;t++){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],C[t],i);z(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];O=I[t];for(let t=0,r=e.length;t<r;t++){const r=A(e[t],O[t],i);z(r.x,r.y,-n)}}}const B=u+d;for(let t=0;t<R;t++){const e=l?A(M[t],D[t],B):M[t];w?(x.copy(y.normals[0]).multiplyScalar(e.x),v.copy(y.binormals[0]).multiplyScalar(e.y),b.copy(g[0]).add(x).add(v),z(b.x,b.y,b.z)):z(e.x,e.y,0)}for(let t=1;t<=a;t++)for(let e=0;e<R;e++){const n=l?A(M[e],D[e],B):M[e];w?(x.copy(y.normals[t]).multiplyScalar(n.x),v.copy(y.binormals[t]).multiplyScalar(n.y),b.copy(g[t]).add(x).add(v),z(b.x,b.y,b.z)):z(n.x,n.y,c/a*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],C[t],i);z(e.x,e.y,c+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];O=I[t];for(let t=0,r=e.length;t<r;t++){const r=A(e[t],O[t],i);w?z(r.x,r.y+g[a-1].y,g[a-1].x+n):z(r.x,r.y,c+n)}}}function N(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=a+2*p;t<n;t++){const n=R*t,s=R*(t+1);F(e+i+n,e+r+n,e+r+s,e+i+s)}}}function z(t,e,n){s.push(t),s.push(e),s.push(n)}function k(t,e,r){H(t),H(e),H(r);const s=i.length/3,o=m.generateTopUV(n,i,s-3,s-2,s-1);U(o[0]),U(o[1]),U(o[2])}function F(t,e,r,s){H(t),H(e),H(s),H(e),H(r),H(s);const o=i.length/3,a=m.generateSideWallUV(n,i,o-6,o-3,o-2,o-1);U(a[0]),U(a[1]),U(a[3]),U(a[1]),U(a[2]),U(a[3])}function H(t){i.push(s[3*t+0]),i.push(s[3*t+1]),i.push(s[3*t+2])}function U(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(l){let t=0,e=R*t;for(let t=0;t<L;t++){const n=T[t];k(n[2]+e,n[1]+e,n[0]+e)}t=a+2*p,e=R*t;for(let t=0;t<L;t++){const n=T[t];k(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<L;t++){const e=T[t];k(e[2],e[1],e[0])}for(let t=0;t<L;t++){const e=T[t];k(e[0]+R*a,e[1]+R*a,e[2]+R*a)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;N(E,e),e+=E.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];N(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new os(i,3)),this.setAttribute("uv",new os(r,2)),this.computeVertexNormals()}toJSON(){const t=vs.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}}const th={generateTopUV:function(t,e,n,i,r){const s=e[3*n],o=e[3*n+1],a=e[3*i],c=e[3*i+1],l=e[3*r],h=e[3*r+1];return[new di(s,o),new di(a,c),new di(l,h)]},generateSideWallUV:function(t,e,n,i,r,s){const o=e[3*n],a=e[3*n+1],c=e[3*n+2],l=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*s],g=e[3*s+1],y=e[3*s+2];return Math.abs(a-h)<.01?[new di(o,1-c),new di(l,1-u),new di(d,1-f),new di(m,1-y)]:[new di(a,1-c),new di(h,1-u),new di(p,1-f),new di(g,1-y)]}};class eh extends vl{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}}class nh extends vs{constructor(t,e=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=ui.clamp(i,0,2*Math.PI);const r=[],s=[],o=[],a=1/e,c=new Mi,l=new di;for(let r=0;r<=e;r++){const h=n+r*a*i,u=Math.sin(h),d=Math.cos(h);for(let n=0;n<=t.length-1;n++)c.x=t[n].x*u,c.y=t[n].y,c.z=t[n].x*d,s.push(c.x,c.y,c.z),l.x=r/e,l.y=n/(t.length-1),o.push(l.x,l.y)}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const i=e+n*t.length,s=i,o=i+t.length,a=i+t.length+1,c=i+1;r.push(s,o,c),r.push(o,a,c)}if(this.setIndex(r),this.setAttribute("position",new os(s,3)),this.setAttribute("uv",new os(o,2)),this.computeVertexNormals(),i===2*Math.PI){const n=this.attributes.normal.array,i=new Mi,r=new Mi,s=new Mi,o=e*t.length*3;for(let e=0,a=0;e<t.length;e++,a+=3)i.x=n[a+0],i.y=n[a+1],i.z=n[a+2],r.x=n[o+a+0],r.y=n[o+a+1],r.z=n[o+a+2],s.addVectors(i,r).normalize(),n[a+0]=n[o+a+0]=s.x,n[a+1]=n[o+a+1]=s.y,n[a+2]=n[o+a+2]=s.z}}}class ih extends vl{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}}function rh(t,e,n){vs.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],r=[],s=[],o=[],a=1e-5,c=new Mi,l=new Mi,h=new Mi,u=new Mi,d=new Mi;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=e+1;for(let i=0;i<=n;i++){const p=i/n;for(let n=0;n<=e;n++){const i=n/e;t(i,p,l),r.push(l.x,l.y,l.z),i-a>=0?(t(i-a,p,h),u.subVectors(l,h)):(t(i+a,p,h),u.subVectors(h,l)),p-a>=0?(t(i,p-a,h),d.subVectors(l,h)):(t(i,p+a,h),d.subVectors(h,l)),c.crossVectors(u,d).normalize(),s.push(c.x,c.y,c.z),o.push(i,p)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*p+n,r=t*p+n+1,s=(t+1)*p+n+1,o=(t+1)*p+n;i.push(e,r,o),i.push(r,s,o)}this.setIndex(i),this.setAttribute("position",new os(r,3)),this.setAttribute("normal",new os(s,3)),this.setAttribute("uv",new os(o,2))}rh.prototype=Object.create(vs.prototype),rh.prototype.constructor=rh;class sh extends vs{constructor(t=.5,e=1,n=8,i=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},n=Math.max(3,n);const o=[],a=[],c=[],l=[];let h=t;const u=(e-t)/(i=Math.max(1,i)),d=new Mi,p=new di;for(let t=0;t<=i;t++){for(let t=0;t<=n;t++){const i=r+t/n*s;d.x=h*Math.cos(i),d.y=h*Math.sin(i),a.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,l.push(p.x,p.y)}h+=u}for(let t=0;t<i;t++){const e=t*(n+1);for(let t=0;t<n;t++){const i=t+e,r=i,s=i+n+1,a=i+n+2,c=i+1;o.push(r,s,c),o.push(s,a,c)}}this.setIndex(o),this.setAttribute("position",new os(a,3)),this.setAttribute("normal",new os(c,3)),this.setAttribute("uv",new os(l,2))}}class oh extends vs{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],s=[];let o=0,a=0;if(!1===Array.isArray(t))c(t);else for(let e=0;e<t.length;e++)c(t[e]),this.addGroup(o,a,e),o+=a,a=0;function c(t){const o=i.length/3,c=t.extractPoints(e);let l=c.shape;const h=c.holes;!1===Zl.isClockWise(l)&&(l=l.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===Zl.isClockWise(e)&&(h[t]=e.reverse())}const u=Zl.triangulateShape(l,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];i.push(e.x,e.y,0),r.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],i=e[0]+o,r=e[1]+o,s=e[2]+o;n.push(i,r,s),a+=3}}this.setIndex(n),this.setAttribute("position",new os(i,3)),this.setAttribute("normal",new os(r,3)),this.setAttribute("uv",new os(s,2))}toJSON(){const t=vs.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class ah extends vs{constructor(t=1,e=8,n=6,i=0,r=2*Math.PI,s=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:o},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const a=Math.min(s+o,Math.PI);let c=0;const l=[],h=new Mi,u=new Mi,d=[],p=[],f=[],m=[];for(let d=0;d<=n;d++){const g=[],y=d/n;let v=0;0==d&&0==s?v=.5/e:d==n&&a==Math.PI&&(v=-.5/e);for(let n=0;n<=e;n++){const a=n/e;h.x=-t*Math.cos(i+a*r)*Math.sin(s+y*o),h.y=t*Math.cos(s+y*o),h.z=t*Math.sin(i+a*r)*Math.sin(s+y*o),p.push(h.x,h.y,h.z),u.copy(h).normalize(),f.push(u.x,u.y,u.z),m.push(a+v,1-y),g.push(c++)}l.push(g)}for(let t=0;t<n;t++)for(let i=0;i<e;i++){const e=l[t][i+1],r=l[t][i],o=l[t+1][i],c=l[t+1][i+1];(0!==t||s>0)&&d.push(e,r,c),(t!==n-1||a<Math.PI)&&d.push(r,o,c)}this.setIndex(d),this.setAttribute("position",new os(p,3)),this.setAttribute("normal",new os(f,3)),this.setAttribute("uv",new os(m,2))}}class ch extends vl{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}}class lh extends Ql{constructor(t,e={}){const n=e.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new vs;const i=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(i,e),this.type="TextGeometry"}}class hh extends vs{constructor(t=1,e=.4,n=8,i=6,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const s=[],o=[],a=[],c=[],l=new Mi,h=new Mi,u=new Mi;for(let s=0;s<=n;s++)for(let d=0;d<=i;d++){const p=d/i*r,f=s/n*Math.PI*2;h.x=(t+e*Math.cos(f))*Math.cos(p),h.y=(t+e*Math.cos(f))*Math.sin(p),h.z=e*Math.sin(f),o.push(h.x,h.y,h.z),l.x=t*Math.cos(p),l.y=t*Math.sin(p),u.subVectors(h,l).normalize(),a.push(u.x,u.y,u.z),c.push(d/i),c.push(s/n)}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*t+e-1,r=(i+1)*(t-1)+e-1,o=(i+1)*(t-1)+e,a=(i+1)*t+e;s.push(n,r,a),s.push(r,o,a)}this.setIndex(s),this.setAttribute("position",new os(o,3)),this.setAttribute("normal",new os(a,3)),this.setAttribute("uv",new os(c,2))}}class uh extends vs{constructor(t=1,e=.4,n=64,i=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],c=[],l=[],h=new Mi,u=new Mi,d=new Mi,p=new Mi,f=new Mi,m=new Mi,g=new Mi;for(let o=0;o<=n;++o){const v=o/n*r*Math.PI*2;y(v,r,s,t,d),y(v+.01,r,s,t,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let t=0;t<=i;++t){const r=t/i*Math.PI*2,s=-e*Math.cos(r),p=e*Math.sin(r);h.x=d.x+(s*g.x+p*f.x),h.y=d.y+(s*g.y+p*f.y),h.z=d.z+(s*g.z+p*f.z),a.push(h.x,h.y,h.z),u.subVectors(h,d).normalize(),c.push(u.x,u.y,u.z),l.push(o/n),l.push(t/i)}}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),s=(i+1)*t+e,a=(i+1)*(t-1)+e;o.push(n,r,a),o.push(r,s,a)}function y(t,e,n,i,r){const s=Math.cos(t),o=Math.sin(t),a=n/e*t,c=Math.cos(a);r.x=i*(2+c)*.5*s,r.y=i*(2+c)*o*.5,r.z=i*Math.sin(a)*.5}this.setIndex(o),this.setAttribute("position",new os(a,3)),this.setAttribute("normal",new os(c,3)),this.setAttribute("uv",new os(l,2))}}class dh extends vs{constructor(t,e=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r};const s=t.computeFrenetFrames(e,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const o=new Mi,a=new Mi,c=new di;let l=new Mi;const h=[],u=[],d=[],p=[];function f(r){l=t.getPointAt(r/e,l);const c=s.normals[r],d=s.binormals[r];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,r=Math.sin(e),s=-Math.cos(e);a.x=s*c.x+r*d.x,a.y=s*c.y+r*d.y,a.z=s*c.z+r*d.z,a.normalize(),u.push(a.x,a.y,a.z),o.x=l.x+n*a.x,o.y=l.y+n*a.y,o.z=l.z+n*a.z,h.push(o.x,o.y,o.z)}}!function(){for(let t=0;t<e;t++)f(t);f(!1===r?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)c.x=t/e,c.y=n/i,d.push(c.x,c.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),s=(i+1)*t+e,o=(i+1)*(t-1)+e;p.push(n,r,o),p.push(r,s,o)}}()}(),this.setIndex(p),this.setAttribute("position",new os(h,3)),this.setAttribute("normal",new os(u,3)),this.setAttribute("uv",new os(d,2))}toJSON(){const t=vs.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}class ph extends vs{constructor(t){if(super(),this.type="WireframeGeometry",!0===t.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const e=[],n=[0,0],i={},r=new Mi;if(null!==t.index){const s=t.attributes.position,o=t.index;let a=t.groups;0===a.length&&(a=[{start:0,count:o.count,materialIndex:0}]);for(let t=0,e=a.length;t<e;++t){const e=a[t],r=e.start;for(let t=r,s=r+e.count;t<s;t+=3)for(let e=0;e<3;e++){const r=o.getX(t+e),s=o.getX(t+(e+1)%3);n[0]=Math.min(r,s),n[1]=Math.max(r,s);const a=n[0]+","+n[1];void 0===i[a]&&(i[a]={index1:n[0],index2:n[1]})}}for(const t in i){const n=i[t];r.fromBufferAttribute(s,n.index1),e.push(r.x,r.y,r.z),r.fromBufferAttribute(s,n.index2),e.push(r.x,r.y,r.z)}}else{const n=t.attributes.position;for(let t=0,i=n.count/3;t<i;t++)for(let i=0;i<3;i++){const s=3*t+i;r.fromBufferAttribute(n,s),e.push(r.x,r.y,r.z);const o=3*t+(i+1)%3;r.fromBufferAttribute(n,o),e.push(r.x,r.y,r.z)}}this.setAttribute("position",new os(e,3))}}var fh=Object.freeze({__proto__:null,BoxGeometry:ks,BoxBufferGeometry:ks,CircleGeometry:ml,CircleBufferGeometry:ml,ConeGeometry:yl,ConeBufferGeometry:yl,CylinderGeometry:gl,CylinderBufferGeometry:gl,DodecahedronGeometry:xl,DodecahedronBufferGeometry:xl,EdgesGeometry:Sl,ExtrudeGeometry:Ql,ExtrudeBufferGeometry:Ql,IcosahedronGeometry:eh,IcosahedronBufferGeometry:eh,LatheGeometry:nh,LatheBufferGeometry:nh,OctahedronGeometry:ih,OctahedronBufferGeometry:ih,ParametricGeometry:rh,ParametricBufferGeometry:rh,PlaneGeometry:to,PlaneBufferGeometry:to,PolyhedronGeometry:vl,PolyhedronBufferGeometry:vl,RingGeometry:sh,RingBufferGeometry:sh,ShapeGeometry:oh,ShapeBufferGeometry:oh,SphereGeometry:ah,SphereBufferGeometry:ah,TetrahedronGeometry:ch,TetrahedronBufferGeometry:ch,TextGeometry:lh,TextBufferGeometry:lh,TorusGeometry:hh,TorusBufferGeometry:hh,TorusKnotGeometry:uh,TorusKnotBufferGeometry:uh,TubeGeometry:dh,TubeBufferGeometry:dh,WireframeGeometry:ph});function mh(t){Yr.call(this),this.type="ShadowMaterial",this.color=new Wr(0),this.transparent=!0,this.setValues(t)}function gh(t){Gs.call(this,t),this.type="RawShaderMaterial"}function yh(t){Yr.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Wr(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=On,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}function vh(t){yh.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new di(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=ui.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}function xh(t){Yr.call(this),this.type="MeshPhongMaterial",this.color=new Wr(16777215),this.specular=new Wr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=On,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=wt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function bh(t){Yr.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Wr(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=On,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function wh(t){Yr.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=On,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function _h(t){Yr.call(this),this.type="MeshLambertMaterial",this.color=new Wr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=wt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Mh(t){Yr.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Wr(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=On,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Sh(t){Yc.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}mh.prototype=Object.create(Yr.prototype),mh.prototype.constructor=mh,mh.prototype.isShadowMaterial=!0,mh.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.color.copy(t.color),this},gh.prototype=Object.create(Gs.prototype),gh.prototype.constructor=gh,gh.prototype.isRawShaderMaterial=!0,yh.prototype=Object.create(Yr.prototype),yh.prototype.constructor=yh,yh.prototype.isMeshStandardMaterial=!0,yh.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this},vh.prototype=Object.create(yh.prototype),vh.prototype.constructor=vh,vh.prototype.isMeshPhysicalMaterial=!0,vh.prototype.copy=function(t){return yh.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Wr).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this},xh.prototype=Object.create(Yr.prototype),xh.prototype.constructor=xh,xh.prototype.isMeshPhongMaterial=!0,xh.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},bh.prototype=Object.create(Yr.prototype),bh.prototype.constructor=bh,bh.prototype.isMeshToonMaterial=!0,bh.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},wh.prototype=Object.create(Yr.prototype),wh.prototype.constructor=wh,wh.prototype.isMeshNormalMaterial=!0,wh.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},_h.prototype=Object.create(Yr.prototype),_h.prototype.constructor=_h,_h.prototype.isMeshLambertMaterial=!0,_h.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Mh.prototype=Object.create(Yr.prototype),Mh.prototype.constructor=Mh,Mh.prototype.isMeshMatcapMaterial=!0,Mh.prototype.copy=function(t){return Yr.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Sh.prototype=Object.create(Yc.prototype),Sh.prototype.constructor=Sh,Sh.prototype.isLineDashedMaterial=!0,Sh.prototype.copy=function(t){return Yc.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Th=Object.freeze({__proto__:null,ShadowMaterial:mh,SpriteMaterial:pc,RawShaderMaterial:gh,ShaderMaterial:Gs,PointsMaterial:rl,MeshPhysicalMaterial:vh,MeshStandardMaterial:yh,MeshPhongMaterial:xh,MeshToonMaterial:bh,MeshNormalMaterial:wh,MeshLambertMaterial:_h,MeshDepthMaterial:Xa,MeshDistanceMaterial:Ja,MeshBasicMaterial:Xr,MeshMatcapMaterial:Mh,LineDashedMaterial:Sh,LineBasicMaterial:Yc,Material:Yr});const Eh={arraySlice:function(t,e,n){return Eh.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,o=0;o!==i;++s){const i=n[s]*e;for(let n=0;n!==e;++n)r[o++]=t[i+n]}return r},flattenJSON:function(t,e,n,i){let r=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[r++];if(void 0===s)return;let o=s[i];if(void 0!==o)if(Array.isArray(o))do{o=s[i],void 0!==o&&(e.push(s.time),n.push.apply(n,o)),s=t[r++]}while(void 0!==s);else if(void 0!==o.toArray)do{o=s[i],void 0!==o&&(e.push(s.time),o.toArray(n,n.length)),s=t[r++]}while(void 0!==s);else do{o=s[i],void 0!==o&&(e.push(s.time),n.push(o)),s=t[r++]}while(void 0!==s)},subclip:function(t,e,n,i,r=30){const s=t.clone();s.name=e;const o=[];for(let t=0;t<s.tracks.length;++t){const e=s.tracks[t],a=e.getValueSize(),c=[],l=[];for(let t=0;t<e.times.length;++t){const s=e.times[t]*r;if(!(s<n||s>=i)){c.push(e.times[t]);for(let n=0;n<a;++n)l.push(e.values[t*a+n])}}0!==c.length&&(e.times=Eh.convertArray(c,e.times.constructor),e.values=Eh.convertArray(l,e.values.constructor),o.push(e))}s.tracks=o;let a=1/0;for(let t=0;t<s.tracks.length;++t)a>s.tracks[t].times[0]&&(a=s.tracks[t].times[0]);for(let t=0;t<s.tracks.length;++t)s.tracks[t].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let e=0;e<r;++e){const i=n.tracks[e],r=i.ValueTypeName;if("bool"===r||"string"===r)continue;const o=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===r}));if(void 0===o)continue;let a=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=c/3);let l=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);const u=i.times.length-1;let d;if(s<=i.times[0]){const t=a,e=c-a;d=Eh.arraySlice(i.values,t,e)}else if(s>=i.times[u]){const t=u*c+a,e=t+c-a;d=Eh.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=a,n=c-a;t.evaluate(s),d=Eh.arraySlice(t.resultBuffer,e,n)}if("quaternion"===r){(new _i).fromArray(d).normalize().conjugate().toArray(d)}const p=o.times.length;for(let t=0;t<p;++t){const e=t*h+l;if("quaternion"===r)_i.multiplyQuaternionsFlat(o.values,e,d,0,o.values,e);else{const t=h-2*l;for(let n=0;n<t;++n)o.values[e+n]-=d[n]}}}return t.blendMode=xn,t}};function Ah(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function Rh(t,e,n,i){Ah.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Lh(t,e,n,i){Ah.call(this,t,e,n,i)}function Ph(t,e,n,i){Ah.call(this,t,e,n,i)}function Ch(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Eh.convertArray(e,this.TimeBufferType),this.values=Eh.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}function Ih(t,e,n){Ch.call(this,t,e,n)}function Oh(t,e,n,i){Ch.call(this,t,e,n,i)}function Dh(t,e,n,i){Ch.call(this,t,e,n,i)}function Bh(t,e,n,i){Ah.call(this,t,e,n,i)}function Nh(t,e,n,i){Ch.call(this,t,e,n,i)}function zh(t,e,n,i){Ch.call(this,t,e,n,i)}function kh(t,e,n,i){Ch.call(this,t,e,n,i)}function Fh(t,e=-1,n,i=vn){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=ui.generateUUID(),this.duration<0&&this.resetDuration()}function Hh(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Dh;case"vector":case"vector2":case"vector3":case"vector4":return kh;case"color":return Oh;case"quaternion":return Nh;case"bool":case"boolean":return Ih;case"string":return zh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Eh.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Ah.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let s;n:{i:if(!(t<i)){for(let s=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===s)break;if(r=i,i=e[++n],t<i)break e}s=e.length;break n}if(t>=r)break t;{const o=e[1];t<o&&(n=2,r=o);for(let s=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===s)break;if(i=r,r=e[--n-1],t>=r)break e}s=n,n=0}}for(;n<s;){const i=n+s>>>1;t<e[i]?s=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Ah.prototype,{beforeStart_:Ah.prototype.copySampleValue_,afterEnd_:Ah.prototype.copySampleValue_}),Rh.prototype=Object.assign(Object.create(Ah.prototype),{constructor:Rh,DefaultSettings_:{endingStart:mn,endingEnd:mn},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,s=t+1,o=i[r],a=i[s];if(void 0===o)switch(this.getSettings_().endingStart){case gn:r=t,o=2*e-n;break;case yn:r=i.length-2,o=e+i[r]-i[r+1];break;default:r=t,o=n}if(void 0===a)switch(this.getSettings_().endingEnd){case gn:s=t,a=2*n-e;break;case yn:s=1,a=n+i[1]-i[0];break;default:s=t-1,a=e}const c=.5*(n-e),l=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=s*l},interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,c=a-o,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,y=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,v=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let t=0;t!==o;++t)r[t]=g*s[l+t]+y*s[c+t]+v*s[a+t]+x*s[h+t];return r}}),Lh.prototype=Object.assign(Object.create(Ah.prototype),{constructor:Lh,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,c=a-o,l=(n-e)/(i-e),h=1-l;for(let t=0;t!==o;++t)r[t]=s[c+t]*h+s[a+t]*l;return r}}),Ph.prototype=Object.assign(Object.create(Ah.prototype),{constructor:Ph,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(Ch,{toJSON:function(t){const e=t.constructor;let n;if(void 0!==e.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Eh.convertArray(t.times,Array),values:Eh.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}}),Object.assign(Ch.prototype,{constructor:Ch,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:pn,InterpolantFactoryMethodDiscrete:function(t){return new Ph(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new Lh(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Rh(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case dn:e=this.InterpolantFactoryMethodDiscrete;break;case pn:e=this.InterpolantFactoryMethodLinear;break;case fn:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return dn;case this.InterpolantFactoryMethodLinear:return pn;case this.InterpolantFactoryMethodSmooth:return fn}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this},scale:function(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==r||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=Eh.arraySlice(n,r,s),this.values=Eh.arraySlice(this.values,r*t,s*t)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==r;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==s&&s>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,s),t=!1;break}s=i}if(void 0!==i&&Eh.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t},optimize:function(){const t=Eh.arraySlice(this.times),e=Eh.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===fn,r=t.length-1;let s=1;for(let o=1;o<r;++o){let r=!1;const a=t[o];if(a!==t[o+1]&&(1!==o||a!==t[0]))if(i)r=!0;else{const t=o*n,i=t-n,s=t+n;for(let o=0;o!==n;++o){const n=e[t+o];if(n!==e[i+o]||n!==e[s+o]){r=!0;break}}}if(r){if(o!==s){t[s]=t[o];const i=o*n,r=s*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++s}}if(r>0){t[s]=t[r];for(let t=r*n,i=s*n,o=0;o!==n;++o)e[i+o]=e[t+o];++s}return s!==t.length?(this.times=Eh.arraySlice(t,0,s),this.values=Eh.arraySlice(e,0,s*n)):(this.times=t,this.values=e),this},clone:function(){const t=Eh.arraySlice(this.times,0),e=Eh.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}),Ih.prototype=Object.assign(Object.create(Ch.prototype),{constructor:Ih,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:dn,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Oh.prototype=Object.assign(Object.create(Ch.prototype),{constructor:Oh,ValueTypeName:"color"}),Dh.prototype=Object.assign(Object.create(Ch.prototype),{constructor:Dh,ValueTypeName:"number"}),Bh.prototype=Object.assign(Object.create(Ah.prototype),{constructor:Bh,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-e)/(i-e);let c=t*o;for(let t=c+o;c!==t;c+=4)_i.slerpFlat(r,0,s,c-o,s,c,a);return r}}),Nh.prototype=Object.assign(Object.create(Ch.prototype),{constructor:Nh,ValueTypeName:"quaternion",DefaultInterpolation:pn,InterpolantFactoryMethodLinear:function(t){return new Bh(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),zh.prototype=Object.assign(Object.create(Ch.prototype),{constructor:zh,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:dn,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),kh.prototype=Object.assign(Object.create(Ch.prototype),{constructor:kh,ValueTypeName:"vector"}),Object.assign(Fh,{parse:function(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,r=n.length;t!==r;++t)e.push(Hh(n[t]).scale(i));const r=new Fh(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r},toJSON:function(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(Ch.toJSON(n[t]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){const r=e.length,s=[];for(let t=0;t<r;t++){let o=[],a=[];o.push((t+r-1)%r,t,(t+1)%r),a.push(0,1,0);const c=Eh.getKeyframeOrder(o);o=Eh.sortedArray(o,1,c),a=Eh.sortedArray(a,1,c),i||0!==o[0]||(o.push(r),a.push(a[0])),s.push(new Dh(".morphTargetInfluences["+e[t].name+"]",o,a).scale(1/n))}return new Fh(t,-1,s)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.name.match(r);if(s&&s.length>1){const t=s[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const s=[];for(const t in i)s.push(Fh.CreateFromMorphTargetSequence(t,i[t],e,n));return s},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,r){if(0!==n.length){const s=[],o=[];Eh.flattenJSON(n,s,o,i),0!==s.length&&r.push(new t(e,s,o))}},i=[],r=t.name||"default",s=t.fps||30,o=t.blendMode;let a=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const r=c[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(const n in t){const t=[],s=[];for(let i=0;i!==r[e].morphTargets.length;++i){const i=r[e];t.push(i.time),s.push(i.morphTarget===n?1:0)}i.push(new Dh(".morphTargetInfluence["+n+"]",t,s))}a=t.length*(s||1)}else{const s=".bones["+e[t].name+"]";n(kh,s+".position",r,"pos",i),n(Nh,s+".quaternion",r,"rot",i),n(kh,s+".scale",r,"scl",i)}}if(0===i.length)return null;return new Fh(r,a,i,o)}}),Object.assign(Fh.prototype,{resetDuration:function(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new Fh(this.name,this.duration,t,this.blendMode)},toJSON:function(){return Fh.toJSON(this)}});const Uh={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Gh(t,e,n){const i=this;let r=!1,s=0,o=0,a=void 0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===r&&void 0!==i.onStart&&i.onStart(t,s,o),r=!0},this.itemEnd=function(t){s++,void 0!==i.onProgress&&i.onProgress(t,s,o),s===o&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return a?a(t):t},this.setURLModifier=function(t){return a=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],i=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}const jh=new Gh;function Wh(t){this.manager=void 0!==t?t:jh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Wh.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Vh={};function qh(t){Wh.call(this,t)}function Yh(t){Wh.call(this,t)}function Xh(t){Wh.call(this,t)}function Jh(t){Wh.call(this,t)}function Zh(t){Wh.call(this,t)}function $h(t){Wh.call(this,t)}function Kh(t){Wh.call(this,t)}function Qh(){this.type="Curve",this.arcLengthDivisions=200}function tu(t,e,n,i,r,s,o,a){Qh.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}function eu(t,e,n,i,r,s){tu.call(this,t,e,n,n,i,r,s),this.type="ArcCurve"}function nu(){let t=0,e=0,n=0,i=0;function r(r,s,o,a){t=r,e=o,n=-3*r+3*s-2*o-a,i=2*r-2*s+o+a}return{initCatmullRom:function(t,e,n,i,s){r(e,n,s*(n-t),s*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,s,o,a){let c=(e-t)/s-(n-t)/(s+o)+(n-e)/o,l=(n-e)/o-(i-e)/(o+a)+(i-n)/a;c*=o,l*=o,r(e,n,c,l)},calc:function(r){const s=r*r;return t+e*r+n*s+i*(s*r)}}}qh.prototype=Object.assign(Object.create(Wh.prototype),{constructor:qh,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Uh.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;if(void 0!==Vh[t])return void Vh[t].push({onLoad:e,onProgress:n,onError:i});const o=t.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(o){const n=o[1],s=!!o[2];let a=o[3];a=decodeURIComponent(a),s&&(a=atob(a));try{let i;const s=(this.responseType||"").toLowerCase();switch(s){case"arraybuffer":case"blob":const t=new Uint8Array(a.length);for(let e=0;e<a.length;e++)t[e]=a.charCodeAt(e);i="blob"===s?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;i=e.parseFromString(a,n);break;case"json":i=JSON.parse(a);break;default:i=a}setTimeout((function(){e&&e(i),r.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}),0)}}else{Vh[t]=[],Vh[t].push({onLoad:e,onProgress:n,onError:i}),a=new XMLHttpRequest,a.open("GET",t,!0),a.addEventListener("load",(function(e){const n=this.response,i=Vh[t];if(delete Vh[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Uh.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}r.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}}),!1),a.addEventListener("progress",(function(e){const n=Vh[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}}),!1),a.addEventListener("error",(function(e){const n=Vh[t];delete Vh[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),a.addEventListener("abort",(function(e){const n=Vh[t];delete Vh[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return r.manager.itemStart(t),a},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),Yh.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Yh,load:function(t,e,n,i){const r=this,s=new qh(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const i=Fh.parse(t[n]);e.push(i)}return e}}),Xh.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Xh,load:function(t,e,n,i){const r=this,s=[],o=new dl,a=new qh(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let c=0;function l(l){a.load(t[l],(function(t){const n=r.parse(t,!0);s[l]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},c+=1,6===c&&(1===n.mipmapCount&&(o.minFilter=Vt),o.image=s,o.format=n.format,o.needsUpdate=!0,e&&e(o))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)l(e);else a.load(t,(function(t){const n=r.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}o.image=s}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=Vt),o.format=n.format,o.needsUpdate=!0,e&&e(o)}),n,i);return o}}),Jh.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Jh,load:function(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Uh.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),Uh.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(e){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}return o.addEventListener("load",a,!1),o.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o}}),Zh.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Zh,load:function(t,e,n,i){const r=new qs,s=new Jh(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(n){s.load(t[n],(function(t){r.images[n]=t,o++,6===o&&(r.needsUpdate=!0,e&&e(r))}),void 0,i)}for(let e=0;e<t.length;++e)a(e);return r}}),$h.prototype=Object.assign(Object.create(Wh.prototype),{constructor:$h,load:function(t,e,n,i){const r=this,s=new Xs,o=new qh(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(t,(function(t){const n=r.parse(t);n&&(void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:kt,s.wrapT=void 0!==n.wrapT?n.wrapT:kt,s.magFilter=void 0!==n.magFilter?n.magFilter:Vt,s.minFilter=void 0!==n.minFilter?n.minFilter:Vt,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(s.encoding=n.encoding),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=Xt),1===n.mipmapCount&&(s.minFilter=Vt),s.needsUpdate=!0,e&&e(s,n))}),n,i),s}}),Kh.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Kh,load:function(t,e,n,i){const r=new yi,s=new Jh(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(n){r.image=n;const i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);r.format=i?le:he,r.needsUpdate=!0,void 0!==e&&e(r)}),n,i),r}}),Object.assign(Qh.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let s;s=e||t*n[r-1];let o,a=0,c=r-1;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),o=n[i]-s,o<0)a=i+1;else{if(!(o>0)){c=i;break}c=i-1}if(i=c,n[i]===s)return i/(r-1);const l=n[i];return(i+(s-l)/(n[i+1]-l))/(r-1)},getTangent:function(t,e){let n=t-1e-4,i=t+1e-4;n<0&&(n=0),i>1&&(i=1);const r=this.getPoint(n),s=this.getPoint(i),o=e||(r.isVector2?new di:new Mi);return o.copy(s).sub(r).normalize(),o},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new Mi,i=[],r=[],s=[],o=new Mi,a=new $i;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new Mi),i[e].normalize()}r[0]=new Mi,s[0]=new Mi;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),s[e]=s[e-1].clone(),o.crossVectors(i[e-1],i[e]),o.length()>Number.EPSILON){o.normalize();const t=Math.acos(ui.clamp(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(a.makeRotationAxis(o,t))}s[e].crossVectors(i[e],r[e])}if(!0===e){let e=Math.acos(ui.clamp(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(o.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(a.makeRotationAxis(i[n],e*n)),s[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:s}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),tu.prototype=Object.create(Qh.prototype),tu.prototype.constructor=tu,tu.prototype.isEllipseCurve=!0,tu.prototype.getPoint=function(t,e){const n=e||new di,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=s?0:i),!0!==this.aClockwise||s||(r===i?r=-i:r-=i);const o=this.aStartAngle+t*r;let a=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=a-this.aX,i=c-this.aY;a=n*t-i*e+this.aX,c=n*e+i*t+this.aY}return n.set(a,c)},tu.prototype.copy=function(t){return Qh.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},tu.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},tu.prototype.fromJSON=function(t){return Qh.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},eu.prototype=Object.create(tu.prototype),eu.prototype.constructor=eu,eu.prototype.isArcCurve=!0;const iu=new Mi,ru=new nu,su=new nu,ou=new nu;function au(t=[],e=!1,n="centripetal",i=.5){Qh.call(this),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}function cu(t,e,n,i,r){const s=.5*(i-e),o=.5*(r-n),a=t*t;return(2*n-2*i+s+o)*(t*a)+(-3*n+3*i-2*s-o)*a+s*t+n}function lu(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function hu(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}function uu(t=new di,e=new di,n=new di,i=new di){Qh.call(this),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}function du(t=new Mi,e=new Mi,n=new Mi,i=new Mi){Qh.call(this),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}function pu(t=new di,e=new di){Qh.call(this),this.type="LineCurve",this.v1=t,this.v2=e}function fu(t=new Mi,e=new Mi){Qh.call(this),this.type="LineCurve3",this.v1=t,this.v2=e}function mu(t=new di,e=new di,n=new di){Qh.call(this),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}function gu(t=new Mi,e=new Mi,n=new Mi){Qh.call(this),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}function yu(t=[]){Qh.call(this),this.type="SplineCurve",this.points=t}au.prototype=Object.create(Qh.prototype),au.prototype.constructor=au,au.prototype.isCatmullRomCurve3=!0,au.prototype.getPoint=function(t,e=new Mi){const n=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*t;let o,a,c=Math.floor(s),l=s-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:0===l&&c===r-1&&(c=r-2,l=1),this.closed||c>0?o=i[(c-1)%r]:(iu.subVectors(i[0],i[1]).add(i[0]),o=iu);const h=i[c%r],u=i[(c+1)%r];if(this.closed||c+2<r?a=i[(c+2)%r]:(iu.subVectors(i[r-1],i[r-2]).add(i[r-1]),a=iu),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(o.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(a),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),ru.initNonuniformCatmullRom(o.x,h.x,u.x,a.x,e,n,i),su.initNonuniformCatmullRom(o.y,h.y,u.y,a.y,e,n,i),ou.initNonuniformCatmullRom(o.z,h.z,u.z,a.z,e,n,i)}else"catmullrom"===this.curveType&&(ru.initCatmullRom(o.x,h.x,u.x,a.x,this.tension),su.initCatmullRom(o.y,h.y,u.y,a.y,this.tension),ou.initCatmullRom(o.z,h.z,u.z,a.z,this.tension));return n.set(ru.calc(l),su.calc(l),ou.calc(l)),n},au.prototype.copy=function(t){Qh.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},au.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},au.prototype.fromJSON=function(t){Qh.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Mi).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},uu.prototype=Object.create(Qh.prototype),uu.prototype.constructor=uu,uu.prototype.isCubicBezierCurve=!0,uu.prototype.getPoint=function(t,e=new di){const n=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(hu(t,i.x,r.x,s.x,o.x),hu(t,i.y,r.y,s.y,o.y)),n},uu.prototype.copy=function(t){return Qh.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},uu.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},uu.prototype.fromJSON=function(t){return Qh.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},du.prototype=Object.create(Qh.prototype),du.prototype.constructor=du,du.prototype.isCubicBezierCurve3=!0,du.prototype.getPoint=function(t,e=new Mi){const n=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(hu(t,i.x,r.x,s.x,o.x),hu(t,i.y,r.y,s.y,o.y),hu(t,i.z,r.z,s.z,o.z)),n},du.prototype.copy=function(t){return Qh.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},du.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},du.prototype.fromJSON=function(t){return Qh.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},pu.prototype=Object.create(Qh.prototype),pu.prototype.constructor=pu,pu.prototype.isLineCurve=!0,pu.prototype.getPoint=function(t,e=new di){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},pu.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},pu.prototype.getTangent=function(t,e){const n=e||new di;return n.copy(this.v2).sub(this.v1).normalize(),n},pu.prototype.copy=function(t){return Qh.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},pu.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},pu.prototype.fromJSON=function(t){return Qh.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},fu.prototype=Object.create(Qh.prototype),fu.prototype.constructor=fu,fu.prototype.isLineCurve3=!0,fu.prototype.getPoint=function(t,e=new Mi){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},fu.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},fu.prototype.copy=function(t){return Qh.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},fu.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},fu.prototype.fromJSON=function(t){return Qh.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},mu.prototype=Object.create(Qh.prototype),mu.prototype.constructor=mu,mu.prototype.isQuadraticBezierCurve=!0,mu.prototype.getPoint=function(t,e=new di){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(lu(t,i.x,r.x,s.x),lu(t,i.y,r.y,s.y)),n},mu.prototype.copy=function(t){return Qh.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},mu.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},mu.prototype.fromJSON=function(t){return Qh.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},gu.prototype=Object.create(Qh.prototype),gu.prototype.constructor=gu,gu.prototype.isQuadraticBezierCurve3=!0,gu.prototype.getPoint=function(t,e=new Mi){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(lu(t,i.x,r.x,s.x),lu(t,i.y,r.y,s.y),lu(t,i.z,r.z,s.z)),n},gu.prototype.copy=function(t){return Qh.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},gu.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},gu.prototype.fromJSON=function(t){return Qh.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},yu.prototype=Object.create(Qh.prototype),yu.prototype.constructor=yu,yu.prototype.isSplineCurve=!0,yu.prototype.getPoint=function(t,e=new di){const n=e,i=this.points,r=(i.length-1)*t,s=Math.floor(r),o=r-s,a=i[0===s?s:s-1],c=i[s],l=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(cu(o,a.x,c.x,l.x,h.x),cu(o,a.y,c.y,l.y,h.y)),n},yu.prototype.copy=function(t){Qh.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this},yu.prototype.toJSON=function(){const t=Qh.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t},yu.prototype.fromJSON=function(t){Qh.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new di).fromArray(n))}return this};var vu=Object.freeze({__proto__:null,ArcCurve:eu,CatmullRomCurve3:au,CubicBezierCurve:uu,CubicBezierCurve3:du,EllipseCurve:tu,LineCurve:pu,LineCurve3:fu,QuadraticBezierCurve:mu,QuadraticBezierCurve3:gu,SplineCurve:yu});function xu(){Qh.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function bu(t){xu.call(this),this.type="Path",this.currentPoint=new di,t&&this.setFromPoints(t)}function wu(t){bu.call(this,t),this.uuid=ui.generateUUID(),this.type="Shape",this.holes=[]}function _u(t,e=1){_r.call(this),this.type="Light",this.color=new Wr(t),this.intensity=e}function Mu(t,e,n){_u.call(this,t,n),this.type="HemisphereLight",this.position.copy(_r.DefaultUp),this.updateMatrix(),this.groundColor=new Wr(e)}function Su(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new di(512,512),this.map=null,this.mapPass=null,this.matrix=new $i,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new $s,this._frameExtents=new di(1,1),this._viewportCount=1,this._viewports=[new xi(0,0,1,1)]}function Tu(){Su.call(this,new Ws(50,1,.5,500)),this.focus=1}function Eu(t,e,n,i,r,s){_u.call(this,t,e),this.type="SpotLight",this.position.copy(_r.DefaultUp),this.updateMatrix(),this.target=new _r,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==i?i:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==s?s:1,this.shadow=new Tu}function Au(){Su.call(this,new Ws(90,1,.5,500)),this._frameExtents=new di(4,2),this._viewportCount=6,this._viewports=[new xi(2,1,1,1),new xi(0,1,1,1),new xi(3,1,1,1),new xi(1,1,1,1),new xi(3,0,1,1),new xi(1,0,1,1)],this._cubeDirections=[new Mi(1,0,0),new Mi(-1,0,0),new Mi(0,0,1),new Mi(0,0,-1),new Mi(0,1,0),new Mi(0,-1,0)],this._cubeUps=[new Mi(0,1,0),new Mi(0,1,0),new Mi(0,1,0),new Mi(0,1,0),new Mi(0,0,1),new Mi(0,0,-1)]}function Ru(t,e,n,i){_u.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==i?i:1,this.shadow=new Au}function Lu(t=-1,e=1,n=1,i=-1,r=.1,s=2e3){js.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}function Pu(){Su.call(this,new Lu(-5,5,5,-5,.5,500))}function Cu(t,e){_u.call(this,t,e),this.type="DirectionalLight",this.position.copy(_r.DefaultUp),this.updateMatrix(),this.target=new _r,this.shadow=new Pu}function Iu(t,e){_u.call(this,t,e),this.type="AmbientLight"}function Ou(t,e,n,i){_u.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==i?i:10}xu.prototype=Object.assign(Object.create(Qh.prototype),{constructor:xu,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new pu(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,r=this.curves[i],s=r.getLength(),o=0===s?0:1-t/s;return r.getPointAt(o)}i++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?2*t:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?t*s.points.length:t,a=s.getPoints(o);for(let t=0;t<a.length;t++){const i=a[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){Qh.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=Qh.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){Qh.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new vu[n.type]).fromJSON(n))}return this}}),bu.prototype=Object.assign(Object.create(xu.prototype),{constructor:bu,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new pu(this.currentPoint.clone(),new di(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){const r=new mu(this.currentPoint.clone(),new di(t,e),new di(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,r,s){const o=new uu(this.currentPoint.clone(),new di(t,e),new di(n,i),new di(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(t){const e=new yu([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+o,e+a,n,i,r,s),this},absarc:function(t,e,n,i,r,s){return this.absellipse(t,e,n,n,i,r,s),this},ellipse:function(t,e,n,i,r,s,o,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,i,r,s,o,a),this},absellipse:function(t,e,n,i,r,s,o,a){const c=new tu(t,e,n,i,r,s,o,a);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this},copy:function(t){return xu.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=xu.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return xu.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),wu.prototype=Object.assign(Object.create(bu.prototype),{constructor:wu,getPointsHoles:function(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){bu.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){const t=bu.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){bu.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new bu).fromJSON(n))}return this}}),_u.prototype=Object.assign(Object.create(_r.prototype),{constructor:_u,isLight:!0,copy:function(t){return _r.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=_r.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Mu.prototype=Object.assign(Object.create(_u.prototype),{constructor:Mu,isHemisphereLight:!0,copy:function(t){return _u.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(Su.prototype,{_projScreenMatrix:new $i,_lightPositionWorld:new Mi,_lookTarget:new Mi,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(t.matrixWorld),e.position.copy(s),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Tu.prototype=Object.assign(Object.create(Su.prototype),{constructor:Tu,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=2*ui.RAD2DEG*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),Su.prototype.updateMatrices.call(this,t)}}),Eu.prototype=Object.assign(Object.create(_u.prototype),{constructor:Eu,isSpotLight:!0,copy:function(t){return _u.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Au.prototype=Object.assign(Object.create(Su.prototype),{constructor:Au,isPointLightShadow:!0,updateMatrices:function(t,e=0){const n=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),n.position.copy(r),s.copy(n.position),s.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(s),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}}),Ru.prototype=Object.assign(Object.create(_u.prototype),{constructor:Ru,isPointLight:!0,copy:function(t){return _u.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),Lu.prototype=Object.assign(Object.create(js.prototype),{constructor:Lu,isOrthographicCamera:!0,copy:function(t,e){return js.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,s=n+t,o=i+e,a=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,o-=e*this.view.offsetY,a=o-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=_r.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Pu.prototype=Object.assign(Object.create(Su.prototype),{constructor:Pu,isDirectionalLightShadow:!0,updateMatrices:function(t){Su.prototype.updateMatrices.call(this,t)}}),Cu.prototype=Object.assign(Object.create(_u.prototype),{constructor:Cu,isDirectionalLight:!0,copy:function(t){return _u.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Iu.prototype=Object.assign(Object.create(_u.prototype),{constructor:Iu,isAmbientLight:!0}),Ou.prototype=Object.assign(Object.create(_u.prototype),{constructor:Ou,isRectAreaLight:!0,copy:function(t){return _u.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=_u.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});class Du{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new Mi)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*i),e.addScaledVector(s[2],.488603*r),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*i*1.092548),e.addScaledVector(s[5],i*r*1.092548),e.addScaledVector(s[6],.315392*(3*r*r-1)),e.addScaledVector(s[7],n*r*1.092548),e.addScaledVector(s[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*i),e.addScaledVector(s[2],1.023328*r),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*i),e.addScaledVector(s[5],.858086*i*r),e.addScaledVector(s[6],.743125*r*r-.247708),e.addScaledVector(s[7],.858086*n*r),e.addScaledVector(s[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}function Bu(t,e){_u.call(this,void 0,e),this.type="LightProbe",this.sh=void 0!==t?t:new Du}function Nu(t){Wh.call(this,t),this.textures={}}Bu.prototype=Object.assign(Object.create(_u.prototype),{constructor:Bu,isLightProbe:!0,copy:function(t){return _u.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=_u.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}}),Nu.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Nu,load:function(t,e,n,i){const r=this,s=new qh(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)},parse:function(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const i=new Th[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=(new Wr).setHex(t.sheen)),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(i.skinning=t.skinning),void 0!==t.morphTargets&&(i.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(i.morphNormals=t.morphNormals),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.vertexTangents&&(i.vertexTangents=t.vertexTangents),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const r=t.uniforms[e];switch(i.uniforms[e]={},r.type){case"t":i.uniforms[e].value=n(r.value);break;case"c":i.uniforms[e].value=(new Wr).setHex(r.value);break;case"v2":i.uniforms[e].value=(new di).fromArray(r.value);break;case"v3":i.uniforms[e].value=(new Mi).fromArray(r.value);break;case"v4":i.uniforms[e].value=(new xi).fromArray(r.value);break;case"m3":i.uniforms[e].value=(new pi).fromArray(r.value);break;case"m4":i.uniforms[e].value=(new $i).fromArray(r.value);break;default:i.uniforms[e].value=r.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)i.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new di).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new di).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.transmissionMap&&(i.transmissionMap=n(t.transmissionMap)),i},setTextures:function(t){return this.textures=t,this}});const zu={decodeText:function(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}},extractUrlBase:function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}};function ku(){vs.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Fu(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),$r.call(this,t,e,n),this.meshPerAttribute=i||1}function Hu(t){Wh.call(this,t)}ku.prototype=Object.assign(Object.create(vs.prototype),{constructor:ku,isInstancedBufferGeometry:!0,copy:function(t){return vs.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=vs.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),Fu.prototype=Object.assign(Object.create($r.prototype),{constructor:Fu,isInstancedBufferAttribute:!0,copy:function(t){return $r.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=$r.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),Hu.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Hu,load:function(t,e,n,i){const r=this,s=new qh(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)},parse:function(t){const e={},n={};function i(t,i){if(void 0!==e[i])return e[i];const r=t.interleavedBuffers[i],s=function(t,e){if(void 0!==n[e])return n[e];const i=t.arrayBuffers[e],r=new Uint32Array(i).buffer;return n[e]=r,r}(t,r.buffer),o=new hc(hs(r.type,s),r.stride);return o.uuid=r.uuid,e[i]=o,o}const r=t.isInstancedBufferGeometry?new ku:new vs,s=t.data.index;if(void 0!==s){const t=hs(s.type,s.array);r.setIndex(new $r(t,1))}const o=t.data.attributes;for(const e in o){const n=o[e];let s;if(n.isInterleavedBufferAttribute){s=new dc(i(t.data,n.data),n.itemSize,n.offset,n.normalized)}else{const t=hs(n.type,n.array);s=new(n.isInstancedBufferAttribute?Fu:$r)(t,n.itemSize,n.normalized)}void 0!==n.name&&(s.name=n.name),r.setAttribute(e,s)}const a=t.data.morphAttributes;if(a)for(const e in a){const n=a[e],s=[];for(let e=0,r=n.length;e<r;e++){const r=n[e];let o;if(r.isInterleavedBufferAttribute){o=new dc(i(t.data,r.data),r.itemSize,r.offset,r.normalized)}else{o=new $r(hs(r.type,r.array),r.itemSize,r.normalized)}void 0!==r.name&&(o.name=r.name),s.push(o)}r.morphAttributes[e]=s}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(let t=0,e=c.length;t!==e;++t){const e=c[t];r.addGroup(e.start,e.count,e.materialIndex)}const l=t.data.boundingSphere;if(void 0!==l){const t=new Mi;void 0!==l.center&&t.fromArray(l.center),r.boundingSphere=new Gi(t,l.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}});class Uu extends Wh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=""===this.path?zu.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const o=new qh(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(n){let s=null;try{s=JSON.parse(n)}catch(e){return void 0!==i&&i(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const o=s.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?r.parse(s,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,i)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,i),s=this.parseImages(t.images,(function(){void 0!==e&&e(c)})),o=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,o),c=this.parseObject(t.object,r,a,n),l=this.parseSkeletons(t.skeletons,c);if(this.bindSkeletons(c,l),void 0!==e){let t=!1;for(const e in s)if(s[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(c)}return c}parseShapes(t){const e={};if(void 0!==t)for(let n=0,i=t.length;n<i;n++){const i=(new wu).fromJSON(t[n]);e[i.uuid]=i}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse((function(t){t.isBone&&(i[t.uuid]=t)})),void 0!==t)for(let e=0,r=t.length;e<r;e++){const r=(new Uc).fromJSON(t[e],i);n[r.uuid]=r}return n}parseGeometries(t,e){const n={};let i;if(void 0!==t){const r=new Hu;for(let s=0,o=t.length;s<o;s++){let o;const a=t[s];switch(a.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new fh[a.type](a.width,a.height,a.widthSegments,a.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":o=new fh[a.type](a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new fh[a.type](a.radius,a.segments,a.thetaStart,a.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new fh[a.type](a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new fh[a.type](a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new fh[a.type](a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new fh[a.type](a.radius,a.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new fh[a.type](a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new fh[a.type](a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new fh[a.type](a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new fh[a.type]((new vu[a.path.type]).fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new fh[a.type](a.points,a.segments,a.phiStart,a.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new fh[a.type](a.vertices,a.indices,a.radius,a.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];i.push(n)}o=new fh[a.type](i,a.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];i.push(n)}const t=a.options.extrudePath;void 0!==t&&(a.options.extrudePath=(new vu[t.type]).fromJSON(t)),o=new fh[a.type](i,a.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(a);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+a.type+'"');continue}o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),!0===o.isBufferGeometry&&void 0!==a.userData&&(o.userData=a.userData),n[a.uuid]=o}}return n}parseMaterials(t,e){const n={},i={};if(void 0!==t){const r=new Nu;r.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];if("MultiMaterial"===s.type){const t=[];for(let e=0;e<s.materials.length;e++){const i=s.materials[e];void 0===n[i.uuid]&&(n[i.uuid]=r.parse(i)),t.push(n[i.uuid])}i[s.uuid]=t}else void 0===n[s.uuid]&&(n[s.uuid]=r.parse(s)),i[s.uuid]=n[s.uuid]}}return i}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const i=t[n],r=Fh.parse(i);e[r.uuid]=r}return e}parseImages(t,e){const n=this,i={};let r;function s(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),r.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:hs(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new Gh(e);r=new Jh(n),r.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],r=n.url;if(Array.isArray(r)){i[n.uuid]=[];for(let t=0,e=r.length;t<e;t++){const e=s(r[t]);null!==e&&(e instanceof HTMLImageElement?i[n.uuid].push(e):i[n.uuid].push(new Xs(e.data,e.width,e.height)))}}else{const t=s(n.url);null!==t&&(i[n.uuid]=t)}}}return i}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const i={};if(void 0!==t)for(let r=0,s=t.length;r<s;r++){const s=t[r];let o;void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);const a=e[s.image];Array.isArray(a)?(o=new qs(a),6===a.length&&(o.needsUpdate=!0)):(o=a&&a.data?new Xs(a.data,a.width,a.height):new yi(a),a&&(o.needsUpdate=!0)),o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=n(s.mapping,Gu)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=n(s.wrap[0],ju),o.wrapT=n(s.wrap[1],ju)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=n(s.minFilter,Wu)),void 0!==s.magFilter&&(o.magFilter=n(s.magFilter,Wu)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),i[s.uuid]=o}return i}parseObject(t,e,n,i){let r,s,o;function a(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];void 0===n[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),e.push(n[r])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}switch(t.type){case"Scene":r=new lc,void 0!==t.background&&Number.isInteger(t.background)&&(r.background=new Wr(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?r.fog=new cc(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(r.fog=new ac(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":r=new Ws(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(r.focus=t.focus),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.filmGauge&&(r.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(r.filmOffset=t.filmOffset),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"OrthographicCamera":r=new Lu(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"AmbientLight":r=new Iu(t.color,t.intensity);break;case"DirectionalLight":r=new Cu(t.color,t.intensity);break;case"PointLight":r=new Ru(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":r=new Ou(t.color,t.intensity,t.width,t.height);break;case"SpotLight":r=new Eu(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":r=new Mu(t.color,t.groundColor,t.intensity);break;case"LightProbe":r=(new Bu).fromJSON(t);break;case"SkinnedMesh":s=a(t.geometry),o=c(t.material),r=new zc(s,o),void 0!==t.bindMode&&(r.bindMode=t.bindMode),void 0!==t.bindMatrix&&r.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(r.skeleton=t.skeleton);break;case"Mesh":s=a(t.geometry),o=c(t.material),r=new Ns(s,o);break;case"InstancedMesh":s=a(t.geometry),o=c(t.material);const e=t.count,n=t.instanceMatrix;r=new qc(s,o,e),r.instanceMatrix=new $r(new Float32Array(n.array),16);break;case"LOD":r=new Cc;break;case"Line":r=new Qc(a(t.geometry),c(t.material));break;case"LineLoop":r=new il(a(t.geometry),c(t.material));break;case"LineSegments":r=new nl(a(t.geometry),c(t.material));break;case"PointCloud":case"Points":r=new ll(a(t.geometry),c(t.material));break;case"Sprite":r=new Ac(c(t.material));break;case"Group":r=new ec;break;case"Bone":r=new kc;break;default:r=new _r}if(r.uuid=t.uuid,void 0!==t.name&&(r.name=t.name),void 0!==t.matrix?(r.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(r.matrixAutoUpdate=t.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==t.position&&r.position.fromArray(t.position),void 0!==t.rotation&&r.rotation.fromArray(t.rotation),void 0!==t.quaternion&&r.quaternion.fromArray(t.quaternion),void 0!==t.scale&&r.scale.fromArray(t.scale)),void 0!==t.castShadow&&(r.castShadow=t.castShadow),void 0!==t.receiveShadow&&(r.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(r.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(r.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(r.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&r.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(r.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.frustumCulled&&(r.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(r.renderOrder=t.renderOrder),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.layers&&(r.layers.mask=t.layers),void 0!==t.children){const s=t.children;for(let t=0;t<s.length;t++)r.add(this.parseObject(s[t],e,n,i))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];r.animations.push(i[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(r.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],i=r.getObjectByProperty("uuid",n.object);void 0!==i&&r.addLevel(i,n.distance)}}return r}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}}))}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const Gu={UVMapping:Pt,CubeReflectionMapping:Ct,CubeRefractionMapping:It,EquirectangularReflectionMapping:Ot,EquirectangularRefractionMapping:Dt,CubeUVReflectionMapping:Bt,CubeUVRefractionMapping:Nt},ju={RepeatWrapping:zt,ClampToEdgeWrapping:kt,MirroredRepeatWrapping:Ft},Wu={NearestFilter:Ht,NearestMipmapNearestFilter:Ut,NearestMipmapLinearFilter:jt,LinearFilter:Vt,LinearMipmapNearestFilter:qt,LinearMipmapLinearFilter:Xt};function Vu(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Wh.call(this,t),this.options={premultiplyAlpha:"none"}}function qu(){this.type="ShapePath",this.color=new Wr,this.subPaths=[],this.currentPath=null}Vu.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Vu,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Uh.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(t,o).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,r.options)})).then((function(n){Uh.add(t,n),e&&e(n),r.manager.itemEnd(t)})).catch((function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}}),Object.assign(qu.prototype,{moveTo:function(t,e){return this.currentPath=new bu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this},bezierCurveTo:function(t,e,n,i,r,s){return this.currentPath.bezierCurveTo(t,e,n,i,r,s),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new wu;r.curves=i.curves,e.push(r)}return e}function i(t,e){const n=e.length;let i=!1;for(let r=n-1,s=0;s<n;r=s++){let n=e[r],o=e[s],a=o.x-n.x,c=o.y-n.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(n=e[s],a=-a,o=e[r],c=-c),t.y<n.y||t.y>o.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=c*(t.x-n.x)-a*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(o.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=o.x)return!0}}return i}const r=Zl.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return n(s);let o,a,c;const l=[];if(1===s.length)return a=s[0],c=new wu,c.curves=a.curves,l.push(c),l;let h=!r(s[0].getPoints());h=t?!h:h;const u=[],d=[];let p,f,m=[],g=0;d[g]=void 0,m[g]=[];for(let e=0,n=s.length;e<n;e++)a=s[e],p=a.getPoints(),o=r(p),o=t?!o:o,o?(!h&&d[g]&&g++,d[g]={s:new wu,p:p},d[g].s.curves=a.curves,h&&g++,m[g]=[]):m[g].push({h:a,p:p[0]});if(!d[0])return n(s);if(d.length>1){let t=!1;const e=[];for(let t=0,e=d.length;t<e;t++)u[t]=[];for(let n=0,r=d.length;n<r;n++){const r=m[n];for(let s=0;s<r.length;s++){const o=r[s];let a=!0;for(let r=0;r<d.length;r++)i(o.p,d[r].p)&&(n!==r&&e.push({froms:n,tos:r,hole:s}),a?(a=!1,u[r].push(o)):t=!0);a&&u[n].push(o)}}e.length>0&&(t||(m=u))}for(let t=0,e=d.length;t<e;t++){c=d[t].s,l.push(c),f=m[t];for(let t=0,e=f.length;t<e;t++)c.holes.push(f[t].h)}return l}});class Yu{constructor(t){Object.defineProperty(this,"isFont",{value:!0}),this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],i=function(t,e,n){const i=Array.from?Array.from(t):String(t).split(""),r=e/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=[];let a=0,c=0;for(let t=0;t<i.length;t++){const e=i[t];if("\n"===e)a=0,c-=s;else{const t=Xu(e,r,a,c,n);a+=t.offsetX,o.push(t.path)}}return o}(t,e,this.data);for(let t=0,e=i.length;t<e;t++)Array.prototype.push.apply(n,i[t].toShapes());return n}}function Xu(t,e,n,i,r){const s=r.glyphs[t]||r.glyphs["?"];if(!s)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");const o=new qu;let a,c,l,h,u,d,p,f;if(s.o){const t=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,s=t.length;r<s;){switch(t[r++]){case"m":a=t[r++]*e+n,c=t[r++]*e+i,o.moveTo(a,c);break;case"l":a=t[r++]*e+n,c=t[r++]*e+i,o.lineTo(a,c);break;case"q":l=t[r++]*e+n,h=t[r++]*e+i,u=t[r++]*e+n,d=t[r++]*e+i,o.quadraticCurveTo(u,d,l,h);break;case"b":l=t[r++]*e+n,h=t[r++]*e+i,u=t[r++]*e+n,d=t[r++]*e+i,p=t[r++]*e+n,f=t[r++]*e+i,o.bezierCurveTo(u,d,p,f,l,h)}}}return{offsetX:s.ha*e,path:o}}function Ju(t){Wh.call(this,t)}let Zu;Ju.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Ju,load:function(t,e,n,i){const r=this,s=new qh(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const i=r.parse(n);e&&e(i)}),n,i)},parse:function(t){return new Yu(t)}});const $u={getContext:function(){return void 0===Zu&&(Zu=new(window.AudioContext||window.webkitAudioContext)),Zu},setContext:function(t){Zu=t}};function Ku(t){Wh.call(this,t)}function Qu(t,e,n){Bu.call(this,void 0,n);const i=(new Wr).set(t),r=(new Wr).set(e),s=new Mi(i.r,i.g,i.b),o=new Mi(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(c)}function td(t,e){Bu.call(this,void 0,e);const n=(new Wr).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}Ku.prototype=Object.assign(Object.create(Wh.prototype),{constructor:Ku,load:function(t,e,n,i){const r=this,s=new qh(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(n){try{const t=n.slice(0);$u.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}}),Qu.prototype=Object.assign(Object.create(Bu.prototype),{constructor:Qu,isHemisphereLightProbe:!0,copy:function(t){return Bu.prototype.copy.call(this,t),this},toJSON:function(t){return Bu.prototype.toJSON.call(this,t)}}),td.prototype=Object.assign(Object.create(Bu.prototype),{constructor:td,isAmbientLightProbe:!0,copy:function(t){return Bu.prototype.copy.call(this,t),this},toJSON:function(t){return Bu.prototype.toJSON.call(this,t)}});const ed=new $i,nd=new $i;function id(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ws,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ws,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(id.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),i=e.eyeSep/2,r=i*e.near/e.focus,s=e.near*Math.tan(ui.DEG2RAD*e.fov*.5)/e.zoom;let o,a;nd.elements[12]=-i,ed.elements[12]=i,o=-s*e.aspect+r,a=s*e.aspect+r,n.elements[0]=2*e.near/(a-o),n.elements[8]=(a+o)/(a-o),this.cameraL.projectionMatrix.copy(n),o=-s*e.aspect-r,a=s*e.aspect-r,n.elements[0]=2*e.near/(a-o),n.elements[8]=(a+o)/(a-o),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(nd),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(ed)}});class rd{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=sd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=sd();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function sd(){return("undefined"==typeof performance?Date:performance).now()}const od=new Mi,ad=new _i,cd=new Mi,ld=new Mi;class hd extends _r{constructor(){super(),this.type="AudioListener",this.context=$u.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new rd}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(od,ad,cd),ld.set(0,0,-1).applyQuaternion(ad),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(od.x,t),e.positionY.linearRampToValueAtTime(od.y,t),e.positionZ.linearRampToValueAtTime(od.z,t),e.forwardX.linearRampToValueAtTime(ld.x,t),e.forwardY.linearRampToValueAtTime(ld.y,t),e.forwardZ.linearRampToValueAtTime(ld.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(od.x,od.y,od.z),e.setOrientation(ld.x,ld.y,ld.z,n.x,n.y,n.z)}}class ud extends _r{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const dd=new Mi,pd=new _i,fd=new Mi,md=new Mi;class gd extends ud{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(dd,pd,fd),md.set(0,0,1).applyQuaternion(pd);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(dd.x,t),e.positionY.linearRampToValueAtTime(dd.y,t),e.positionZ.linearRampToValueAtTime(dd.z,t),e.orientationX.linearRampToValueAtTime(md.x,t),e.orientationY.linearRampToValueAtTime(md.y,t),e.orientationZ.linearRampToValueAtTime(md.z,t)}else e.setPosition(dd.x,dd.y,dd.z),e.setOrientation(md.x,md.y,md.z)}}class yd{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}function vd(t,e,n){let i,r,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(vd.prototype,{accumulate:function(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==i;++t)n[r+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=s},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(n[t]!==n[t+e]){o.setValue(n,i);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,r=i;t!==r;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},_select:function(t,e,n,i,r){if(i>=.5)for(let i=0;i!==r;++i)t[e+i]=t[n+i]},_slerp:function(t,e,n,i){_i.slerpFlat(t,e,t,e,t,n,i)},_slerpAdditive:function(t,e,n,i,r){const s=this._workIndex*r;_i.multiplyQuaternionsFlat(t,s,t,e,t,n),_i.slerpFlat(t,e,t,e,t,s,i)},_lerp:function(t,e,n,i,r){const s=1-i;for(let o=0;o!==r;++o){const r=e+o;t[r]=t[r]*s+t[n+o]*i}},_lerpAdditive:function(t,e,n,i,r){for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]+t[n+s]*i}}});const xd=new RegExp("[\\[\\]\\.:\\/]","g"),bd="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",wd=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),_d=/(WCOD+)?/.source.replace("WCOD",bd),Md=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Sd=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Td=new RegExp("^"+wd+_d+Md+Sd+"$"),Ed=["material","materials","bones"];function Ad(t,e,n){const i=n||Rd.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function Rd(t,e,n){this.path=e,this.parsedPath=n||Rd.parseTrackName(e),this.node=Rd.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function Ld(){this.uuid=ui.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}Object.assign(Ad.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(Rd,{Composite:Ad,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Rd.Composite(t,e,n):new Rd(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(xd,"")},parseTrackName:function(t){const e=Td.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Ed.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const s=n(r.children);if(s)return s}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(Rd.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Rd.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const s=t[i];if(void 0===s){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let o=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Rd.prototype,{_getValue_unbound:Rd.prototype.getValue,_setValue_unbound:Rd.prototype.setValue}),Object.assign(Ld.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o=void 0,a=t.length,c=this.nCachedObjects_;for(let l=0,h=arguments.length;l!==h;++l){const h=arguments[l],u=h.uuid;let d=e[u];if(void 0===d){d=a++,e[u]=d,t.push(h);for(let t=0,e=s;t!==e;++t)r[t].push(new Rd(h,n[t],i[t]))}else if(d<c){o=t[d];const a=--c,l=t[a];e[l.uuid]=d,t[d]=l,e[u]=a,t[a]=h;for(let t=0,e=s;t!==e;++t){const e=r[t],s=e[a];let o=e[d];e[d]=s,void 0===o&&(o=new Rd(h,n[t],i[t])),e[a]=o}}else t[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const o=arguments[s],a=o.uuid,c=e[a];if(void 0!==c&&c>=r){const s=r++,l=t[s];e[l.uuid]=c,t[c]=l,e[a]=s,t[s]=o;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[s],r=e[c];e[c]=i,e[s]=r}}}this.nCachedObjects_=r},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=t.length;for(let o=0,a=arguments.length;o!==a;++o){const a=arguments[o].uuid,c=e[a];if(void 0!==c)if(delete e[a],c<r){const o=--r,a=t[o],l=--s,h=t[l];e[a.uuid]=c,t[c]=a,e[h.uuid]=o,t[o]=h,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[o],r=e[l];e[c]=i,e[o]=r,e.pop()}}else{const r=--s,o=t[r];r>0&&(e[o.uuid]=c),t[c]=o,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[c]=e[r],e.pop()}}}this.nCachedObjects_=r},subscribe_:function(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(void 0!==i)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,h=new Array(c);i=r.length,n[t]=i,s.push(t),o.push(e),r.push(h);for(let n=l,i=a.length;n!==i;++n){const i=a[n];h[n]=new Rd(i,t,e)}return h},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o];e[t[o]]=n,s[n]=a,s.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}});class Pd{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,s=r.length,o=new Array(s),a={endingStart:mn,endingEnd:mn};for(let t=0;t!==s;++t){const e=r[t].createInterpolant(null);o[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=hn,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,r=i/n,s=n/i;t.warp(1,r,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,s=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=r,a[1]=r+n,c[0]=t/s,c[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const s=this._updateTime(e),o=this._updateWeight(t);if(o>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case xn:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulateAdditive(o);break;case vn:default:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulate(i,o)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const s=n===un;if(0===t)return-1===r?i:s&&1==(1&r)?e-i:i;if(n===ln){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===o){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(s&&1==(1&r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=gn,i.endingEnd=gn):(i.endingStart=t?this.zeroSlopeAtStart?gn:mn:yn,i.endingEnd=e?this.zeroSlopeAtEnd?gn:mn:yn)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;null===s&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,a=s.sampleValues;return o[0]=r,a[0]=e,o[1]=r+t,a[1]=n,this}}function Cd(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Cd.prototype=Object.assign(Object.create(ci.prototype),{constructor:Cd,_bindAction:function(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,s=t._propertyBindings,o=t._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];void 0===l&&(l={},c[a]=l);for(let t=0;t!==r;++t){const r=i[t],c=r.name;let h=l[c];if(void 0!==h)s[t]=h;else{if(h=s[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,a,c));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new vd(Rd.create(n,c,i),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,a,c),s[t]=h}o[t].resultBuffer=h.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const i=this._actions,r=this._actionsByClip;let s=r[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,c=a[a.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),t._byClipCacheIndex=null;delete o.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete s[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_addInactiveBinding:function(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];void 0===s&&(s={},i[e]=s),s[n]=t,t._cacheIndex=r.length,r.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=e[e.length-1],c=t._cacheIndex;a._cacheIndex=c,e[c]=a,e.pop(),delete o[r],0===Object.keys(o).length&&delete s[i]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new Lh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const i=e||this._root,r=i.uuid;let s="string"==typeof t?Fh.findByName(i,t):t;const o=null!==s?s.uuid:t,a=this._actionsByClip[o];let c=null;if(void 0===n&&(n=null!==s?s.blendMode:vn),void 0!==a){const t=a.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;c=a.knownActions[0],null===s&&(s=c._clip)}if(null===s)return null;const l=new Pd(this,s,e,n);return this._bindAction(l,c),this._addInactiveAction(l,o,r),l},existingAction:function(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?Fh.findByName(n,t):t,s=r?r.uuid:t,o=this._actionsByClip[s];return void 0!==o&&o.actionByRoot[i]||null},stopAllAction:function(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1;for(let o=0;o!==n;++o){e[o]._update(i,t,r,s)}const o=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)o[t].apply(s);return this},setTime:function(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,s=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,s._cacheIndex=r,e[r]=s,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class Id{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Id(void 0===this.value.clone?this.value:this.value.clone())}}function Od(t,e,n){hc.call(this,t,e),this.meshPerAttribute=n||1}function Dd(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}function Bd(t,e,n,i){this.ray=new Zi(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new cr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Nd(t,e){return t.distance-e.distance}function zd(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)zd(i[t],e,n,!0)}}Od.prototype=Object.assign(Object.create(hc.prototype),{constructor:Od,isInstancedInterleavedBuffer:!0,copy:function(t){return hc.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=hc.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=hc.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Dd.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Dd.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(Bd.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e,n){const i=n||[];return zd(t,this,i,e),i.sort(Nd),i},intersectObjects:function(t,e,n){const i=n||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let n=0,r=t.length;n<r;n++)zd(t[n],this,i,e);return i.sort(Nd),i}});class kd{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}clone(){return(new this.constructor).copy(this)}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ui.clamp(e/this.radius,-1,1))),this}}class Fd{constructor(t,e,n){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==n?n:0,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}clone(){return(new this.constructor).copy(this)}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}}const Hd=new di;class Ud{constructor(t,e){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==t?t:new di(1/0,1/0),this.max=void 0!==e?e:new di(-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Hd.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new di),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new di),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new di),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new di),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Hd.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Gd=new Mi,jd=new Mi;class Wd{constructor(t,e){this.start=void 0!==t?t:new Mi,this.end=void 0!==e?e:new Mi}set(t,e){return this.start.copy(t),this.end.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new Mi),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new Mi),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new Mi),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Gd.subVectors(t,this.start),jd.subVectors(this.end,this.start);const n=jd.dot(jd);let i=jd.dot(Gd)/n;return e&&(i=ui.clamp(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new Mi),this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}function Vd(t){_r.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Vd.prototype=Object.create(_r.prototype),Vd.prototype.constructor=Vd,Vd.prototype.isImmediateRenderObject=!0;const qd=new Mi;class Yd extends _r{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new vs,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const r=t/n*Math.PI*2,s=e/n*Math.PI*2;i.push(Math.cos(r),Math.sin(r),1,Math.cos(s),Math.sin(s),1)}n.setAttribute("position",new os(i,3));const r=new Yc({fog:!1,toneMapped:!1});this.cone=new nl(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),qd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(qd),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Xd=new Mi,Jd=new $i,Zd=new $i;class $d extends nl{constructor(t){const e=function t(e){const n=[];e&&e.isBone&&n.push(e);for(let i=0;i<e.children.length;i++)n.push.apply(n,t(e.children[i]));return n}(t),n=new vs,i=[],r=[],s=new Wr(0,0,1),o=new Wr(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(s.r,s.g,s.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new os(i,3)),n.setAttribute("color",new os(r,3));super(n,new Yc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Zd.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(Jd.multiplyMatrices(Zd,r.matrixWorld),Xd.setFromMatrixPosition(Jd),i.setXYZ(n,Xd.x,Xd.y,Xd.z),Jd.multiplyMatrices(Zd,r.parent.matrixWorld),Xd.setFromMatrixPosition(Jd),i.setXYZ(n+1,Xd.x,Xd.y,Xd.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}class Kd extends Ns{constructor(t,e,n){super(new ah(e,4,2),new Xr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Qd=new Mi,tp=new Wr,ep=new Wr;class np extends _r{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new ih(e);i.rotateY(.5*Math.PI),this.material=new Xr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),s=new Float32Array(3*r.count);i.setAttribute("color",new $r(s,3)),this.add(new Ns(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");tp.copy(this.light.color),ep.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const i=t<n/2?tp:ep;e.setXYZ(t,i.r,i.g,i.b)}e.needsUpdate=!0}t.lookAt(Qd.setFromMatrixPosition(this.light.matrixWorld).negate())}}class ip extends nl{constructor(t=10,e=10,n=4473924,i=8947848){n=new Wr(n),i=new Wr(i);const r=e/2,s=t/e,o=t/2,a=[],c=[];for(let t=0,l=0,h=-o;t<=e;t++,h+=s){a.push(-o,0,h,o,0,h),a.push(h,0,-o,h,0,o);const e=t===r?n:i;e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3}const l=new vs;l.setAttribute("position",new os(a,3)),l.setAttribute("color",new os(c,3));super(l,new Yc({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class rp extends nl{constructor(t=10,e=16,n=8,i=64,r=4473924,s=8947848){r=new Wr(r),s=new Wr(s);const o=[],a=[];for(let n=0;n<=e;n++){const i=n/e*(2*Math.PI),c=Math.sin(i)*t,l=Math.cos(i)*t;o.push(0,0,0),o.push(c,0,l);const h=1&n?r:s;a.push(h.r,h.g,h.b),a.push(h.r,h.g,h.b)}for(let e=0;e<=n;e++){const c=1&e?r:s,l=t-t/n*e;for(let t=0;t<i;t++){let e=t/i*(2*Math.PI),n=Math.sin(e)*l,r=Math.cos(e)*l;o.push(n,0,r),a.push(c.r,c.g,c.b),e=(t+1)/i*(2*Math.PI),n=Math.sin(e)*l,r=Math.cos(e)*l,o.push(n,0,r),a.push(c.r,c.g,c.b)}}const c=new vs;c.setAttribute("position",new os(o,3)),c.setAttribute("color",new os(a,3));super(c,new Yc({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const sp=new Mi,op=new Mi,ap=new Mi;class cp extends _r{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let i=new vs;i.setAttribute("position",new os([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new Yc({fog:!1,toneMapped:!1});this.lightPlane=new Qc(i,r),this.add(this.lightPlane),i=new vs,i.setAttribute("position",new os([0,0,0,0,0,1],3)),this.targetLine=new Qc(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){sp.setFromMatrixPosition(this.light.matrixWorld),op.setFromMatrixPosition(this.light.target.matrixWorld),ap.subVectors(op,sp),this.lightPlane.lookAt(op),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(op),this.targetLine.scale.z=ap.length()}}const lp=new Mi,hp=new js;class up extends nl{constructor(t){const e=new vs,n=new Yc({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],s={},o=new Wr(16755200),a=new Wr(16711680),c=new Wr(43775),l=new Wr(16777215),h=new Wr(3355443);function u(t,e,n){d(t,n),d(e,n)}function d(t,e){i.push(0,0,0),r.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(i.length/3-1)}u("n1","n2",o),u("n2","n4",o),u("n4","n3",o),u("n3","n1",o),u("f1","f2",o),u("f2","f4",o),u("f4","f3",o),u("f3","f1",o),u("n1","f1",o),u("n2","f2",o),u("n3","f3",o),u("n4","f4",o),u("p","n1",a),u("p","n2",a),u("p","n3",a),u("p","n4",a),u("u1","u2",c),u("u2","u3",c),u("u3","u1",c),u("c","t",l),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),e.setAttribute("position",new os(i,3)),e.setAttribute("color",new os(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){const t=this.geometry,e=this.pointMap;hp.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),dp("c",e,t,hp,0,0,-1),dp("t",e,t,hp,0,0,1),dp("n1",e,t,hp,-1,-1,-1),dp("n2",e,t,hp,1,-1,-1),dp("n3",e,t,hp,-1,1,-1),dp("n4",e,t,hp,1,1,-1),dp("f1",e,t,hp,-1,-1,1),dp("f2",e,t,hp,1,-1,1),dp("f3",e,t,hp,-1,1,1),dp("f4",e,t,hp,1,1,1),dp("u1",e,t,hp,.7,1.1,-1),dp("u2",e,t,hp,-.7,1.1,-1),dp("u3",e,t,hp,0,2,-1),dp("cf1",e,t,hp,-1,0,1),dp("cf2",e,t,hp,1,0,1),dp("cf3",e,t,hp,0,-1,1),dp("cf4",e,t,hp,0,1,1),dp("cn1",e,t,hp,-1,0,-1),dp("cn2",e,t,hp,1,0,-1),dp("cn3",e,t,hp,0,-1,-1),dp("cn4",e,t,hp,0,1,-1),t.getAttribute("position").needsUpdate=!0}}function dp(t,e,n,i,r,s,o){lp.set(r,s,o).unproject(i);const a=e[t];if(void 0!==a){const t=n.getAttribute("position");for(let e=0,n=a.length;e<n;e++)t.setXYZ(a[e],lp.x,lp.y,lp.z)}}const pp=new Ei;class fp extends nl{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new vs;r.setIndex(new $r(n,1)),r.setAttribute("position",new $r(i,3)),super(r,new Yc({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&pp.setFromObject(this.object),pp.isEmpty())return;const e=pp.min,n=pp.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=e.x,r[4]=n.y,r[5]=n.z,r[6]=e.x,r[7]=e.y,r[8]=n.z,r[9]=n.x,r[10]=e.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=e.z,r[15]=e.x,r[16]=n.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=n.x,r[22]=e.y,r[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return nl.prototype.copy.call(this,t),this.object=t.object,this}}class mp extends nl{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new vs;i.setIndex(new $r(n,1)),i.setAttribute("position",new os([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new Yc({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class gp extends Qc{constructor(t,e=1,n=16776960){const i=n,r=new vs;r.setAttribute("position",new os([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new Yc({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new vs;s.setAttribute("position",new os([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),s.computeBoundingSphere(),this.add(new Ns(s,new Xr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?H:F,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const yp=new Mi;let vp,xp;class bp extends _r{constructor(t,e,n,i,r,s){super(),this.type="ArrowHelper",void 0===t&&(t=new Mi(0,0,1)),void 0===e&&(e=new Mi(0,0,0)),void 0===n&&(n=1),void 0===i&&(i=16776960),void 0===r&&(r=.2*n),void 0===s&&(s=.2*r),void 0===vp&&(vp=new vs,vp.setAttribute("position",new os([0,0,0,0,1,0],3)),xp=new gl(0,.5,1,5,1),xp.translate(0,-.5,0)),this.position.copy(e),this.line=new Qc(vp,new Yc({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ns(xp,new Xr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{yp.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(yp,e)}}setLength(t,e,n){void 0===e&&(e=.2*t),void 0===n&&(n=.2*e),this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class wp extends nl{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new vs;n.setAttribute("position",new os(e,3)),n.setAttribute("color",new os([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new Yc({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const _p=new Float32Array(1),Mp=new Int32Array(_p.buffer),Sp={toHalfFloat:function(t){_p[0]=t;const e=Mp[0];let n=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?n:r>142?(n|=31744,n|=(255==r?0:1)&&8388607&e,n):r<113?(i|=2048,n|=(i>>114-r)+(i>>113-r&1),n):(n|=r-112<<10|i>>1,n+=1&i,n)}},Tp=Math.pow(2,8),Ep=[.125,.215,.35,.446,.526,.582],Ap=5+Ep.length,Rp={[Mn]:0,[Sn]:1,[En]:2,[Rn]:3,[Ln]:4,[Pn]:5,[Tn]:6},Lp=new Xr({side:H,depthWrite:!1,depthTest:!1}),Pp=new Ns(new ks,Lp),Cp=new Lu,{_lodPlanes:Ip,_sizeLods:Op,_sigmas:Dp}=jp(),Bp=new Wr;let Np=null;const zp=(1+Math.sqrt(5))/2,kp=1/zp,Fp=[new Mi(1,1,1),new Mi(-1,1,1),new Mi(1,1,-1),new Mi(-1,1,-1),new Mi(0,zp,kp),new Mi(0,zp,-kp),new Mi(kp,0,zp),new Mi(-kp,0,zp),new Mi(zp,kp,0),new Mi(-zp,kp,0)];function Hp(t){const e=Math.max(t.r,t.g,t.b),n=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);t.multiplyScalar(Math.pow(2,-n));return(n+128)/255}class Up{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(t),n=new Mi(0,1,0);return new gh({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:Rp[Mn]},outputEncoding:{value:Rp[Mn]}},vertexShader:Xp(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${Jp()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:W,depthTest:!1,depthWrite:!1})}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Np=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Yp(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=qp(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Ip.length;t++)Ip[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Np),t.scissorTest=!1,Vp(t,0,0,t.width,t.height)}_fromTexture(t){Np=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:Ht,minFilter:Ht,generateMipmaps:!1,type:Zt,format:pe,encoding:Gp(t)?t.encoding:En,depthBuffer:!1},n=Wp(e);return n.depthBuffer=!t,this._pingPongRenderTarget=Wp(e),n}_compileMaterial(t){const e=new Ns(Ip[0],t);this._renderer.compile(e,Cp)}_sceneToCubeUV(t,e,n,i){const r=new Ws(90,1,e,n),s=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],a=this._renderer,c=a.autoClear,l=a.outputEncoding,h=a.toneMapping;a.getClearColor(Bp),a.toneMapping=St,a.outputEncoding=Mn,a.autoClear=!1;let u=!1;const d=t.background;if(d){if(d.isColor){Lp.color.copy(d).convertSRGBToLinear(),t.background=null;const e=Hp(Lp.color);Lp.opacity=e,u=!0}}else{Lp.color.copy(Bp).convertSRGBToLinear();const t=Hp(Lp.color);Lp.opacity=t,u=!0}for(let e=0;e<6;e++){const n=e%3;0==n?(r.up.set(0,s[e],0),r.lookAt(o[e],0,0)):1==n?(r.up.set(0,0,s[e]),r.lookAt(0,o[e],0)):(r.up.set(0,s[e],0),r.lookAt(0,0,o[e])),Vp(i,n*Tp,e>2?Tp:0,Tp,Tp),a.setRenderTarget(i),u&&a.render(Pp,r),a.render(t,r)}a.toneMapping=h,a.outputEncoding=l,a.autoClear=c}_textureToCubeUV(t,e){const n=this._renderer;t.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Yp()):null==this._equirectShader&&(this._equirectShader=qp());const i=t.isCubeTexture?this._cubemapShader:this._equirectShader,r=new Ns(Ip[0],i),s=i.uniforms;s.envMap.value=t,t.isCubeTexture||s.texelSize.value.set(1/t.image.width,1/t.image.height),s.inputEncoding.value=Rp[t.encoding],s.outputEncoding.value=Rp[e.texture.encoding],Vp(e,0,0,3*Tp,2*Tp),n.setRenderTarget(e),n.render(r,Cp)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let e=1;e<Ap;e++){const n=Math.sqrt(Dp[e]*Dp[e]-Dp[e-1]*Dp[e-1]),i=Fp[(e-1)%Fp.length];this._blur(t,e-1,e,n,i)}e.autoClear=n}_blur(t,e,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,i,"latitudinal",r),this._halfBlur(s,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,s,o){const a=this._renderer,c=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new Ns(Ip[i],c),h=c.uniforms,u=Op[n]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let t=0;t<20;++t){const e=t/p,n=Math.exp(-e*e/2);m.push(n),0==t?g+=n:t<f&&(g+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/g;h.envMap.value=t.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===s,o&&(h.poleAxis.value=o),h.dTheta.value=d,h.mipInt.value=8-n,h.inputEncoding.value=Rp[t.texture.encoding],h.outputEncoding.value=Rp[t.texture.encoding];const y=Op[i];Vp(e,3*Math.max(0,Tp-2*y),(0===i?0:2*Tp)+2*y*(i>4?i-8+4:0),3*y,2*y),a.setRenderTarget(e),a.render(l,Cp)}}function Gp(t){return void 0!==t&&t.type===Zt&&(t.encoding===Mn||t.encoding===Sn||t.encoding===Tn)}function jp(){const t=[],e=[],n=[];let i=8;for(let r=0;r<Ap;r++){const s=Math.pow(2,i);e.push(s);let o=1/s;r>4?o=Ep[r-8+4-1]:0==r&&(o=0),n.push(o);const a=1/(s-1),c=-a/2,l=1+a/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*u),y=new Float32Array(f*d*u),v=new Float32Array(m*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(i,p*d*t),y.set(h,f*d*t);const r=[t,t,t,t,t,t];v.set(r,m*d*t)}const x=new vs;x.setAttribute("position",new $r(g,p)),x.setAttribute("uv",new $r(y,f)),x.setAttribute("faceIndex",new $r(v,m)),t.push(x),i>4&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function Wp(t){const e=new bi(3*Tp,3*Tp,t);return e.texture.mapping=Bt,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Vp(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function qp(){return new gh({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:new di(1,1)},inputEncoding:{value:Rp[Mn]},outputEncoding:{value:Rp[Mn]}},vertexShader:Xp(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${Jp()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:W,depthTest:!1,depthWrite:!1})}function Yp(){return new gh({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Rp[Mn]},outputEncoding:{value:Rp[Mn]}},vertexShader:Xp(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${Jp()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:W,depthTest:!1,depthWrite:!1})}function Xp(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Jp(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}function Zp(t,e,n,i,r,s,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Vr(t,e,n,r,s,o)}const $p=0,Kp=1,Qp=0,tf=1,ef=2;function nf(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function rf(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function sf(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new ll(t,e)}function of(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Ac(t)}function af(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new ll(t,e)}function cf(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new rl(t)}function lf(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new rl(t)}function hf(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new rl(t)}function uf(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Mi(t,e,n)}function df(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new $r(t,e).setUsage(Kn)}function pf(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Kr(t,e)}function ff(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Qr(t,e)}function mf(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ts(t,e)}function gf(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new es(t,e)}function yf(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new ns(t,e)}function vf(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new is(t,e)}function xf(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new rs(t,e)}function bf(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new os(t,e)}function wf(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new as(t,e)}function _f(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),au.call(this,t),this.type="catmullrom",this.closed=!0}function Mf(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),au.call(this,t),this.type="catmullrom"}function Sf(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),au.call(this,t),this.type="catmullrom"}function Tf(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new wp(t)}function Ef(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new fp(t,e)}function Af(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new nl(new Sl(t.geometry),new Yc({color:void 0!==e?e:16777215}))}function Rf(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new nl(new ph(t.geometry),new Yc({color:void 0!==e?e:16777215}))}function Lf(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new qh(t)}function Pf(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new $h(t)}function Cf(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Ys(t,n)}Qh.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Qh.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(bu.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),_f.prototype=Object.create(au.prototype),Mf.prototype=Object.create(au.prototype),Sf.prototype=Object.create(au.prototype),Object.assign(Sf.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),ip.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},$d.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Wh.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),zu.extractUrlBase(t)}}),Wh.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(Ud.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Ei.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Gi.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),$s.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Wd.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(ui,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),ui.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),ui.ceilPowerOfTwo(t)}}),Object.assign(pi.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}}),Object.assign($i.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Mi).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,s)},getInverse:function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}}),Er.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},Object.assign(_i.prototype,{multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}}),Object.assign(Zi.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(zr.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(zr,{barycoordFromPoint:function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),zr.getBarycoord(t,e,n,i,r)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),zr.getNormal(t,e,n,i)}}),Object.assign(wu.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Ql(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new oh(this,t)}}),Object.assign(di.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Mi.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(xi.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(_r.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(_r.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Ns.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Ns.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),bn},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(Cc.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Uc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),zc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Qh.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),Ws.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(_u.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties($r.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Kn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Kn)}}}),Object.assign($r.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Kn:$n),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(vs.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new $r(arguments[1],arguments[2])))},addDrawCall:function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(vs.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(ku.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Bd.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(hc.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Kn},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(hc.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Kn:$n),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Ql.prototype,{getArrays:function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")}}),Object.assign(lc.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(Id.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Yr.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Wr}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===G}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(xh.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(vh.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(Gs.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(sc.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(sc.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Sn:Mn}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Za.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(bi.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(ud.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new Ku).load(t,(function(t){e.setBuffer(t)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),yd.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Vs.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Vs.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)};const If={merge:function(t,e,n){let i;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,n)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}};function Of(){console.error("THREE.CanvasRenderer has been removed")}function Df(){console.error("THREE.JSONLoader has been removed.")}mi.crossOrigin=void 0,mi.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Kh;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s},mi.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Zh;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s},mi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},mi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Bf={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function Nf(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:R}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=R);class zf{join(t){this.loop=t||this.loop,this.loop&&this.loop.loop&&this.attach()}detach(){const t=this.loop.objects.indexOf(this);-1!==t&&this.loop.objects.splice(t,1),this.loop.scene.remove(this.mesh)}attach(){const t=this.loop.objects;-1===t.indexOf(this)&&t.push(this),this.loop.scene.add(this.mesh)}}zf.WORLD_BASE_Y=-4;class kf extends zf{constructor(t){super(),this.trajectory=[];let e=60;for(;e-- >0;)this.trajectory.push(1);this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.CircleGeometry(.3,32),e=new i.MeshPhongMaterial({color:16777215});return this.mesh=new i.Mesh(t,e),this.mesh}animate(){this.trajectory.shift(),this.trajectory.length||this.detach()}}class Ff extends zf{constructor(t,e=[]){super(),this.trajectory=e,this.RPM=0,this.RPS=0,this.RP60thOfASecond=0,this.rotation={x:0,y:0},this.hasIndicator=!1,this.breakingTrajectory=[],t&&t.loop||!(t instanceof Array)||(this.trajectory=t),this.trajectory=e||[],this.getMesh(),t&&t.loop&&this.join(t),this.setType("4-seam",1)}getMesh(){const t=new i.TextureLoader,e=t.load("public/images/BaseballColor.jpg"),n=t.load("public/images/BaseballBump.jpg"),r=new i.SphereGeometry(.36,32,16),s=new i.MeshPhongMaterial({map:e,bumpMap:n,bumpScale:.01});return this.mesh=new i.Mesh(r,s),this.mesh}animate(){const t=this.trajectory.shift(),e=this.mesh.position;t&&(e.x+=t.x,e.y+=t.y,e.z+=t.z,t.x+t.y+t.z!==0&&this.rotate()),e.z>-5&&!this.hasIndicator&&this.spawnIndicator(),t||(this.detach(),this.loop.resetCamera())}setType(t,e){const n=d.pitchDefinitions[t][4],i=d.pitchDefinitions[t][3];this.setRotation(n,i*(e||1))}rotate(){const t=this.rotation,e=this.mesh.rotation;e.x+=t.x,e.y+=t.y}setRotation(t,e){this.RPM=t,this.RPS=this.RPM/60;const n=this.RP60thOfASecond=this.RPS/60,i=n*Math.cos(e/180*Math.PI),r=n*Math.sin(e/180*Math.PI);this.rotation={x:360*i*Math.PI/180,y:360*r*Math.PI/180}}exportPositionTo(t){t.position.x=this.mesh.position.x,t.position.y=this.mesh.position.y,t.position.z=this.mesh.position.z}spawnIndicator(){if(this.hasIndicator)return;this.hasIndicator=!0;const t=new kf;t.mesh.position.x=this.mesh.position.x,t.mesh.position.y=this.mesh.position.y,t.mesh.position.z=this.mesh.position.z,t.join(this.loop.background)}derivePitchingTrajectory(t){this.setType(t.pitchInFlight.name,"right"===t.pitcher.throws?1:-1);const e=200-t.pitchTarget.y,n=t.pitchTarget.x,i=200-t.pitchInFlight.y,r=t.pitchInFlight.x,s=M.getFlightTime(t.pitchInFlight.velocity,d.pitchDefinitions[t.pitchInFlight.name][2]),o={x:"left"==t.pitcher.throws?1.5:-1.5,y:zf.WORLD_BASE_Y+6,z:-60.5};this.mesh.position.x=o.x,this.mesh.position.y=o.y,this.mesh.position.z=o.z;const a=.021*(n-100),c=.021*(100-e+76)-.2,l=-5,h=.021*(r-100),u=.021*(100-i)-.2,p=-5;let f={x:o.x,y:o.y,z:o.z},m={x:o.x,y:o.y,z:o.z};const g=[],y=[],v=60*s|0;let x=1.08*v|0,b=0;const w=h-a,_=u-c,S=Math.sqrt(Math.pow(w,2)+Math.pow(_,2))/76/.021,T=.2+Math.pow(.45,S);for(;x--;){const t=++b/v,e={x:o.x+(a-o.x)*t,y:o.y+(c-o.y)*t,z:o.z+(l-o.z)*t},n={x:o.x+(h-o.x)*t,y:o.y+(u-o.y)*t,z:o.z+(p-o.z)*t};if(t>1)var E=1-Math.pow(t,S);else E=Math.pow(1-t,T);const i=1-E,r=E+i,s={x:(e.x*E+n.x*i)/r,y:(e.y*E+n.y*i)/r,z:(e.z*E+n.z*i)/r},d={x:e.x-f.x,y:e.y-f.y,z:e.z-f.z},x={x:s.x-m.x,y:s.y-m.y,z:s.z-m.z};f=e,m=s,y.push(x),g.push(d)}let A=60;for(;A--;)y.push({x:0,y:0,z:0}),g.push({x:0,y:0,z:0});return this.breakingTrajectory=y,this.trajectory=g,g}deriveTrajectory(t,e){let n=t.flyAngle,i=Math.abs(t.travelDistance);const r=t.splay;t.fielder in{first:1,second:1,short:1,third:1}&&(i=Math.max(110,i));const s={x:e.x+t.x-100,y:e.y+t.y-100,z:-0};Math.sin(r/180*Math.PI),zf.WORLD_BASE_Y,Math.cos(r/180*Math.PI);this.mesh.position.x=.021*s.x,this.mesh.position.y=.021*s.y,this.mesh.position.z=s.z;const o=[],a=(zf.WORLD_BASE_Y,{...this.mesh.position}),c=this.getVelocity(n,i,32.185),l=c*Math.sin(n*Math.PI/180),h=c*Math.cos(n*Math.PI/180);t.battedBallSpeed=3600*c/5280;const u={x:h*Math.sin(r/180*Math.PI),y:l,z:-h*Math.cos(r/180*Math.PI)};for(;this.dist2d(s,a)<i&&o.length<600;){const t={x:u.x/60,y:u.y/60,z:u.z/60};a.x+=t.x,a.y+=t.y,a.z+=t.z,u.x*=.999,u.y=Math.max(u.y-32.185/60,-140),u.z*=.999,a.y<=zf.WORLD_BASE_Y&&u.y<0&&(u.y=.66*Math.abs(u.y)),o.push(t)}return this.trajectory=o,o}dist2d(t,e){return((t.z-e.z)**2+(t.x-e.x)**2)**.5}getVelocity(t,e,n){return Math.sqrt(Math.abs(e/2/Math.cos(t/180*Math.PI)/Math.sin(t/180*Math.PI)*n))}}Ff.DEFAULT_RPM=1e3,Ff.RPM=1e3,Ff.RPS=1e3/60,Ff.RP60thOfASecond=1e3/60/60,Ff.rotation={x:360*Ff.RP60thOfASecond*Math.PI/180,y:360*Ff.RP60thOfASecond*Math.PI/180};class Hf extends zf{constructor(t){super(),this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:14463126}),e=new i.Mesh(new i.CircleGeometry(9),t);return e.rotation.x=-.5*Math.PI,e.rotation.y=0,e.rotation.z=.25*Math.PI,e.position.x=0,e.position.y=zf.WORLD_BASE_Y+.9,e.position.z=-60.5,this.mesh=e,this.mesh}animate(){}}class Uf extends zf{constructor(t,e){super(),this.base=e,this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:16777215}),e=new i.Mesh(new i.BoxGeometry(1.5,.3,1.5,8,8,8),t);switch(e.rotation.x=-0*Math.PI,e.rotation.y=.25*Math.PI,e.rotation.z=0*Math.PI,this.base){case"first":e.position.x=69,e.position.z=-64;break;case"second":e.position.x=0,e.position.z=-128;break;case"third":e.position.x=-69,e.position.z=-64;break;case"home":e.position.x=0,e.position.z=0,e.rotation.y=0}return e.position.y=zf.WORLD_BASE_Y+.5,e.position.z-=0,this.mesh=e,this.mesh}animate(){}}class Gf extends zf{constructor(t,e){super(),this.side=e,this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:16777215}),e=new i.Mesh(new i.PlaneGeometry(.35,300,1,1),t),n="left"===this.side;return e.rotation.x=-.5*Math.PI,e.rotation.y=0*Math.PI,n?(e.rotation.z=.25*Math.PI,e.position.x=-108,e.position.z=-102):(e.rotation.z=-.25*Math.PI,e.position.x=108,e.position.z=-102),e.position.y=zf.WORLD_BASE_Y+.35,this.mesh=e,this.mesh}animate(){}}class jf extends zf{constructor(t,e){super(),this.side=e,this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:14937966}),e=new i.Mesh(new i.CylinderGeometry(.35,.35,180,8,8),t);return"left"===this.side?(e.position.x=-218,e.position.z=-212):(e.position.x=218,e.position.z=-212),e.position.y=zf.WORLD_BASE_Y,this.mesh=e,this.mesh}animate(){}}class Wf extends zf{constructor(t){super(),this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:14463126}),e=new i.Mesh(new i.PlaneGeometry(160,160,32,32),t);return e.rotation.x=-.5*Math.PI,e.rotation.y=0,e.rotation.z=.25*Math.PI,e.position.x=0,e.position.y=zf.WORLD_BASE_Y,e.position.z=-102,this.mesh=e,this.mesh}animate(){}}class Vf extends zf{constructor(t,e){super(),this.infield=e,this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:(this.infield,2640921)}),e=new i.Mesh(new i.PlaneGeometry(this.infield?94:8e3,this.infield?94:8e3,16,16),t);return this.infield?(e.rotation.x=-.5*Math.PI,e.rotation.y=0,e.rotation.z=.25*Math.PI,e.position.x=0,e.position.y=zf.WORLD_BASE_Y+.2,e.position.z=-62):(e.rotation.x=-.5*Math.PI,e.rotation.y=0,e.rotation.z=.25*Math.PI,e.position.x=0,e.position.y=zf.WORLD_BASE_Y-.2,e.position.z=-570),this.mesh=e,this.mesh}animate(){}}class qf extends zf{constructor(t,e){super(),this.base=e,this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:14463126}),e="home"===this.base.base,n=new i.Mesh(new i.CircleGeometry(e?18:12,32),t);n.rotation.x=-.5*Math.PI,n.rotation.y=0,n.rotation.z=.25*Math.PI;const r=this.base.getMesh().position;return n.position.x=.9*r.x,n.position.y=zf.WORLD_BASE_Y+.3,n.position.z=r.z,this.mesh=n,this.mesh}animate(){}}class Yf extends zf{constructor(t){super(),this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:4145221}),e=new i.Mesh(new i.BoxGeometry(200,45,4,16,16,16),t);return e.position.y=zf.WORLD_BASE_Y,e.position.z-=310,this.mesh=e,this.mesh}animate(){}}class Xf extends zf{constructor(t,e){super(),this.angle=e,this.angle=e,this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){const t=new i.MeshLambertMaterial({color:4145221}),e=new i.Mesh(new i.BoxGeometry(120,15,4,16,16,16),t),n=this.angle/180*Math.PI;e.rotation.y=-n;const r=300*Math.cos(n),s=300*Math.sin(n);return e.position.x+=s,e.position.y=zf.WORLD_BASE_Y,e.position.z-=r,this.mesh=e,this.mesh}animate(){}}const Jf=()=>(i.ShaderLib.sky={uniforms:{luminance:{value:1},turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new i.Vector3},up:{value:new i.Vector3(0,1,0)}},vertexShader:["uniform vec3 sunPosition;","uniform float rayleigh;","uniform float turbidity;","uniform float mieCoefficient;","uniform vec3 up;","varying vec3 vWorldPosition;","varying vec3 vSunDirection;","varying float vSunfade;","varying vec3 vBetaR;","varying vec3 vBetaM;","varying float vSunE;","const float e = 2.71828182845904523536028747135266249775724709369995957;","const float pi = 3.141592653589793238462643383279502884197169;","const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );","const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );","const float v = 4.0;","const vec3 K = vec3( 0.686, 0.678, 0.666 );","const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );","const float cutoffAngle = 1.6110731556870734;","const float steepness = 1.5;","const float EE = 1000.0;","float sunIntensity( float zenithAngleCos ) {","   zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );","   return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );","}","vec3 totalMie( float T ) {","   float c = ( 0.2 * T ) * 10E-18;","   return 0.434 * c * MieConst;","}","void main() {","   vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","   vWorldPosition = worldPosition.xyz;","   gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","   gl_Position.z = gl_Position.w;","   vSunDirection = normalize( sunPosition );","   vSunE = sunIntensity( dot( vSunDirection, up ) );","   vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );","   float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );","   vBetaR = totalRayleigh * rayleighCoefficient;","   vBetaM = totalMie( turbidity ) * mieCoefficient;","}"].join("\n"),fragmentShader:["varying vec3 vWorldPosition;","varying vec3 vSunDirection;","varying float vSunfade;","varying vec3 vBetaR;","varying vec3 vBetaM;","varying float vSunE;","uniform float luminance;","uniform float mieDirectionalG;","uniform vec3 up;","const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );","const float pi = 3.141592653589793238462643383279502884197169;","const float n = 1.0003;","const float N = 2.545E25;","const float rayleighZenithLength = 8.4E3;","const float mieZenithLength = 1.25E3;","const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;","const float THREE_OVER_SIXTEENPI = 0.05968310365946075;","const float ONE_OVER_FOURPI = 0.07957747154594767;","float rayleighPhase( float cosTheta ) {","   return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );","}","float hgPhase( float cosTheta, float g ) {","   float g2 = pow( g, 2.0 );","   float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );","   return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );","}","const float A = 0.15;","const float B = 0.50;","const float C = 0.10;","const float D = 0.20;","const float E = 0.02;","const float F = 0.30;","const float whiteScale = 1.0748724675633854;","vec3 Uncharted2Tonemap( vec3 x ) {","   return ( ( x * ( A * x + C * B ) + D * E ) / ( x * ( A * x + B ) + D * F ) ) - E / F;","}","void main() {","   float zenithAngle = acos( max( 0.0, dot( up, normalize( vWorldPosition - cameraPos ) ) ) );","   float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );","   float sR = rayleighZenithLength * inverse;","   float sM = mieZenithLength * inverse;","   vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );","   float cosTheta = dot( normalize( vWorldPosition - cameraPos ), vSunDirection );","   float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );","   vec3 betaRTheta = vBetaR * rPhase;","   float mPhase = hgPhase( cosTheta, mieDirectionalG );","   vec3 betaMTheta = vBetaM * mPhase;","   vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );","   Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );","   vec3 direction = normalize( vWorldPosition - cameraPos );","   float theta = acos( direction.y ); // elevation --\x3e y-axis, [-pi/2, pi/2]","   float phi = atan( direction.z, direction.x ); // azimuth --\x3e x-axis [-pi/2, pi/2]","   vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );","   vec3 L0 = vec3( 0.1 ) * Fex;","   float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );","   L0 += ( vSunE * 19000.0 * Fex ) * sundisk;","   vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );","   vec3 curr = Uncharted2Tonemap( ( log2( 2.0 / pow( luminance, 4.0 ) ) ) * texColor );","   vec3 color = curr * whiteScale;","   vec3 retColor = pow( color, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );","   gl_FragColor = vec4( retColor, 1.0 );","}"].join("\n")},class extends zf{constructor(){super();const t=i.ShaderLib.sky,e=i.UniformsUtils.clone(t.uniforms),n=new i.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e,side:i.BackSide}),r=new i.SphereBufferGeometry(45e4,32,15);this.mesh=new i.Mesh(r,n),this.uniforms=e}animate(){}});class Zf extends zf{constructor(t){super(),this.uniforms={luminance:{type:"f",value:1.1},turbidity:{type:"f",value:1},rayleigh:{type:"f",value:1.3},mieCoefficient:{type:"f",value:.0022},mieDirectionalG:{type:"f",value:.99},sunPosition:{type:"v3",value:new i.Vector3},inclination:.18,azimuth:.75,sun:!1},this.getMesh(),t&&t.loop&&this.join(t)}getMesh(){zf.getSkyMeshAndUniforms||(zf.getSkyMeshAndUniforms=Jf());const t=new zf.getSkyMeshAndUniforms;return this.sky=t,this.mesh=t.mesh,this.setUniforms(this.uniforms),this.mesh}setUniforms(t){this.uniforms=t;const{sky:e}=this;for(const n in t){const i=n;e.uniforms[i]&&"object"==typeof e.uniforms[i]?Object.assign(e.uniforms[i],{value:t[i].value}):Object.assign(e.uniforms,{k:t[i]})}}animate(){}}class $f extends zf{constructor(t){super(),this.getMesh(),t&&t.loop&&this.join(t),this.targetTime={h:6,m:0},this.time={h:6,m:0}}setTargetTime(t,e){this.targetTime.h=t,this.targetTime.m=e}getMesh(){const t=new i.Mesh(new i.SphereGeometry(2e4,16,8),new i.MeshBasicMaterial({color:16777215,wireframe:!0}));return t.position.z=-95e4,t.position.y=-1e5,t.position.x=-2e5,t.visible=!1,this.mesh=t,this.mesh}derivePosition(t){const e=t.uniforms,n=Math.PI*(e.inclination-.5),i=2*Math.PI*(e.azimuth-.5),r=this.mesh;r.position.z=4e5*Math.cos(i),r.position.y=4e5*Math.sin(i)*Math.sin(n),r.position.x=-4e5*Math.sin(i)*Math.cos(n),r.visible=e.sun,t.uniforms.sunPosition.value.copy(r.position)}animate(){this.time.h===this.targetTime.h&&this.time.m===this.targetTime.m||(this.loop.addMinutes(1),this.time.m+=1,this.time.m>=60&&(this.time.h++,this.time.m-=60,this.time.h%=24))}}const Kf={light:null,sun:null,addTo(t){const e=new i.HemisphereLight(16777147,526368,1);t.add(e);const n=new i.DirectionalLight(16777147,.45);e.position.set(-1,1,1),this.light=e,this.sun=n,t.add(n)},setLuminosity(t){this.light.intensity=t,this.sun.intensity=t/2}};let Qf,tm;const em=()=>Qf||(void 0!==i?Qf=new i.Vector3(0,-.2,-60.5):void 0),nm=()=>tm||(void 0!==i?tm=new i.Vector3(0,-.2,8):void 0);class im{constructor(t,e){this.elementClass=t,this.timeOfDay={h:12,m:30},this.overwatchMoveTarget=null,this.lighting=Kf,this.loop=this.loop.bind(this),this.onResize=this.onResize.bind(this),window.loop=this,this.timeOfDay={h:12,m:30},this.main(e)}loop(){this.active=!0,requestAnimationFrame(this.loop),this.panToward(this.target);const t=this.overwatchMoveTarget;this.moveToward(this.moveTarget||{x:t.x,y:t.y+12,z:t.z}),this.moveSpeed=.05,this.panSpeed=.3,this.objects.forEach(t=>t.animate()),this.renderer.render(this.scene,this.camera)}main(t){if(this.objects=[],this.getThree()){const e=this.scene=new i.Scene;if(e.fog=new i.FogExp2(8620168,.002),this.attach()){Kf.addTo(e);const n=this.camera=new i.PerspectiveCamera(60,this.getAspect(),.1,1e6);this.target=new i.Vector3(0,0,-60.5),this._target=new i.Vector3(0,0,-60.5),this.moveTarget=n.position,this.resetCamera(),this.active||this.loop(),t&&this.addStaticMeshes()}else setTimeout(()=>{this.main(t)},2e3)}}addMinutes(t){let e=this.timeOfDay.h,n=this.timeOfDay.m;for(n+=t;n>=60;)n-=60,e+=1,e%=24;this.setTimeOfDay(e,n)}setTargetTimeOfDay(t,e){let n;n=this.background?this.background.sun:this.sun,n?n.setTargetTime(t,e):setTimeout(()=>{this.setTargetTimeOfDay(t,e)},500)}setTimeOfDay(t,e){let n,i;this.timeOfDay={h:t,m:e},this.background?(n=this.background.sky,i=this.background.sun):(n=this.sky,i=this.sun),t<7.5&&(t+=24);const r=(t-7.5)/24+e/60/24;n.uniforms.azimuth=r,n.uniforms.inclination=.31,i.time.h=t,i.time.m=e,i.derivePosition(n);const s=2*(-.5+Math.max(Math.abs(1.25-r),Math.abs(.25-r)));this.Animator&&this.Animator.setLuminosity(.1+s/1.4)}addStaticMeshes(){(new Wf).join(this),(new Hf).join(this),(new Vf).join(this),new Vf(this,!0),(new Yf).join(this);const t=new $f,e=new Zf;t.derivePosition(e),e.join(this),t.join(this),this.sky=e,this.sun=t,new Xf(this,-34),new Xf(this,-15),new Xf(this,15),new Xf(this,34);const n=new Uf(this,"first"),i=new Uf(this,"second"),r=new Uf(this,"third"),s=new Uf(this,"home");new qf(this,n),new qf(this,i),new qf(this,r),new qf(this,s),new Gf(this,"left"),new Gf(this,"right"),new jf(this,"left"),new jf(this,"right")}breathe(){const t=this.camera.position,{x:e,y:n,z:i}=t,r=5e-4*this.bob||1;n>.6?this.bob=-1:n<-.6&&(this.bob=1),t.y+=r,t.z+=r}getThree(){return i}attach(){window.removeEventListener("resize",this.onResize,!1),window.addEventListener("resize",this.onResize,!1),this.element=document.getElementsByClassName(this.elementClass)[0];const{element:t}=this;if(t){t.innerHTML="";const e=new i.WebGLRenderer({alpha:!0});return this.setSize(e),t.appendChild(e.domElement),this.renderer=e,e}return!1}onResize(){const t=this.element;this.camera.aspect=this.getAspect(),this.camera.fov=Math.max(90-t.offsetWidth/1200*30,55),this.camera.updateProjectionMatrix(),this.setSize(this.renderer)}setSize(t){const e=this.element.offsetWidth;t.setSize(e,rm)}getAspect(){return this.element.offsetWidth/rm}panToward(t){const e=this.panSpeed;this.forAllLoops(n=>{const i=n._target;i&&(i.x=i.x+Math.max(Math.min((t.x-i.x)/100,e),-e),i.y=i.y+Math.max(Math.min((t.y-i.y)/100,e),-e),i.z=i.z+Math.max(Math.min((t.z-i.z)/100,e),-e),n.camera.lookAt(i))})}moveToward(t){const e=this.moveSpeed;this.forAllLoops(n=>{const i=n.camera&&n.camera.position;i&&(i.x+=Math.max(Math.min(t.x-i.x,e),-e),i.y+=Math.max(Math.min(t.y-i.y,e),-e),i.z+=Math.max(Math.min(t.z-i.z,e),-e))})}setLookTarget(t,e){this.forAllLoops(n=>{n.panSpeed=e,n.panning=t!==em(),n.target=t})}setMoveTarget(t,e){this.forAllLoops(n=>{n.moveSpeed=e,n.moveTarget=t,n.overwatchMoveTarget=null})}setOverwatchMoveTarget(t,e){this.forAllLoops(n=>{n.moveSpeed=e,n.overwatchMoveTarget=t,n.moveTarget=null})}resetCamera(){let t=.5;this.camera.position.z!==nm().z&&(t=2.5),this.setLookTarget(em(),t),this.setMoveTarget(nm(),t/10)}moveCamera(t,e,n){if("object"==typeof t){const e=t;return this.moveCamera(e.x,e.y,e.z)}this.forAllLoops(i=>{i.camera.position.x=t,i.camera.position.y=e,i.camera.position.z=n})}forAllLoops(t){this.background&&t(this.background),this.foreground&&t(this.foreground),t(this)}test(){const t=new Ff;Object.assign(window,{Ball:Ff,ball:t}),t.setType("4-seam"),t.animate=()=>{t.rotate()},t.join(this)}testTrajectory(t){const e=new Ff;Object.assign(window,{Ball:Ff,ball:e}),e.deriveTrajectory(t||{splay:-35,travelDistance:135,flyAngle:-15,x:100,y:100},{x:0,y:0}),e.join(this)}}const rm=700;class sm{static init(){sm.console||sm.loop||"webgl"!==sm.renderingMode||sm.beginRender()}static beginRender(){return sm.background=new im("webgl-bg-container",!0),sm.loop=new im("webgl-container",!1),sm.loop.background=sm.background,sm.background.foreground=sm.loop,sm.loop}static setLuminosity(t){sm.console||(sm.loop.lighting.setLuminosity(t),sm.background.lighting.setLuminosity(t))}static loadTweenMax(){return sm.console||"object"!=typeof window?sm.TweenMax={set(){},to(){},from(){},killAll(){}}:sm.TweenMax=window.TweenMax,sm.TweenMax}static updateFlightPath(t){if(!sm.console)return sm.renderFlightPath(t,this)}static renderFlightPath(t,e){sm.loadTweenMax().killAll();const n=e.y,i=M.getFlightTime(n.pitchInFlight.velocity,d.pitchDefinitions[n.pitchInFlight.name][2]);n.expectedSwingTiming=Date.now()+1e3*i,sm.loop||sm.beginRender();const r=new Ff;sm._ball=r,r.derivePitchingTrajectory(n),r.trajectory=r.breakingTrajectory,r.join(sm.loop),e.lastTimeout=setTimeout(()=>{e.allowInput=!0,"function"==typeof t&&t()},1e3*i);$(".baseball").addClass("hide"),n.humanBatting()&&e.holdUpTimeouts.push(setTimeout(()=>{e.holdUp()},1e3*(i+sm.HOLD_UP_ALLOWANCE)))}static animateFieldingTrajectory(t){return sm.console?t.swingResult:(setTimeout(()=>{sm.tweenFieldingTrajectory(t)},50),sm.renderFieldingTrajectory(t))}static tweenFieldingTrajectory(t){const e=sm.loadTweenMax();let n=$(".splay-indicator-ball");e.killAll();const i=t.swingResult,r=1,s=.57,o=.96;let a=i.flyAngle;const c=Math.abs(i.travelDistance),l=i.travelDistance<0?-1:1;M.memory.bounding=a<0,a=1+Math.abs(a),a>90&&(a=180-a);const h=r*Math.sqrt(9.81*c/Math.sin(2*Math.PI*a/180)),u=Math.sin(M.RADIAN*a)*h,d=u*u/19.62*s,p=1.5*Math.sqrt(2*d/9.81)*o/4,f=M;let m=[f.transitionalTrajectory(0,p,0,d,l*c,i.splay),f.transitionalTrajectory(25,p,0),f.transitionalTrajectory(50,p,1),f.transitionalTrajectory(75,p,2),f.transitionalTrajectory(100,p,3)];return e.set(n,m[0]),e.to(n,p,m[1]),e.to(n,p,m[2]),e.to(n,p,m[3]),e.to(n,p,m[4]),t.swingResult}static renderFieldingTrajectory(t){sm.loop||sm.beginRender();const e=t.swingResult,n=sm._ball||new Ff;if(n.deriveTrajectory(e,t.pitchInFlight),n.join(sm.loop),e.thrownOut||e.caught||e.bases)if(Math.random()<.15&&n.airTime>1.5||Math.random()<.5&&n.airTime>2.5){e.splay>0&&-1,sm.loop.setLookTarget(n.mesh.position,.3),sm.loop.setOverwatchMoveTarget(n.mesh.position,.32)}else sm.loop.setLookTarget(n.mesh.position,.5),sm.loop.setMoveTarget({x:0,y:6,z:8},.05);else Math.abs(e.splay)<60&&(sm.loop.setLookTarget(n.mesh.position,.5),sm.loop.setMoveTarget({x:0,y:6,z:8},.05));return t.swingResult}}sm.TweenMax=null,sm.THREE=null,sm.TIME_FROM_SET=2300,sm.TIME_FROM_WINDUP=3600,sm.HOLD_UP_ALLOWANCE=.25,sm.pitchTarget=null,sm.pitchBreak=null,sm.renderingMode="webgl";class om{constructor(t){this.game=t,this.first=null,this.second=null,this.third=null,this.positions={pitcher:[90,66],catcher:[0,0],first:[128,98],second:[102.5,130],short:[77.5,130],third:[52,98],left:[59,280],center:[90,280],right:[121,280]},this.game=t}hasRunnersOn(){return this.first instanceof A||this.second instanceof A||this.third instanceof A}determineSwingContactResult(t){this.first&&(this.first.fatigue+=4),this.second&&(this.second.fatigue+=4),this.third&&(this.third.fatigue+=4);const e=t.x,n=t.y,i=this.game,r=i.batter.skill.offense.eye,s=M.getSplayAndFlyAngle(e,n,t.angle,r,t.timing,"left"===i.batter.bats),o=s.splay,a=s.fly,c=this.game.batter.skill.offense.power+(this.game.batter.eye.bonus||0)/5;let l=_.travelDistance(c,a,e,n);if(a<0&&l>95&&(l=(l-95)/4+95),Math.abs(o)>50&&(t.foul=!0),t.fielder=this.findFielder(o,l,c,a),t.travelDistance=l,t.flyAngle=a,t.splay=o,t.sacrificeAdvances=[],t.fielder){const e="top"===i.half?i.teams.home.positions[t.fielder]:i.teams.away.positions[t.fielder],n=e.position in{left:!0,center:!0,right:!0};e.fatigue+=4,t.error=!1;let r=e.skill.defense.fielding/100;const s=e.skill.defense.throwing/100;t.fielderTravel=this.getPolarDistance(this.positions[t.fielder],[o+90,l]);const c=1.8*((1+Math.sqrt(e.skill.defense.speed/100))/2*100)+2.4*a-3.35*t.fielderTravel-25;if(c>0&&a>10){if(_.error(e))r*=.5,t.error=!0,e.stats.fielding.E++,t.caught=!1;else if(e.stats.fielding.PO++,t.caught=!0,i.umpire.count.outs<2&&n){const e=M.fielderReturnDelay(t.travelDistance,s,r,100);this.first&&e>this.first.getBaseRunningTime()+4.5&&t.sacrificeAdvances.push("first"),this.second&&e>this.second.getBaseRunningTime()&&t.sacrificeAdvances.push("second"),this.third&&e>this.third.getBaseRunningTime()-.5&&t.sacrificeAdvances.push("third")}}else t.caught=!1;if(!t.caught){t.bases=0,t.thrownOut=!1;let n=M.fielderReturnDelay(t.travelDistance,s,r,c);t.fieldingDelay=n,t.outfielder=t.fielder in{left:1,center:1,right:1};const o=i.batter.skill.offense.speed;let a=M.baseRunningTime(o);if(t.outfielder)for(t.bases=1,a*=1.05,n-=a;(n>a&&Math.random()<.25+o/200||Math.random()<.04+o/650)&&t.bases<3;)a*=.95,t.bases++,n-=a;else{const r=this.first,s=this.second,o=this.third;t.fieldersChoice=null,t.bases=n>=a?1:0,r&&n<r.getBaseRunningTime()&&(t.fieldersChoice="first"),r&&s&&n<s.getBaseRunningTime()+.6&&(t.fieldersChoice="second"),o&&n<o.getBaseRunningTime()&&(t.fieldersChoice="third");let c=i.umpire.count.outs;if(t.fieldersChoice){c++,t.bases=1;const a=e.team.positions;let l=this.forcePlaySituation();if(l){const e=[];let h=n;o&&s&&"third"===l&&M.infieldThrowDelay(a.catcher)+h<s.getBaseRunningTime()&&c<3&&(h+=M.infieldThrowDelay(a.catcher),a.catcher.fatigue+=4,e.push("second"),c++,l="second"),s&&r&&"second"===l&&M.infieldThrowDelay(a.third)+h<r.getBaseRunningTime()&&c<3&&(h+=M.infieldThrowDelay(a.third),a.third.fatigue+=4,e.push("first"),c++,l="first"),r&&"first"===l&&M.infieldThrowDelay(a.second)+h<i.batter.getBaseRunningTime()&&c<3&&(h+=M.infieldThrowDelay(a.second),a.second.fatigue+=4,e.push("batter"),t.bases=0,c++),c-i.umpire.count.outs==2&&(t.doublePlay=!0),e.length&&(t.additionalOuts=e,t.firstOut=t.fieldersChoice,~e.indexOf("batter")&&delete t.fieldersChoice)}}else delete t.additionalOuts,delete t.firstOut,delete t.doublePlay,delete t.fieldersChoice}t.thrownOut=0===t.bases,t.thrownOut&&(e.stats.fielding.PO++,t.thrownOut=!0,t.error=!1)}}else Math.abs(o)<45&&l>300?t.bases=4:(t.foul=!0,t.caught=!1);this.game.swingResult=t,sm.console||(sm._ball.hasIndicator=!0,sm.animateFieldingTrajectory(this.game))}forcePlaySituation(){const t=this.first,e=this.second,n=this.third;return(t&&e&&n?"third":t&&e&&"second")||t&&"first"||!1}getLeadRunner(){const t=this.first,e=this.second,n=this.third;return n&&t&&!e?t:n||e||t}findFielder(t,e,n,i){const r=t;let s;if(Math.abs(r)>50)return!1;if(e<10&&e>-20)return"catcher";if(e>=10&&e<45&&r<5)return"pitcher";let o=e<145-Math.abs(r)/90*50;if(i<7){let t=Math.cos(i/180*Math.PI)*(85+n/100*10);i<0&&(t*=.5);const e=1+22.5*(100-t)/100;s=r<-20?"third":r<5?"short":r<30?"second":"first";const a=this.positions[s][0]-90;o=o||Math.abs(r-a)<e}return s=o?r<-20?"third":r<5?"short":r<30?"second":"first":e<310&&(r<-15?"left":r<16?"center":"right"),s}getPolarDistance(t,e){return M.getPolarDistance(t,e)}}class am{constructor(t){this.game=t,this.count={strikes:0,balls:0,outs:0},this.says="Play ball!",this.playBall()}playBall(){const t=this.game;t.half="top",t.inning=1,t.batter=t.teams.away.lineup[0],t.batterRunner=t.teams.away.lineup[0],t.deck=t.teams.away.lineup[1],t.hole=t.teams.away.lineup[2],t.pitcher=t.teams.home.positions.pitcher;const e=`一回のオモテ、${t.teams.away.nameJ}の攻撃対${t.teams.home.nameJ}、ピッチャーは${t.teams.home.positions.pitcher.nameJ}。`,n=`Top 1, ${t.teams.away.name} offense vs. ${t.teams.home.positions.pitcher.name} starting for ${t.teams.home.name}`;t.log.note(n,e),t.batter.ready=!0,t.log.noteBatter(t.batter)}makeCall(){this.says="";const t=this.game,e=t.swingResult,n=t.pitcher,i=t.batter,r=t.field;if(t.swingResult.fielder)var s=t.teams["top"===t.half?"home":"away"].positions[e.fielder];else s=null;if(t.batterRunner=t.batter,!isNaN(e.stoleABase)){var o=t.batter.team.lineup[e.stoleABase];if(o){switch(o.atBats.push(l.STOLEN_BASE),o){case r.first:r.second=o,r.first=null;break;case r.second:r.third=o,r.second=null;break;case r.third:r.third=null,o.stats.batting.r++,o.atBats.push(l.RUN),this.runScores()}o.stats.batting.sb++}}if(!isNaN(e.caughtStealing)){switch(t.teams["top"===t.half?"home":"away"].positions.catcher.stats.fielding.PO++,this.count.outs++,(o=t.batter.team.lineup[e.caughtStealing]).stats.batting.cs++,o.atBats.push(l.CAUGHT_STEALING),o){case r.first:r.first=null;break;case r.second:r.second=null;break;case r.third:r.third=null}if(this.count.outs>=3)return this.says="Three outs, change.",this.count.outs=this.count.balls=this.count.strikes=0,n.stats.pitching.IP[0]++,n.stats.pitching.IP[1]=0,this.changeSides()}n.stats.pitching.pitches++;const a=_.inStrikezone(t.pitchInFlight.x,t.pitchInFlight.y);if(i.stats.batting.ps++,e.looking)e.strike?(this.count.strikes++,n.stats.pitching.strikes++):this.count.balls++;else if(i.stats.batting.swings++,a?i.stats.batting.zSwings++:i.stats.batting.oSwings++,n.stats.pitching.strikes++,e.contact){if(t.passMinutes(1),e.caught)i.stats.batting.pa++,n.stats.pitching.IP[1]++,e.sacrificeAdvances.length&&this.count.outs<2?(i.stats.batting.sac++,t.batter.atBats.push(l.SACRIFICE),this.advanceRunners(!1,null,e.sacrificeAdvances)):(i.stats.batting.ab++,e.flyAngle<15?(t.batter.atBats.push(l.LINEOUT),t.batter.stats.batting.fo+=1):(t.batter.atBats.push(l.FLYOUT),t.batter.stats.batting.fo+=1)),this.count.outs++,s.stats.fielding.PO++,this.newBatter();else if(e.foul)this.count.strikes++,this.count.strikes>2&&(this.count.strikes=2);else if(i.stats.batting.pa++,i.stats.batting.ab++,e.firstOut&&(t.field[e.firstOut]=null,e.additionalOuts.map(e=>{"batter"!==e&&(t.field[e]=null)}),this.count.outs+=e.additionalOuts.length),e.fieldersChoice&&this.count.outs<2?(e.bases=0,this.count.outs++,s.stats.fielding.PO++,n.stats.pitching.IP[1]++,t.batter.atBats.push(l.FIELDERS_CHOICE),t.batter.stats.batting.go+=1,this.advanceRunners(!1,e.fieldersChoice),e.doublePlay&&t.batter.atBats.push(l.GIDP),this.reachBase(),e.outs=this.count.outs,this.newBatter()):e.fieldersChoice&&(e.bases=0,e.thrownOut=!0),e.thrownOut&&(this.count.outs++,s.stats.fielding.PO++,n.stats.pitching.IP[1]++,t.batter.atBats.push(l.GROUNDOUT),t.batter.stats.batting.go+=1,e.doublePlay&&t.batter.atBats.push(l.GIDP),this.count.outs<3&&this.advanceRunners(!1),e.outs=this.count.outs,this.newBatter()),e.hitByPitch&&i.stats.batting.ab--,e.bases){e.error?e.bases>0&&(t.tally["top"===t.half?"home":"away"].E++,s.stats.fielding.E++):(t.tally["top"===t.half?"away":"home"][l.SINGLE]++,n.stats.pitching.H++);let r=e.bases;switch(r){case 1:if(e.error){t.batter.atBats.push(l.REACHED_ON_ERROR);break}t.batter.atBats.push(l.SINGLE),i.stats.batting.h++;break;case 2:if(e.error){t.batter.atBats.push(l.REACHED_ON_ERROR);break}t.batter.atBats.push(l.DOUBLE),i.stats.batting.h++,i.stats.batting["2b"]++;break;case 3:if(e.error){t.batter.atBats.push(l.REACHED_ON_ERROR);break}t.batter.atBats.push(l.TRIPLE),i.stats.batting.h++,i.stats.batting["3b"]++;break;case 4:if(e.error){t.batter.atBats.push(l.REACHED_ON_ERROR);break}t.batter.atBats.push(l.HOMERUN),n.stats.pitching.HR++,i.stats.batting.h++,i.stats.batting.hr++}for(r>0&&r<4&&!e.error&&~["left","right","center"].indexOf(e.fielder)&&i.recordInfieldHit(),r>=1&&(this.advanceRunners(),this.reachBase(),r-=1);r>0;)r-=1,this.advanceRunners();this.newBatter()}}else this.count.strikes++;this.says=`${this.count.balls} and ${this.count.strikes}`,e.outs=this.count.outs,this.count.strikes>2&&(i.stats.batting.pa++,i.stats.batting.ab++,i.stats.batting.so++,n.stats.pitching.K++,this.count.outs++,n.stats.pitching.IP[1]++,this.count.balls=this.count.strikes=0,this.says="Strike three. Batter out.",i.atBats.push(l.STRIKEOUT),this.newBatter()),this.count.balls>3&&(i.stats.batting.pa++,i.stats.batting.bb++,n.stats.pitching.BB++,this.says="Ball four.",this.count.balls=this.count.strikes=0,i.atBats.push(l.WALK),this.advanceRunners(!0).reachBase().newBatter()),this.count.outs>2&&(this.says="Three outs, change.",this.count.outs=this.count.balls=this.count.strikes=0,n.stats.pitching.IP[0]++,n.stats.pitching.IP[1]=0,this.changeSides())}reachBase(){const t=this.game;return t.field.first=t.batter,t.field.first.fatigue+=2,this}advanceRunners(t,e,n){t=Boolean(t);const i=this.game;let r=i.field.first,s=i.field.second,o=i.field.third;const a=i.swingResult;if(t)r&&(s?o?(i.batter.recordRBI(),i.batter.stats.batting.rbi++,o.atBats.push(l.RUN),o.stats.batting.r++,i.pitcher.stats.pitching.ER++,this.runScores(),i.field.third=s,i.field.second=r,r=null):(i.field.third=s,i.field.second=r,i.field.first=null):(i.field.second=r,i.field.first=null));else{e&&(i.field[e]=null,r=i.field.first,s=i.field.second,o=i.field.third);let t=t=>!0;n&&(t=t=>{switch(t){case"first":return!!~n.indexOf("first")&&!i.field.second;case"second":return!!~n.indexOf("second")&&!i.field.third;case"third":return!!~n.indexOf("third")}});let c=0;if(a.fielder){const t=i.pitcher.team.positions[a.fielder];c=~["left","center","right"].indexOf(t.position)?t.skill.defense.throwing:t.skill.defense.throwing+120}o&&t("third")&&(this.runScores(),i.batter!=o&&(i.batter.recordRBI(),o.atBats.push(l.RUN)),i.batter.stats.batting.rbi++,o.stats.batting.r++,i.pitcher.stats.pitching.ER++,i.field.third=null),s&&t("second")&&(i.field.third=s,i.field.second=null,s!=i.batter&&!n&&Math.random()*(s.skill.offense.speed+120)>c+50&&(this.runScores(),i.batter!=s&&(i.batter.recordRBI(),s.atBats.push(l.RUN)),i.field.third=null)),r&&t("first")&&(i.field.second=r,i.field.first=null,r!=i.batter&&!i.field.third&&!n&&Math.random()*(r.skill.offense.speed+120)>c+60&&(i.field.third=r,i.field.second=null))}return this}runScores(){const t=this.game;t.scoreboard["top"===t.half?"away":"home"][t.inning]++,t.tally["top"===t.half?"away":"home"].R++}newBatter(){const t=this.game;t.passMinutes(2),t.log.pitchRecord={e:[],n:[]},this.count.balls=this.count.strikes=0,t.log.notePlateAppearanceResult(t);const e="bottom"===t.half?t.teams.home:t.teams.away;t.lastBatter=t.batter,t.batter=e.lineup[(e.nowBatting+1)%9],t.batter.ready=!t.humanBatting(),t.deck=e.lineup[(e.nowBatting+2)%9],t.hole=e.lineup[(e.nowBatting+3)%9],e.nowBatting=(e.nowBatting+1)%9,this.count.outs<3&&t.log.noteBatter(t.batter),t.humanPitching()||t.pitcher.team.manager.checkPitcherFatigue()}changeSides(){const t=this.game;let e,n;if(t.passMinutes(5),t.swingResult={},t.swingResult.looking=!0,t.pitchInFlight.x=null,t.pitchInFlight.y=null,t.log.pitchRecord={e:[],n:[]},t.field.first=null,t.field.second=null,t.field.third=null,"top"===t.half){if(9==t.inning&&t.tally.home.R>t.tally.away.R)return t.end();t.half="bottom"}else{if(t.inning+1>9)return t.end();t.inning++,t.half="top"}e="top"===t.half?"away":"home",n="top"===t.half?"home":"away";const i=`${t.inning}回の${"top"===t.half?"オモテ":"ウラ"}、${t.teams["top"===t.half?"away":"home"].getName()}の攻撃。`,r=`${"top"===t.half?"Top":"Bottom"} ${t.inning}`;t.log.note(r,i);const s=t.teams[e];t.batter=s.lineup[s.nowBatting],t.batterRunner=t.batter,t.deck=s.lineup[(s.nowBatting+1)%9],t.hole=s.lineup[(s.nowBatting+2)%9],t.pitcher=t.teams[n].positions.pitcher,t.log.noteBatter(t.batter),t.autoPitchSelect(),t.field.defense=s.positions,this.onSideChange()}onSideChange(){}}const cm=new E("no init");cm.name="Japan",cm.nameJ="日本";const lm=new A(cm),hm=new A(cm),um=new A(cm),dm=new A(cm),pm=new A(cm),fm=new A(cm),mm=new A(cm),gm=new A(cm),ym=new A(cm),vm=(new A(cm),new A(cm),new A(cm),new A(cm),new A(cm),new class{makePlayer(t,e,n,i,r,s,o,a,c,l,h){t.hero=!0,t.name=`${n} ${e}`,t.nameJ=i+r,t.surname=n,t.surnameJ=i,t.spaceName(i,r),t.randomizeSkills(!0,!0),t.skill.offense=o,t.skill.defense=a,t.skill.pitching=s,t.bats=c,t.throws=l,t.number=h;for(const e of Object.keys(t.pitching)){const n=t.pitching[e];n.velocity+=s/5|0,n.break+=s/5|0,n.control+=s/5|0}return t.resetStats(0),t}});vm.makePlayer(lm,"Yu","Darvish","ダルビッシュ","有",150,{eye:80,power:80,speed:80},{catching:50,fielding:70,throwing:100,speed:80},"right","right",11),vm.makePlayer(hm,"Kenji","Johjima","城島","健司",60,{eye:90,power:108,speed:70},{catching:140,fielding:88,throwing:75,speed:75},"right","right",2),vm.makePlayer(um,"Michihiro","Ogasawara","小笠原","道大",80,{eye:96,power:90,speed:90},{catching:50,fielding:96,throwing:85,speed:70},"left","right",36),vm.makePlayer(dm,"Tsuyoshi","Nishioka","西岡","剛",80,{eye:95,power:75,speed:92},{catching:90,fielding:88,throwing:88,speed:90},"right","right",7),vm.makePlayer(pm,"Munenori","Kawasaki","川崎","宗則",80,{eye:95,power:75,speed:95},{catching:90,fielding:120,throwing:99,speed:100},"left","right",52),vm.makePlayer(fm,"Shuichi","Murata","村田","修一",80,{eye:82,power:110,speed:70},{catching:80,fielding:80,throwing:90,speed:60},"right","right",25),vm.makePlayer(mm,"Hideki","Matsui","松井","秀樹",75,{eye:104,power:120,speed:50},{catching:40,fielding:85,throwing:70,speed:60},"left","right",55),vm.makePlayer(gm,"","Ichiro","イチロー","",89,{eye:115,power:80,speed:115},{catching:80,fielding:115,throwing:115,speed:115},"left","right",51),vm.makePlayer(ym,"Atsunori","Inaba","稲葉","篤紀",80,{eye:92,power:95,speed:75},{catching:50,fielding:95,throwing:95,speed:75},"right","right",41),cm.bench=[lm,hm,um,dm,pm,fm,mm,gm,ym],cm.manager.makeLineup(),cm.positions={pitcher:lm,catcher:hm,first:um,second:dm,short:pm,third:fm,left:mm,center:gm,right:ym};for(const t in cm.positions)cm.positions.hasOwnProperty(t)&&(cm.positions[t].position=t);cm.lineup=[gm,pm,ym,mm,um,hm,fm,dm,lm],cm.lineup.map((t,e)=>{t.order=e});class xm{constructor(){this.teams={TeamJapan:cm}}assignTeam(t,e,n){const i=this.teams[e];i.game=t,t.teams[n]=i}}const bm="object"==typeof window?window.$:()=>{},wm=console.log;class _m{constructor(t,e=!1,n="home"){for(this.humanControl=n,this.field=new om(this),this.teams={away:new E(this),home:new E(this)},this.log=new l(this),this.gamesIntoSeason=72,this.showMessage=!1,this.debug=[],this.pitcher=null,this.batter=null,this.batterRunner=null,this.lastBatter=null,this.deck=null,this.hole=null,this.stage="pitch",this.opponentConnected=!1,this.batterReadyTimeout=-1,this.battersEye={e:"",n:""},this.startOpponentPitching=()=>{},this.pitchTarget={x:100,y:100},this.pitchInFlight={x:100,y:100,breakDirection:[0,0],name:"slider",velocity:50,break:50,control:50},this.swingResult={x:0,y:0,strike:!1,foul:!1,caught:!1,contact:!1,looking:!0,bases:0,fielder:"short",outs:0},this.playResult={batter:"",fielder:""},this.half="top",this.inning=1,this.scoreboard={away:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},home:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0}},this.tally={away:{H:0,R:0,E:0},home:{H:0,R:0,E:0}},this.expectedSwingTiming=0,this.helper=d,this.startTime={h:3*Math.random()+13|0,m:60*Math.random()|0},this.timeOfDay={h:12,m:45},this.opponentService=null,e&&(this.console=!0),this.reset(),t&&(s.mode=t),this.gamesIntoSeason=72+Math.floor(72*Math.random()),this.log.game=this,this.debug=[];this.teams.away.name===this.teams.home.name;)this.teams.away.pickName();this.umpire=new am(this),this.humanPitching()&&(this.stage="pitch"),this.autoPitchSelect(),sm.init(),this.passMinutes(5)}get console(){return sm.console}set console(t){sm.console=t}passMinutes(t){const e=this.timeOfDay;for(e.m|=0,e.m+=0|t;e.m>=60;)e.m-=60,e.h=(1+(0|e.h))%24;sm.console||sm.loop.setTargetTimeOfDay(e.h,e.m)}getInning(){return"n"===s.mode?this.inning+("top"===this.half?"オモテ":"ウラ"):`${this.half.toUpperCase()} ${this.inning}`}humanBatting(){const t=this.humanControl;if("none"===t)return!1;switch(this.half){case"top":return"both"===t||"away"===t;case"bottom":return"both"===t||"home"===t}return!1}humanPitching(){const t=this.humanControl;if("none"===t)return!1;switch(this.half){case"top":return"both"===t||"home"===t;case"bottom":return"both"===t||"away"===t}return!1}end(){let t,e;this.stage="end",t=this.tally.home.R>this.tally.away.R?"Home team wins!":this.tally.home.R===this.tally.away.R?"You tied. Yes, you can do that.":"Visitors win!",e=this.tally.home.R>this.tally.away.R?this.teams.home.getName()+"の勝利":this.tally.home.R===this.tally.away.R?"引き分け":this.teams.away.getName()+"の勝利",this.tally.home.R>this.tally.away.R?(this.teams.home.positions.pitcher.stats.pitching.W++,this.teams.away.positions.pitcher.stats.pitching.L++):this.tally.home.R<this.tally.away.R&&(this.teams.home.positions.pitcher.stats.pitching.L++,this.teams.away.positions.pitcher.stats.pitching.W++),this.log.note(t,e),this.log.note("Reload to play again","リロるは次の試合へ")}simulateInput(t){const e=this.stage,n=this.pitchTarget;"end"!==e&&("pitch"===e?this.autoPitch(t):"swing"===e&&("object"!=typeof n&&(this.pitchTarget={x:100,y:100}),this.autoSwing(this.pitchTarget.x,this.pitchTarget.y,t)))}simulatePitchAndSwing(t){if("end"===this.stage)return;this.autoPitch(t);const e=this;setTimeout(()=>{"object"!=typeof e.pitchTarget&&(e.pitchTarget={x:100,y:100}),e.autoSwing(e.pitchTarget.x,e.pitchTarget.y,t=>{t()})},e.field.hasRunnersOn()?sm.TIME_FROM_SET+2500:sm.TIME_FROM_WINDUP+2500)}receiveInput(t,e,n){"none"!==this.humanControl&&"end"!==this.stage&&("pitch"===this.stage&&this.humanPitching()?this.thePitch(t,e,n):"swing"===this.stage&&this.humanBatting()&&this.theSwing(t,e,n))}autoPitchSelect(){const t=Object.keys(this.pitcher.pitching),e=t[Math.random()*t.length|0],n=this.pitcher.pitching[e];n.name=e,this.pitchInFlight=n}windupThen(t){const e=this.pitcher;if(e.windingUp=!0,!sm.console){bm(".baseball").addClass("hide");var n=bm(".windup");n.css("width","100%")}sm.console?(t(),e.windingUp=!1):(sm.console||sm.loop.resetCamera(),n.animate({width:0},this.field.hasRunnersOn()?sm.TIME_FROM_SET:sm.TIME_FROM_WINDUP,()=>{e.windingUp=!1,t()}))}autoPitch(t){this.autoPitchSelect();const e=this.umpire.count;let n,i,r;r=_.pitchLocation(e),n=r.x,i=r.y,this.windupThen(()=>{!sm.console&&bm(".baseball.pitch").removeClass("hide"),this.thePitch(n,i,t)})}autoSwing(t,e,n){const i=this,r=this.batter.eye.bonus||0,s=this.batter.skill.offense.eye+6*(this.umpire.count.balls+this.umpire.count.strikes)+r;let o,a,c=_.centralizedNumber(),l=_.centralizedNumber(),h=-100*Math.random()/((100+s)/100);100*Math.random()<s?(t=this.pitchInFlight.x,e=this.pitchInFlight.y,h=(h+200)/3):h=(h-50)/2,100*Math.random()<s?(o=s/25,a=1+o,h=(h+300)/4):(o=s/100,h=(h-50)/2,a=1+o),c=(t*o+c)/a,l=(e*o+l)/a,this.swingResult.x=_.cpuSwing(c,this.pitchInFlight.x,s,!0),this.swingResult.y=_.cpuSwing(l,this.pitchInFlight.y,.75*s),this.batter.lastPitchCertainty=h;const u=_.swingLikelihood(s,c,l,this.umpire,h);100*Math.random()<u?(n||(()=>{}))(()=>{i.theSwing(this.pitchInFlight.x+this.swingResult.x,this.pitchInFlight.y+this.swingResult.y)}):(n||(()=>{}))(()=>{i.theSwing(-20,-20)})}onBatterReady(){}batterReady(t){return clearTimeout(this.batterReadyTimeout),void 0!==t&&(this.batter.ready=Boolean(t)),this.batter.ready&&this.onBatterReady(),this.batter.ready}waitingCallback(){}awaitPitch(t,e){const n=this;this.opponentConnected?(this.waitingCallback=t,this.opponentService.emitSwing(e),this.onBatterReady=()=>{}):(n.onBatterReady=()=>{n.autoPitch(t)},sm.console?n.batterReady():this.batterReadyTimeout=setTimeout(()=>{n.batterReady()},5200))}awaitSwing(t,e,n,i,r){this.opponentConnected?(this.waitingCallback=n||(()=>{}),this.opponentService.emitPitch({inFlight:i,target:r})):this.autoSwing(t,e,n)}thePitch(t,e,n,i){i&&(this.pitchInFlight=i.inFlight,this.pitchTarget=i.target);const r=this.pitchInFlight;if("pitch"===this.stage){if(i)n=this.waitingCallback;else{this.pitcher.fatigue++,this.pitchTarget.x=t,this.pitchTarget.y=e,r.breakDirection=this.helper.pitchDefinitions[r.name].slice(0,2),this.battersEye=s.getBattersEye(this);const n=Math.floor(r.control-this.pitcher.fatigue/2);this.pitchTarget.x=_.pitchControl(this.pitchTarget.x,n),this.pitchTarget.y=_.pitchControl(this.pitchTarget.y,n),"right"===this.pitcher.throws&&(r.breakDirection[0]*=-1);const i=_.breakEffect(r,this.pitcher,this.pitchTarget.x,this.pitchTarget.y);r.x=i.x,r.y=i.y}this.log.notePitch(r,this.batter),this.stage="swing",this.humanBatting()?(n||(()=>{}))():(this.opponentConnected&&this.humanPitching()&&this.windupThen(()=>{}),this.awaitSwing(t,e,n,r,this.pitchTarget))}}theSwing(t,e,n,i){const r=this.pitchInFlight;if("swing"===this.stage){if(i){var s=this.swingResult=i;n=this.waitingCallback}else{this.swingResult=s={},s.timing=this.humanBatting()?this.expectedSwingTiming-Date.now():this.batter.getAISwingTiming();const n=Math.abs(s.timing)<900,i=this.batter.eye.bonus||0,o=this.batter.skill.offense.eye+6*(this.umpire.count.balls+this.umpire.count.strikes)+i;if(t>=0&&t<=200){this.batter.fatigue++,s.x=t-r.x,s.y=e-r.y,s.angle=this.setBatAngle();const i=M.getAngularOffset(s,s.angle),a=_.swing(o);s.x=i.x*a,s.y=i.y*a-5,s.looking=!1,Math.abs(s.x)<60&&Math.abs(s.y)<35&&n?(s.contact=!0,this.field.determineSwingContactResult(s),this.debug.push(s)):s.contact=!1}else s.strike=_.inStrikezone(r.x,r.y),this.batter.eye.bonus=Math.max(0,o-1.5*Math.sqrt(Math.pow(this.batter.eye.x-r.x,2)+Math.pow(this.batter.eye.y-r.y,2))),s.contact=!1,s.looking=!0,this.batter.eye.x=r.x,this.batter.eye.y=r.y}const o=this.field,a=this.batter.team;if((a.stealAttempt===E.RUNNER_GO||a.stealAttempt===E.RUNNERS_DISCRETION)&&!this.opponentConnected){const t=o.getLeadRunner();if(t instanceof A){let e=2;switch(t){case o.first:e=2;break;case o.second:e=3;break;case o.third:e=4}let n=!0;if(s.looking){const t=this.umpire.count;t.strikes>=2&&s.strike&&t.outs>=2&&(n=!1),t.balls>=3&&!s.strike&&o.first&&(n=!1)}(s.foul||s.caught)&&(n=!1);("go"===a.stealAttempt||_.willSteal(r,this.pitcher.team.positions.catcher,t,e))&&n&&t.attemptSteal(this,e),a.stealAttempt=E.RUNNERS_DISCRETION}}this.log.noteSwing(s),this.sounds(s),this.stage="pitch";const c=this.half;this.umpire.makeCall();let l=!1;c!==this.half&&(n=this.startOpponentPitching,l=!i),"function"==typeof n&&(this.humanPitching()?(n(),l&&this.opponentService&&this.opponentConnected&&this.opponentService.emitSwing(s)):this.awaitPitch(n,s))}}setBatAngle(t,e){const n=this.pitchInFlight,i=this.swingResult||{x:0,y:0},r={x:"right"===this.batter.bats?-10:210,y:199},s={x:t||n.x+i.x,y:e||n.y+i.y};return M.battingAngle(r,s)}debugOut(){wm("slugging",this.debug.filter(t=>1==t.bases).length,this.debug.filter(t=>2==t.bases).length,this.debug.filter(t=>3==t.bases).length,this.debug.filter(t=>4==t.bases).length),wm("grounders",this.debug.filter(t=>!t.caught&&!t.foul&&t.flyAngle<0).length,"thrown out",this.debug.filter(t=>!t.caught&&!t.foul&&t.flyAngle<0&&t.thrownOut).length),wm("flies/liners",this.debug.filter(t=>!t.foul&&t.flyAngle>0).length,"caught",this.debug.filter(t=>t.caught&&t.flyAngle>0).length);const t={};this.debug.map(e=>{e.fielder&&(t[e.fielder]||(t[e.fielder]=0),!e.bases&&e.fielder&&t[e.fielder]++)}),wm("fielding outs",JSON.stringify(t));const e=this.teams.away.lineup.concat(this.teams.home.lineup);let n=[];e.map(t=>{n=n.concat(t.getAtBats().map(t=>t.text))});const i=n.filter(t=>"LO"===t).length,r=n.filter(t=>"FO"===t).length,s=n.filter(t=>"GO"===t).length,o=n.filter(t=>"(IDP)"===t).length,a=n.filter(t=>"SO"===t).length,c=n.filter(t=>"BB"===t).length,l=n.filter(t=>"SAC"===t).length,h=n.filter(t=>"FC"===t).length,u=n.filter(t=>"CS"===t).length,d=n.filter(t=>"SB"===t).length;wm("line outs",i,"fly outs",r,"groundouts",s,"strikeouts",a,"sacrifices",l,"FC",h,"gidp",o,"CS",u,"total",i+r+s+a+l+h+o+u),wm("BB",c,"SB",d),wm("fouls",this.debug.filter(t=>t.foul).length),wm("fatigue, home vs away");const p=this.teams,f={home:{},away:{}};S.each(this.teams.home.positions,t=>{const e=t;f.home[e]=p.home.positions[e].fatigue,f.away[e]=p.away.positions[e].fatigue}),console.table(f),console.table(this.scoreboard),console.table(this.tally)}toData(){const t={};t.half=this.half,t.inning=this.inning,t.tally=this.tally;const e=this.teams.away.lineup.concat(this.teams.home.lineup);return t.field={first:e.indexOf(this.field.first),second:e.indexOf(this.field.second),third:e.indexOf(this.field.third)},t.batter=e.indexOf(this.batter),t.deck=e.indexOf(this.deck),t.hole=e.indexOf(this.hole),t.teams={home:{name:this.teams.home.name,nameJ:this.teams.home.nameJ},away:{name:this.teams.away.name,nameJ:this.teams.away.nameJ}},t.umpire={says:this.umpire.says,count:{strikes:this.umpire.count.strikes,balls:this.umpire.count.balls,outs:this.umpire.count.outs}},t.log={pitchRecord:this.log.pitchRecord,record:this.log.record},t.gamesIntoSeason=this.gamesIntoSeason,t}fromData(t){this.half=t.half,this.inning=t.inning,this.tally=t.tally;const e=t.players||this.teams.away.lineup.concat(this.teams.home.lineup);this.field.first=e[t.field.first],this.field.second=e[t.field.second],this.field.third=e[t.field.third],this.batter=e[t.batter],this.deck=e[t.deck],this.hole=e[t.hole],this.umpire.says=t.umpire.says,this.umpire.count=t.umpire.count,this.teams.away.name=t.teams.away.name,this.teams.away.nameJ=t.teams.away.nameJ,this.teams.home.name=t.teams.home.name,this.teams.home.nameJ=t.teams.home.nameJ,this.log.pitchRecord=t.log.pitchRecord,this.log.record=t.log.record,this.log.stabilizeShortRecord(),this.gamesIntoSeason=t.gamesIntoSeason,this.humanPitching()&&this.autoPitchSelect()}pitchSelect(){}reset(){this.scoreboard={away:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},home:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0}},this.resetTally()}resetTally(){this.tally={away:{H:0,R:0,E:0},home:{H:0,R:0,E:0}}}teamJapan(){(new xm).assignTeam(this,"TeamJapan","away");const t=this;"top"===t.half?(t.batter=t.teams.away.lineup[t.batter.order],t.deck=t.teams.away.lineup[(t.batter.order+1)%9],t.hole=t.teams.away.lineup[(t.batter.order+2)%9]):t.pitcher=t.teams.away.positions.pitcher}selectSubstitute(t){"home"===this.humanControl&&t.team!==this.teams.home||"away"===this.humanControl&&t.team!==this.teams.away||(t.team.sub=t.team.sub===t?t.team.noSubstituteSelected:t)}selectPitch(t){const e=this;"pitch"===e.stage&&(e.pitchInFlight=JSON.parse(JSON.stringify(e.pitcher.pitching[t])),e.pitchInFlight.name=t,e.swingResult.looking=!0)}clickLineup(t){if(t.team.sub!==t.team.noSubstituteSelected){const e=t.team.sub;return t.team.sub=null,e?e.substitute(t):void 0}t.team.expanded=t.team.expanded===t?null:t}generateTeam(t){this.teams.away=new E(this,t)}updateFlightPath(t){}proceedToGame(t,e,n){const i=this;i.humanControl=n?"none":"home",i.console=!!e&&7!==e;const r=window.location.hash?window.location.hash.slice(1):i.teams.home.name+Math.ceil(47*Math.random());void 0!==window.SockJS?new t(i).start(r):console.log("no socket client");if(window.location.hash="#"+r,bm(".blocking").remove(),bm(".play-begins").show(),"none"===i.humanControl&&i.console){let t=0;sm.console=!0,i.console=!0;do{t++,i.simulateInput((function(t){"function"==typeof t&&t()}))}while("end"!==i.stage&&t<500);sm.console=i.console=!1,wm("sim ended"),i.debugOut()}else if(7===e&&1===n){sm.console=i.console=!0;do{i.simulateInput((function(t){"function"==typeof t&&t()}))}while(i.inning<7);wm("sim halted in 7th"),i.debugOut(),sm.console=i.console=!1,i.stage="pitch",i.half="top",i.humanControl="home",i.umpire.onSideChange()}else if("none"===i.humanControl){const t=i.console?.05:1,e=setInterval((function(){"end"===i.stage&&clearInterval(e),i.simulatePitchAndSwing((function(t){i.updateFlightPath(t)}))}),t*(i.field.hasRunnersOn()?sm.TIME_FROM_SET+2e3:sm.TIME_FROM_WINDUP+2e3))}"away"===i.humanControl&&i.simulateInput((function(t){i.updateFlightPath(t)})),"home"===i.humanControl&&(i.showMessage=!0),e&&7!==e||(sm.loop.setTargetTimeOfDay(i.startTime.h,i.startTime.m),i.timeOfDay.h=i.startTime.h,i.timeOfDay.m=i.startTime.m)}simulateAtBat(){const t=this;sm.console=t.console=!0;const e=t.batter,n=t.humanControl;t.humanControl="none";do{t.simulateInput((function(t){"function"==typeof t&&t()}))}while(t.batter===e&&"end"!==this.stage);wm("-- At Bat Simulated --"),"end"!==this.stage&&("none"===t.humanControl&&(t.humanControl=n),t.stage="pitch",sm.console=t.console=!1,t.umpire.onSideChange())}allowSimAtBat(){return!this.opponentConnected}async sounds(t){if("undefined"!=typeof window&&window.document){const n=[document.getElementById("mitt1-sound"),document.getElementById("mitt2-sound")][.5+Math.random()|0],i=[document.getElementById("bat1-sound"),document.getElementById("bat2-sound")][.5+Math.random()|0];async function e(t){return new Promise(e=>{setTimeout(async()=>{await t.pause(),t.currentTime=0,e()},1e3)})}t.flyAngle?await Promise.all([i.play(),e(i)]):await Promise.all([n.play(),e(n)])}}}const Mm={Game:_m,Player:A,Team:E,Field:om,Manager:T,Umpire:am,model:{Game:_m,Player:A,Team:E,Field:om,Manager:T,Umpire:am},service:{Animator:sm,Distribution:_,Iterator:S,Mathinator:M},util:{text:Object.assign(s,{abbreviatePosition:function(t){return"e"===s.mode?c[t]:s.fielderShortName(t)}}),Log:l},teams:{Provider:xm,Japan:cm}};"object"==typeof window&&(window.Baseball=Mm);e.default=Mm}]));
//# sourceMappingURL=baseball.bundle.js.map